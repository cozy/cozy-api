{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cozy-client.min.js","webpack:///webpack/bootstrap 456c183d2f5f992e066d","webpack:///./src/fetch.js","webpack:///./~/pouchdb-find/lib/utils.js","webpack:///./src/utils.js","webpack:///./~/pouchdb-find/lib/adapters/local/utils.js","webpack:///./src/doctypes.js","webpack:///./~/process/browser.js","webpack:///./~/pouchdb-collate/lib/index.js","webpack:///./src/auth_v3.js","webpack:///./~/immediate/lib/browser.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/pouchdb-find/lib/abstract-mapreduce/utils.js","webpack:///./~/pouchdb-find/lib/adapters/local/abstract-mapper.js","webpack:///./~/argsarray/index.js","webpack:///./src/jsonapi.js","webpack:///./~/lie/lib/browser.js","webpack:///./~/pouchdb-extend/index.js","webpack:///./~/pouchdb-find/lib/abstract-mapreduce/upsert.js","webpack:///./~/pouchdb-find/lib/adapters/local/get-indexes/index.js","webpack:///./~/pouchdb-find/lib/massageCreateIndexRequest.js","webpack:///./~/pouchdb-promise/lib/index.js","webpack:///./~/pouchdb-upsert/index.js","webpack:///./~/spark-md5/spark-md5.js","webpack:///./src/auth_storage.js","webpack:///./src/auth_v2.js","webpack:///./src/data.js","webpack:///./src/files.js","webpack:///./src/index.js","webpack:///./src/intents.js","webpack:///./src/jobs.js","webpack:///./src/mango.js","webpack:///./src/offline.js","webpack:///./src/relations.js","webpack:///./src/settings.js","webpack:///./~/debug/src/browser.js","webpack:///./~/debug/src/debug.js","webpack:///./~/events/events.js","webpack:///./~/is-array/index.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/ms/index.js","webpack:///./~/pouchdb-collate/lib/utils.js","webpack:///./~/pouchdb-find/lib/abstract-mapreduce/create-view.js","webpack:///./~/pouchdb-find/lib/abstract-mapreduce/index.js","webpack:///./~/pouchdb-find/lib/abstract-mapreduce/taskqueue.js","webpack:///./~/pouchdb-find/lib/adapters/http/index.js","webpack:///./~/pouchdb-find/lib/adapters/local/create-index/index.js","webpack:///./~/pouchdb-find/lib/adapters/local/delete-index/index.js","webpack:///./~/pouchdb-find/lib/adapters/local/find/in-memory-filter.js","webpack:///./~/pouchdb-find/lib/adapters/local/find/index.js","webpack:///./~/pouchdb-find/lib/adapters/local/find/query-planner.js","webpack:///./~/pouchdb-find/lib/adapters/local/index.js","webpack:///./~/pouchdb-find/lib/index.js","webpack:///./~/pouchdb-find/~/debug/src/browser.js","webpack:///./~/pouchdb-find/~/debug/src/debug.js","webpack:///./~/pouchdb-find/~/ms/index.js","webpack:///./~/pouchdb-upsert/~/pouchdb-promise/lib/index.js","webpack:///./~/pouchdb/lib/index-browser.js","webpack:///./~/pouchdb/~/spark-md5/spark-md5.js","webpack:///./~/scope-eval/scope_eval.js","webpack:///./~/vuvuzela/index.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","concat","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","cozyFetch","cozy","path","options","arguments","length","undefined","fullpath","then","resp","disableAuth","fetch","manualAuthCredentials","cozyFetchWithAuth","authorize","credentials","res","handleResponse","_invalidTokenErrorHandler","headers","token","toAuthHeader","Promise","all","isV2","_ref","_ref2","_slicedToArray","status","dontRetry","client","_utils","retry","_auth_v","refreshToken","newToken","saveCredentials","cozyFetchJSON","method","body","processJSONAPI","fetchJSON","response","handleJSONResponse","cozyFetchRawJSON","JSON","stringify","invalidTokenErrorHandler","ok","data","contentType","get","indexOf","json","text","err","error","FetchError","isInvalidToken","Error","_jsonapi2","handleInvalidTokenError","currentOrigin","window","location","origin","requestUrl","url","replace","redirectURL","encodeQuery","disconnect","e","console","warn","defineProperty","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","Array","isArray","_jsonapi","_Error","reason","_this","getPrototypeOf","captureStackTrace","name","message","isUnauthorized","isNotFound","process","once","fun","called","getArguments","trace","len","toPromise","func","usedCB","tempCB","pop","nextTick","promise","fulfill","reject","callback","mesg","result","cancel","inherits","clone","extend","callbackify","cb","promisedCallback","crypto","Md5","MD5","string","browser","hash","createHash","update","digest","flatten","subArr","mergeObjects","getFieldFromDoc","doc","parsedField","key","setFieldInDoc","elem","parseField","fieldName","fields","current","ch","substring","pick","oneArrayIsSubArrayOfOther","left","right","Math","min","oneArrayIsStrictSubArrayOfOther","oneSetIsSubArrayOfOther","field","leftIdx","splice","compare","arrayToObject","max","maxScore","element","score","arrayEquals","arr1","arr2","uniq","keys","map","log","unpromiser","_len","_key","isPromise","l","isOnline","navigator","onLine","isOffline","sleep","time","resolve","setTimeout","count","delay","doTry","_len2","_key2","catch","getBackedoffDelay","getFuzzedDelay","retryDelay","fuzzingFactor","random","FuzzFactor","retryCount","pow","createPath","doctype","query","route","encodeURIComponent","q","qname","decodeQuery","queryIndex","queries","fragIndex","queryStr","parts","split","pair","decodeURIComponent","warned","getKey","getValue","massageSort","sort","sorting","isCombinationalField","combinationFields","mergeGtGte","operator","fieldMatchers","$eq","$gte","$gt","mergeLtLte","$lte","$lt","mergeNe","$ne","mergeEq","mergeAndedSelectors","selectors","forEach","selector","matcher","massageSelector","input","utils","wasAnded","massageIndexDef","indexDef","getKeyFromDoc","index","def","filterInclusiveStart","rows","targetValue","indexFields","row","docKey","abs","collate","reverseOptions","opts","newOpts","startkey","endkey","inclusive_start","inclusive_end","validateIndex","ascFields","filter","validateSort","requestDef","defaultUsed","noneIdSorts","sortItem","join","validateFindRequest","getUserFields","userFields","selectorFields","sortFields","Number","MAX_VALUE","rightIdx","sortOrder","normalizeDoctype","isQualified","known","REVERSE_KNOWN","KNOWN_DOCTYPES","DOCTYPE_FILES","files","folder","contact","event","track","playlist","k","defaultSetTimout","defaultClearTimeout","runTimeout","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","array","noop","title","env","argv","version","versions","on","addListener","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","indexify","numToIndexableString","toIndexableString","objKey","parseNumber","str","num","originalIdx","zero","neg","numAsString","magAsString","MAGNITUDE_DIGITS","magnitude","parseInt","MIN_MAGNITUDE","parseFloat","stack","metaStack","lastMetaElement","lastElementIndex","arrayCollate","stringCollate","objectCollate","ak","bk","collationIndex","x","idx","expFormat","toExponential","magForComparison","magString","padLeft","toString","SEP","factor","factorStr","toFixed","normalizeKey","ai","bi","Infinity","isNaN","origKey","Date","toJSON","val","parseIndexableString","parsedNum","parsedStr","arrayElement","objElement","clientParams","_clientParams","Client","registerClient","cli","isRegistered","_fetch","toRegisterJSON","updateClient","resetSecret","client_id","clientID","client_secret","clientSecret","createClient","unregisterClient","getClient","oldClient","newClient","shouldPassRegistration","registrationAccessToken","getAuthCodeURL","scopes","state","generateRandomState","redirect_uri","redirectURI","response_type","scope","_url","getAccessToken","pageURL","grantQueries","getGrantCodeFromPageURL","retrieveToken","grant_type","code","refresh_token","oauthFlow","storage","onRegistered","clearAndRetry","tryCount","clear","registerNewClient","_getAuthCodeURL","save","StateKey","ignoreCachedCredentials","load","CredsKey","storedState","AccessToken","statePromise","t","delete","creds","assign","Content-Type","href","buffer","getRandomValues","Uint8Array","StateSize","randomBytes","floor","btoa","String","fromCharCode","AppToken","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","registration_access_token","redirect_uris","softwareID","software_id","softwareVersion","software_version","clientName","client_name","clientKind","client_kind","clientURI","client_uri","logoURI","logo_uri","policyURI","policy_uri","tokenType","token_type","accessToken","access_token","global","oldQueue","immediate","task","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","observer","document","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","channel","port1","onmessage","port2","postMessage","ctor","superCtor","super_","TempCtor","argsarray","fin","promise2","sequentialize","promiseFactory","that","add","arrs","output","createDeepMultiMapper","toEmit","iLen","j","jLen","createDeepSingleMapper","createShallowSingleMapper","createShallowMultiMapper","checkShallow","createMapper","isShallow","isSingle","mapper","mapFunDef","reducer","ddocValidator","ddoc","viewName","view","views","_id","localUtils","abstractMapReduce","abstractMapper","argsArray","indexKey","type","findByRef","resources","ref","handleResource","rawResource","links","resource","_type","_rev","meta","rev","attributes","relations","rels","relationships","handleTopLevel","included","r","INTERNAL","resolver","PENDING","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","returnValue","handlers","getThen","thenable","onError","onSuccess","tryToUnwrap","tryCatch","out","iterable","allResolver","resolveFromAll","outValue","values","resolved","race","REJECTED","FULFILLED","class2type","core_toString","isWindow","isPlainObject","nodeType","core_hasOwn","isFunction","container","extendInner","src","copy","copyIsArray","optionsIsArray","deep","numericStringRegex","test","types","typename","toLowerCase","upsert","db","diffFun","getIndexes","allDocs","include_docs","allDocsRes","indexes","language","viewNames","total_rows","_interopDefault","ex","lie","PouchPromise","upsertInner","docId","docRev","newDoc","tryAndPut","updated","put","putIfNotExists","existingDoc","PouchDB","plugin","add32","cmn","s","ff","d","gg","hh","ii","md5cycle","md5blk","md5blks","charCodeAt","md5blk_array","md51","tail","tmp","lo","hi","n","match","md51_array","subarray","hex_chr","rhex","hex","md5","SparkMD5","reset","y","lsw","msw","append","unescape","appendBinary","contents","_buff","_length","_state","substr","end","raw","ret","buff","_finish","destroy","hashBinary","content","ArrayBuffer","_concatArrayBuffer","byteLength","first","second","firstLength","set","LocalStorage","prefix","localStorage","setItem","_this2","item","getItem","parse","_this3","removeItem","_this4","MemoryStorage","deleted","getAppToken","parent","intent","action","receiver","appName","removeEventListener","addEventListener","V2TOKEN_ABORT_TIMEOUT","_doctypes","docType","httpVerb","find","NOREV","findMany","ids","docs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","findAll","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","changesFeed","changes","updateAttributes","tries","_delete","sanitizeFileName","trim","getFileTypeFromName","doUpload","isBuffer","isFile","File","isBlob","Blob","isStream","readable","pipe","isString","checksum","lastModifiedDate","ifMatch","contentTypeOctetStream","Content-MD5","toGMTString","If-Match","dirID","executable","createDirectory","_ref3","getDirectoryOrCreate","parentDirectory","ROOT_DIR_ID","statByPath","parsedError","errors","createDirectoryByPath","offline","part","rootDirectoryPromise","statById","reduce","parentDirectoryPromise","updateById","doUpdateAttributes","attrs","_typeof","_ref4","updateAttributesById","updateAttributesByPath","trashById","_ref5","hasDatabase","getDatabase","dir_id","_ref6","_ref7","children","TRASH_DIR_ID","sortFiles","addIsDir","toJsonApi","encodePageOptions","downloadById","downloadByPath","extractResponseLinkRelated","related","getDownloadLinkByPath","getDownloadLinkById","getFilePath","file","folderPath","endsWith","getCollectionShareLink","collectionType","permissions","verbs","collection","sharecode","codes","email","getArchiveLinkByPaths","paths","archive","getArchiveLinkByIds","listTrash","clearTrash","restoreById","destroyById","_ref8","isDir","allFiles","folders","f","localeCompare","_interopRequireWildcard","newObj","nopOnRegistered","protoify","context","addToProto","ctx","proto","disablePromises","attr","_auth_storage","_auth_v2","auth","_data","_mango","mango","_files","_intents","intents","_jobs","jobs","_offline","_settings","settings","_relations","AppTokenV3","AccessTokenV3","ClientV3","AuthNone","AuthRunning","AuthError","AuthOK","defaultClientParams","dataProto","defineIndex","addReferencedFiles","removeReferencedFiles","listReferencedFiles","fetchReferencedFiles","authProto","filesProto","getDownloadLink","getArchiveLink","queryFiles","intentsProto","createService","jobsProto","queued","offlineProto","init","getDoctypes","createDatabase","destroyDatabase","destroyAllDatabase","hasReplication","replicateFromCozy","stopReplication","stopAllReplication","hasRepeatedReplication","startRepeatedReplication","stopRepeatedReplication","stopAllRepeatedReplication","settingsProto","diskUsage","changePassphrase","getInstance","updateInstance","getClients","deleteClientById","updateLastSync","ensureHasReconnectParam","URL","searchParams","has","search","AppTokenV2","_inited","_oauth","_token","_authstate","_authcreds","_storage","_version","oauth","_onRegistered","cozyURL","onInvalidTokenError","forceTokenRefresh","pathprefix","datasystem","injectService","onReadyCallback","ownerDocument","defaultView","iframe","onload","setAttribute","classList","intentClass","focus","serviceOrigin","handshaken","messageHandler","source","prop","transition","style","dimensions","removeIntentFrame","errorSerializer","deserialize","createPromise","start","service","services","listenClientData","messageEventListener","intentId","serviceWindow","terminated","terminate","resizeClient","transitionProperty","maxHeight","clientHeight","maxWidth","clientWidth","getData","getIntent","exposeIntentFrameRemoval","throw","serialize","mapErrorProperties","from","to","nativeProperties","property","workerType","_defineProperty","defineIndexV2","defineIndexV3","indexRef","queryV2","queryV3","getV3Options","wholeResponse","indexName","capitalize","indexDefinition","makeMapFunction","indexResult","makeMapReduceQuery","use_index","limit","skip","since","descending","charAt","toUpperCase","MAP_TEMPLATE","parseSelector","acc","LOGICOPERATORS","VALUEOPERATORS","normalizeSelector","filters","_filter","op","applySelector","lower","COUCHDB_LOWEST","upper","COUCHDB_INFINITY","inclusiveEnd","mrquery","firstFreeValueField","normalizedSelector","used","isFreeValue","FIELDSPLACEHOLDER","￿","_ref$options","_ref$doctypes","doctypes","getInfo","database","setDatabase","pluginLoaded","_pouchdb2","_pouchdbFind2","pouchdbAdapterCordovaSqlite","createIndexes","createIndex","getReplication","replication","setReplication","getReplicationUrl","basic","toBasicAuth","getReplicationPromise","replicationPromise","setReplicationPromise","live","replicationOfflineError","replicate","info","onComplete","stop","getRepeatedReplication","interval","setRepeatedReplication","timer","setInterval","clearInterval","_pouchdb","_pouchdbFind","updateRelations","verb","refs","makeReferencesPath","params","currentPassPhrase","newPassPhrase","current_passphrase","new_passphrase","useColors","firebug","exception","table","userAgent","RegExp","$1","formatArgs","namespace","humanize","diff","color","lastC","Function","namespaces","debug","DEBUG","localstorage","chrome","local","colors","formatters","v","enable","selectColor","createDebug","enabled","curr","ms","prevTime","prev","coerce","unshift","format","formatter","logFn","bind","skips","names","disable","EventEmitter","_events","_maxListeners","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","er","handler","listeners","listener","newListener","g","fired","list","position","listenerCount","evlistener","emitter","exec","h","fmtShort","round","fmtLong","plural","ceil","long","pad","padWith","upToLength","padding","targetLength","padRight","stringLexCompare","aLen","bLen","aChar","bChar","intToDecimalForm","int","isNeg","remainder","sourceDB","mapFun","reduceFun","temporary","pluginName","viewSignature","_cachedViews","cachedView","diffFunction","fullViewName","depDbs","depDbName","db_name","registerDependentDatabase","auto_compaction","adapter","lastSeqDoc","seq","QueryParseError","NotFoundError","parseViewName","isGenOne","sortByKeyThenValue","keyCompare","sliceResults","results","rowToDocId","emitError","tryCode","checkQueryParseError","startkeyName","endkeyName","group","group_level","defaultsTo","createIndexer","getDocsToPersist","docIdsToChangesAndEmits","getMetaDoc","defaultMetaDoc","metaDocId","getKeyValueDocs","metaDoc","processKvDocs","kvDocsRes","kvDocs","oldKeysMap","_deleted","indexableKeysToKeyValues","keyValue","newKeys","kvDoc","docData","saveKeyValues","seqDocId","docIds","listOfDocsToPersist","docsToPersist","bulkDocs","getQueue","persistentQueues","TaskQueue","updateView","updateViewInQueue","mapResults","processChange","currentSeq","complete","finish","processNextBatch","conflicts","CHANGES_BATCH_SIZE","change","lastKey","jl","complexKey","indexableKey","reduceView","shouldGroup","groups","lvl","last","reduceTry","queryView","queryViewInQueue","fetchFromView","viewOpts","totalRows","expectedKeys","parsedKeyAndDocId","pouchCollate","onMapResultsReady","finalResults","shouldReduce","offset","attachments","binary","docIdsToDocs","cur","fetchPromises","keyStart","keyEnd","localViewCleanup","docsToViews","designDocName","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","dbsToDelete","destroyPromises","__opts","queryPromised","createViewOpts","tempViewQueue","createView","cleanup","stale","viewCleanup","massageCreateIndexRequest","request","deleteIndex","pouchUpsert","updateDdoc","hasInvalidLanguage","viewExists","originalIndexDef","ddocId","signature","deltaFun","createFieldSorter","getFieldValuesAsArray","docFieldValue","aRow","bRow","aFieldValues","bFieldValues","collation","filterInMemoryFields","inMemoryFields","rowFilter","fieldSorter","reverse","every","matchCominationalSelector","matchSelector","userOperator","userValue","some","orMatchers","matchers","fieldExists","fieldIsNotUndefined","modField","divisor","mod","arrayContainsValue","arrayContainsAllValues","arraySize","regexMatch","re","typeMatch","$elemMatch","$exists","$mod","neValue","$in","$nin","$size","$all","$regex","$type","indexToSignature","doAllDocs","originalOpts","getIndexesRes","queryPlan","planQuery","indexToUse","queryOpts","isDescending","warning","checkFieldInIndex","indexField","userOperatorLosesPrecision","sortFieldsByIndex","aIdx","bIdx","getBasicInMemoryFields","needToFilterInMemory","getInMemoryFieldsFromNe","getInMemoryFields","coreInMemoryFields","checkIndexFieldsMatch","sortMatches","selectorMatches","isNonLogicalMatcher","logicalMatchers","checkFieldsLogicallySound","firstField","hasLogicalOperator","matcherKey","isInvalidNe","checkIndexMatches","fieldsMatch","findMatchingIndexes","indexMatches","findBestMatchingIndex","scoreIndex","userFieldsMap","matchingIndexes","defaultIndex","getSingleFieldQueryOptsFor","getSingleFieldCoreQueryPlan","combinedOpts","userOperators","newQueryOpts","getMultiFieldCoreQueryPlan","getMultiFieldQueryOpts","inclusiveStart","COLLATE_LO","COLLATE_HI","usingGtlt","previousKeys","previousWasEq","previousWasSame","gtltLostSpecificity","getDefaultQueryPlan","getCoreQueryPlan","userFieldsRes","coreQueryPlan","httpIndexes","localIndexes","WebkitAppearance","isBinaryObject","object","cloneArrayBuffer","targetArray","sourceArray","cloneBinaryObject","size","webkitSlice","Ctor","funcToString","objectCtorString","newObject","toISOString","PouchPromise$1","adapterFun","logApiCall","logArgs","origCallback","responseArgs","_closed","_destroyed","taskqueue","isReady","addTask","failed","mangle","unmangle","Map$1","_store","Set$1","supportsMapAndSet","Map","Set","getOwnPropertyDescriptor","species","identityFunction","formatResultForOpenRevsGet","bulkGet","collapseResultsAndFinish","perDocResults","checkDone","numDone","numDocs","gotResult","docIndex","nextBatch","allRequests","upTo","MAX_NUM_CONCURRENT_REQUESTS","batch","processBatch","docIdx","docRequests","requestsById","docOpts","open_revs","formatResult","param","requests","ExportedMap","isChromeApp","hasLocalStorage","hasLocal","attachBrowserEvents","onChanged","dbName","newValue","attachEvent","Changes","events","_listeners","guardedConsole","randomNumber","maxTimeout","ratio","range","defaultBackOff","explainError","PouchError","createError","CustomPouchError","generateErrorFromResponse","UNKNOWN_ERROR","tryFilter","req","msg","BAD_REQUEST","filterChange","hasFilter","query_params","filterReturn","att","_attachments","stub","invalidIdError","INVALID_ID","RESERVED_ID","MISSING_ID","ee","parseDesignDocFunctionName","normalizeDesignDocFunctionName","normalized","parseUri","parser","uri","encoded","qName","qParser","$0","$2","radix","uuid","chars","winningRev","metadata","winningId","winningPos","winningDeleted","node","toVisit","rev_tree","tree","branches","pos","traverseRevTree","revs","newCtx","sortByPos","collectLeaves","leaves","isLeaf","collectConflicts","win","leaf","compactTree","revHash","rootToLeaf","history","sortByPos$1","binarySearch","comparator","mid","low","high","insertSorted","pathToTree","numStemmed","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","candidateParents","trees","parentIdx","elements","elementsLen","el","stem","depth","maybeStem","stemmed","stemmedNode","merge","newTree","stemmedRevs","revExists","splitRev","targetPos","targetId","getTrees","isDeleted","isLocalId","latest","historyNode","historyRev","evalFilter","scopedEval","evalView","tryCatchInChangeListener","Changes$2","onDestroy","onChange","isCancelled","doChanges","changeList","_conflicts","yankError","cleanDocs","atts","compareByIdThenRev","idCompare","aStart","_revisions","bStart","computeHeight","height","edges","prnt","edge","allDocsKeysQuery","api","_allDocs","subOpts","assign$1","optKey","doNextCompaction","_compactionQueue","last_seq","_compact","shift","attachmentNameError","AbstractPouchDB","TaskQueue$1","parseAdapter","adapters","PouchDB$5","preferredAdapters","adapterName","usePrefix","use_prefix","prepareForDestruction","onDestroyed","onClosed","onConstructorDestroyed","destructionListeners","_destructionListeners","prefixedName","backend","_adapter","valid","fail","ready","setUpEventEmitter","Pouch","eventEmitter","destructListeners","toObject","parseRevisionInfo","INVALID_REV","makeRevTreeFromRevisions","revisions","revisionIds","parseDoc","newEdits","nRevNum","newRevId","revInfo","_rev_tree","specialKey","reservedWords","DOC_VALIDATION","dataWords","createBlob","properties","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","getBlob","binaryStringToArrayBuffer","bin","buf","binStringToBluffer","binString","b64ToBluffer","b64","thisAtob","arrayBufferToBinaryString","bytes","readAsBinaryString","blob","FileReader","FileReaderSync","readAsArrayBuffer","reader","hasBinaryString","onloadend","blobToBinaryString","blobOrBuffer","blobToBase64","base64","thisBtoa","rawToBase64","sliceBlob","blob$$1","appendBlob","arrayBuffer","appendString","binaryMd5","setImmediateShim","loadNextChunk","currentChunk","chunkSize","chunks","inputIsString","MD5_CHUNK_SIZE","stringMd5","parseBase64","BAD_ARG","preprocessString","blobType","asBinary","content_type","preprocessBlob","preprocessAttachment","preprocessAttachments","docInfos","docv","overallErr","docInfo","processedAttachment","recv","updateDoc","revLimit","writeDoc","previousWinningRev","previouslyDeleted","isRoot","inConflict","REV_CONFLICT","newRev","rev_map","newRevIsDeleted","winningRev$$1","winningRevIsDeleted","delta","rootIsMissing","processDocs","fetchedDocs","tx","overallCallback","insertDoc","resultsIdx","MISSING_DOC","checkAllDocsDone","docsDone","docsToDo","new_edits","idsToDocs","currentDoc","docWritten","nextDoc","safeJsonParse","vuvuzela","safeJsonStringify","idbError","evt","IDB_ERROR","encodeMetadata","deletedOrLocal","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","asBlob","fetchAttachmentsIfNecessary","txn","fetchAttachment","attObj","objectStore","ATTACH_STORE","onsuccess","postProcessAttachments","attNames","compactRevs","deleteOrphanedAttachments","possiblyOrphanedDigests","countReq","attAndSeqStore","IDBKeyRange","bound","attStore","seqStore","BY_SEQ_STORE","ATTACH_AND_SEQ_STORE","cursor","openCursor","only","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","dbOpts","startTransaction","DOC_STORE","LOCAL_STORE","META_STORE","txnResult","onabort","ontimeout","oncomplete","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","updateDocCountIfReady","verifyAttachments","preconditionErrored","fetchExistingDocs","onAllDocsProcessed","allDocsProcessed","idbProcessDocs","revs_limit","docCount","docCountDelta","numFetched","readMetadata","changesHandler$$1","notify","_meta","verifyAttachment","MISSING_STUB","digests","filename","attErr","isUpdate","hasAttachments","writeAttachments","finishDoc","afterPutDoc","revsToDelete","metadataToStore","metaDataReq","afterPutMetadata","afterPutDocError","preventDefault","stopPropagation","getKeyReq","putReq","insertAttachmentMappings","onerror","collectResults","attachmentSaved","revpos","saveAttachment","attsAdded","attsToAdd","newAtt","docInfoError","blobSupport","runBatchedCursor","keyRange","batchSize","onBatch","onGetAll","valuesBatch","keysBatch","pseudoCursor","onGetAllKeys","continuePseudoCursor","newKeyRange","upperOpen","lowerBound","getAll","getAllKeys","onCursor","useGetAll","createKeyRange","upperBound","idbAllDocs","fetchDocAsynchronously","docIdRevIndex","allDocsInner","batchValues","batchValue","batchKeys","onResultsReady","onTxnComplete","keyRangeError","checkBlobSupport","DETECT_BLOB_SUPPORT_STORE","matchedChrome","matchedEdge","countDocs","applyNext","running","enqueueTask","processMetadataAndWinningDoc","winningDoc","lastSeq","filtered","numResults","returnDocs","onBatchDone","winningDocs","metadatas","fetchWinningDocAndMetadata","onGetMetadata","docIdRev","docIdsToMetadata","continuous","doc_ids","ExportedSet","return_docs","objectStores","IdbPouch","thisCallback","createSchema","createObjectStore","keyPath","autoIncrement","unique","addDeletedOrLocalIndex","createLocalStoreSchema","migrateLocalStore","localStore","seqCursor","addAttachAndSeqStore","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","fetchMetadataSeq","metadataSeq","onGetMetadataSeq","instanceId","_bulkDocs","reqOpts","_get","_getAttachment","attachId","attachment","blobData","_info","updateSeq","doc_count","update_seq","idb_attachment_format","_changes","_close","close","cachedDBs","_getRevisionTree","_doCompaction","_getLocal","_putLocal","oldRev","oStore","oldDoc","_removeLocal","_destroy","openReq","openReqList","indexedDB","deleteDatabase","cached","tryStorageOption","open","ADAPTER_VERSION","onupgradeneeded","migration","migrations","oldVersion","currentTarget","completeSetup","storedMetaDoc","storeMetaDocIfReady","instanceKey","onversionchange","blobSupportPromise","decodeUtf8","escape","hexToInt","charCode","parseHexUtf8","parseHexUtf16","parseHexString","encoding","quote","escapeBlob","unescapeBlob","stringifyDoc","unstringifyDoc","qMarks","select","joiner","where","orderBy","compactRevs$1","deleteOrphans","seqs","sql","ATTACH_AND_SEQ_STORE$1","executeSql","digestsToCheck","nonOrphanedDigests","ATTACH_STORE$1","BY_SEQ_STORE$1","websqlError","errorNameMatch","errorName","errorReason","WSQ_ERROR","getSize","isAndroid","websqlBulkDocs","websqlChanges","_name","cnt","sqlArgs","deletedInt","insertId","dataWritten","fetchSql","attachmentErr","revsToCompact","DOC_STORE$1","metadataStr","websqlProcessDocs","userDocs","docInfoErrors","openDatabaseWithOpts","websql","description","openDBSafely","openDB$1","cachedResult","cachedDatabases","fetchAttachmentsIfNecessary$1","attOpts","_","WebSqlPouch$1","dbCreated","runMigration2","DOC_STORE_WINNINGSEQ_INDEX_SQL","BY_SEQ_STORE_DELETED_INDEX_SQL","runMigration3","LOCAL_STORE$1","doNext","runMigration4","updateRows","doc_id_rev","doc_id","BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL","runMigration5","nextPage","SELECT_DOCS","DOC_STORE_AND_BY_SEQ_JOINER","pageSize","addDigestSeq","digestSeqs","digestSeqPairs","attachAndRev","ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL","ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL","runMigration6","runMigration7","checkEncoding","onGetInstanceId","idRequests","idCallback","onGetVersion","dbVersion","META_STORE$1","attach","initSeq","initSeqArgs","ADAPTER_VERSION$1","setupDone","migrated","dbid","tasks","nextMigration","setup","fetchVersion","db_version","getMaxSeq","latest$$1","websqlOpts","POUCH_VERSION","openDBResult","readTransaction","theSeq","theDocCount","websql_encoding","latestRev","missingErr","deletedErr","criteria","fetchChanges","selectStmt","reportChange","maxSeq","escaped","putLocal","rowsAffected","removeLocal","store","canOpenTestDB","openDatabase","isValidWebSQL","hasLS","localStorageKey","openedTestDB","openDB","WebSQLPouch","_opts","wrappedFetch","wrappedPromise","fetchRequest","Headers","fetchOptions","processData","fetchResponse","statusCode","abort","xhRequest","xhr","timedout","abortReq","cleanUp","timeoutReq","onprogress","upload","XMLHttpRequest","withCredentials","Accept","responseType","setRequestHeader","readyState","getResponseHeader","responseText","send","testXhr","ajax$1","hasXhr","defaultBody","ajaxCore$1","missing","res$2","defaultOptions","cache","ajax","ua","isSafari","isIE","isEdge","shouldCacheBust","isBlobUrl","hasArgs","now","pool","promiseFactories","runNext","runNextBatch","thisErr","readAttachmentsAsBlobOrBuffer","encodeDocId","preprocessAttachments$2","hasUrlPrefix","protocol","getHost","user","password","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","HttpPouch","ajax$$1","userOpts","reqAjax","ajaxOpts","log$1","_ajax","ajaxPromise","adapterFun$$1","skipSetup","skip_setup","setupPromise","checkExists","dbUrl","encodeAttachmentId","attachmentId","nAuth","Authorization","uuid$$1","compact","ping","compact_running","doBulkGet","doBulkGetShim","onResult","batchNum","numBatches","MAX_SIMULTANEOUS_REVS","supportsBulkGet","supportsBulkGetMap","fetchAttachments","filenames","fetchAllAttachments","docOrDocs","revs_info","remove","docOrId","optsOrRev","getAttachment","removeAttachment","putAttachment","_put","start_key","end_key","paramStr","batch_size","leftToFetch","feed","heartbeat","param_name","lastFetchedSeq","aborted","xhrOpts","fetched","raw_results_length","finished","revsDiff","TaskQueue$2","cachedViews","promiseForView","BuiltInError","createBuiltInError","sum","jNum","evalFunctionWithEval","log$2","finalPromiseFactory","theSet","mapToKeysArray","tryMap","tryReduce","rereduce","readAttachmentsAsBlobOrBuffer$1","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","coerceOptions","checkPositiveInteger","number","optionName","httpQuery","MAX_URL_LENGTH","keysAsString","customQuery","_query","customViewCleanup","_viewCleanup","processKeyValueDocs","oldKeys","CHANGES_BATCH_SIZE$1","createDocIdsToChangesAndEmits","createIndexableKeysToKeyValues","emittedKeyValue","origMap","builtInReduce","POSITIVE_INFINITY","groupKey","httpViewCleanup","isGenOne$1","fileHasChanged","localDoc","remoteDoc","getDocAttachments","getDocAttachmentsFromTargetOrSource","doCheckForLocalAttachments","createBulkGetOpts","diffs","missingRevs","missingRev","getDocs","getAllDocs","bulkGetOpts","bulkGetResponse","cancelled","bulkGetInfo","resultDocs","Boolean","hasConflicts","fetchRevisionOneDocs","getRevisionOneDocs","returnResult","updateCheckpoint","checkpoint","session","session_id","replicator","REPLICATOR","CHECKPOINT_VERSION","CHECKPOINT_HISTORY_SIZE","Checkpointer","compareReplicationLogs","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","LOWEST_SEQ","sourceId","hasSessionId","sessionId","rest","isForbiddenError","backOff","back_off_function","backOffSet","current_back_off","STARTING_BACK_OFF","removeBackOffSetter","sortObjectPropertiesByKey","queryParams","generateReplicationId","filterFun","filterViewName","queryData","md5sum","initCheckpointer","checkpointer","repId","writeDocs","changedDocs","currentBatch","bulkOpts","completeReplication","errorsById","errorsNo","doc_write_failures","docs_written","finishBatch","outResult","writingCheckpoint","writeCheckpoint","getChanges","onCheckpointError","getDiffs","getBatchDocs","got","docs_read","startNextBatch","batches","processPendingBatch","abortReplication","pendingBatch","changesOpts","changesCompleted","replicationCompleted","fatalError","end_time","onChangesComplete","changesPending","onChangesError","abortChanges","batches_limit","_abortChanges","startChanges","getCheckpoint","start_time","_addedListeners","Replication","toPouch","PouchConstructor","replicateWrapper","replicateRet","srcPouch","targetPouch","sync$1","Sync","pullChange","direction","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","removeAll","isChange","isDenied","isPaused","isActive","removed","addOneListener","canceled","optsPush","optsPull","pull","success","sync","other","mangled","eventFunction","inprogress","notifyLocalWindows","nextSource","nextKey","MISSING_BULK_DOCS","QUERY_PARSE_ERROR","NOT_AN_OBJECT","hasName","filterChanges","newPromise","filterName","post","createAttachment","prevrevpos","was_delete","addToMissing","revId","processDoc","missingForId","missingObj","compactDocument","revTree","candidates","promises","finishOpenRevs","existing","splittedRev","revNo","currentPath","hashIndex","hashFoundAtRevPos","indexOfRev","howMany","_revs_info","incompatibleOpt","attachmentError","dependentDb","dependentDbs","depDB","destroyDb","deletedMap","trueName","execute","addToPreferredAdapters","defaults","defaultOpts","PouchAlt","__defaults","atob","platform","IDBPouch","WebSqlPouch","HttpPouch$1","_sum","_count","_stats","sumsqr","_sumsqr","mapreduce","updateTarget","updateSource","readOnlySource","comparisons","targetDoc","sourceDoc","1","_readyCalled","toUtf8","utf8Str2ArrayBuffer","returnUInt8Array","arrayBuffer2Utf8Str","concatenateArrayBuffers","hexToBinaryString","clamp","begin","_hash","getState","setState","hasProp","arrayPrefix","objPrefix","numChar","parsedString","lastCh","numConsecutiveSlashes","normalizeName","normalizeValue","iteratorFor","items","support","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","readBlobAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","bufferClone","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","URLSearchParams","isDataView","_bodyArrayBuffer","isArrayBufferView","rejected","decode","normalizeMethod","upcased","methods","Request","referrer","form","parseHeaders","rawHeaders","line","Response","bodyInit","statusText","viewClasses","DataView","isView","oldValue","thisArg","entries","redirectStatuses","redirect","RangeError","getAllResponseHeaders","responseURL","polyfill"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,YAAAH,GACA,gBAAAC,SACAA,QAAA,OAAAD,KAEAD,EAAA,KAAAA,EAAA,SAAmCA,EAAA,YAAAC,MAClCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,IDcW,SAASD,GAEnB,IAAI,GAAIU,KAAKV,GACZ,GAAGW,OAAOC,UAAUC,eAAeP,KAAKN,EAASU,GAChD,aAAcV,GAAQU,IACtB,IAAK,WAAY,KACjB,KAAK,SAEJV,EAAQU,GAAM,SAASI,GACtB,GAAIC,GAAOD,EAAGE,MAAM,GAAIC,EAAKjB,EAAQc,EAAG,GACxC,OAAO,UAAUI,EAAEC,EAAEX,GACpBS,EAAGG,MAAMrB,MAAOmB,EAAEC,EAAEX,GAAGa,OAAON,MAE9Bf,EAAQU,GACV,MACD,SAECV,EAAQU,GAAKV,EAAQA,EAAQU,IAKhC,MAAOV,KAGF,SAASJ,EAAQD,EAASM,GAE/BA,EAAoB,IACpBL,EAAOD,QAAUM,EAAoB,KAKhC,SAASL,EAAQD,EAASM,GAE/B,YAuBA,SAASqB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASG,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMzB,GAAQ,IAAKyB,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAO1B,GAAyB,gBAATA,IAAqC,kBAATA,GAA8ByB,EAAPzB,EAElO,QAAS2B,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIN,WAAU,iEAAoEM,GAAeD,GAAStB,UAAYD,OAAOyB,OAAOD,GAAcA,EAAWvB,WAAayB,aAAeC,MAAOJ,EAAUK,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeN,IAAYxB,OAAO+B,eAAiB/B,OAAO+B,eAAeR,EAAUC,GAAcD,EAASS,UAAYR,GE/G3d,QAASS,GAAWC,EAAMC,GAAoB,GAAdC,GAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KACnD,OAAOH,GAAKM,SAASL,GAAMM,KAAK,SAACD,GAC/B,GAAIE,SASJ,OAPEA,GADEN,EAAQO,YACHC,MAAMJ,EAAUJ,GACdA,EAAQS,sBACVC,EAAkBZ,EAAMM,EAAUJ,EAASA,EAAQS,uBAEnDX,EAAKa,YAAYN,KAAK,SAACO,GAAD,MAC3BF,GAAkBZ,EAAMM,EAAUJ,EAASY,KAExCN,EAAKD,KAAK,SAAAQ,GAAA,MAAOC,GAAeD,EAAKf,EAAKiB,+BAIrD,QAASL,GAAmBZ,EAAMM,EAAUJ,EAASY,GAUnD,MATIA,KACFZ,EAAQgB,QAAUhB,EAAQgB,YAC1BhB,EAAQgB,QAAR,cAAmCJ,EAAYK,MAAMC,gBAKvDlB,EAAQY,YAAc,UAEfO,QAAQC,KACbtB,EAAKuB,OACLb,MAAMJ,EAAUJ,KACfK,KAAK,SAAAiB,GAAiB,GAAAC,GAAAC,EAAAF,EAAA,GAAfD,EAAeE,EAAA,GAATV,EAASU,EAAA,EACvB,IAAoB,MAAfV,EAAIY,QAAiC,MAAfZ,EAAIY,QAAmBJ,IAAST,GAAeZ,EAAQ0B,UAChF,MAAOb,EAFc,IAMfc,GAAkBf,EAAlBe,OAAQV,EAAUL,EAAVK,KAChB,OAAKU,IAAYV,4BAGjBjB,EAAQ0B,WAAY,GACb,EAAAE,EAAAC,OAAM,kBAAM,EAAAC,EAAAC,cAAajC,EAAM6B,EAAQV,IAAQ,KACnDZ,KAAK,SAAC2B,GAAD,MAAclC,GAAKmC,gBAAgBN,EAAQK,KAChD3B,KAAK,SAACO,GAAD,MAAiBF,GAAkBZ,EAAMM,EAAUJ,EAASY,MAL3DC,IASN,QAASqB,GAAepC,EAAMqC,EAAQpC,EAAMqC,GAAoB,GAAdpC,GAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MAC/DoC,EAAmD,mBAA3BrC,GAAQqC,gBAAkCrC,EAAQqC,cAChF,OAAOC,GAAUxC,EAAMqC,EAAQpC,EAAMqC,EAAMpC,GACxCK,KAAK,SAAAkC,GAAA,MAAYC,GAAmBD,EAAUF,KAG5C,QAASI,GAAkB3C,EAAMqC,EAAQpC,EAAMqC,GAAoB,GAAdpC,GAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KACxE,OAAOqC,GAAUxC,EAAMqC,EAAQpC,EAAMqC,EAAMpC,GACxCK,KAAK,SAAAkC,GAAA,MAAYC,GAAmBD,GAAU,KAGnD,QAASD,GAAWxC,EAAMqC,EAAQpC,EAAMqC,GAAoB,GAAdpC,GAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KAC1DD,GAAQmC,OAASA,CAEjB,IAAMnB,GAAUhB,EAAQgB,QAAUhB,EAAQgB,WAa1C,OAXAA,GAAA,OAAoB,mBAEL,QAAXmB,GAA+B,SAAXA,GAA8BhC,SAATiC,IACvCpB,EAAQ,gBACVhB,EAAQoC,KAAOA,GAEfpB,EAAQ,gBAAkB,mBAC1BhB,EAAQoC,KAAOM,KAAKC,UAAUP,KAI3BvC,EAAUC,EAAMC,EAAMC,GAG/B,QAASc,GAAgBD,EAAK+B,GAC5B,GAAI/B,EAAIgC,GACN,MAAOhC,EAET,IAAIiC,UACEC,EAAclC,EAAIG,QAAQgC,IAAI,eAMpC,OAJEF,GADEC,GAAeA,EAAYE,QAAQ,SAAW,EACzCpC,EAAIqC,OAEJrC,EAAIsC,OAENL,EAAKzC,KAAK,SAAA+C,GACf,GAAMC,GAAQ,GAAIC,GAAWzC,EAAKuC,EAIlC,MAHIE,GAAWC,eAAeF,IAAUT,GACtCA,EAAyBS,GAErBA,IAIV,QAASb,GAAoB3B,GAA4B,GAAvBwB,KAAuBpC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,KAAAA,UAAA,GACjD8C,EAAclC,EAAIG,QAAQgC,IAAI,eACpC,KAAKD,GAAeA,EAAYE,QAAQ,QAAU,EAChD,MAAOpC,GAAIsC,KAAK,SAACL,GACf,KAAM,IAAIQ,GAAWzC,EAAK,GAAI2C,OAAM,yBAA2BV,KAInE,IAAMI,GAAOrC,EAAIqC,MACjB,OAAwD,KAApDH,EAAYE,QAAQ,6BAAqCZ,EACpDa,EAAK7C,KAALoD,EAAA/E,SAEAwE,EAIJ,QAASQ,GAAyBL,GACvC,IACE,GAAMM,GAAgBC,OAAOC,SAASC,OAChCC,EAAaV,EAAMW,GAEzB,IAAoF,IAAhFD,EAAWd,QAAQU,EAAcM,QAAQ,0BAA2B,QAAe,CACrF,GAAMC,GAAiBP,EAAjB,KAAkC,EAAA/B,EAAAuC,cAAcC,WAAc,GACpER,QAAOC,SAAWK,GAEpB,MAAOG,GACPC,QAAQC,KAAK,uCAAwCF,EAAGhB,IFrC3DzF,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,EAAQ0G,WAAanD,MAErB,IAAIqB,GAAiB,WAAc,QAASiD,GAAcC,EAAK/G,GAAK,GAAIgH,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAK3E,MAAW,KAAM,IAAK,GAAiC4E,GAA7BC,EAAKN,EAAIO,OAAOC,cAAmBN,GAAMG,EAAKC,EAAGG,QAAQC,QAAoBT,EAAKU,KAAKN,EAAGxF,QAAY5B,GAAKgH,EAAKzE,SAAWvC,GAA3DiH,GAAK,IAAoE,MAAOxB,GAAOyB,GAAK,EAAMC,EAAK1B,EAAO,QAAU,KAAWwB,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAK/G,GAAK,GAAI2H,MAAMC,QAAQb,GAAQ,MAAOA,EAAY,IAAIO,OAAOC,WAAYtH,QAAO8G,GAAQ,MAAOD,GAAcC,EAAK/G,EAAa,MAAM,IAAImB,WAAU,2DAGtlBlC,GE5FeiD,YF6FfjD,EEhDesF,gBFiDftF,EE3Ce6F,mBF4Cf7F,EEgBe8G,yBAnHhB,IAAA5B,GAAA5E,EAAA,GACA0E,EAAA1E,EAAA,GACAsI,EAAAtI,EAAA,IFyGKuG,EAAYlF,EAAuBiH,GEsB3BlC,EFuIK1G,EEvIL0G,WFuI0B,SAAUmC,GEtI/C,QAAAnC,GAAazC,EAAK6E,GAAQ/G,EAAA3B,KAAAsG,EAAA,IAAAqC,GAAA5G,EAAA/B,MAAAsG,EAAA1D,WAAAhC,OAAAgI,eAAAtC,IAAA/F,KAAAP,MAAA,OAEpBwG,OAAMqC,mBACRrC,MAAMqC,kBAANF,EAA8BA,EAAKrG,aAGrCqG,EAAKG,KAAO,aACZH,EAAKpD,SAAW1B,EAChB8E,EAAK3B,IAAMnD,EAAImD,IACf2B,EAAKlE,OAASZ,EAAIY,OAClBkE,EAAKD,OAASA,EAEd9H,OAAO4G,eAAPmB,EAA4B,WAC1BpG,MAAOmG,EAAOK,UACO,gBAAXL,GAAsBA,EAAShD,KAAKC,UAAU+C,MAdlCC,EF8JzB,MAvBAzG,GAAUoE,EAAYmC,GAuBfnC,GE/JsBE,MAoBhCF,GAAW0C,eAAiB,SAAU5C,GAEpC,MAAoB,eAAbA,EAAI0C,MAAwC,MAAf1C,EAAI3B,QAG1C6B,EAAW2C,WAAa,SAAU7C,GAEhC,MAAoB,eAAbA,EAAI0C,MAAwC,MAAf1C,EAAI3B,QAG1C6B,EAAWC,eAAiB,SAAUH,GAEpC,MAAoB,eAAbA,EAAI0C,MAAwC,MAAf1C,EAAI3B,QAAkB2B,EAAIsC,SAAgC,sBAArBtC,EAAIsC,OAAOrC,OAAsD,kBAArBD,EAAIsC,OAAOrC,SFmJ5H,SAASxG,EAAQD,EAASM,IGrThC,SAAAgJ,GAAA,YAEA,IAAA/E,GAAAjE,EAAA,GAGAN,GAAAuJ,KAAA,SAAAC,GACA,GAAAC,IAAA,CACA,OAAAzJ,GAAA0J,aAAA,SAAAtI,GACA,GAAAqI,EAEA,KADA/B,SAAAiC,QACA,GAAA/C,OAAA,8BAEA6C,IAAA,EACAD,EAAA/H,MAAArB,KAAAgB,MAKApB,EAAA0J,aAAA,SAAAF,GACA,kBAIA,IAHA,GAAAI,GAAAvG,UAAAC,OACAlC,EAAA,GAAAsH,OAAAkB,GACA7I,GAAA,IACAA,EAAA6I,GACAxI,EAAAL,GAAAsC,UAAAtC,EAEA,OAAAyI,GAAA7I,KAAAP,KAAAgB,KAIApB,EAAA6J,UAAA,SAAAC,GAEA,MAAA9J,GAAA0J,aAAA,SAAAtI,GACA,GAGA2I,GAHA3H,EAAAhC,KACA4J,EAAA,kBAAA5I,KAAAkC,OAAA,IAAAlC,EAAA6I,KAGAD,KAGAD,EAAA,SAAAvD,EAAA9C,GACA4F,EAAAY,SAAA,WACAF,EAAAxD,EAAA9C,MAIA,IAAAyG,GAAA,GAAA5F,GAAA,SAAA6F,EAAAC,GACA,IACA,GAAAC,GAAAtK,EAAAuJ,KAAA,SAAA/C,EAAA+D,GACA/D,EACA6D,EAAA7D,GAEA4D,EAAAG,IAKAnJ,GAAAqH,KAAA6B,GACAR,EAAArI,MAAAW,EAAAhB,GACO,MAAAqG,GACP4C,EAAA5C,KAYA,OARAsC,IACAI,EAAA1G,KAAA,SAAA+G,GACAT,EAAA,KAAAS,IACOT,GAEPI,EAAAM,OAAA,WACA,MAAArK,OAEA+J,KAIAnK,EAAA0K,SAAApK,EAAA,IACAN,EAAAuE,UAEAvE,EAAA2K,MAAA,SAAA/I,GACA,MAAA5B,GAAA4K,QAAA,KAAgChJ,IAGhC5B,EAAA4K,OAAAtK,EAAA,IAEAN,EAAA6K,YAAA,SAAArB,GACA,MAAAxJ,GAAA0J,aAAA,SAAAtI,GACA,GAAA0J,GAAA1J,EAAA6I,MACAE,EAAAX,EAAA/H,MAAArB,KAAAgB,EAEA,OADApB,GAAA+K,iBAAAZ,EAAAW,GACAX,KAIAnK,EAAA+K,iBAAA,SAAAZ,EAAAG,GAUA,MATAH,GAAA1G,KAAA,SAAAQ,GACAqF,EAAAY,SAAA,WACAI,EAAA,KAAArG,MAEG,SAAA6E,GACHQ,EAAAY,SAAA,WACAI,EAAAxB,OAGAqB,EAGA,IAAAa,GAAA1K,EAAA,IACA2K,EAAA3K,EAAA,GAEAN,GAAAkL,IAAA,SAAAC,GAEA,MAAA7B,GAAA8B,QAGAH,EAAAI,KAAAF,GAFAH,EAAAM,WAAA,OAAAC,OAAAJ,GAAAK,OAAA,QAMAxL,EAAAyL,QAAAzL,EAAA0J,aAAA,SAAAtI,GAEA,OADA6C,MACAlD,EAAA,EAAA6I,EAAAxI,EAAAkC,OAAoCvC,EAAA6I,EAAS7I,IAAA,CAC7C,GAAA2K,GAAAtK,EAAAL,EACA2H,OAAAC,QAAA+C,GACAzH,IAAAvC,OAAA1B,EAAAyL,QAAAhK,MAAA,KAAAiK,IAEAzH,EAAAwE,KAAAiD,GAGA,MAAAzH,KAGAjE,EAAA2L,aAAA,SAAA7D,GAEA,OADA7D,MACAlD,EAAA,EAAA6I,EAAA9B,EAAAxE,OAAmCvC,EAAA6I,EAAS7I,IAC5CkD,EAAAjE,EAAA4K,QAAA,EAAA3G,EAAA6D,EAAA/G,GAEA,OAAAkD,IAKAjE,EAAA4L,gBAAA,SAAAC,EAAAC,GAEA,OADAnJ,GAAAkJ,EACA9K,EAAA,EAAA6I,EAAAkC,EAAAxI,OAA2CvC,EAAA6I,EAAS7I,IAAA,CACpD,GAAAgL,GAAAD,EAAA/K,EAEA,IADA4B,IAAAoJ,IACApJ,EACA,MAGA,MAAAA,IAGA3C,EAAAgM,cAAA,SAAAH,EAAAC,EAAAnJ,GACA,OAAA5B,GAAA,EAAA6I,EAAAkC,EAAAxI,OAA2CvC,EAAA6I,EAAA,EAAW7I,IAAA,CACtD,GAAAkL,GAAAH,EAAA/K,EACA8K,KAAAI,MAEAJ,EAAAC,EAAAlC,EAAA,IAAAjH,GAIA3C,EAAAkM,WAAA,SAAAC,GAIA,OAFAC,MACAC,EAAA,GACAtL,EAAA,EAAA6I,EAAAuC,EAAA7I,OAAyCvC,EAAA6I,EAAS7I,IAAA,CAClD,GAAAuL,GAAAH,EAAApL,EACA,OAAAuL,EACAvL,EAAA,UAAAoL,EAAApL,EAAA,GACAsL,IAAAE,UAAA,EAAAF,EAAA/I,OAAA,QAEA8I,EAAA3D,KAAA4D,GACAA,EAAA,IAGAA,GAAAC,EAIA,MADAF,GAAA3D,KAAA4D,GACAD,GAKApM,EAAAwM,KAAA,SAAA5K,EAAAkG,GAEA,OADA7D,MACAlD,EAAA,EAAA6I,EAAA9B,EAAAxE,OAAmCvC,EAAA6I,EAAS7I,IAAA,CAC5C,GAAA+K,GAAA9L,EAAAkM,WAAApE,EAAA/G,IACA4B,EAAA3C,EAAA4L,gBAAAhK,EAAAkK,EACA,oBAAAnJ,IACA3C,EAAAgM,cAAA/H,EAAA6H,EAAAnJ,GAGA,MAAAsB,IAIAjE,EAAAyM,0BAAA,SAAAC,EAAAC,GAEA,OAAA5L,GAAA,EAAA6I,EAAAgD,KAAAC,IAAAH,EAAApJ,OAAAqJ,EAAArJ,QAA4DvC,EAAA6I,EAAS7I,IACrE,GAAA2L,EAAA3L,KAAA4L,EAAA5L,GACA,QAGA,WAIAf,EAAA8M,gCAAA,SAAAJ,EAAAC,GAEA,QAAAD,EAAApJ,OAAAqJ,EAAArJ,SAIAtD,EAAAyM,0BAAAC,EAAAC,IAKA3M,EAAA+M,wBAAA,SAAAL,EAAAC,GACAD,IAAArL,OACA,QAAAN,GAAA,EAAA6I,EAAA+C,EAAArJ,OAAqCvC,EAAA6I,EAAS7I,IAAA,CAC9C,GAAAiM,GAAAL,EAAA5L,EACA,KAAA2L,EAAApJ,OACA,KAEA,IAAA2J,GAAAP,EAAArG,QAAA2G,EACA,IAAAC,KAAA,EACA,QAEAP,GAAAQ,OAAAD,EAAA,GAGA,UAGAjN,EAAAmN,QAAA,SAAAT,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,KAGA3M,EAAAoN,cAAA,SAAAtF,GAEA,OADA7D,MACAlD,EAAA,EAAA6I,EAAA9B,EAAAxE,OAAmCvC,EAAA6I,EAAS7I,IAC5CkD,EAAA6D,EAAA/G,KAAA,CAEA,OAAAkD,IAGAjE,EAAAqN,IAAA,SAAAvF,EAAA0B,GAGA,OAFA6D,GAAA,KACAC,GAAA,EACAvM,EAAA,EAAA6I,EAAA9B,EAAAxE,OAAmCvC,EAAA6I,EAAS7I,IAAA,CAC5C,GAAAwM,GAAAzF,EAAA/G,GACAyM,EAAAhE,EAAA+D,EACAC,GAAAF,IACAA,EAAAE,EACAH,EAAAE,GAGA,MAAAF,IAGArN,EAAAyN,YAAA,SAAAC,EAAAC,GACA,GAAAD,EAAApK,SAAAqK,EAAArK,OACA,QAEA,QAAAvC,GAAA,EAAA6I,EAAA8D,EAAApK,OAAoCvC,EAAA6I,EAAS7I,IAC7C,GAAA2M,EAAA3M,KAAA4M,EAAA5M,GACA,QAGA,WAGAf,EAAA4N,KAAA,SAAA9F,GAEA,OADAlG,MACAb,EAAA,EAAiBA,EAAA+G,EAAAxE,OAAgBvC,IACjCa,EAAA,IAAAkG,EAAA/G,KAAA,CAEA,OAAAC,QAAA6M,KAAAjM,GAAAkM,IAAA,SAAA/B,GACA,MAAAA,GAAAQ,UAAA,MAIAvM,EAAA+N,IAAAzN,EAAA,sBHyT8BK,KAAKX,EAASM,EAAoB,KAI1D,SAASL,EAAQD,GAEtB,YI1lBM,SAASgO,GAAY1M,GAC1B,MAAO,YAAmB,OAAA2M,GAAA5K,UAAAC,OAANlC,EAAMsH,MAAAuF,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN9M,EAAM8M,GAAA7K,UAAA6K,EACxB,IAAMvL,GAAQrB,EAAGG,MAAMrB,KAAMgB,EAC7B,KAAK+M,EAAUxL,GACb,MAAOA,EAET,IAAMyL,GAAIhN,EAAKkC,MACf,IAAU,IAAN8K,GAAkC,kBAAhBhN,GAAKgN,EAAI,GAA/B,CAGA,GAAMtD,GAAK1J,EAAKgN,EAAI,EACpBzL,GAAMc,KACJ,SAACQ,GAAD,MAAS6G,GAAG,KAAM7G,IAClB,SAACuC,GAAD,MAASsE,GAAGtE,EAAK,UAKhB,QAAS2H,GAAWxL,GACzB,QAASA,GAA+B,kBAAfA,GAAMc,KAG1B,QAAS4K,KACd,MAA4B,mBAAdC,YAA4BA,UAAUC,OAG/C,QAASC,KACd,OAAQH,IAGH,QAASI,GAAOC,EAAMtN,GAC3B,MAAO,IAAImD,SAAQ,SAACoK,GAClBC,WAAWD,EAASD,EAAMtN,KAIvB,QAAS6D,GAAO3D,EAAIuN,GAAoB,GAAbC,GAAazL,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAL,GACxC,OAAO,SAAS0L,KAAgB,OAAAC,GAAA3L,UAAAC,OAANlC,EAAMsH,MAAAsG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN7N,EAAM6N,GAAA5L,UAAA4L,EAC9B,OAAO3N,gBAAMF,GAAM8N,MAAM,SAAC1I,GACxB,KAAMqI,EAAQ,EACZ,KAAMrI,EAER,OAAOiI,GAAMU,EAAkBL,EAAOD,IACnCpL,KAAK,iBAAMsL,gBAAS3N,QAKtB,QAASgO,GAAgBC,GAC9B,GAAMC,IAAkC,EAAhB1C,KAAK2C,SAAgB,GAAKC,CAClD,OAAOH,IAAc,EAAMC,GAGtB,QAASH,GAAmBE,GAA4B,GAAhBI,GAAgBpM,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAH,CAC1D,OAAO+L,GAAeC,EAAazC,KAAK8C,IAAI,EAAGD,EAAa,IAGvD,QAASE,GAAYzM,EAAMuB,EAAMmL,GAAgC,GAAvBnP,GAAuB4C,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAlB,GAAIwM,EAAcxM,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAN,KAC5DyM,EAAQ,QACPrL,KACHqL,GAAYC,mBAAmBH,GAA/B,KAES,KAAPnP,IACFqP,GAASC,mBAAmBtP,GAE9B,IAAMuP,GAAIzI,EAAYsI,EAItB,OAHU,KAANG,IACFF,GAAS,IAAME,GAEVF,EAGF,QAASvI,GAAasI,GAC3B,IAAKA,EACH,MAAO,EAET,IAAIG,GAAI,EACR,KAAK,GAAMC,KAASJ,GACR,KAANG,IACFA,GAAK,KAEPA,GAAQD,mBAAmBE,GAA3B,IAAqCF,mBAAmBF,EAAMI,GAEhE,OAAOD,GAGF,QAASE,GAAa9I,GAC3B,GAAI+I,GAAa/I,EAAIf,QAAQ,IACzB8J,GAAa,IACfA,EAAa/I,EAAI9D,OAEnB,IAAM8M,MACFC,EAAYjJ,EAAIf,QAAQ,IAI5B,IAHIgK,EAAY,IACdA,EAAYjJ,EAAI9D,QAEd+M,EAAYF,EACd,MAAOC,EAET,IAAME,GAAWlJ,EAAI/F,MAAM8O,EAAa,EAAGE,EAC3C,IAAiB,KAAbC,EACF,MAAOF,EAGT,KAAK,GADCG,GAAQD,EAASE,MAAM,KACpBzP,EAAI,EAAGA,EAAIwP,EAAMjN,OAAQvC,IAAK,CACrC,GAAI0P,GAAOF,EAAMxP,GAAGyP,MAAM,IAC1B,IAAoB,IAAhBC,EAAKnN,QAA4B,KAAZmN,EAAK,GAA9B,CAGA,GAAMR,GAAQS,mBAAmBD,EAAK,GACtC,KAAIL,EAAQlP,eAAe+O,GAG3B,GAAoB,IAAhBQ,EAAKnN,OACP8M,EAAQH,IAAS,MACZ,IAAoB,IAAhBQ,EAAKnN,OAGd,KAAM,IAAIsD,OAAM,gBAFhBwJ,GAAQH,GAASS,mBAAmBD,EAAK,MAK7C,MAAOL,GAIF,QAASzI,GAAMpB,GAChBoK,EAAOtK,QAAQE,MAAU,IAC3BoK,EAAOlI,KAAKlC,GACZmB,QAAQC,KAAK,iBAAkBpB,IJ4dlCvF,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,EI/lBegO,aJgmBfhO,EI9kBemO,YJ+kBfnO,EI3kBeqO,WJ4kBfrO,EIxkBewO,YJykBfxO,EIrkBeyO,QJskBfzO,EIhkBeiF,QJikBfjF,EIrjBeoP,iBJsjBfpP,EIjjBemP,oBJkjBfnP,EI9iBe2P,aJ+iBf3P,EIhiBeuH,cJiiBfvH,EInhBekQ,cJohBflQ,EI7ee2H,MA/HhB,IAAM6H,GAAa,GA8HbmB,MJyoBA,SAAS1Q,EAAQD,EAASM,GKxwBhC,YAKA,SAAAsQ,GAAAhP,GACA,MAAAZ,QAAA6M,KAAAjM,GAAA,GAGA,QAAAiP,GAAAjP,GACA,MAAAA,GAAAgP,EAAAhP,IAIA,QAAAkP,GAAAC,GACA,IAAArI,MAAAC,QAAAoI,GACA,SAAAnK,OAAA,yCAEA,OAAAmK,GAAAjD,IAAA,SAAAkD,GACA,mBAAAA,GAAA,CACA,GAAApP,KAEA,OADAA,GAAAoP,GAAA,MACApP,EAEA,MAAAoP,KAMA,QAAAC,GAAAjE,GACA,MAAAkE,GAAA7K,QAAA2G,IAAA,EAIA,QAAAmE,GAAAC,EAAAzO,EAAA0O,GACA,mBAAAA,GAAAC,MAGA,mBAAAD,GAAAE,KACA,SAAAH,EACAzO,EAAA0O,EAAAE,OACAF,EAAAE,KAAA5O,GAGAA,GAAA0O,EAAAE,aACAF,GAAAE,KACAF,EAAAG,IAAA7O,GAGG,mBAAA0O,GAAAG,IACH,SAAAJ,EACAzO,EAAA0O,EAAAG,YACAH,GAAAG,IACAH,EAAAE,KAAA5O,GAGAA,EAAA0O,EAAAG,MACAH,EAAAG,IAAA7O,GAIA0O,EAAAD,GAAAzO,GAKA,QAAA8O,GAAAL,EAAAzO,EAAA0O,GACA,mBAAAA,GAAAC,MAGA,mBAAAD,GAAAK,KACA,SAAAN,EACAzO,EAAA0O,EAAAK,OACAL,EAAAK,KAAA/O,GAGAA,GAAA0O,EAAAK,aACAL,GAAAK,KACAL,EAAAM,IAAAhP,GAGG,mBAAA0O,GAAAM,IACH,SAAAP,EACAzO,EAAA0O,EAAAM,YACAN,GAAAM,IACAN,EAAAK,KAAA/O,GAGAA,EAAA0O,EAAAM,MACAN,EAAAM,IAAAhP,GAIA0O,EAAAD,GAAAzO,GAKA,QAAAiP,GAAAjP,EAAA0O,GACA,OAAAA,GAEAA,EAAAQ,IAAApJ,KAAA9F,GAEA0O,EAAAQ,KAAAlP,GAKA,QAAAmP,GAAAnP,EAAA0O,SAGAA,GAAAG,UACAH,GAAAE,WACAF,GAAAM,UACAN,GAAAK,WACAL,GAAAQ,IACAR,EAAAC,IAAA3O,EAIA,QAAAoP,GAAAC,GAKA,GAAA/N,KAqCA,OAnCA+N,GAAAC,QAAA,SAAAC,GACAlR,OAAA6M,KAAAqE,GAAAD,QAAA,SAAAjF,GACA,GAAAmF,GAAAD,EAAAlF,EAKA,IAJA,gBAAAmF,KACAA,GAAmBb,IAAAa,IAGnBlB,EAAAjE,GACAmF,YAAAzJ,OACAzE,EAAA+I,GAAAmF,EAAArE,IAAA,SAAAlN,GACA,MAAAmR,IAAAnR,MAGAqD,EAAA+I,GAAA+E,GAAAI,QAEO,CACP,GAAAd,GAAApN,EAAA+I,GAAA/I,EAAA+I,MACAhM,QAAA6M,KAAAsE,GAAAF,QAAA,SAAAb,GACA,GAAAzO,GAAAwP,EAAAf,EAEA,eAAAA,GAAA,SAAAA,EACAD,EAAAC,EAAAzO,EAAA0O,GACW,QAAAD,GAAA,SAAAA,EACXK,EAAAL,EAAAzO,EAAA0O,GACW,QAAAD,EACXQ,EAAAjP,EAAA0O,GACW,QAAAD,EACXU,EAAAnP,EAAA0O,QAEAA,EAAAD,GAAAzO,UAMAsB,EAMA,QAAAmO,GAAAC,GACA,GAAA7H,GAAA8H,EAAA3H,MAAA0H,GACAE,GAAA,CACA,SAAA/H,KACAA,EAAAuH,EAAAvH,EAAA,MACA+H,GAAA,GAGA,QAAA/H,KAGAA,EAAA,KAAAuH,GAAAvH,EAAA,OAKA,QAFA4B,GAAApL,OAAA6M,KAAArD,GAEAzJ,EAAA,EAAiBA,EAAAqL,EAAA9I,OAAmBvC,IAAA,CACpC,GAAAiM,GAAAZ,EAAArL,GACAoR,EAAA3H,EAAAwC,EAEA,iBAAAmF,IAAA,OAAAA,EACAA,GAAiBb,IAAAa,GACZ,OAAAA,KAAAI,IAGLJ,EAAAN,KAAAM,EAAAN,MAEArH,EAAAwC,GAAAmF,EAGA,MAAA3H,GAIA,QAAAgI,GAAAC,GASA,MARAA,GAAArG,OAAAqG,EAAArG,OAAA0B,IAAA,SAAAd,GACA,mBAAAA,GAAA,CACA,GAAApL,KAEA,OADAA,GAAAoL,GAAA,MACApL,EAEA,MAAAoL,KAEAyF,EAGA,QAAAC,GAAA7G,EAAA8G,GAEA,OADA1O,MACAlD,EAAA,EAAiBA,EAAA4R,EAAAC,IAAAxG,OAAA9I,OAA6BvC,IAAA,CAC9C,GAAAiM,GAAA4D,EAAA+B,EAAAC,IAAAxG,OAAArL,GACAkD,GAAAwE,KAAAoD,EAAAmB,IAEA,MAAA/I,GAKA,QAAA4O,GAAAC,EAAAC,EAAAJ,GAEA,OADAK,GAAAL,EAAAC,IAAAxG,OACArL,EAAA,EAAA6I,EAAAkJ,EAAAxP,OAAoCvC,EAAA6I,EAAS7I,IAAA,CAC7C,GAAAkS,GAAAH,EAAA/R,GAKAmS,EAAAR,EAAAO,EAAApH,IAAA8G,EACA,QAAAK,EAAA1P,OACA4P,IAAA,OAIA,MAAAA,EAAA5P,OAAAyP,EAAAzP,QACA4P,EAAAjJ,KAIA,IAAA2C,KAAAuG,IAAAC,UAAAF,EAAAH,IAAA,EAEA,MAGA,MAAAhS,GAAA,EAAA+R,EAAAzR,MAAAN,GAAA+R,EAGA,QAAAO,GAAAC,GACA,GAAAC,GAAAjB,EAAA3H,MAAA2I,EAkBA,cAjBAC,GAAAC,eACAD,GAAAE,aACAF,GAAAG,sBACAH,GAAAI,cAEA,UAAAL,KACAC,EAAAC,SAAAF,EAAAG,QAEA,YAAAH,KACAC,EAAAE,OAAAH,EAAAE,UAEA,mBAAAF,KACAC,EAAAI,cAAAL,EAAAI,iBAEA,iBAAAJ,KACAC,EAAAG,gBAAAJ,EAAAK,eAEAJ,EAGA,QAAAK,GAAAjB,GACA,GAAAkB,GAAAlB,EAAAvG,OAAA0H,OAAA,SAAA9G,GACA,cAAA6D,EAAA7D,IAEA,QAAA6G,EAAAvQ,QAAAuQ,EAAAvQ,SAAAqP,EAAAvG,OAAA9I,OACA,SAAAsD,OAAA,6BAIA,QAAAmN,GAAAC,EAAArB,GACA,GAAAA,EAAAsB,aAAAD,EAAAjD,KAAA,CACA,GAAAmD,GAAAF,EAAAjD,KAAA+C,OAAA,SAAAK,GACA,cAAAnT,OAAA6M,KAAAsG,GAAA,KACKrG,IAAA,SAAAqG,GACL,MAAAnT,QAAA6M,KAAAsG,GAAA,IAGA,IAAAD,EAAA5Q,OAAA,EACA,SAAAsD,OAAA,4BAAAsN,EAAAE,KAAA,KACA,kCAIAzB,EAAAsB,YAKA,QAAAI,GAAAL,GACA,mBAAAA,GAAA9B,SACA,SAAAtL,OAAA,+CAsBA,QAAA0N,GAAApC,EAAAnB,GACA,GAEAwD,GAFAC,EAAAxT,OAAA6M,KAAAqE,GACAuC,EAAA1D,IAAAjD,IAAA8C,KAQA,OALA2D,GADAC,EAAAlR,QAAAmR,EAAAnR,OACAkR,EAEAC,EAGA,IAAAA,EAAAnR,QAEA8I,OAAAmI,IAKAA,IAAAxD,KAAA,SAAArE,EAAAC,GACA,GAAAM,GAAAwH,EAAApO,QAAAqG,EACAO,MAAA,IACAA,EAAAyH,OAAAC,UAEA,IAAAC,GAAAH,EAAApO,QAAAsG,EAIA,OAHAiI,MAAA,IACAA,EAAAF,OAAAC,WAEA1H,EAAA2H,GAAA,EAAA3H,EAAA2H,EAAA,OAIAxI,OAAAmI,EACAM,UAAA9D,EAAAjD,IAAA8C,KApWA,GAAA0B,GAAAhS,EAAA,GACA8S,EAAA9S,EAAA,GA0BA4Q,GAAA,oBA6UAjR,GAAAD,SACA4Q,SACAC,WACAC,cACAsB,kBACAwB,gBACAS,sBACAN,eACAV,iBACAR,uBACAL,kBACAtG,WAAAoG,EAAApG,WACAoI,gBACArD,yBLgxBM,SAAShR,EAAQD,EAASM,GAE/B,YMvnCM,SAASwU,GAAkB5R,EAAMuB,EAAMmL,GAC5C,GAAImF,GAAcnF,EAAQvJ,QAAQ,QAAS,CAC3C,IAAI5B,GAAQsQ,EAAa,CACvB,GAAIC,GAAQC,EAAcrF,EAC1B,OAAIoF,GAAcA,EACXpF,EAAQvI,QAAQ,MAAO,KAEhC,IAAK5C,IAASsQ,EAAa,CACzB,GAAIC,GAAQE,EAAetF,EAC3B,IAAIoF,EAEF,OADA,EAAAhQ,EAAA2C,MAAK,yCAA2CiI,EAAU,kBAAoBoF,GACvEA,CAET,MAAM,IAAIpO,OAAM,WAAagJ,EAAU,yBAEzC,MAAOA,GN0mCR5O,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,EAAQmV,cAAgB5R,OACxBvD,EM7nCe8U,kBAlBhB,IAAA9P,GAAA1E,EAAA,GAEa6U,kBAAgB,gBAEvBD,GACJE,MAASD,EACTE,OAAUF,EACVG,QAAW,mBACXC,MAAS,iBACTC,MAAS,2BACTC,SAAY,+BAGRR,IACNjU,QAAO6M,KAAKqH,GAAgBjD,QAAQ,SAAAyD,GAClCT,EAAcC,EAAeQ,IAAMA,KNwqC/B,SAASzV,EAAQD,GO5qCvB,QAAA2V,KACA,SAAA/O,OAAA,mCAEA,QAAAgP,KACA,SAAAhP,OAAA,qCAsBA,QAAAiP,GAAArM,GACA,GAAAsM,IAAAlH,WAEA,MAAAA,YAAApF,EAAA,EAGA,KAAAsM,IAAAH,IAAAG,IAAAlH,WAEA,MADAkH,GAAAlH,WACAA,WAAApF,EAAA,EAEA,KAEA,MAAAsM,GAAAtM,EAAA,GACK,MAAA/B,GACL,IAEA,MAAAqO,GAAAnV,KAAA,KAAA6I,EAAA,GACS,MAAA/B,GAET,MAAAqO,GAAAnV,KAAAP,KAAAoJ,EAAA,KAMA,QAAAuM,GAAAC,GACA,GAAAC,IAAAC,aAEA,MAAAA,cAAAF,EAGA,KAAAC,IAAAL,IAAAK,IAAAC,aAEA,MADAD,GAAAC,aACAA,aAAAF,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAAvO,GACL,IAEA,MAAAwO,GAAAtV,KAAA,KAAAqV,GACS,MAAAvO,GAGT,MAAAwO,GAAAtV,KAAAP,KAAA4V,KAYA,QAAAG,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAA/S,OACAgT,EAAAD,EAAA3U,OAAA4U,GAEAC,GAAA,EAEAD,EAAAhT,QACAkT,KAIA,QAAAA,KACA,IAAAJ,EAAA,CAGA,GAAAK,GAAAZ,EAAAM,EACAC,IAAA,CAGA,KADA,GAAAxM,GAAA0M,EAAAhT,OACAsG,GAAA,CAGA,IAFAyM,EAAAC,EACAA,OACAC,EAAA3M,GACAyM,GACAA,EAAAE,GAAAG,KAGAH,IAAA,EACA3M,EAAA0M,EAAAhT,OAEA+S,EAAA,KACAD,GAAA,EACAL,EAAAU,IAiBA,QAAAE,GAAAnN,EAAAoN,GACAxW,KAAAoJ,MACApJ,KAAAwW,QAYA,QAAAC,MAhKA,GAOAf,GACAG,EARA3M,EAAArJ,EAAAD,YAgBA,WACA,IAEA8V,EADA,kBAAAlH,YACAA,WAEA+G,EAEK,MAAAlO,GACLqO,EAAAH,EAEA,IAEAM,EADA,kBAAAC,cACAA,aAEAN,EAEK,MAAAnO,GACLwO,EAAAL,KAuDA,IAEAS,GAFAC,KACAF,GAAA,EAEAG,GAAA,CAyCAjN,GAAAY,SAAA,SAAAV,GACA,GAAApI,GAAA,GAAAsH,OAAArF,UAAAC,OAAA,EACA,IAAAD,UAAAC,OAAA,EACA,OAAAvC,GAAA,EAAuBA,EAAAsC,UAAAC,OAAsBvC,IAC7CK,EAAAL,EAAA,GAAAsC,UAAAtC,EAGAuV,GAAA7N,KAAA,GAAAkO,GAAAnN,EAAApI,IACA,IAAAkV,EAAAhT,QAAA8S,GACAP,EAAAW,IASAG,EAAA1V,UAAAyV,IAAA,WACAtW,KAAAoJ,IAAA/H,MAAA,KAAArB,KAAAwW,QAEAtN,EAAAwN,MAAA,UACAxN,EAAA8B,SAAA,EACA9B,EAAAyN,OACAzN,EAAA0N,QACA1N,EAAA2N,QAAA,GACA3N,EAAA4N,YAIA5N,EAAA6N,GAAAN,EACAvN,EAAA8N,YAAAP,EACAvN,EAAAC,KAAAsN,EACAvN,EAAA+N,IAAAR,EACAvN,EAAAgO,eAAAT,EACAvN,EAAAiO,mBAAAV,EACAvN,EAAAkO,KAAAX,EAEAvN,EAAAmO,QAAA,SAAAvO,GACA,SAAAtC,OAAA,qCAGA0C,EAAAoO,IAAA,WAA2B,WAC3BpO,EAAAqO,MAAA,SAAAC,GACA,SAAAhR,OAAA,mCAEA0C,EAAAuO,MAAA,WAA4B,WP8rCtB,SAAS5X,EAAQD,EAASM,GQj3ChC,YAwEA,SAAAwX,GAAA/L,GACA,UAAAA,EACA,aAAAA,IACA,cACA,MAAAA,GAAA,GACA,cACA,MAAAgM,GAAAhM,EACA,cAMA,MAAAA,GACA1E,QAAA,gBACAA,QAAA,gBACAA,QAAA,eACA,cACA,GAAAsB,GAAAD,MAAAC,QAAAoD,GACAjE,EAAAa,EAAAoD,EAAA/K,OAAA6M,KAAA9B,GACAhL,GAAA,EACA6I,EAAA9B,EAAAxE,OACAkH,EAAA,EACA,IAAA7B,EACA,OAAA5H,EAAA6I,GACAY,GAAAxK,EAAAgY,kBAAAlQ,EAAA/G,QAGA,QAAAA,EAAA6I,GAAA,CACA,GAAAqO,GAAAnQ,EAAA/G,EACAyJ,IAAAxK,EAAAgY,kBAAAC,GACAjY,EAAAgY,kBAAAjM,EAAAkM,IAGA,MAAAzN,GAGA,SAYA,QAAA0N,GAAAC,EAAApX,GACA,GACAqX,GADAC,EAAAtX,EAEAuX,EAAA,MAAAH,EAAApX,EACA,IAAAuX,EACAF,EAAA,EACArX,QACG,CACH,GAAAwX,GAAA,MAAAJ,EAAApX,EACAA,IACA,IAAAyX,GAAA,GACAC,EAAAN,EAAA5L,UAAAxL,IAAA2X,GACAC,EAAAC,SAAAH,EAAA,IAAAI,CAKA,KAJAN,IACAI,MAEA5X,GAAA2X,IACA,CACA,GAAApM,GAAA6L,EAAApX,EACA,WAAAuL,EACA,KAEAkM,IAAAlM,EAEAvL,IAEAyX,IAAAhI,MAAA,KAEA4H,EADA,IAAAI,EAAAlV,OACAsV,SAAAJ,EAAA,IAEAM,WAAAN,EAAA,OAAAA,EAAA,IAEAD,IACAH,GAAA,IAEA,IAAAO,IAIAP,EAAAU,WAAAV,EAAA,IAAAO,IAGA,OAAUP,MAAA9U,OAAAvC,EAAAsX,GAKV,QAAApO,GAAA8O,EAAAC,GACA,GAAApX,GAAAmX,EAAA9O,KAEA,IAAA+O,EAAA1V,OAAA,CACA,GAAA2V,GAAAD,IAAA1V,OAAA,EACA1B,KAAAqX,EAAA1L,UAEAyL,EAAA/O,MACAgP,EAAAD,IAAA1V,OAAA,GAEA,IAAAiK,GAAA0L,EAAA1L,QACA2L,EAAAD,EAAAtG,KACA,IAAAjK,MAAAC,QAAA4E,GACAA,EAAA9E,KAAA7G,OACK,IAAAsX,IAAAH,EAAAzV,OAAA,GACL,GAAAyI,GAAAgN,EAAA9O,KACAsD,GAAAxB,GAAAnK,MAEAmX,GAAAtQ,KAAA7G,IAmEA,QAAAuX,GAAA5X,EAAAC,GAEA,OADAoI,GAAAgD,KAAAC,IAAAtL,EAAA+B,OAAA9B,EAAA8B,QACAvC,EAAA,EAAiBA,EAAA6I,EAAS7I,IAAA,CAC1B,GAAAgQ,GAAA/Q,EAAAoT,QAAA7R,EAAAR,GAAAS,EAAAT,GACA,QAAAgQ,EACA,MAAAA,GAGA,MAAAxP,GAAA+B,SAAA9B,EAAA8B,OAAA,EACA/B,EAAA+B,OAAA9B,EAAA8B,OAAA,KAEA,QAAA8V,GAAA7X,EAAAC,GAIA,MAAAD,KAAAC,EAAA,EAAAD,EAAAC,EAAA,KAEA,QAAA6X,GAAA9X,EAAAC,GAGA,OAFA8X,GAAAtY,OAAA6M,KAAAtM,GAAAgY,EAAAvY,OAAA6M,KAAArM,GACAoI,EAAAgD,KAAAC,IAAAyM,EAAAhW,OAAAiW,EAAAjW,QACAvC,EAAA,EAAiBA,EAAA6I,EAAS7I,IAAA,CAE1B,GAAAgQ,GAAA/Q,EAAAoT,QAAAkG,EAAAvY,GAAAwY,EAAAxY,GACA,QAAAgQ,EACA,MAAAA,EAIA,IADAA,EAAA/Q,EAAAoT,QAAA7R,EAAA+X,EAAAvY,IAAAS,EAAA+X,EAAAxY,KACA,IAAAgQ,EACA,MAAAA,GAIA,MAAAuI,GAAAhW,SAAAiW,EAAAjW,OAAA,EACAgW,EAAAhW,OAAAiW,EAAAjW,OAAA,KAMA,QAAAkW,GAAAC,GACA,GAAAhZ,IAAA,sCACAiZ,EAAAjZ,EAAA4F,cAAAoT,GAEA,QAAAC,EACA,OAAAD,EACA,EAEA/Q,MAAAC,QAAA8Q,GACA,EAEAC,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAEAhR,MAAAC,QAAA8Q,GACA,EADA,OAUA,QAAA1B,GAAAK,GAEA,OAAAA,EACA,SAKA,IAAAuB,GAAAvB,EAAAwB,gBAAApJ,MAAA,QACAmI,EAAAC,SAAAe,EAAA,OAEApB,EAAAH,EAAA,EAEA5N,EAAA+N,EAAA,QAIAsB,GAAAtB,GAAAI,KAAAE,EACAiB,EAAAxH,EAAAyH,QAAA,EAAAC,WAAA,IAAAtB,EAEAlO,IAAAyP,EAAAH,CAGA,IAAAI,GAAAtN,KAAAuG,IAAA2F,WAAAa,EAAA,IACApB,KACA2B,EAAA,GAAAA,EAGA,IAAAC,GAAAD,EAAAE,QAAA,GAOA,OAJAD,KAAA9S,QAAA,aAEAmD,GAAAyP,EAAAE,EA3VA,GAAAtB,IAAA,IACAH,EAAA,EACAuB,EAAA,GAEA3H,EAAAhS,EAAA,GAEAN,GAAAoT,QAAA,SAAA7R,EAAAC,GAEA,GAAAD,IAAAC,EACA,QAGAD,GAAAvB,EAAAqa,aAAA9Y,GACAC,EAAAxB,EAAAqa,aAAA7Y,EAEA,IAAA8Y,GAAAd,EAAAjY,GACAgZ,EAAAf,EAAAhY,EACA,IAAA8Y,EAAAC,IAAA,EACA,MAAAD,GAAAC,CAEA,WAAAhZ,EACA,QAEA,cAAAA,IACA,aACA,MAAAA,GAAAC,CACA,eACA,MAAAD,KAAAC,EAAA,EAAAD,EAAAC,GAAA,GACA,cACA,MAAA4X,GAAA7X,EAAAC,GAEA,MAAAkH,OAAAC,QAAApH,GAAA4X,EAAA5X,EAAAC,GAAA6X,EAAA9X,EAAAC,IAKAxB,EAAAqa,aAAA,SAAAtO,GACA,aAAAA,IACA,gBACA,WACA,cACA,MAAAA,KAAAyO,KAAAzO,MAAAyO,MAAAC,MAAA1O,GACA,KAEAA,CACA,cACA,GAAA2O,GAAA3O,CACA,IAAArD,MAAAC,QAAAoD,GAAA,CACA,GAAAnC,GAAAmC,EAAAzI,MACAyI,GAAA,GAAArD,OAAAkB,EACA,QAAA7I,GAAA,EAAuBA,EAAA6I,EAAS7I,IAChCgL,EAAAhL,GAAAf,EAAAqa,aAAAK,EAAA3Z,QAEO,IAAAgL,YAAA4O,MACP,MAAA5O,GAAA6O,QACO,WAAA7O,EAAA,CACPA,IACA,QAAA2J,KAAAgF,GACA,GAAAA,EAAAxZ,eAAAwU,GAAA,CACA,GAAAmF,GAAAH,EAAAhF,EACA,oBAAAmF,KACA9O,EAAA2J,GAAA1V,EAAAqa,aAAAQ,OAMA,MAAA9O,IA8CA/L,EAAAgY,kBAAA,SAAAjM,GACA,GAAAuM,GAAA,IAEA,OADAvM,GAAA/L,EAAAqa,aAAAtO,GACAyN,EAAAzN,GAAAkO,EAAAnC,EAAA/L,GAAAuM,GAyEAtY,EAAA8a,qBAAA,SAAA3C,GAKA,IAJA,GAAAY,MACAC,KACAjY,EAAA,IAEA,CACA,GAAAyY,GAAArB,EAAApX,IACA,WAAAyY,EAQA,OAAAA,GACA,QACAT,EAAAtQ,KAAA,KACA,MACA,SACAsQ,EAAAtQ,KAAA,MAAA0P,EAAApX,IACAA,GACA,MACA,SACA,GAAAga,GAAA7C,EAAAC,EAAApX,EACAgY,GAAAtQ,KAAAsS,EAAA3C,KACArX,GAAAga,EAAAzX,MACA,MACA,SAEA,IADA,GAAA0X,GAAA,KACA,CACA,GAAA1O,GAAA6L,EAAApX,EACA,WAAAuL,EACA,KAEA0O,IAAA1O,EACAvL,IAIAia,IAAA3T,QAAA,sBACAA,QAAA,qBACAA,QAAA,qBACA0R,EAAAtQ,KAAAuS,EACA,MACA,SACA,GAAAC,IAA4B1N,WAAAoF,MAAAoG,EAAAzV,OAC5ByV,GAAAtQ,KAAAwS,EAAA1N,SACAyL,EAAAvQ,KAAAwS,EACA,MACA,SACA,GAAAC,IAA0B3N,WAAYoF,MAAAoG,EAAAzV,OACtCyV,GAAAtQ,KAAAyS,EAAA3N,SACAyL,EAAAvQ,KAAAyS,EACA,MACA,SACA,SAAAtU,OACA,4DAAA4S,OAlDA,CACA,OAAAT,EAAAzV,OACA,MAAAyV,GAAA9O,KAEAA,GAAA8O,EAAAC,OR8gDM,SAAS/Y,EAAQD,EAASM,GAE/B,YA0BA,SAASyB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCSppD1G,QAAS6C,GAAQ7B,EAAMiY,GAI5B,MAHKA,KACHA,EAAejY,EAAKkY,eAElBD,YAAwBE,GACnBF,EAEF,GAAIE,GAAOF,GAGb,QAASG,GAAgBpY,EAAMiY,GACpC,GAAMI,GAAMxW,EAAO7B,EAAMiY,EACzB,OAAII,GAAIC,eACCjX,QAAQ8F,OAAO,GAAIzD,OAAM,+BAE3B,EAAA6U,EAAAnW,eAAcpC,EAAM,OAAQ,iBAAkBqY,EAAIG,kBACvD/X,aAAa,IAEZF,KAAK,SAACyC,GAAD,MAAU,IAAImV,GAAOnV,KAGxB,QAASyV,GAAczY,EAAMiY,GAAmC,GAArBS,GAAqBvY,UAAAC,OAAA,GAAAC,SAAAF,UAAA,IAAAA,UAAA,GAC/DkY,EAAMxW,EAAO7B,EAAMiY,EACzB,KAAKI,EAAIC,eACP,MAAOjX,SAAQ8F,OAAO,GAAIzD,OAAM,yBAElC,IAAIV,GAAOqV,EAAIG,gBAIf,OAHAxV,GAAK2V,UAAYN,EAAIO,SACjBF,IAAa1V,EAAK6V,cAAgBR,EAAIS,eAEnC,EAAAP,EAAAnW,eAAcpC,EAAM,MAApB,kBAA6CqY,EAAIO,SAAY5V,GAClErC,uBACEQ,MAAOkX,KAER9X,KAAK,SAACyC,GAAD,MAAU+V,GAAa/V,EAAMqV,KAGhC,QAASW,GAAkBhZ,EAAMiY,GACtC,GAAMI,GAAMxW,EAAO7B,EAAMiY,EACzB,OAAKI,GAAIC,gBAGF,EAAAC,EAAAnW,eAAcpC,EAAM,SAApB,kBAAgDqY,EAAIO,SAAY,MACrEjY,uBACEQ,MAAOkX,KAJFhX,QAAQ8F,OAAO,GAAIzD,OAAM,0BAU7B,QAASuV,GAAWjZ,EAAMiY,GAC/B,GAAMI,GAAMxW,EAAO7B,EAAMiY,EACzB,OAAKI,GAAIC,gBAGL,EAAAxW,EAAAwJ,aACKjK,QAAQoK,QAAQ4M,IAElB,EAAAE,EAAAnW,eAAcpC,EAAM,MAApB,kBAA6CqY,EAAIO,SAAY,MAEhEjY,uBACEQ,MAAOkX,KAGV9X,KAAK,SAACyC,GAAD,MAAU+V,GAAa/V,EAAMqV,KAClCrM,MAAM,SAAC1I,GAQN,GAAIiV,EAAA/U,WAAW0C,eAAe5C,IAAQiV,EAAA/U,WAAW2C,WAAW7C,GAC1D,KAAM,IAAII,OAAM,0BAElB,MAAMJ,KAvBDjC,QAAQ8F,OAAO,GAAIzD,OAAM,0BA6BpC,QAASqV,GAAc/V,EAAMkW,GAC3B,GAAMC,GAAY,GAAIhB,GAAOnV,GAIvBoW,IACFF,GACoC,KAAtCA,EAAUG,yBAC4B,KAAtCF,EAAUE,uBAKZ,OAHID,KACFD,EAAUE,wBAA0BH,EAAUG,yBAEzCF,EAMF,QAASG,GAAgBtZ,EAAM6B,GAAqB,GAAb0X,GAAapZ,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KAIzD,IAHM0B,YAAkBsW,KACtBtW,EAAS,GAAIsW,GAAOtW,KAEjBA,EAAOyW,eACV,KAAM,IAAI5U,OAAM,wBAElB,IAAM8V,GAAQC,IACR9M,GACJgM,UAAa9W,EAAO+W,SACpBc,aAAgB7X,EAAO8X,YACvBH,MAASA,EACTI,cAAiB,OACjBC,MAASN,EAAOrI,KAAK,KAEvB,QACEhN,IAAKlE,EAAK8Z,MAAL,oBAA+B,EAAAhY,EAAAuC,aAAYsI,IAChD6M,MAAOA,GAWJ,QAASO,GAAgB/Z,EAAM6B,EAAQ2X,GAAqB,GAAdQ,GAAc7Z,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAJ,EAC7D,KAAKqZ,EACH,MAAOnY,SAAQ8F,OAAO,GAAIzD,OAAM,uBAElC,IAAMuW,GAAeC,EAAwBF,EAC7C,OAAqB,QAAjBC,EACK5Y,QAAQ8F,OAAO,GAAIzD,OAAM,oCAE9B8V,IAAUS,EAAaT,MAClBnY,QAAQ8F,OAAO,GAAIzD,OAAM,+CAE3ByW,EAAcna,EAAM6B,EAAQ,MACjCuY,WAAc,qBACdC,KAAQJ,EAAaI,OAMlB,QAASpY,GAAcjC,EAAM6B,EAAQV,GAC1C,MAAOgZ,GAAcna,EAAM6B,EAAQV,GACjCiZ,WAAc,gBACdE,cAAiBnZ,EAAMc,eAMpB,QAASsY,GAAWva,EAAMwa,EAASvC,EAAcwC,GAOtD,QAASC,GAAepX,GACtB,GAAIqX,IAAa,EACf,KAAMrX,EAER,OAAOkX,GAAQI,QAAQra,KAAK,iBAC1Bga,GAAUva,EAAMwa,EAASvC,EAAcwC,KAG3C,QAASI,KACP,MAAOL,GAAQI,QACZra,KAAK,iBAAM6X,GAAepY,EAAMiY,KAChC1X,KAAK,SAACsB,GAAW,GAAAiZ,GACKxB,EAAetZ,EAAM6B,EAAQoW,EAAasB,QAAxDrV,EADS4W,EACT5W,IAAKsV,EADIsB,EACJtB,KACZ,OAAOgB,GAAQO,KAAKC,GAAWnZ,SAAQqC,MAAKsV,YApBmD,GAAjCyB,GAAiC9a,UAAAC,OAAA,GAAAC,SAAAF,UAAA,IAAAA,UAAA,EACrG,IAAI8a,EACF,MAAOT,GAAQI,QAAQra,KAAK,iBAAMga,GAAUva,EAAMwa,EAASvC,EAAcwC,GAAc,IAGzF,IAAIE,GAAW,CAmBf,OAAOtZ,SAAQC,KACbkZ,EAAQU,KAAKC,GACbX,EAAQU,KAAKF,KACZza,KAAK,SAAAiB,GAAgC,GAAAC,GAAAC,EAAAF,EAAA,GAA9BV,EAA8BW,EAAA,GAAjB2Z,EAAiB3Z,EAAA,EAItC,IAAIX,EAAa,CACf,GAAIoY,UAAW/X,QACf,KACE+X,EAAY,GAAIf,GAAOrX,EAAYe,QACnCV,EAAQ,GAAIka,GAAYva,EAAYK,OACpC,MAAOmC,GAEP,MAAOoX,GAAcpX,GAEvB,MAAO2V,GAAUjZ,EAAMkZ,GACpB3Y,KAAK,SAACsB,GAAD,OAAcA,SAAQV,WAC3B6K,MAAM,SAAC1I,GAQN,GAAIiV,EAAA/U,WAAW0C,eAAe5C,IAAQiV,EAAA/U,WAAW2C,WAAW7C,GAC1D,KAAM,IAAII,OAAM,0BAElB,QAAS7B,OAAQqX,EAAW/X,WAOlC,GAAIma,SAIFA,GAHGF,EAGY/Z,QAAQoK,QAAQ2P,GAFhBP,GAKjB,IAAIhZ,UAAQ2X,SAAOrY,QACnB,OAAOma,GACJ/a,KAAK,SAACyC,GAGL,MAFAnB,GAASmB,EAAKnB,OACd2X,EAAQxW,EAAKwW,MACNnY,QAAQoK,QAAQgP,EAAa5Y,EAAQmB,EAAKkB,QAElD3D,KAAK,SAACyZ,GAAD,MAAaD,GAAe/Z,EAAM6B,EAAQ2X,EAAOQ,KACtDzZ,KAAK,SAACgb,GAAQpa,EAAQoa,IACtBhb,KAAK,iBAAMia,GAAQgB,OAAOR,KAC1Bza,KAAK,kBAAQsB,SAAQV,aAEzBZ,KACC,SAACkb,GAAD,MAAWjB,GAAQO,KAAKI,EAAUM,IAClC,SAACnY,GACC,GAAIiV,EAAA/U,WAAW0C,eAAe5C,GAC5B,MAAOoX,GAAcpX,EAErB,MAAMA,KAOd,QAAS6W,GAAena,EAAM6B,EAAQV,EAAOwL,GAI3C,GAHM9K,YAAkBsW,KACtBtW,EAAS,GAAIsW,GAAOtW,KAEjBA,EAAOyW,eACV,MAAOjX,SAAQ8F,OAAO,GAAIzD,OAAM,yBAElC,IAAMpB,IAAO,EAAAR,EAAAuC,aAAYvG,OAAO4d,UAAW/O,GACzCgM,UAAa9W,EAAO+W,SACpBC,cAAiBhX,EAAOiX,eAE1B,QAAO,EAAAP,EAAAnW,eAAcpC,EAAM,OAAQ,qBAAsBsC,GACvD7B,YAAwB,OAAVU,EACdS,WAAW,EACXjB,uBAAyBkB,SAAQV,SACjCD,SAAWya,eAAgB,uCAE1Bpb,KAAK,SAACyC,GAEL,MADAA,GAAKf,aAAee,EAAKf,cAAgB0K,EAAM2N,cACxC,GAAIe,GAAYrY,KAM7B,QAASkX,KAAuC,GAAdF,GAAc7Z,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAJ,EAC1B,MAAZ6Z,GAAoC,mBAAXlW,UAC3BkW,EAAUlW,OAAOC,SAAS6X,KAE5B,IAAM1O,IAAU,EAAApL,EAAAkL,aAAYgN,EAC5B,OAAK9M,GAAQlP,eAAe,UAI1Bwb,MAAOtM,EAAA,MACPmN,KAAMnN,EAAA,aAJC,KAWX,QAASuM,KACP,GAAIoC,SACJ,IAAsB,mBAAX/X,SACkB,mBAAlBA,QAAOgE,QAC2B,kBAAlChE,QAAOgE,OAAOgU,gBACvBD,EAAS,GAAIE,YAAWC,GACxBlY,OAAOgE,OAAOgU,gBAAgBD,OAE9B,KACEA,EAASze,GAAQ,cAAAmH,GAAA,GAAAb,OAAA,oCAAAa,GAAA8V,KAAA,mBAAA9V,MAAU0X,YAAYD,GACvC,MAAOzX,IAEX,IAAKsX,EAAQ,CACXA,EAAS,GAAIrW,OAAMwW,EACnB,KAAK,GAAIne,GAAI,EAAGA,EAAIge,EAAOzb,OAAQvC,IACjCge,EAAOhe,GAAK6L,KAAKwS,MAAuB,IAAhBxS,KAAK2C,UAGjC,MAAO8P,MAAKC,OAAOC,aAAa9d,MAAM,KAAMsd,IACzC1X,QAAQ,MAAO,IACfA,QAAQ,MAAO,KACfA,QAAQ,MAAO,KTo0CnBrG,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,EAAQwf,SAAWxf,EAAQue,YAAcve,EAAQqb,OAASrb,EAAQke,SAAWle,EAAQqe,SAAW9a,MAEhG,IAAIqB,GAAiB,WAAc,QAASiD,GAAcC,EAAK/G,GAAK,GAAIgH,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAK3E,MAAW,KAAM,IAAK,GAAiC4E,GAA7BC,EAAKN,EAAIO,OAAOC,cAAmBN,GAAMG,EAAKC,EAAGG,QAAQC,QAAoBT,EAAKU,KAAKN,EAAGxF,QAAY5B,GAAKgH,EAAKzE,SAAWvC,GAA3DiH,GAAK,IAAoE,MAAOxB,GAAOyB,GAAK,EAAMC,EAAK1B,EAAO,QAAU,KAAWwB,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAK/G,GAAK,GAAI2H,MAAMC,QAAQb,GAAQ,MAAOA,EAAY,IAAIO,OAAOC,WAAYtH,QAAO8G,GAAQ,MAAOD,GAAcC,EAAK/G,EAAa,MAAM,IAAImB,WAAU,4DAEllBud,EAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI7e,GAAI,EAAGA,EAAI6e,EAAMtc,OAAQvC,IAAK,CAAE,GAAI8e,GAAaD,EAAM7e,EAAI8e,GAAWjd,WAAaid,EAAWjd,aAAc,EAAOid,EAAW/c,cAAe,EAAU,SAAW+c,KAAYA,EAAWhd,UAAW,GAAM7B,OAAO4G,eAAe+X,EAAQE,EAAW9T,IAAK8T,IAAiB,MAAO,UAAU5d,EAAa6d,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBzd,EAAYhB,UAAW6e,GAAiBC,GAAaL,EAAiBzd,EAAa8d,GAAqB9d,KAGhiBjC,GStoDe+E,STuoDf/E,ES7nDesb,iBT8nDftb,ESnnDe2b,eTonDf3b,ESpmDekc,mBTqmDflc,ESxlDemc,YTylDfnc,EStiDewc,iBTuiDfxc,ES3gDeid,iBT4gDfjd,ESz/CemF,eT0/CfnF,ESj/Ceyd,WA5PhB,IAAAzY,GAAA1E,EAAA,GACAmb,EAAAnb,EAAA,GAEM4e,EAAY,GAELb,aAAW,QACXH,aAAW,QAEX7C,ETkvDCrb,ESlvDDqb,OTkvDkB,WSjvD7B,QAAAA,GAAa/H,GAoBX,GApBiBvR,EAAA3B,KAAAib,GACjBjb,KAAK0b,SAAWxI,EAAKwI,UAAYxI,EAAKuI,WAAa,GACnDzb,KAAK4b,aAAe1I,EAAK0I,cAAgB1I,EAAKyI,eAAiB,GAC/D3b,KAAKmc,wBAA0BjJ,EAAKiJ,yBAA2BjJ,EAAK0M,2BAA6B,GAE7F1M,EAAK2M,cACP7f,KAAKyc,YAAcvJ,EAAK2M,cAAc,IAAM,GAE5C7f,KAAKyc,YAAcvJ,EAAKuJ,aAAe,GAGzCzc,KAAK8f,WAAa5M,EAAK4M,YAAc5M,EAAK6M,aAAe,GACzD/f,KAAKggB,gBAAkB9M,EAAK8M,iBAAmB9M,EAAK+M,kBAAoB,GACxEjgB,KAAKkgB,WAAahN,EAAKgN,YAAchN,EAAKiN,aAAe,GACzDngB,KAAKogB,WAAalN,EAAKkN,YAAclN,EAAKmN,aAAe,GACzDrgB,KAAKsgB,UAAYpN,EAAKoN,WAAapN,EAAKqN,YAAc,GAEtDvgB,KAAKwgB,QAAUtN,EAAKsN,SAAWtN,EAAKuN,UAAY,GAChDzgB,KAAK0gB,UAAYxN,EAAKwN,WAAaxN,EAAKyN,YAAc,IAEjD3gB,KAAKmc,wBAAyB,CACjC,GAAyB,KAArBnc,KAAKyc,YACP,KAAM,IAAIjW,OAAM,4BAElB,IAAwB,KAApBxG,KAAK8f,WACP,KAAM,IAAItZ,OAAM,2BAElB,IAAwB,KAApBxG,KAAKkgB,WACP,KAAM,IAAI1Z,OAAM,6BTmxDrB,MA1BA6Y,GAAapE,IACXtP,IAAK,eACLpJ,MAAO,WSrvDR,MAAyB,KAAlBvC,KAAK0b,YTyvDX/P,IAAK,iBACLpJ,MAAO,WStvDR,OACEsd,eAAgB7f,KAAKyc,aACrBsD,YAAa/f,KAAK8f,WAClBG,iBAAkBjgB,KAAKggB,gBACvBG,YAAangB,KAAKkgB,WAClBG,YAAargB,KAAKogB,WAClBG,WAAYvgB,KAAKsgB,UACjBG,SAAUzgB,KAAKwgB,QACfG,WAAY3gB,KAAK0gB,cT2vDlB/U,IAAK,eACLpJ,MAAO,WSvvDR,MAAO,UAAYvC,KAAKmc,4BT4vDlBlB,KSxvDGkD,ET2vDMve,ES3vDNue,YT2vD4B,WS1vDvC,QAAAA,GAAajL,GAAMvR,EAAA3B,KAAAme,GACjBne,KAAK4gB,UAAY1N,EAAK0N,WAAa1N,EAAK2N,WACxC7gB,KAAK8gB,YAAc5N,EAAK4N,aAAe5N,EAAK6N,aAC5C/gB,KAAK+E,aAAemO,EAAKnO,cAAgBmO,EAAKkK,cAC9Cpd,KAAK2c,MAAQzJ,EAAKyJ,MT4wDnB,MAZA0C,GAAalB,IACXxS,IAAK,eACLpJ,MAAO,WS9vDR,MAAO,UAAYvC,KAAK8gB,eTkwDvBnV,IAAK,cACLpJ,MAAO,WS/vDR,cAAevC,KAAK8gB,YAApB,QTowDM3C,IAGMve,GSnwDHwf,STmwDsB,WSlwDjC,QAAAA,GAAalM,GAAMvR,EAAA3B,KAAAof,GACjBpf,KAAKiE,MAAQiP,EAAKjP,OAAS,GToxD5B,MAZAob,GAAaD,IACXzT,IAAK,eACLpJ,MAAO,WStwDR,MAAO,UAAYvC,KAAKiE,ST0wDvB0H,IAAK,cACLpJ,MAAO,WSvwDR,cAAevC,KAAKiE,MAApB,QT4wDMmb,MA8UJ,SAASvf,EAAQD,IUtrEvB,SAAAohB,GAAA,YA+CA,SAAAlX,KACAkM,GAAA,CAGA,KAFA,GAAArV,GAAAsgB,EACAzX,EAAA0M,EAAAhT,OACAsG,GAAA,CAIA,IAHAyX,EAAA/K,EACAA,KACAvV,GAAA,IACAA,EAAA6I,GACAyX,EAAAtgB,IAEA6I,GAAA0M,EAAAhT,OAEA8S,GAAA,EAIA,QAAAkL,GAAAC,GACA,IAAAjL,EAAA7N,KAAA8Y,IAAAnL,GACAoL,IAjEA,GAEAA,GAFAC,EAAAL,EAAAM,kBAAAN,EAAAO,sBAKA,IAAAF,EAAA,CACA,GAAAhY,GAAA,EACAmY,EAAA,GAAAH,GAAAvX,GACAqD,EAAA6T,EAAAS,SAAAC,eAAA,GACAF,GAAAG,QAAAxU,GACAyU,eAAA,IAEAR,EAAA,WACAjU,EAAArH,KAAAuD,MAAA,OAEG,IAAA2X,EAAAa,cAAA,mBAAAb,GAAAc,eAOHV,EADG,YAAAJ,IAAA,sBAAAA,GAAAS,SAAAM,cAAA,UACH,WAIA,GAAAC,GAAAhB,EAAAS,SAAAM,cAAA,SACAC,GAAAC,mBAAA,WACAnY,IAEAkY,EAAAC,mBAAA,KACAD,EAAAE,WAAAC,YAAAH,GACAA,EAAA,MAEAhB,EAAAS,SAAAW,gBAAAC,YAAAL,IAGA,WACAxT,WAAA1E,EAAA,QAvBG,CACH,GAAAwY,GAAA,GAAAtB,GAAAc,cACAQ,GAAAC,MAAAC,UAAA1Y,EACAsX,EAAA,WACAkB,EAAAG,MAAAC,YAAA,IAwBA,GAAA1M,GACAE,IAkBArW,GAAAD,QAAAshB,IV+rE8B3gB,KAAKX,EAAU,WAAa,MAAOI,WAI3D,SAASH,EAAQD,GWlwEvB,kBAAAgB,QAAAyB,OAEAxC,EAAAD,QAAA,SAAA+iB,EAAAC,GACAD,EAAAE,OAAAD,EACAD,EAAA9hB,UAAAD,OAAAyB,OAAAugB,EAAA/hB,WACAyB,aACAC,MAAAogB,EACAngB,YAAA,EACAC,UAAA,EACAC,cAAA,MAMA7C,EAAAD,QAAA,SAAA+iB,EAAAC,GACAD,EAAAE,OAAAD,CACA,IAAAE,GAAA,YACAA,GAAAjiB,UAAA+hB,EAAA/hB,UACA8hB,EAAA9hB,UAAA,GAAAiiB,GACAH,EAAA9hB,UAAAyB,YAAAqgB,IX2wEM,SAAS9iB,EAAQD,EAASM,IY/xEhC,SAAAgJ,GAAA,YAEAtJ,GAAAuE,QAAAjE,EAAA,IAEAN,EAAA0K,SAAApK,EAAA,IACAN,EAAA4K,OAAAtK,EAAA,GACA,IAAA6iB,GAAA7iB,EAAA,GAGAN,GAAA+K,iBAAA,SAAAZ,EAAAG,GAYA,MAXAA,IACAH,EAAA1G,KAAA,SAAAQ,GACAqF,EAAAY,SAAA,WACAI,EAAA,KAAArG,MAEK,SAAA6E,GACLQ,EAAAY,SAAA,WACAI,EAAAxB,OAIAqB,GAIAnK,EAAA6K,YAAA,SAAArB,GACA,MAAA2Z,GAAA,SAAA/hB,GACA,GAAA0J,GAAA1J,EAAA6I,MACAE,EAAAX,EAAA/H,MAAArB,KAAAgB,EAIA,OAHA,kBAAA0J,IACA9K,EAAA+K,iBAAAZ,EAAAW,GAEAX,KAMAnK,EAAAojB,IAAA,SAAAjZ,EAAAW,GACA,MAAAX,GAAA1G,KAAA,SAAAQ,GACA,GAAAof,GAAAvY,GACA,yBAAAuY,GAAA5f,KACA4f,EAAA5f,KAAA,WACA,MAAAQ,KAGAA,GACG,SAAA6E,GACH,GAAAua,GAAAvY,GACA,sBAAAuY,GAAA5f,KACA,MAAA4f,GAAA5f,KAAA,WACA,KAAAqF,IAGA,MAAAA,MAIA9I,EAAAsjB,cAAA,SAAAhN,EAAAiN,GACA,kBACA,GAAAniB,GAAAiC,UACAmgB,EAAApjB,IACA,OAAAkW,GAAAmN,IAAA,WACA,MAAAF,GAAA9hB,MAAA+hB,EAAApiB,OAKApB,EAAAyL,QAAA,SAAAiY,GAEA,OADAzf,MACAlD,EAAA,EAAA6I,EAAA8Z,EAAApgB,OAAoCvC,EAAA6I,EAAS7I,IAC7CkD,IAAAvC,OAAAgiB,EAAA3iB,GAEA,OAAAkD,IAKAjE,EAAA4N,KAAA,SAAA9F,GAGA,OAFAgG,MAEA/M,EAAA,EAAA6I,EAAA9B,EAAAxE,OAAmCvC,EAAA6I,EAAS7I,IAC5C+M,EAAA,IAAAhG,EAAA/G,KAAA,CAGA,IAAA8M,GAAA7M,OAAA6M,KAAAC,GACA6V,EAAA,GAAAjb,OAAAmF,EAAAvK,OAEA,KAAAvC,EAAA,EAAA6I,EAAAiE,EAAAvK,OAAgCvC,EAAA6I,EAAS7I,IACzC4iB,EAAA5iB,GAAA8M,EAAA9M,GAAAwL,UAAA,EAEA,OAAAoX,GAGA,IAAA3Y,GAAA1K,EAAA,IACA2K,EAAA3K,EAAA,GAEAN,GAAAkL,IAAA,SAAAC,GAEA,MAAA7B,GAAA8B,QAGAH,EAAAI,KAAAF,GAFAH,EAAAM,WAAA,OAAAC,OAAAJ,GAAAK,OAAA,UZsyE8B7K,KAAKX,EAASM,EAAoB,KAI1D,SAASL,EAAQD,EAASM,Ga94EhC,YAkBA,SAAAsjB,GAAAxX,EAAAoL,GACA,gBAAA3L,GAEA,OADAgY,MACA9iB,EAAA,EAAA+iB,EAAA1X,EAAA9I,OAAyCvC,EAAA+iB,EAAU/iB,IAAA,CAGnD,OAFA+K,GAAAI,EAAAE,EAAArL,IACA4B,EAAAkJ,EACAkY,EAAA,EAAAC,EAAAlY,EAAAxI,OAAgDygB,EAAAC,EAAUD,IAAA,CAC1D,GAAAhY,GAAAD,EAAAiY,EAEA,IADAphB,IAAAoJ,IACApJ,EACA,MAGAkhB,EAAApb,KAAA9F,GAEA6U,EAAAqM,IAIA,QAAAI,GAAAjX,EAAAwK,GACA,GAAA1L,GAAAI,EAAAc,EACA,iBAAAnB,GAEA,OADAlJ,GAAAkJ,EACA9K,EAAA,EAAA6I,EAAAkC,EAAAxI,OAA6CvC,EAAA6I,EAAS7I,IAAA,CACtD,GAAAgL,GAAAD,EAAA/K,EAEA,IADA4B,IAAAoJ,IACApJ,EACA,OAGA6U,EAAA7U,IAIA,QAAAuhB,GAAAlX,EAAAwK,GACA,gBAAA3L,GACA2L,EAAA3L,EAAAmB,KAIA,QAAAmX,GAAA/X,EAAAoL,GACA,gBAAA3L,GAEA,OADAgY,MACA9iB,EAAA,EAAA6I,EAAAwC,EAAA9I,OAAwCvC,EAAA6I,EAAS7I,IACjD8iB,EAAApb,KAAAoD,EAAAO,EAAArL,IAEAyW,GAAAqM,IAIA,QAAAO,GAAAhY,GACA,OAAArL,GAAA,EAAA6I,EAAAwC,EAAA9I,OAAsCvC,EAAA6I,EAAS7I,IAAA,CAC/C,GAAAiM,GAAAZ,EAAArL,EACA,IAAAiM,EAAA3G,QAAA,UACA,SAGA,SAGA,QAAAge,GAAAjY,EAAAoL,GACA,GAAA8M,GAAAF,EAAAhY,GACAmY,EAAA,IAAAnY,EAAA9I,MAIA,OAAAghB,GACAC,EACAL,EAAA9X,EAAA,GAAAoL,GAEA2M,EAAA/X,EAAAoL,GAGA+M,EACAN,EAAA7X,EAAA,GAAAoL,GAEAoM,EAAAxX,EAAAoL,GAKA,QAAAgN,GAAAC,EAAAjN,GAGA,GAAApL,GAAApL,OAAA6M,KAAA4W,EAAArY,OAEA,OAAAiY,GAAAjY,EAAAoL,GAIA,QAAAkN,KACA,SAAA9d,OAAA,wBAGA,QAAA+d,GAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAG,MAAAF,EAIA,KAAAC,EAAAhX,MAAAgX,EAAAhX,IAAA1B,OACA,SAAAxF,OAAA,QAAAge,EAAAI,IAAA,cAAAH,EACA,6EArHA,GAAAI,GAAA3kB,EAAA,GACA4kB,EAAA5kB,EAAA,IACA4L,EAAA+Y,EAAA/Y,WAwHAiZ,EAAAD,GACAhc,KAAA,UACAsb,SACAE,UACAC,iBAGA1kB,GAAAD,QAAAmlB,Gbo5EM,SAASllB,EAAQD,GcvhFvB,YAIA,SAAAolB,GAAA5b,GACA,kBACA,GAAAI,GAAAvG,UAAAC,MACA,IAAAsG,EAAA,CAGA,IAFA,GAAAxI,MACAL,GAAA,IACAA,EAAA6I,GACAxI,EAAAL,GAAAsC,UAAAtC,EAEA,OAAAyI,GAAA7I,KAAAP,KAAAgB,GAEA,MAAAoI,GAAA7I,KAAAP,UAbAH,EAAAD,QAAAolB,Gd6iFM,SAASnlB,EAAQD,GAEtB,YejjFD,SAASqlB,GAAUxZ,GACjB,MAAOA,GAAIyZ,KAAO,IAAMzZ,EAAIpL,GAG9B,QAAS8kB,GAAWC,EAAWC,GAC7B,MAAOD,GAAUH,EAASI,IAG5B,QAASC,GAAgBC,EAAaH,EAAWI,GAC/C,GAAIC,IACFb,IAAKW,EAAYllB,GACjBqlB,MAAOH,EAAYL,KACnBS,KAAOJ,EAAYK,MAAQL,EAAYK,KAAKC,IAC5CL,MAAO5kB,OAAO4d,UAAW+G,EAAYC,MAAOA,GAC5CM,WAAYP,EAAYO,WACxBC,UAAW,SAACjd,GACV,GAAIkd,GAAOT,EAAYU,cAAcnd,EACrC,IAAa3F,SAAT6iB,GAAoC7iB,SAAd6iB,EAAKlgB,KAC/B,MAAkB,QAAdkgB,EAAKlgB,KAAsB,KAC1BwC,MAAMC,QAAQyd,EAAKlgB,MACjBkgB,EAAKlgB,KAAK4H,IAAI,SAAA2X,GAAA,MAAOF,GAAUC,EAAWC,KADXF,EAAUC,EAAWY,EAAKlgB,OAUpE,OANIyf,GAAYU,gBACdR,EAASQ,cAAgBV,EAAYU,eAGvCb,EAAUH,EAASM,IAAgBE,EAE5BA,EAGT,QAASS,GAAgBza,GAAqB,GAAhB2Z,GAAgBniB,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MAEtCkjB,EAAW1a,EAAI0a,QAMrB,OAJI7d,OAAMC,QAAQ4d,IAChBA,EAAStU,QAAQ,SAACuU,GAAD,MAAOd,GAAec,EAAGhB,EAAW3Z,EAAI+Z,SAGvDld,MAAMC,QAAQkD,EAAI3F,MACb2F,EAAI3F,KAAK4H,IAAI,SAAC0Y,GAAD,MAAOd,GAAec,EAAGhB,EAAW3Z,EAAI+Z,SAErDF,EAAe7Z,EAAI3F,KAAMsf,EAAW3Z,EAAI+Z,OfwgFlD5kB,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAyDT3C,EAAQ8B,Qe9jFMwkB,GfkkFT,SAASrmB,EAAQD,EAASM,GgBjnFhC,YAIA,SAAAmmB,MAUA,QAAAliB,GAAAmiB,GACA,qBAAAA,GACA,SAAAxkB,WAAA,8BAEA9B,MAAAsc,MAAAiK,EACAvmB,KAAAkW,SACAlW,KAAAwmB,QAAA,OACAF,IAAAD,GACAI,EAAAzmB,KAAAsmB,GAsBA,QAAAI,GAAA3c,EAAA4c,EAAAC,GACA5mB,KAAA+J,UACA,kBAAA4c,KACA3mB,KAAA2mB,cACA3mB,KAAA6mB,cAAA7mB,KAAA8mB,oBAEA,kBAAAF,KACA5mB,KAAA4mB,aACA5mB,KAAA+mB,aAAA/mB,KAAAgnB,mBAgBA,QAAAC,GAAAld,EAAAL,EAAAnH,GACA2e,EAAA,WACA,GAAAgG,EACA,KACAA,EAAAxd,EAAAnH,GACK,MAAA8E,GACL,MAAA8f,GAAAld,OAAAF,EAAA1C,GAEA6f,IAAAnd,EACAod,EAAAld,OAAAF,EAAA,GAAAjI,WAAA,uCAEAqlB,EAAA5Y,QAAAxE,EAAAmd,KAoCA,QAAAE,GAAA5lB,GAEA,GAAA6B,GAAA7B,KAAA6B,IACA,IAAA7B,GAAA,gBAAAA,IAAA,kBAAA6B,GACA,kBACAA,EAAAhC,MAAAG,EAAAyB,YAKA,QAAAwjB,GAAAzkB,EAAAqlB,GAGA,QAAAC,GAAA/kB,GACA8G,IAGAA,GAAA,EACA8d,EAAAld,OAAAjI,EAAAO,IAGA,QAAAglB,GAAAhlB,GACA8G,IAGAA,GAAA,EACA8d,EAAA5Y,QAAAvM,EAAAO,IAGA,QAAAilB,KACAH,EAAAE,EAAAD,GAlBA,GAAAje,IAAA,EAqBAe,EAAAqd,EAAAD,EACA,WAAApd,EAAA3F,QACA6iB,EAAAld,EAAA7H,OAIA,QAAAklB,GAAA/d,EAAAnH,GACA,GAAAmlB,KACA,KACAA,EAAAnlB,MAAAmH,EAAAnH,GACAmlB,EAAAjjB,OAAA,UACG,MAAA4C,GACHqgB,EAAAjjB,OAAA,QACAijB,EAAAnlB,MAAA8E,EAEA,MAAAqgB,GAIA,QAAAnZ,GAAAhM,GACA,MAAAA,aAAAvC,MACAuC,EAEA4kB,EAAA5Y,QAAA,GAAAvO,MAAAqmB,GAAA9jB;CAIA,QAAA0H,GAAAvB,GACA,GAAAqB,GAAA,GAAA/J,MAAAqmB,EACA,OAAAc,GAAAld,OAAAF,EAAArB,GAIA,QAAAtE,GAAAujB,GAqBA,QAAAC,GAAArlB,EAAA5B,GAOA,QAAAknB,GAAAC,GACAC,EAAApnB,GAAAmnB,IACAE,IAAAxe,GAAAH,IACAA,GAAA,EACA8d,EAAA5Y,QAAAxE,EAAAge,IAVA/lB,EAAAuM,QAAAhM,GAAAc,KAAAwkB,EAAA,SAAAxhB,GACAgD,IACAA,GAAA,EACA8d,EAAAld,OAAAF,EAAA1D,MAxBA,GAAArE,GAAAhC,IACA,uBAAAY,OAAAC,UAAA+Y,SAAArZ,KAAAonB,GACA,MAAA3nB,MAAAiK,OAAA,GAAAnI,WAAA,oBAGA,IAAA0H,GAAAme,EAAAzkB,OACAmG,GAAA,CACA,KAAAG,EACA,MAAAxJ,MAAAuO,WAQA,KALA,GAAAwZ,GAAA,GAAAzf,OAAAkB,GACAwe,EAAA,EACArnB,GAAA,EACAoJ,EAAA,GAAA/J,MAAAqmB,KAEA1lB,EAAA6I,GACAoe,EAAAD,EAAAhnB,KAEA,OAAAoJ,GAmBA,QAAAke,GAAAN,GAmBA,QAAArB,GAAA/jB,GACAP,EAAAuM,QAAAhM,GAAAc,KAAA,SAAAkC,GACA8D,IACAA,GAAA,EACA8d,EAAA5Y,QAAAxE,EAAAxE,KAEK,SAAAc,GACLgD,IACAA,GAAA,EACA8d,EAAAld,OAAAF,EAAA1D,MA3BA,GAAArE,GAAAhC,IACA,uBAAAY,OAAAC,UAAA+Y,SAAArZ,KAAAonB,GACA,MAAA3nB,MAAAiK,OAAA,GAAAnI,WAAA,oBAGA,IAAA0H,GAAAme,EAAAzkB,OACAmG,GAAA,CACA,KAAAG,EACA,MAAAxJ,MAAAuO,WAMA,KAHA,GAAA5N,IAAA,EACAoJ,EAAA,GAAA/J,MAAAqmB,KAEA1lB,EAAA6I,GACA8c,EAAAqB,EAAAhnB,GAEA,OAAAoJ,GA7OA,GAAAmX,GAAAhhB,EAAA,GAKAinB,KAEAe,GAAA,YACAC,GAAA,aACA5B,GAAA,UAEA1mB,GAAAD,QAAAuE,EAcAA,EAAAtD,UAAA,eAAA+lB,GACA,MAAA5mB,MAAAqD,KAAA,KAAAujB,IAEAziB,EAAAtD,UAAAwC,KAAA,SAAAsjB,EAAAC,GACA,qBAAAD,IAAA3mB,KAAAsc,QAAA6L,GACA,kBAAAvB,IAAA5mB,KAAAsc,QAAA4L,EACA,MAAAloB,KAEA,IAAA+J,GAAA,GAAA/J,MAAAsC,YAAA+jB,EACA,IAAArmB,KAAAsc,QAAAiK,EAAA,CACA,GAAAD,GAAAtmB,KAAAsc,QAAA6L,EAAAxB,EAAAC,CACAK,GAAAld,EAAAuc,EAAAtmB,KAAAwmB,aAEAxmB,MAAAkW,MAAA7N,KAAA,GAAAqe,GAAA3c,EAAA4c,EAAAC,GAGA,OAAA7c,IAaA2c,EAAA7lB,UAAAgmB,cAAA,SAAAtkB,GACA4kB,EAAA5Y,QAAAvO,KAAA+J,QAAAxH,IAEAmkB,EAAA7lB,UAAAimB,mBAAA,SAAAvkB,GACA0kB,EAAAjnB,KAAA+J,QAAA/J,KAAA2mB,YAAApkB,IAEAmkB,EAAA7lB,UAAAkmB,aAAA,SAAAxkB,GACA4kB,EAAAld,OAAAjK,KAAA+J,QAAAxH,IAEAmkB,EAAA7lB,UAAAmmB,kBAAA,SAAAzkB,GACA0kB,EAAAjnB,KAAA+J,QAAA/J,KAAA4mB,WAAArkB,IAmBA4kB,EAAA5Y,QAAA,SAAAvM,EAAAO,GACA,GAAA6H,GAAAqd,EAAAL,EAAA7kB,EACA,cAAA6H,EAAA3F,OACA,MAAA0iB,GAAAld,OAAAjI,EAAAoI,EAAA7H,MAEA,IAAA8kB,GAAAjd,EAAA7H,KAEA,IAAA8kB,EACAZ,EAAAzkB,EAAAqlB,OACG,CACHrlB,EAAAsa,MAAA6L,EACAnmB,EAAAwkB,QAAAjkB,CAGA,KAFA,GAAA5B,IAAA,EACA6I,EAAAxH,EAAAkU,MAAAhT,SACAvC,EAAA6I,GACAxH,EAAAkU,MAAAvV,GAAAkmB,cAAAtkB,GAGA,MAAAP,IAEAmlB,EAAAld,OAAA,SAAAjI,EAAAqE,GACArE,EAAAsa,MAAA4L,EACAlmB,EAAAwkB,QAAAngB,CAGA,KAFA,GAAA1F,IAAA,EACA6I,EAAAxH,EAAAkU,MAAAhT,SACAvC,EAAA6I,GACAxH,EAAAkU,MAAAvV,GAAAomB,aAAA1gB,EAEA,OAAArE,IAsDAmC,EAAAoK,UAQApK,EAAA8F,SAMA9F,EAAAC,MAuCAD,EAAA8jB,QhBypFM,SAASpoB,EAAQD,GiBp3FvB,YAmBA,SAAAslB,GAAA1jB,GACA,cAAAA,EACA0d,OAAA1d,GAEA,gBAAAA,IAAA,kBAAAA,GACA4mB,EAAAC,EAAA9nB,KAAAiB,KAAA,eACAA,GAGA,QAAA8mB,GAAA9mB,GACA,cAAAA,SAAAoF,OAGA,QAAA2hB,GAAA/mB,GAKA,IAAAA,GAAA,WAAA0jB,EAAA1jB,MAAAgnB,UAAAF,EAAA9mB,GACA,QAGA,KAEA,GAAAA,EAAAc,cACAmmB,EAAAloB,KAAAiB,EAAA,iBACAinB,EAAAloB,KAAAiB,EAAAc,YAAAzB,UAAA,iBACA,SAEG,MAAAwG,GAEH,SAKA,GAAAsE,EACA,KAAAA,IAAAnK,IAEA,MAAA2B,UAAAwI,GAAA8c,EAAAloB,KAAAiB,EAAAmK,GAIA,QAAA+c,GAAAlnB,GACA,mBAAA0jB,EAAA1jB,GAOA,QAAAgJ,KAQA,IAJA,GAAAmO,MACAhY,GAAA,EACA6I,EAAAvG,UAAAC,OACAlC,EAAA,GAAAsH,OAAAkB,KACA7I,EAAA6I,GACAxI,EAAAL,GAAAsC,UAAAtC,EAEA,IAAAgoB,KACAhQ,GAAAtQ,MAAcrH,OAAAoJ,QAAqBue,YAAAhd,IAAA,QAEnC,KADA,GAAAxD,GACAA,EAAAwQ,EAAA9O,OACA+e,EAAAjQ,EAAAxQ,EAAAnH,KAAAmH,EAAAiC,OAEA,OAAAue,GAAAhd,IAGA,QAAAid,GAAAjQ,EAAA3X,EAAAoJ,GACA,GAAApH,GAAA8F,EAAA+f,EAAAC,EAAAC,EAAAxe,EAMAye,EALAzJ,EAAAve,EAAA,OACAL,EAAA,EACAuC,EAAAlC,EAAAkC,OACA+lB,GAAA,EACAC,EAAA,KAuBA,KAnBA,iBAAA3J,KACA0J,EAAA1J,EACAA,EAAAve,EAAA,OAEAL,EAAA,GAIA,gBAAA4e,IAAAmJ,EAAAnJ,KACAA,MAIArc,IAAAvC,IAEA4e,EAAAvf,OACAW,GAGQA,EAAAuC,EAAYvC,IAEpB,UAAAqC,EAAAhC,EAAAL,IAAA,CACAqoB,EAAAzgB,EAAAvF,EAEA,KAAA8F,IAAA9F,GAEA,KAAA8F,IAAAlI,QAAAC,WAAA,CACA,GAAAmoB,IAAAE,EAAAC,KAAArgB,GACA,QAOA,IAJA+f,EAAAtJ,EAAAzW,GACAggB,EAAA9lB,EAAA8F,GAGAyW,IAAAuJ,EACA,QAIAG,IAAAH,IAAAP,EAAAO,KACAC,EAAAxgB,EAAAugB,MACAC,GACAA,GAAA,EACAxe,EAAAse,GAAAtgB,EAAAsgB,SAGAte,EAAAse,GAAAN,EAAAM,QAIAlQ,EAAAtQ,MACArH,MAAAioB,EAAA1e,EAAAue,GACA1e,QACAue,UAAApJ,EACA5T,IAAA7C,MAKW3F,SAAA2lB,IACXvgB,EAAAvF,IAAA0lB,EAAAI,KACAvJ,EAAAzW,GAAAggB,KAUA1e,EAAAue,UAAAve,EAAAuB,KAAA4T,EAjKA,OANA6I,MAEAgB,GACA,+CACA,kCAEAzoB,EAAA,EAAeA,EAAAyoB,EAAAlmB,OAAkBvC,IAAA,CACjC,GAAA0oB,GAAAD,EAAAzoB,EACAynB,GAAA,WAAAiB,EAAA,KAAAA,EAAAC,cAGA,GAAAjB,GAAAD,EAAAxO,SACA6O,EAAAL,EAAAtnB,eAiDAyH,EAAAD,MAAAC,SAAA,SAAA/G,GACA,gBAAA0jB,EAAA1jB,GA6GA3B,GAAAD,QAAA4K,GjB63FM,SAAS3K,EAAQD,EAASM,GkB7iGhC,YAEA,IAAAqpB,GAAArpB,EAAA,IAAAqpB,MAEA1pB,GAAAD,QAAA,SAAA4pB,EAAA/d,EAAAge,GACA,MAAAF,GAAAloB,MAAAmoB,GAAA/d,EAAAge,MlBojGM,SAAS5pB,EAAQD,EAASM,GmBzjGhC,YAOA,SAAAwpB,GAAAF,GAGA,MAAAA,GAAAG,SACAvW,SAAA,WACAC,OAAA,YACAuW,cAAA,IACGvmB,KAAA,SAAAwmB,GACH,GAAAhmB,IACAimB,UACAtF,KAAA,KACA1b,KAAA,YACAoc,KAAA,UACA1S,KACAxG,SAAoB4Y,IAAA,WA0BpB,OArBA/gB,GAAAimB,QAAA5X,EAAA7G,QAAAxH,EAAAimB,QAAAD,EAAAnX,KAAAgB,OAAA,SAAAb,GACA,gBAAAA,EAAApH,IAAAse,WACKrc,IAAA,SAAAmF,GACL,GAAAmX,GAAA7mB,SAAA0P,EAAApH,IAAAkZ,MAAA/jB,OAAA6M,KAAAoF,EAAApH,IAAAkZ,SAEA,OAAAqF,GAAAtc,IAAA,SAAA+W,GACA,GAAAC,GAAA7R,EAAApH,IAAAkZ,MAAAF,EACA,QACAD,KAAA3R,EAAAxS,GACAyI,KAAA2b,EACAS,KAAA,OACA1S,IAAAJ,EAAAsS,EAAA1hB,QAAAwP,WAMA3O,EAAAimB,QAAAnZ,KAAA,SAAArE,EAAAC,GACA,MAAA2F,GAAAnF,QAAAT,EAAAxD,KAAAyD,EAAAzD,QAEAjF,EAAAomB,WAAApmB,EAAAimB,QAAA5mB,OACAW,IA7CA,GAAAqO,GAAAhS,EAAA,GAEA2kB,EAAA3kB,EAAA,GACAkS,EAAAyS,EAAAzS,eA8CAvS,GAAAD,QAAA8pB,GnBgkGM,SAAS7pB,EAAQD,EAASM,GoBnnGhC,YAEA,IAAAgS,GAAAhS,EAAA,GACAqK,EAAA2H,EAAA3H,KAMA1K,GAAAD,QAAA,SAAAgU,GAsBA,MArBAA,GAAArJ,EAAAqJ,GAEAA,EAAArB,QACAqB,EAAArB,WAGA,sBAAAV,QAAA,SAAAlG,GACAiI,EAAArB,MAAA5G,KACAiI,EAAAjI,GAAAiI,EAAArB,MAAA5G,SACAiI,GAAArB,MAAA5G,MAIAiI,EAAA5H,SACA4H,EAAArB,MAAAvG,OAAA4H,EAAA5H,aACA4H,GAAA5H,QAGA4H,EAAAsR,OACAtR,EAAAsR,KAAA,QAEAtR,IpB0nGM,SAAS/T,EAAQD,EAASM,GqBzpGhC,YAEA,SAAAgqB,GAAAC,GAA+B,MAAAA,IAAA,gBAAAA,IAAA,WAAAA,KAAA,QAAAA,EAE/B,GAAAC,GAAAF,EAAAhqB,EAAA,KAGAmqB,EAAA,kBAAAlmB,iBAAAimB,CAEAvqB,GAAAD,QAAAyqB,GrBgqGM,SAASxqB,EAAQD,EAASM,GsBzqGhC,YAOA,SAAAoqB,GAAAd,EAAAe,EAAAd,GACA,sBAAAc,GACAF,EAAApgB,OAAA,GAAAzD,OAAA,uBAGAgjB,EAAAxjB,IAAAukB,GAAAzb,MAAA,SAAA1I,GAEA,SAAAA,EAAA3B,OACA,KAAA2B,EAEA,YACG/C,KAAA,SAAAoI,GAEH,GAAA+e,GAAA/e,EAAAka,KACA8E,EAAAhB,EAAAhe,EAEA,OAAAgf,IAQAA,EAAA7F,IAAA2F,EACAE,EAAA9E,KAAA6E,EACAE,EAAAlB,EAAAiB,EAAAhB,KAPckB,SAAA,EAAA9E,IAAA2E,KAWd,QAAAE,GAAAlB,EAAA/d,EAAAge,GACA,MAAAD,GAAAoB,IAAAnf,GAAApI,KAAA,SAAAQ,GACA,OACA8mB,SAAA,EACA9E,IAAAhiB,EAAAgiB,MAEG,SAAAzf,GAEH,SAAAA,EAAA3B,OACA,KAAA2B,EAEA,OAAAkkB,GAAAd,EAAA/d,EAAAmZ,IAAA6E,KA9CA,GAAAY,GAAAnqB,EAAA,GAkDAN,GAAA2pB,OAAA,SAAAgB,EAAAd,EAAA/e,GACA,GAAA8e,GAAAxpB,KACA+J,EAAAugB,EAAAd,EAAAe,EAAAd,EACA,yBAAA/e,GACAX,MAEAA,GAAA1G,KAAA,SAAAC,GACAoH,EAAA,KAAApH,IACGoH,IAGH9K,EAAAirB,eAAA,SAAAN,EAAA9e,EAAAf,GACA,GAAA8e,GAAAxpB,IAEA,iBAAAuqB,KACA7f,EAAAe,EACAA,EAAA8e,EACAA,EAAA9e,EAAAmZ,IAGA,IAAA6E,GAAA,SAAAqB,GACA,OAAAA,EAAAnF,MAGAla,GAGA1B,EAAAugB,EAAAd,EAAAe,EAAAd,EACA,yBAAA/e,GACAX,MAEAA,GAAA1G,KAAA,SAAAC,GACAoH,EAAA,KAAApH,IACGoH,IAKH,mBAAA9D,gBAAAmkB,SACAnkB,OAAAmkB,QAAAC,OAAAprB,ItBirGM,SAASC,EAAQD,EAASM,IuBzwGhC,SAAAP,GAGAE,EAAAD,QAAAD,KAeC,SAAAwD,GAED,YAiBA,IAAA8nB,GAAA,SAAA9pB,EAAAC,GACA,MAAAD,GAAAC,EAAA,YAGA8pB,EAAA,SAAAtb,EAAAzO,EAAAC,EAAAiY,EAAA8R,EAAA9M,GAEA,MADAld,GAAA8pB,IAAA9pB,EAAAyO,GAAAqb,EAAA5R,EAAAgF,IACA4M,EAAA9pB,GAAAgqB,EAAAhqB,IAAA,GAAAgqB,EAAA/pB,IAGAgqB,EAAA,SAAAjqB,EAAAC,EAAAX,EAAA4qB,EAAAhS,EAAA8R,EAAA9M,GACA,MAAA6M,GAAA9pB,EAAAX,GAAAW,EAAAiqB,EAAAlqB,EAAAC,EAAAiY,EAAA8R,EAAA9M,IAGAiN,EAAA,SAAAnqB,EAAAC,EAAAX,EAAA4qB,EAAAhS,EAAA8R,EAAA9M,GACA,MAAA6M,GAAA9pB,EAAAiqB,EAAA5qB,GAAA4qB,EAAAlqB,EAAAC,EAAAiY,EAAA8R,EAAA9M,IAGAkN,EAAA,SAAApqB,EAAAC,EAAAX,EAAA4qB,EAAAhS,EAAA8R,EAAA9M,GACA,MAAA6M,GAAA9pB,EAAAX,EAAA4qB,EAAAlqB,EAAAC,EAAAiY,EAAA8R,EAAA9M,IAGAmN,EAAA,SAAArqB,EAAAC,EAAAX,EAAA4qB,EAAAhS,EAAA8R,EAAA9M,GACA,MAAA6M,GAAAzqB,GAAAW,GAAAiqB,GAAAlqB,EAAAC,EAAAiY,EAAA8R,EAAA9M,IAGAoN,EAAA,SAAApS,EAAA/D,GACA,GAAAnU,GAAAkY,EAAA,GACAjY,EAAAiY,EAAA,GACA5Y,EAAA4Y,EAAA,GACAgS,EAAAhS,EAAA,EAEAlY,GAAAiqB,EAAAjqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAD,EAAAC,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,kBACA7U,EAAA2qB,EAAA3qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,iBACAlU,EAAAgqB,EAAAhqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,mBACAnU,EAAAiqB,EAAAjqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAD,EAAAC,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,kBACA7U,EAAA2qB,EAAA3qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,mBACAlU,EAAAgqB,EAAAhqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,iBACAnU,EAAAiqB,EAAAjqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAD,EAAAC,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,mBACA7U,EAAA2qB,EAAA3qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,eACAlU,EAAAgqB,EAAAhqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,oBACAnU,EAAAiqB,EAAAjqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,kBACA+V,EAAAD,EAAAC,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,kBACA7U,EAAA2qB,EAAA3qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,oBACAlU,EAAAgqB,EAAAhqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,mBAEAnU,EAAAmqB,EAAAnqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAC,EAAAD,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,kBACA7U,EAAA6qB,EAAA7qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,kBACAlU,EAAAkqB,EAAAlqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,kBACAnU,EAAAmqB,EAAAnqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAC,EAAAD,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,gBACA7U,EAAA6qB,EAAA7qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,mBACAlU,EAAAkqB,EAAAlqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,kBACAnU,EAAAmqB,EAAAnqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,gBACA+V,EAAAC,EAAAD,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,mBACA7U,EAAA6qB,EAAA7qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,kBACAlU,EAAAkqB,EAAAlqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,kBACAnU,EAAAmqB,EAAAnqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,mBACA+V,EAAAC,EAAAD,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,gBACA7U,EAAA6qB,EAAA7qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,kBACAlU,EAAAkqB,EAAAlqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,oBAEAnU,EAAAoqB,EAAApqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,cACA+V,EAAAE,EAAAF,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,mBACA7U,EAAA8qB,EAAA9qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,mBACAlU,EAAAmqB,EAAAnqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,kBACAnU,EAAAoqB,EAAApqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,kBACA+V,EAAAE,EAAAF,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,kBACA7U,EAAA8qB,EAAA9qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,kBACAlU,EAAAmqB,EAAAnqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,oBACAnU,EAAAoqB,EAAApqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAE,EAAAF,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,kBACA7U,EAAA8qB,EAAA9qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,kBACAlU,EAAAmqB,EAAAnqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,gBACAnU,EAAAoqB,EAAApqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAE,EAAAF,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,mBACA7U,EAAA8qB,EAAA9qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,kBACAlU,EAAAmqB,EAAAnqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,kBAEAnU,EAAAqqB,EAAArqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAG,EAAAH,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,kBACA7U,EAAA+qB,EAAA/qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,oBACAlU,EAAAoqB,EAAApqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,iBACAnU,EAAAqqB,EAAArqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,kBACA+V,EAAAG,EAAAH,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,mBACA7U,EAAA+qB,EAAA/qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,iBACAlU,EAAAoqB,EAAApqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,mBACAnU,EAAAqqB,EAAArqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAG,EAAAH,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,kBACA7U,EAAA+qB,EAAA/qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,mBACAlU,EAAAoqB,EAAApqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,mBACAnU,EAAAqqB,EAAArqB,EAAAC,EAAAX,EAAA4qB,EAAA/V,EAAA,iBACA+V,EAAAG,EAAAH,EAAAlqB,EAAAC,EAAAX,EAAA6U,EAAA,oBACA7U,EAAA+qB,EAAA/qB,EAAA4qB,EAAAlqB,EAAAC,EAAAkU,EAAA,iBACAlU,EAAAoqB,EAAApqB,EAAAX,EAAA4qB,EAAAlqB,EAAAmU,EAAA,kBAEA+D,EAAA,GAAA4R,EAAA9pB,EAAAkY,EAAA,IACAA,EAAA,GAAA4R,EAAA7pB,EAAAiY,EAAA,IACAA,EAAA,GAAA4R,EAAAxqB,EAAA4Y,EAAA,IACAA,EAAA,GAAA4R,EAAAI,EAAAhS,EAAA,KAkBAqS,EAAA,SAAAP,GACA,GACAxqB,GADAgrB,IAGA,KAAAhrB,EAAA,EAAmBA,EAAA,GAAQA,GAAA,EAC3BgrB,EAAAhrB,GAAA,GAAAwqB,EAAAS,WAAAjrB,IAAAwqB,EAAAS,WAAAjrB,EAAA,QAAAwqB,EAAAS,WAAAjrB,EAAA,SAAAwqB,EAAAS,WAAAjrB,EAAA,OAEA,OAAAgrB,IAGAE,EAAA,SAAA1qB,GACA,GACAR,GADAgrB,IAGA,KAAAhrB,EAAA,EAAmBA,EAAA,GAAQA,GAAA,EAC3BgrB,EAAAhrB,GAAA,GAAAQ,EAAAR,IAAAQ,EAAAR,EAAA,QAAAQ,EAAAR,EAAA,SAAAQ,EAAAR,EAAA,OAEA,OAAAgrB,IAGAG,EAAA,SAAAX,GACA,GAEAxqB,GACAuC,EACA6oB,EACAC,EACAC,EACAC,EAPAC,EAAAhB,EAAAjoB,OACAoZ,GAAA,4CAQA,KAAA3b,EAAA,GAAoBA,GAAAwrB,EAAQxrB,GAAA,GAC5B8qB,EAAAnP,EAAAoP,EAAAP,EAAAhf,UAAAxL,EAAA,GAAAA,IAKA,KAHAwqB,IAAAhf,UAAAxL,EAAA,IACAuC,EAAAioB,EAAAjoB,OACA6oB,GAAA,iCACAprB,EAAA,EAAmBA,EAAAuC,EAAYvC,GAAA,EAC/BorB,EAAAprB,GAAA,IAAAwqB,EAAAS,WAAAjrB,OAAA,KAGA,IADAorB,EAAAprB,GAAA,UAAAA,EAAA,MACAA,EAAA,GAEA,IADA8qB,EAAAnP,EAAAyP,GACAprB,EAAA,EAAuBA,EAAA,GAAQA,GAAA,EAC/BorB,EAAAprB,GAAA,CAcA,OATAqrB,GAAA,EAAAG,EACAH,IAAApS,SAAA,IAAAwS,MAAA,kBACAH,EAAAzT,SAAAwT,EAAA,OACAE,EAAA1T,SAAAwT,EAAA,UAEAD,EAAA,IAAAE,EACAF,EAAA,IAAAG,EAEAT,EAAAnP,EAAAyP,GACAzP,GAGA+P,EAAA,SAAAlrB,GACA,GAEAR,GACAuC,EACA6oB,EACAC,EACAC,EACAC,EAPAC,EAAAhrB,EAAA+B,OACAoZ,GAAA,4CAQA,KAAA3b,EAAA,GAAoBA,GAAAwrB,EAAQxrB,GAAA,GAC5B8qB,EAAAnP,EAAAuP,EAAA1qB,EAAAmrB,SAAA3rB,EAAA,GAAAA,IAWA,KAJAQ,EAAAR,EAAA,GAAAwrB,EAAAhrB,EAAAmrB,SAAA3rB,EAAA,OAAAke,YAAA,GAEA3b,EAAA/B,EAAA+B,OACA6oB,GAAA,iCACAprB,EAAA,EAAmBA,EAAAuC,EAAYvC,GAAA,EAC/BorB,EAAAprB,GAAA,IAAAQ,EAAAR,OAAA,KAIA,IADAorB,EAAAprB,GAAA,UAAAA,EAAA,MACAA,EAAA,GAEA,IADA8qB,EAAAnP,EAAAyP,GACAprB,EAAA,EAAuBA,EAAA,GAAQA,GAAA,EAC/BorB,EAAAprB,GAAA,CAeA,OAVAqrB,GAAA,EAAAG,EACAH,IAAApS,SAAA,IAAAwS,MAAA,kBACAH,EAAAzT,SAAAwT,EAAA,OACAE,EAAA1T,SAAAwT,EAAA,UAEAD,EAAA,IAAAE,EACAF,EAAA,IAAAG,EAEAT,EAAAnP,EAAAyP,GAEAzP,GAGAiQ,GAAA,iEAEAC,EAAA,SAAAL,GACA,GACAxI,GADAwH,EAAA,EAEA,KAAAxH,EAAA,EAAmBA,EAAA,EAAOA,GAAA,EAC1BwH,GAAAoB,EAAAJ,GAAA,EAAAxI,EAAA,MAAA4I,EAAAJ,GAAA,EAAAxI,EAAA,GAEA,OAAAwH,IAGAsB,EAAA,SAAApT,GACA,GAAA1Y,EACA,KAAAA,EAAA,EAAmBA,EAAA0Y,EAAAnW,OAAcvC,GAAA,EACjC0Y,EAAA1Y,GAAA6rB,EAAAnT,EAAA1Y,GAEA,OAAA0Y,GAAArF,KAAA,KAGA0Y,EAAA,SAAAvB,GACA,MAAAsB,GAAAX,EAAAX,KAaAwB,EAAA,WAEA3sB,KAAA4sB,QAsSA,OAjSA,qCAAAF,EAAA,WACAzB,EAAA,SAAA5R,EAAAwT,GACA,GAAAC,IAAA,MAAAzT,IAAA,MAAAwT,GACAE,GAAA1T,GAAA,KAAAwT,GAAA,KAAAC,GAAA,GACA,OAAAC,IAAA,SAAAD,IAaAH,EAAA9rB,UAAAmsB,OAAA,SAAAjV,GASA,MAPA,kBAAAoR,KAAApR,KACAA,EAAAkV,SAAAtd,mBAAAoI,KAIA/X,KAAAktB,aAAAnV,GAEA/X,MAUA2sB,EAAA9rB,UAAAqsB,aAAA,SAAAC,GACAntB,KAAAotB,OAAAD,EACAntB,KAAAqtB,SAAAF,EAAAjqB,MAEA,IACAvC,GADAuC,EAAAlD,KAAAotB,MAAAlqB,MAGA,KAAAvC,EAAA,GAAoBA,GAAAuC,EAAavC,GAAA,GACjC8qB,EAAAzrB,KAAAstB,OAAA5B,EAAA1rB,KAAAotB,MAAAjhB,UAAAxL,EAAA,GAAAA,IAKA,OAFAX,MAAAotB,MAAAptB,KAAAotB,MAAAG,OAAA5sB,EAAA,IAEAX,MAYA2sB,EAAA9rB,UAAA2sB,IAAA,SAAAC,GACA,GAEA9sB,GAEA+sB,EAJAC,EAAA3tB,KAAAotB,MACAlqB,EAAAyqB,EAAAzqB,OAEA6oB,GAAA,gCAGA,KAAAprB,EAAA,EAAmBA,EAAAuC,EAAYvC,GAAA,EAC/BorB,EAAAprB,GAAA,IAAAgtB,EAAA/B,WAAAjrB,OAAA,KAQA,OALAX,MAAA4tB,QAAA7B,EAAA7oB,GACAwqB,EAAAD,EAAAztB,KAAAstB,OAAAb,EAAAzsB,KAAAstB,QAEAttB,KAAA4sB,QAEAc,GASAf,EAAA9rB,UAAA+sB,QAAA,SAAA7B,EAAA7oB,GACA,GACA8oB,GACAC,EACAC,EAHAvrB,EAAAuC,CAMA,IADA6oB,EAAAprB,GAAA,UAAAA,EAAA,MACAA,EAAA,GAEA,IADA8qB,EAAAzrB,KAAAstB,OAAAvB,GACAprB,EAAA,EAAuBA,EAAA,GAAQA,GAAA,EAC/BorB,EAAAprB,GAAA,CAMAqrB,GAAA,EAAAhsB,KAAAqtB,QACArB,IAAApS,SAAA,IAAAwS,MAAA,kBACAH,EAAAzT,SAAAwT,EAAA,OACAE,EAAA1T,SAAAwT,EAAA,UAEAD,EAAA,IAAAE,EACAF,EAAA,IAAAG,EACAT,EAAAzrB,KAAAstB,OAAAvB,IAQAY,EAAA9rB,UAAA+rB,MAAA,WAKA,MAJA5sB,MAAAotB,MAAA,GACAptB,KAAAqtB,QAAA,EACArtB,KAAAstB,QAAA,6CAEAttB,MAOA2sB,EAAA9rB,UAAAgtB,QAAA,iBACA7tB,MAAAstB,aACAttB,MAAAotB,YACAptB,MAAAqtB,SAaAV,EAAA1hB,KAAA,SAAA8M,EAAA0V,GAEA,kBAAAtE,KAAApR,KACAA,EAAAkV,SAAAtd,mBAAAoI,IAGA,IAAA9M,GAAA6gB,EAAA/T,EAEA,OAAA0V,GAAAxiB,EAAAwhB,EAAAxhB,IAWA0hB,EAAAmB,WAAA,SAAAC,EAAAN,GACA,GAAAxiB,GAAA6gB,EAAAiC,EAEA,OAAAN,GAAAxiB,EAAAwhB,EAAAxhB,IAQA0hB,EAAAqB,YAAA,WAEAhuB,KAAA4sB,SAYAD,EAAAqB,YAAAntB,UAAAmsB,OAAA,SAAAtlB,GAGA,GAEA/G,GAFAgtB,EAAA3tB,KAAAiuB,mBAAAjuB,KAAAotB,MAAA1lB,GACAxE,EAAAyqB,EAAAzqB,MAKA,KAFAlD,KAAAqtB,SAAA3lB,EAAAwmB,WAEAvtB,EAAA,GAAoBA,GAAAuC,EAAavC,GAAA,GACjC8qB,EAAAzrB,KAAAstB,OAAAzB,EAAA8B,EAAArB,SAAA3rB,EAAA,GAAAA,IAMA,OAFAX,MAAAotB,MAAAzsB,EAAA,GAAAuC,EAAAyqB,EAAArB,SAAA3rB,EAAA,OAAAke,YAAA,GAEA7e,MAYA2sB,EAAAqB,YAAAntB,UAAA2sB,IAAA,SAAAC,GACA,GAGA9sB,GACA+sB,EAJAC,EAAA3tB,KAAAotB,MACAlqB,EAAAyqB,EAAAzqB,OACA6oB,GAAA,gCAIA,KAAAprB,EAAA,EAAmBA,EAAAuC,EAAYvC,GAAA,EAC/BorB,EAAAprB,GAAA,IAAAgtB,EAAAhtB,OAAA,KAQA,OALAX,MAAA4tB,QAAA7B,EAAA7oB,GACAwqB,EAAAD,EAAAztB,KAAAstB,OAAAb,EAAAzsB,KAAAstB,QAEAttB,KAAA4sB,QAEAc,GAGAf,EAAAqB,YAAAntB,UAAA+sB,QAAAjB,EAAA9rB,UAAA+sB,QAOAjB,EAAAqB,YAAAntB,UAAA+rB,MAAA,WAKA,MAJA5sB,MAAAotB,MAAA,GAAAvO,YAAA,GACA7e,KAAAqtB,QAAA,EACArtB,KAAAstB,QAAA,6CAEAttB,MAOA2sB,EAAAqB,YAAAntB,UAAAgtB,QAAAlB,EAAA9rB,UAAAgtB,QAUAlB,EAAAqB,YAAAntB,UAAAotB,mBAAA,SAAAE,EAAAC,GACA,GAAAC,GAAAF,EAAAjrB,OACAkH,EAAA,GAAAyU,YAAAwP,EAAAD,EAAAF,WAKA,OAHA9jB,GAAAkkB,IAAAH,GACA/jB,EAAAkkB,IAAA,GAAAzP,YAAAuP,GAAAC,GAEAjkB,GAWAuiB,EAAAqB,YAAA/iB,KAAA,SAAAvD,EAAA+lB,GACA,GAAAxiB,GAAAohB,EAAA,GAAAxN,YAAAnX,GAEA,OAAA+lB,GAAAxiB,EAAAwhB,EAAAxhB,IAGA0hB,KvBoxGM,SAAS9sB,EAAQD,GAEtB,YAQA,SAAS+B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHlB,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,GAGT,IAAI8c,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI7e,GAAI,EAAGA,EAAI6e,EAAMtc,OAAQvC,IAAK,CAAE,GAAI8e,GAAaD,EAAM7e,EAAI8e,GAAWjd,WAAaid,EAAWjd,aAAc,EAAOid,EAAW/c,cAAe,EAAU,SAAW+c,KAAYA,EAAWhd,UAAW,GAAM7B,OAAO4G,eAAe+X,EAAQE,EAAW9T,IAAK8T,IAAiB,MAAO,UAAU5d,EAAa6d,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBzd,EAAYhB,UAAW6e,GAAiBC,GAAaL,EAAiBzd,EAAa8d,GAAqB9d,KAI7gBjC,GwBr3HP2uB,axBq3H8B,WwBp3HzC,QAAAA,GAAajR,EAASkR,GAAQ7sB,EAAA3B,KAAAuuB,GACvBjR,GAA6B,mBAAX1W,UACrB0W,EAAU1W,OAAO6nB,cAEnBzuB,KAAKsd,QAAUA,EACftd,KAAKwuB,OAASA,GAAU,cxB66HzB,MAnDAnP,GAAakP,IACX5iB,IAAK,OACLpJ,MAAO,SwBz3HJoJ,EAAKpJ,GAAO,GAAAoG,GAAA3I,IAChB,OAAO,IAAImE,SAAQ,SAAAoK,GACjB5F,EAAK2U,QAAQoR,QAAQ/lB,EAAK6lB,OAAS7iB,EAAKjG,KAAKC,UAAUpD,IACvDgM,EAAQhM,QxB+3HToJ,IAAK,OACLpJ,MAAO,SwB53HJoJ,GAAK,GAAAgjB,GAAA3uB,IACT,OAAO,IAAImE,SAAQ,SAAAoK,GACjB,GAAMqgB,GAAOD,EAAKrR,QAAQuR,QAAQF,EAAKH,OAAS7iB,EAC3CijB,GAGHrgB,EAAQ7I,KAAKopB,MAAMF,IAFnBrgB,SxBq4HH5C,IAAK,SACLpJ,MAAO,SwB/3HFoJ,GAAK,GAAAojB,GAAA/uB,IACX,OAAO,IAAImE,SAAQ,SAAAoK,GAAA,MAAWA,GAC5BwgB,EAAKzR,QAAQ0R,WAAWD,EAAKP,OAAS7iB,SxBq4HvCA,IAAK,QACLpJ,MAAO,WwBn4HD,GAAA0sB,GAAAjvB,IACP,OAAO,IAAImE,SAAQ,SAAAoK,GAEjB,IAAK,GADC+O,GAAU2R,EAAK3R,QACZ3c,EAAI,EAAGA,EAAI2c,EAAQpa,OAAQvC,IAAK,CACvC,GAAMgL,GAAM2R,EAAQ3R,IAAIhL,EACS,KAA7BgL,EAAI1F,QAAQgpB,EAAKT,SACnBlR,EAAQ0R,WAAWrjB,GAGvB4C,UxB04HIggB,KAGW3uB,EwBx4HRsvB,cxBw4HgC,WwBv4H3C,QAAAA,KAAevtB,EAAA3B,KAAAkvB,GACblvB,KAAKiL,KAAOrK,OAAOyB,OAAO,MxBs6H3B,MAzBAgd,GAAa6P,IACXvjB,IAAK,OACLpJ,MAAO,SwB54HJoJ,EAAKpJ,GAET,MADAvC,MAAKiL,KAAKU,GAAOpJ,EACV4B,QAAQoK,QAAQhM,MxB+4HtBoJ,IAAK,OACLpJ,MAAO,SwB74HJoJ,GACJ,MAAOxH,SAAQoK,QAAQvO,KAAKiL,KAAKU,OxBg5HhCA,IAAK,SACLpJ,MAAO,SwB94HFoJ,GACN,GAAMwjB,SAAiBnvB,MAAKiL,KAAKU,EACjC,OAAOxH,SAAQoK,QAAQ4gB,MxBi5HtBxjB,IAAK,QACLpJ,MAAO,WwB74HR,MADAvC,MAAKiL,KAAOrK,OAAOyB,OAAO,MACnB8B,QAAQoK,cxBm5HT2gB,MAKJ,SAASrvB,EAAQD,GAEtB,YAUA,SAAS+B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCyBp+H1G,QAASstB,KACd,MAAO,IAAIjrB,SAAQ,SAAUoK,EAAStE,GACpC,GAAsB,mBAAXrD,QACT,MAAOqD,GAAO,GAAIzD,OAAM,wCACnB,KAAKI,OAAOyoB,OACjB,MAAOplB,GAAO,GAAIzD,OAAM,uCACnB,KAAKI,OAAOyoB,OAAO3M,YACxB,MAAOzY,GAAO,GAAIzD,OAAM,+CAE1B,IAAMM,GAASF,OAAOC,SAASC,OACzBwoB,GAAUC,OAAQ,YACpBlZ,EAAU,KACRmZ,EAAW,QAAXA,GAAqBra,GACzB,GAAIlR,SACJ,KACEA,EAAQ,GAAImb,IACVqQ,QAASta,EAAMrP,KAAK2pB,QACpBxrB,MAAOkR,EAAMrP,KAAK7B,QAEpB,MAAOoD,GAEP,WADA4C,GAAO5C,GAGTT,OAAO8oB,oBAAoB,UAAWF,GACtC1Z,aAAaO,GACb9H,GAAU5J,OAAQ,KAAMV,UAE1B2C,QAAO+oB,iBAAiB,UAAWH,GAAU,GAC7C5oB,OAAOyoB,OAAO3M,YAAY4M,EAAQxoB,GAClCuP,EAAU7H,WAAW,WACnBvE,EAAO,GAAIzD,OAAM,6CAChBopB,KzB67HNhvB,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,GAGT,IAAI8c,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI7e,GAAI,EAAGA,EAAI6e,EAAMtc,OAAQvC,IAAK,CAAE,GAAI8e,GAAaD,EAAM7e,EAAI8e,GAAWjd,WAAaid,EAAWjd,aAAc,EAAOid,EAAW/c,cAAe,EAAU,SAAW+c,KAAYA,EAAWhd,UAAW,GAAM7B,OAAO4G,eAAe+X,EAAQE,EAAW9T,IAAK8T,IAAiB,MAAO,UAAU5d,EAAa6d,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBzd,EAAYhB,UAAW6e,GAAiBC,GAAaL,EAAiBzd,EAAa8d,GAAqB9d,KAEhiBjC,GyBl+HewvB,aAFhB,IAAMQ,GAAwB,IAqCjBxQ,EzBy+HGxf,EyBz+HHwf,SzBy+HsB,WyBx+HjC,QAAAA,GAAalM,GAAMvR,EAAA3B,KAAAof,GACjBpf,KAAKyvB,QAAUvc,EAAKuc,SAAW,GAC/BzvB,KAAKiE,MAAQiP,EAAKjP,OAAS,GzBq/H5B,MAPAob,GAAaD,IACXzT,IAAK,eACLpJ,MAAO,WyB5+HR,MAAO,SAAW0c,KAAQjf,KAAKyvB,QAAb,IAAwBzvB,KAAKiE,WzBi/HzCmb,MAKJ,SAASvf,EAAQD,EAASM,GAE/B,Y0B/hIM,SAASmC,GAAQS,EAAM0M,EAASsW,GACrC,MAAOhjB,GAAKuB,OAAOhB,KAAK,SAACgB,GACvBmL,GAAU,EAAAqgB,EAAAnb,kBAAiB5R,EAAMuB,EAAMmL,GACnCnL,IACFyhB,EAAWgK,QAAUtgB,EAEvB,IAAMzM,IAAO,EAAA6B,EAAA2K,YAAWzM,EAAMuB,EAAMmL,EAASsW,EAAWlB,KAClDmL,EAAWjK,EAAWlB,IAAM,MAAQ,MAE1C,cADOkB,GAAWlB,KACX,EAAAvJ,EAAAnW,eAAcpC,EAAMitB,EAAUhtB,EAAM+iB,GAAYziB,KAAK,SAACC,GAC3D,MAAIe,GACK2rB,EAAKltB,EAAM0M,EAASlM,EAAKshB,KAEzBthB,EAAKwC,SAMb,QAASkqB,GAAMltB,EAAM0M,EAASnP,GACnC,MAAOyC,GAAKuB,OAAOhB,KAAK,SAACgB,GAGvB,GAFAmL,GAAU,EAAAqgB,EAAAnb,kBAAiB5R,EAAMuB,EAAMmL,IAElCnP,EACH,MAAO8D,SAAQ8F,OAAO,GAAIzD,OAAM,wBAGlC,IAAMzD,IAAO,EAAA6B,EAAA2K,YAAWzM,EAAMuB,EAAMmL,EAASnP,EAC7C,QAAO,EAAAgb,EAAAnW,eAAcpC,EAAM,MAAOC,GAAMM,KAAK,SAACC,GAC5C,MAAIe,GACKzD,OAAO4d,OAAOlb,GAAOqiB,KAAMsK,IAE3B3sB,MAMR,QAAS4sB,GAAUptB,EAAM0M,EAAS2gB,GACvC,MAAMA,aAAe7nB,OAGF,IAAf6nB,EAAIjtB,OAICiB,QAAQoK,YAGVzL,EAAKuB,OAAOhB,KAAK,SAACgB,GACvB,GAAIA,EACF,MAAOF,SAAQ8F,OAAO,GAAIzD,OAAM,mCAGlC,IAAMzD,IAAO,EAAA6B,EAAA2K,YAAWzM,EAAMuB,EAAMmL,EAAS,aAAcoa,cAAc,GAEzE,QAAO,EAAAvO,EAAAnW,eAAcpC,EAAM,OAAQC,GAAO0K,KAAM0iB,IAC7C9sB,KAAK,SAACC,GACL,GAAM8sB,MADQC,GAAA,EAAAC,GAAA,EAAAC,EAAAptB,MAAA,KAGd,OAAAqtB,GAAAC,EAAkBntB,EAAKoP,KAAvBzK,OAAAC,cAAAmoB,GAAAG,EAAAC,EAAAtoB,QAAAC,MAAAioB,GAAA,EAA6B,IAAlBxd,GAAkB2d,EAAAjuB,MACpBoJ,EAAmBkH,EAAnBlH,IAAKF,EAAcoH,EAAdpH,IAAKpF,EAASwM,EAATxM,KACjB+pB,GAAKzkB,GAAOtF,GAASA,UAAUoF,QALnB,MAAArF,GAAAkqB,GAAA,EAAAC,EAAAnqB,EAAA,aAAAiqB,GAAAI,EAAAC,QAAAD,EAAAC,SAAA,WAAAJ,EAAA,KAAAC,IAQd,MAAOH,KAERthB,MAAM,SAACzI,GACN,GAAqB,MAAjBA,EAAM5B,OAAgB,MAAON,SAAQ8F,OAAO5D,EAIhD,IAAM+pB,MALUO,GAAA,EAAAC,GAAA,EAAAC,EAAA1tB,MAAA,KAOhB,OAAA2tB,GAAAC,EAAiBZ,EAAjBloB,OAAAC,cAAAyoB,GAAAG,EAAAC,EAAA5oB,QAAAC,MAAAuoB,GAAA,EAAsB,IAAXtwB,GAAWywB,EAAAvuB,KACpB6tB,GAAK/vB,IAAOgG,UARE,MAAAD,GAAAwqB,GAAA,EAAAC,EAAAzqB,EAAA,aAAAuqB,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAWhB,MAAOT,OAtCJjsB,QAAQ8F,OAAO,GAAIzD,OAAM,4CA2C7B,QAASwqB,GAASluB,EAAM0M,GAC7B,MAAO1M,GAAKuB,OAAOhB,KAAK,SAACgB,GACvB,GAAIA,EACF,MAAOF,SAAQ8F,OAAO,GAAIzD,OAAM,kCAGlC,IAAMzD,IAAO,EAAA6B,EAAA2K,YAAWzM,EAAMuB,EAAMmL,EAAS,aAAcoa,cAAc,GAEzE,QAAO,EAAAvO,EAAAnW,eAAcpC,EAAM,OAAQC,MAClCM,KAAK,SAACC,GACL,GAAM8sB,MADQa,GAAA,EAAAC,GAAA,EAAAC,EAAAhuB,MAAA,KAGd,OAAAiuB,GAAAC,EAAkB/tB,EAAKoP,KAAvBzK,OAAAC,cAAA+oB,GAAAG,EAAAC,EAAAlpB,QAAAC,MAAA6oB,GAAA,EAA6B,IAAlBpe,GAAkBue,EAAA7uB,MACnBkJ,EAAQoH,EAARpH,GAEHA,GAAImZ,IAAIwH,MAAM,cAAcgE,EAAK/nB,KAAKoD,IAN/B,MAAArF,GAAA8qB,GAAA,EAAAC,EAAA/qB,EAAA,aAAA6qB,GAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,KAAAC,IAQd,MAAOf,KAERthB,MAAM,SAAAzI,GAGL,GAAqB,MAAjBA,EAAM5B,OAAgB,QAC1B,MAAM4B,OAKL,QAASirB,GAAaxuB,EAAM0M,EAASxM,GAC1C,MAAOF,GAAKuB,OAAOhB,KAAK,SAACgB,GACvBmL,GAAU,EAAAqgB,EAAAnb,kBAAiB5R,EAAMuB,EAAMmL,EACvC,IAAMzM,IAAO,EAAA6B,EAAA2K,YAAWzM,EAAMuB,EAAMmL,EAAS,WAAYxM,EACzD,QAAO,EAAAqY,EAAAnW,eAAcpC,EAAM,MAAOC,KAI/B,QAASoI,GAAQrI,EAAM0M,EAAS/D,EAAK8lB,GAC1C,MAAOzuB,GAAKuB,OAAOhB,KAAK,SAACgB,GACvBmL,GAAU,EAAAqgB,EAAAnb,kBAAiB5R,EAAMuB,EAAMmL,EADP,IAEzBoV,GAAanZ,EAAbmZ,IAAKe,EAAQla,EAARka,IAEZ,KAAKf,EACH,MAAOzgB,SAAQ8F,OAAO,GAAIzD,OAAM,wCAGlC,KAAKnC,IAASshB,EACZ,MAAOxhB,SAAQ8F,OAAO,GAAIzD,OAAM,yCAIhC+qB,GADEltB,EACQzD,OAAO4d,QAASoG,OAAO2M,GAEvB3wB,OAAO4d,QAASoG,MAAKe,QAAQ4L,EAGzC,IAAMxuB,IAAO,EAAA6B,EAAA2K,YAAWzM,EAAMuB,EAAMmL,EAASoV,EAC7C,QAAO,EAAAvJ,EAAAnW,eAAcpC,EAAM,MAAOC,EAAMwuB,GAASluB,KAAK,SAACC,GACrD,MAAIe,GACK2rB,EAAKltB,EAAM0M,EAASoV,GAEpBthB,EAAKwC,SAMb,QAAS0rB,GAAkB1uB,EAAM0M,EAASoV,EAAK2M,GAAoB,GAAXE,GAAWxuB,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAH,CACrE,OAAOH,GAAKuB,OAAOhB,KAAK,SAACgB,GAEvB,MADAmL,IAAU,EAAAqgB,EAAAnb,kBAAiB5R,EAAMuB,EAAMmL,GAChCwgB,EAAKltB,EAAM0M,EAASoV,GACxBvhB,KAAK,SAACoI,GACL,MAAON,GAAOrI,EAAM0M,EAAS/D,EAAK7K,OAAO4d,QAASoG,OAAOnZ,EAAK8lB,MAE/DziB,MAAM,SAAC1I,GACN,GAAIqrB,EAAQ,EACV,MAAOD,GAAiB1uB,EAAM0M,EAASoV,EAAK2M,EAASE,EAAQ,EAE7D,MAAMrrB,OAMT,QAASsrB,GAAS5uB,EAAM0M,EAAS/D,GACtC,MAAO3I,GAAKuB,OAAOhB,KAAK,SAACgB,GACvBmL,GAAU,EAAAqgB,EAAAnb,kBAAiB5R,EAAMuB,EAAMmL,EADP,IAEzBoV,GAAanZ,EAAbmZ,IAAKe,EAAQla,EAARka,IAEZ,KAAKf,EACH,MAAOzgB,SAAQ8F,OAAO,GAAIzD,OAAM,wCAGlC,KAAKnC,IAASshB,EACZ,MAAOxhB,SAAQ8F,OAAO,GAAIzD,OAAM,yCAGlC,IAAMiJ,GAAQpL,EAAO,MAASwhB,IAAKF,GAC7B5iB,GAAO,EAAA6B,EAAA2K,YAAWzM,EAAMuB,EAAMmL,EAASoV,EAAKnV,EAClD,QAAO,EAAA4L,EAAAnW,eAAcpC,EAAM,SAAUC,GAAMM,KAAK,SAACC,GAC/C,MAAIe,IACMhE,GAAIukB,EAAKiB,IAAKoK,GAEf3sB,M1Bw2Hd1C,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,E0BpiIeyC,S1BqiIfzC,E0BlhIeowB,O1BmhIfpwB,E0BhgIeswB,W1BigIftwB,E0Bp9HeoxB,U1Bq9HfpxB,E0Bz7He0xB,c1B07Hf1xB,E0Bl7HeuL,S1Bm7HfvL,E0Br5He4xB,mB1Bs5Hf5xB,E0Br4He8xB,SA5KhB,IAAA9sB,GAAA1E,EAAA,GACA2vB,EAAA3vB,EAAA,GACAmb,EAAAnb,EAAA,GAEM+vB,EAAQ,mB1B0zIR,SAASpwB,EAAQD,EAASM,GAE/B,YA0CA,SAASqB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,G2B/1IxF,QAASmwB,GAAkB7oB,GACzB,MAAOA,IAAQA,EAAK8oB,OAGtB,QAASC,GAAqB/oB,GAC5B,MAAI,WAAWqgB,KAAKrgB,GAAc,aACzB,WAAWqgB,KAAKrgB,GAAc,aAC3B,KAGd,QAASgpB,GAAUhvB,EAAMgD,EAAMX,EAAQpC,EAAMC,GAC3C,IAAK8C,EACH,KAAM,IAAIU,OAAM,wBAIdV,GAAK6Y,QAAU7Y,EAAK6Y,iBAAkBqP,eACxCloB,EAAOA,EAAK6Y,OAGd,IAAMoT,GAAmC,mBAAhB/D,cAA+BloB,YAAgBkoB,aAClEgE,EAA0B,mBAATC,OAAwBnsB,YAAgBmsB,MACzDC,EAA0B,mBAATC,OAAwBrsB,YAAgBqsB,MACzDC,EAAYtsB,EAAKusB,YAAa,GAA6B,kBAAdvsB,GAAKwsB,KAClDC,EAA4B,gBAATzsB,EAEzB,MAAKisB,GAAaC,GAAWE,GAAWE,GAAaG,GACnD,KAAM,IAAI/rB,OAAM,oBAjBkC,IAAAlC,GAoBKtB,MAApD+C,EApB+CzB,EAoB/CyB,YAAaysB,EApBkCluB,EAoBlCkuB,SAAUC,EApBwBnuB,EAoBxBmuB,iBAAkBC,EApBMpuB,EAoBNouB,OAsB9C,OArBK3sB,KACCgsB,EACFhsB,EAAc4sB,EACLX,GACTjsB,EAAcD,EAAKof,MAAQ2M,EAAoB/rB,EAAKgD,KAAKwgB,gBAAkBqJ,EACtEF,IACHA,EAAmB3sB,EAAK2sB,mBAEjBP,EACTnsB,EAAcD,EAAKof,MAAQyN,EAClBP,EACTrsB,EAAc4sB,EACW,gBAAT7sB,KAChBC,EAAc,eAId0sB,GAAgD,gBAArBA,KAC7BA,EAAmB,GAAIlY,MAAKkY,KAGvB,EAAApX,EAAAxY,WAAUC,EAAMC,GACrBoC,OAAQA,EACRnB,SACEya,eAAgB1Y,EAChB6sB,cAAeJ,GAAY,GAC3BjY,KAAQkY,EAAmBA,EAAiBI,cAAgB,GAC5DC,WAAYJ,GAAW,IAEzBttB,KAAMU,IAELzC,KAAK,SAACQ,GACL,GAAMqC,GAAOrC,EAAIqC,MACjB,OAAKrC,GAAIgC,GAGAK,EAAK7C,KAALoD,EAAA/E,SAFAwE,EAAK7C,KAAK,SAAA+C,GAAS,KAAMA,OAOjC,QAAS/D,GAAQS,EAAMgD,EAAM9C,GAAS,GAAAuB,GACXvB,MAA3B8F,EADsCvE,EACtCuE,KAAMiqB,EADgCxuB,EAChCwuB,MAAOC,EADyBzuB,EACzByuB,UASlB,IANKlqB,GAA6B,gBAAdhD,GAAKgD,OACvBA,EAAOhD,EAAKgD,MAGdA,EAAO6oB,EAAiB7oB,GAEJ,gBAATA,IAA8B,KAATA,EAC9B,KAAM,IAAItC,OAAM,wBAGCrD,UAAf6vB,IACFA,GAAa,EAGf,IAAMjwB,aAAiB4M,mBAAmBojB,GAAS,IAC7CtjB,WAAiBE,mBAAmB7G,GAApC,yBAAkEkqB,CACxE,OAAOlB,GAAShvB,EAAMgD,EAAM,OAArB,GAAgC/C,EAAO0M,EAASzM,GAGlD,QAASiwB,GAAiBnwB,EAAME,GAAS,GAAAkwB,GACRlwB,MAAjC8F,EADyCoqB,EACzCpqB,KAAMiqB,EADmCG,EACnCH,MAAON,EAD4BS,EAC5BT,gBAIlB,IAFA3pB,EAAO6oB,EAAiB7oB,GAEJ,gBAATA,IAA8B,KAATA,EAC9B,KAAM,IAAItC,OAAM,wBAGdisB,IAAgD,gBAArBA,KAC7BA,EAAmB,GAAIlY,MAAKkY,GAG9B,IAAM1vB,aAAiB4M,mBAAmBojB,GAAS,IAC7CtjB,WAAiBE,mBAAmB7G,GAApC,iBACN,QAAO,EAAAuS,EAAAnW,eAAcpC,EAAM,OAApB,GAA+BC,EAAO0M,EAAStM,QACpDa,SACEuW,KAAQkY,EAAmBA,EAAiBI,cAAgB,MAKlE,QAASM,GAAsBrwB,EAAMgG,EAAMsqB,GACzC,GAAIA,IAAoBA,EAAgBtN,WAAY,KAAM,IAAItf,OAAM,6BAEpEsC,GAAO6oB,EAAiB7oB,EAExB,IAAM/F,IAAUqwB,EAAgBxO,MAAQyO,EAAc,GAAKD,EAAgBtN,WAAW/iB,MAAhF,IAAwF+F,CAE9F,OAAOhG,GAAKkS,MAAMse,WAAWvwB,GAAQ,KAClC+L,MAAM,SAAAzI,GACL,GAAMktB,GAAc7tB,KAAKopB,MAAMzoB,EAAM0C,SAC/ByqB,EAASD,EAAYC,MAC3B,IAAIA,GAAUA,EAAOtwB,QAA+B,QAArBswB,EAAO,GAAG/uB,OACvC,MAAO3B,GAAKkS,MAAMie,iBAChBnqB,KAAMA,EACNiqB,MAAOK,GAAmBA,EAAgBxO,KAI9C,MAAM4O,KAIL,QAASC,GAAuB3wB,EAAMC,EAAM2wB,GACjD,GAAMvjB,GAAQpN,EAAKqN,MAAM,KAAKsD,OAAO,SAAAigB,GAAA,MAAiB,KAATA,IAEvCC,EAAuB9wB,EAAKkS,MAAM6e,SAASR,EAAaK,EAE9D,OAAOvjB,GAAMjN,OACTiN,EAAM2jB,OAAO,SAACC,EAAwBJ,GACtC,MAAOI,GACJ1wB,KAAK,SAAA+vB,GAAA,MAAmBD,GAAqBrwB,EAAM6wB,EAAMP,MAC3DQ,GACCA,EAGD,QAASI,GAAYlxB,EAAMzC,EAAIyF,EAAM9C,GAC1C,MAAO8uB,GAAShvB,EAAMgD,EAAM,MAArB,UAAsC6J,mBAAmBtP,GAAO2C,GAGzE,QAASixB,GAAoBnxB,EAAMoxB,EAAOnxB,EAAMC,GAC9C,IAAKkxB,GAA0B,YAAjB,mBAAOA,GAAP,YAAAC,EAAOD,IACnB,KAAM,IAAI1tB,OAAM,yBAFqC,IAAA4tB,GAKrCpxB,MAAX0vB,EALgD0B,EAKhD1B,QACDttB,GACJU,MACEggB,WAAYllB,OAAO4d,UAEjB0V,GACEprB,KAAM6oB,EAAiBuC,EAAMprB,SAIrC,QAAO,EAAAuS,EAAAnW,eAAcpC,EAAM,QAASC,EAAMqC,GACxCpB,SACE8uB,WAAYJ,GAAW,MAKtB,QAAS2B,GAAsBvxB,EAAMzC,EAAI6zB,EAAOlxB,GACrD,MAAOixB,GAAmBnxB,EAAMoxB,EAAzB,UACKvkB,mBAAmBtP,GAAO2C,GAGjC,QAASsxB,GAAwBxxB,EAAMC,EAAMmxB,EAAOlxB,GACzD,MAAOixB,GAAmBnxB,EAAMoxB,EAAzB,wBACmBvkB,mBAAmB5M,GAASC,GAGjD,QAASuxB,GAAWzxB,EAAMzC,EAAI2C,GACnC,GAAkB,gBAAP3C,IAA0B,KAAPA,EAC5B,KAAM,IAAImG,OAAM,sBAF0B,IAAAguB,GAI1BxxB,MAAX0vB,EAJqC8B,EAIrC9B,OACP,QAAO,EAAArX,EAAAnW,eAAcpC,EAAM,SAApB,UAAwC6M,mBAAmBtP,GAAO8C,QACvEa,SACE8uB,WAAYJ,GAAW,MAKtB,QAASmB,GAAU/wB,EAAMzC,GAAkC,GAA9BqzB,KAA8BzwB,UAAAC,OAAA,GAAAC,SAAAF,UAAA,KAAAA,UAAA,GAAdD,EAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KAChE,IAAIywB,GAAW5wB,EAAK4wB,QAAQe,YAAb5E,EAAA9a,eAAyC,CACtD,GAAIyU,GAAK1mB,EAAK4wB,QAAQgB,YAAb7E,EAAA9a,cACT,OAAO5Q,SAAQC,KACbolB,EAAGxjB,IAAI3F,GACPmpB,EAAGwG,KAAKpvB,OAAO4d,QAAS1M,UAAY6iB,OAAUt0B,IAAQ2C,MACrDK,KAAK,SAAAuxB,GAAqB,GAAAC,GAAArwB,EAAAowB,EAAA,GAAnBnpB,EAAmBopB,EAAA,GAAdC,EAAcD,EAAA,EAK3B,OAJIx0B,KAAOgzB,IACTyB,EAAS1E,KAAO0E,EAAS1E,KAAK1c,OAAO,SAAAjI,GAAA,MAAOA,GAAImZ,MAAQmQ,KAE1DD,EAAWE,EAAUF,EAAS1E,KAAK1iB,IAAI,SAAAjC,GAAA,MAAOwpB,GAASC,EAAUpyB,EAAM2I,OAChEwpB,EAASC,EAAUpyB,EAAM2I,EAAKqpB,MAGzC,GAAMrlB,GAAwC,IAAhC7O,OAAO6M,KAAKzK,GAASE,OAAe,GAApC,IAA6CiyB,EAAkBnyB,EAC7E,QAAO,EAAAqY,EAAAnW,eAAcpC,EAAM,MAApB,UAAqC6M,mBAAmBtP,GAAMoP,GAClEpM,KAAK4xB,GAGH,QAAS3B,GAAYxwB,EAAMC,GAChC,OAAO,EAAAsY,EAAAnW,eAAcpC,EAAM,MAApB,wBAAmD6M,mBAAmB5M,IAC1EM,KAAK4xB,GAGH,QAASG,GAActyB,EAAMzC,GAClC,OAAO,EAAAgb,EAAAxY,WAAUC,EAAV,mBAAmC6M,mBAAmBtP,IAGxD,QAASg1B,GAAgBvyB,EAAMC,GACpC,OAAO,EAAAsY,EAAAxY,WAAUC,EAAV,wBAAwC6M,mBAAmB5M,IAGpE,QAASuyB,GAA4BzxB,GACnC,GAAI6a,GAAO7a,EAAI2hB,OAAS3hB,EAAI2hB,MAAM+P,OAClC,KAAK7W,EAAM,KAAM,IAAIlY,OAAM,qCAC3B,OAAOkY,GAGF,QAAS8W,GAAuB1yB,EAAMC,GAC3C,OAAO,EAAAsY,EAAAnW,eAAcpC,EAAM,OAApB,yBAAqD6M,mBAAmB5M,IAC5EM,KAAKiyB,GAGH,QAASG,GAAqB3yB,EAAMzC,GACzC,OAAO,EAAAgb,EAAAnW,eAAcpC,EAAM,OAApB,uBAAmD6M,mBAAmBtP,IAC1EgD,KAAKiyB,GAGH,QAASI,GAAa5yB,GAAyB,GAAnB6yB,GAAmB1yB,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MAARgS,EAAQhS,UAAA,EACpD,KAAKgS,IAAWA,EAAO6Q,WACrB,KAAMtf,OAAM,0DAGd,IAAMovB,GAAa3gB,EAAO6Q,WAAW/iB,KAAK8yB,SAAS,KAC/C5gB,EAAO6Q,WAAW/iB,KACbkS,EAAO6Q,WAAW/iB,KAFR,GAInB,UAAU6yB,EAAaD,EAAK7sB,KAGvB,QAASgtB,GAAwBhzB,EAAMzC,EAAI01B,GAChD,MAAK11B,IAGE,EAAAgb,EAAAnW,eAAcpC,EAAM,OAApB,4BACLgD,MACEof,KAAM,sBACNY,YACEkQ,aACEhhB,OACEkQ,KAAM,gBACN+Q,OAAQ,OACRlO,QAAS1nB,GACTyR,SAAU,iBAEZokB,YACEhR,KAAM6Q,EACNE,OAAQ,OACRlO,QAAS1nB,SAKhBgD,KAAK,SAAAyC,GAAA,OAAUqwB,uBAAwBrwB,EAAKggB,WAAWsQ,MAAMC,MAASh2B,SAAUA,KArB1E8D,QAAQ8F,OAAOzD,MAAM,oDAwBzB,QAAS8vB,GAAuBxzB,EAAMyzB,GAAuB,GAAhBztB,GAAgB7F,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAT,QACnDuzB,GACJtR,KAAM,mBACNY,YACEhd,KAAMA,EACNkM,MAAOuhB,GAGX,QAAO,EAAAlb,EAAAnW,eAAcpC,EAAM,OAApB,kBAA+CgD,KAAM0wB,IAC3DnzB,KAAKiyB,GAGD,QAASmB,GAAqB3zB,EAAMqtB,GAAqB,GAAhBrnB,GAAgB7F,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAT,QAC/CuzB,GACJtR,KAAM,mBACNY,YACEhd,KAAMA,EACNqnB,IAAKA,GAGT,QAAO,EAAA9U,EAAAnW,eAAcpC,EAAM,OAApB,kBAA+CgD,KAAM0wB,IAC3DnzB,KAAKiyB,GAGD,QAASoB,GAAW5zB,GACzB,OAAO,EAAAuY,EAAAnW,eAAcpC,EAAM,MAApB,gBAGF,QAAS6zB,GAAY7zB,GAC1B,OAAO,EAAAuY,EAAAnW,eAAcpC,EAAM,SAApB,gBAGF,QAAS8zB,GAAa9zB,EAAMzC,GACjC,OAAO,EAAAgb,EAAAnW,eAAcpC,EAAM,OAApB,gBAA4C6M,mBAAmBtP,IAGjE,QAASw2B,GAAa/zB,EAAMzC,EAAI2C,GAAS,GAAA8zB,GAC5B9zB,MAAX0vB,EADuCoE,EACvCpE,OACP,QAAO,EAAArX,EAAAnW,eAAcpC,EAAM,SAApB,gBAA8C6M,mBAAmBtP,GAAO8C,QAC7Ea,SACE8uB,WAAYJ,GAAW,MAK7B,QAASuC,GAAUzzB,GAEjB,MADAA,GAAIu1B,MAAgC,cAAxBv1B,EAAIskB,WAAWZ,KACpB1jB,EAGT,QAAS2zB,GAAmBnyB,GAC1B,GAAIkQ,KACJ,KAAK,GAAMpK,KAAQ9F,GACjBkQ,EAAK7K,KAAL,QAAkBsH,mBAAmB7G,GAArC,KAA+C6G,mBAAmB3M,EAAQ8F,IAE5E,OAAOoK,GAAKc,KAAK,KAGnB,QAASkhB,GAAWpyB,EAAM2I,GAAoB,GAAf0hB,GAAelqB,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MACxCsH,EAAQ7E,KAAKopB,MAAMppB,KAAKC,UAAU8F,GAGtC,cAFOlB,GAAMqa,UACNra,GAAMob,MAEXf,IAAKnZ,EAAImZ,IACTe,KAAMla,EAAIka,KACVD,sBACAI,WAAYvb,EACZ0b,eACEkH,UACErnB,KAAMqnB,EACNvH,MACEnX,MAAO0e,EAASjqB,UAItB6iB,UAAW,SAACjd,GACV,GAAa,aAATA,EACF,MAAOqkB,KAMf,QAAS6H,GAAWgC,GAClB,GAAMC,GAAUD,EAAStjB,OAAO,SAAAwjB,GAAA,MAA2B,cAAtBA,EAAEpR,WAAWZ,OAC5ClQ,EAAQgiB,EAAStjB,OAAO,SAAAwjB,GAAA,MAA2B,cAAtBA,EAAEpR,WAAWZ,OAC1CvU,EAAO,SAAAqE,GAAA,MAASA,GAAMrE,KAAK,SAACxP,EAAGC,GAAJ,MAAUD,GAAE2kB,WAAWhd,KAAKquB,cAAc/1B,EAAE0kB,WAAWhd,QACxF,OAAO6H,GAAKsmB,GAAS31B,OAAOqP,EAAKqE,I3Bk8HlCpU,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,EAAQm1B,aAAen1B,EAAQyzB,YAAclwB,MAE7C,IAAIqB,GAAiB,WAAc,QAASiD,GAAcC,EAAK/G,GAAK,GAAIgH,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAK3E,MAAW,KAAM,IAAK,GAAiC4E,GAA7BC,EAAKN,EAAIO,OAAOC,cAAmBN,GAAMG,EAAKC,EAAGG,QAAQC,QAAoBT,EAAKU,KAAKN,EAAGxF,QAAY5B,GAAKgH,EAAKzE,SAAWvC,GAA3DiH,GAAK,IAAoE,MAAOxB,GAAOyB,GAAK,EAAMC,EAAK1B,EAAO,QAAU,KAAWwB,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAK/G,GAAK,GAAI2H,MAAMC,QAAQb,GAAQ,MAAOA,EAAY,IAAIO,OAAOC,WAAYtH,QAAO8G,GAAQ,MAAOD,GAAcC,EAAK/G,EAAa,MAAM,IAAImB,WAAU,4DAEllBqyB,EAA4B,kBAAXlsB,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU1G,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXyG,SAAyBzG,EAAIc,cAAgB2F,QAAUzG,IAAQyG,OAAOpH,UAAY,eAAkBW,GAGtQ5B,G2BzvIeyC,S3B0vIfzC,E2BnuIeqzB,kB3BouIfrzB,E2BxrIe6zB,wB3ByrIf7zB,E2B5qIeo0B,a3B6qIfp0B,E2BnpIey0B,uB3BopIfz0B,E2B/oIe00B,yB3BgpIf10B,E2B3oIe20B,Y3B4oIf30B,E2BhoIei0B,W3BioIfj0B,E2B9mIe0zB,a3B+mIf1zB,E2B1mIew1B,e3B2mIfx1B,E2BvmIey1B,iB3BwmIfz1B,E2B9lIe41B,wB3B+lIf51B,E2B1lIe61B,sB3B2lIf71B,E2BtlIe81B,c3BulIf91B,E2B3kIek2B,yB3B4kIfl2B,E2BljIe02B,wB3BmjIf12B,E2BviIe62B,sB3BwiIf72B,E2B5hIe82B,Y3B6hIf92B,E2BzhIe+2B,a3B0hIf/2B,E2BthIeg3B,c3BuhIfh3B,E2BnhIei3B,aA5UhB,IAAAxb,GAAAnb,EAAA,GACAsI,EAAAtI,EAAA,I3Bo2IKuG,EAAYlF,EAAuBiH,G2Bn2IxCqnB,EAAA3vB,EAAA,GAGamzB,gBAAc,yBACd0B,iBAAe,0BAEtBpC,EAAyB,4B3BmwJzB,SAAS9yB,EAAQD,EAASM,GAE/B,YAkDA,SAASk3B,GAAwB51B,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAI61B,KAAa,IAAW,MAAP71B,EAAe,IAAK,GAAImK,KAAOnK,GAAWZ,OAAOC,UAAUC,eAAeP,KAAKiB,EAAKmK,KAAM0rB,EAAO1rB,GAAOnK,EAAImK,GAAgC,OAAtB0rB,GAAO31B,QAAUF,EAAY61B,EAElQ,QAAS11B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qC4BthJjH,QAASw1B,KACP,KAAM,IAAI9wB,OAAM,iCAGlB,QAAS+wB,GAAUC,EAASt2B,GAC1B,MAAO,YAA8B,OAAA2M,GAAA5K,UAAAC,OAANlC,EAAMsH,MAAAuF,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN9M,EAAM8M,GAAA7K,UAAA6K,EACnC,OAAO5M,iBAAGs2B,GAAHl2B,OAAeN,KAI1B,QAASy2B,GAAYC,EAAKl2B,EAAKm2B,EAAOC,GACpC,IAAK,GAAMC,KAAQF,GAAO,CACxB,GAAIz2B,GAAKq2B,EAASG,EAAKC,EAAME,GACzBD,KACF12B,GAAK,EAAA0D,EAAAgJ,YAAW1M,IAElBM,EAAIq2B,GAAQ32B,G5Bo9If,GAAIme,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI7e,GAAI,EAAGA,EAAI6e,EAAMtc,OAAQvC,IAAK,CAAE,GAAI8e,GAAaD,EAAM7e,EAAI8e,GAAWjd,WAAaid,EAAWjd,aAAc,EAAOid,EAAW/c,cAAe,EAAU,SAAW+c,KAAYA,EAAWhd,UAAW,GAAM7B,OAAO4G,eAAe+X,EAAQE,EAAW9T,IAAK8T,IAAiB,MAAO,UAAU5d,EAAa6d,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBzd,EAAYhB,UAAW6e,GAAiBC,GAAaL,EAAiBzd,EAAa8d,GAAqB9d,M4B9wJjiB+C,EAAA1E,EAAA,GACA43B,EAAA53B,EAAA,IACA4E,EAAA5E,EAAA,IACA63B,EAAA73B,EAAA,GAAY83B,E5BqxJAZ,EAAwBW,G4BpxJpCE,EAAA/3B,EAAA,IAAY4F,E5BwxJAsxB,EAAwBa,G4BvxJpC5c,EAAAnb,EAAA,GAAY2C,E5B2xJKu0B,EAAwB/b,G4B1xJzC6c,EAAAh4B,EAAA,IAAYi4B,E5B8xJCf,EAAwBc,G4B7xJrCE,EAAAl4B,EAAA,IAAY8U,E5BiyJCoiB,EAAwBgB,G4BhyJrCC,EAAAn4B,EAAA,IAAYo4B,E5BoyJGlB,EAAwBiB,G4BnyJvCE,EAAAr4B,EAAA,IAAYs4B,E5BuyJApB,EAAwBmB,G4BtyJpCE,EAAAv4B,EAAA,IAAYwzB,E5B0yJG0D,EAAwBqB,G4BzyJvCC,EAAAx4B,EAAA,IAAYy4B,E5B6yJIvB,EAAwBsB,G4B5yJxCE,EAAA14B,EAAA,IAAY6lB,E5BgzJKqR,EAAwBwB,G4B7yJ7BC,EAGRb,EAHF5Y,SACa0Z,EAEXd,EAFF7Z,YACQ4a,EACNf,EADF/c,OAGI+d,EAAW,EACXC,EAAc,EACdC,EAAY,EACZC,EAAS,EAETC,GACJtZ,WAAY,kCAGRuZ,GACJh3B,OAAQyD,EAAKzD,OACb2tB,KAAMlqB,EAAKkqB,KACXE,SAAUpqB,EAAKoqB,SACfc,QAASlrB,EAAKkrB,QACd7lB,OAAQrF,EAAKqF,OACbmT,OAAQxY,EAAK4rB,QACbF,iBAAkB1rB,EAAK0rB,iBACvBF,YAAaxrB,EAAKwrB,YAClBgI,YAAanB,EAAMmB,YACnB7pB,MAAO0oB,EAAM1oB,MACb8pB,mBAAoBxT,EAAUwT,mBAC9BC,sBAAuBzT,EAAUyT,sBACjCC,oBAAqB1T,EAAU0T,oBAC/BC,qBAAsB3T,EAAU2T,qBAChC7L,QAAS,WAEP,OADA,EAAAjpB,EAAA2C,MAAK,wDACEzB,EAAK4rB,QAALrwB,MAAAyE,EAAA7C,aAIL02B,GACJh1B,OAAQqzB,EAAKrzB,OACbuW,eAAgB8c,EAAK9c,eACrBK,aAAcyc,EAAKzc,aACnBO,iBAAkBkc,EAAKlc,iBACvBC,UAAWic,EAAKjc,UAChBK,eAAgB4b,EAAK5b,eACrBS,eAAgBmb,EAAKnb,eACrB9X,aAAcizB,EAAKjzB,cAGf60B,GACJv3B,OAAQ2S,EAAM3S,OACd4wB,gBAAiBje,EAAMie,gBACvBQ,sBAAuBze,EAAMye,sBAC7BO,WAAYhf,EAAMgf,WAClBK,qBAAsBrf,EAAMqf,qBAC5BC,uBAAwBtf,EAAMsf,uBAC9BC,UAAWvf,EAAMuf,UACjBV,SAAU7e,EAAM6e,SAChBP,WAAYte,EAAMse,WAClB8B,aAAcpgB,EAAMogB,aACpBC,eAAgBrgB,EAAMqgB,eACtBI,oBAAqBzgB,EAAMygB,oBAC3BoE,gBAAiB7kB,EAAMwgB,sBACvBA,sBAAuBxgB,EAAMwgB,sBAC7BsE,eAAgB,WAEd,OADA,EAAAl1B,EAAA2C,MAAK,+EACEyN,EAAMshB,sBAANj1B,MAAA2T,EAAA/R,YAETqzB,sBAAuBthB,EAAMshB,sBAC7BG,oBAAqBzhB,EAAMyhB,oBAC3Bf,YAAa1gB,EAAM0gB,YACnBI,uBAAwB9gB,EAAM8gB,uBAC9BrmB,MAAO0oB,EAAM4B,WACbrD,UAAW1hB,EAAM0hB,UACjBC,WAAY3hB,EAAM2hB,WAClBC,YAAa5hB,EAAM4hB,YACnBC,YAAa7hB,EAAM6hB,aAGfmD,GACJ33B,OAAQi2B,EAAQj2B,OAChB43B,cAAe3B,EAAQ2B,eAGnBC,GACJ73B,OAAQm2B,EAAKn2B,OACboM,MAAO+pB,EAAK/pB,MACZ0rB,OAAQ3B,EAAK2B,QAGTC,GACJC,KAAM3G,EAAQ2G,KACdC,YAAa5G,EAAQ4G,YAErB7F,YAAaf,EAAQe,YACrBC,YAAahB,EAAQgB,YACrB6F,eAAgB7G,EAAQ6G,eACxBC,gBAAiB9G,EAAQ8G,gBACzBC,mBAAoB/G,EAAQ+G,mBAE5BC,eAAgBhH,EAAQgH,eACxBC,kBAAmBjH,EAAQiH,kBAC3BC,gBAAiBlH,EAAQkH,gBACzBC,mBAAoBnH,EAAQmH,mBAE5BC,uBAAwBpH,EAAQoH,uBAChCC,yBAA0BrH,EAAQqH,yBAClCC,wBAAyBtH,EAAQsH,wBACjCC,2BAA4BvH,EAAQuH,4BAGhCC,GACJC,UAAWxC,EAASwC,UACpBC,iBAAkBzC,EAASyC,iBAC3BC,YAAa1C,EAAS0C,YACtBC,eAAgB3C,EAAS2C,eACzBC,WAAY5C,EAAS4C,WACrBC,iBAAkB7C,EAAS6C,iBAC3BC,eAAgB9C,EAAS8C,gBAGrBC,EAA0B,SAAA9e,GAC9B,GAAM5V,GAAM,GAAI20B,KAAI/e,EAQpB,OAPI5V,GAAI40B,eAAiB50B,EAAI40B,aAAaC,IAAI,aAC5C70B,EAAI40B,aAAa5O,OAAO,YAAa,GAC3BhmB,EAAI80B,QAAU90B,EAAI80B,OAAO71B,QAAQ,gBAAiB,IAG5De,EAAI80B,OAAS90B,EAAI80B,OAAS,gBAErB90B,EAAI4S,YAGPqB,E5BmzJQ,W4BlzJZ,QAAAA,GAAajY,GAASrB,EAAA3B,KAAAib,GACpBjb,KAAK8F,QACL9F,KAAKgV,SACLhV,KAAKs4B,WACLt4B,KAAKw4B,QACLx4B,KAAK0zB,WACL1zB,KAAK24B,YACL34B,KAAKg4B,MACH/c,OAAQ8d,EACR5a,YAAa2a,EACb1Z,SAAUyZ,EACVkD,sBACAxN,4BACAW,+BAEFlvB,KAAKg8B,SAAU,EACXh5B,GACFhD,KAAKq6B,KAAKr3B,G5Bw8Jb,MA/IAqc,GAAapE,IACXtP,IAAK,OACLpJ,MAAO,W4BvzJU,GAAdS,GAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KAClBjD,MAAKg8B,SAAU,EACfh8B,KAAKi8B,QAAS,EACdj8B,KAAKk8B,OAAS,KACdl8B,KAAKm8B,WAAanD,EAClBh5B,KAAKo8B,WAAa,KAClBp8B,KAAKq8B,SAAW,KAChBr8B,KAAKs8B,SAAWt5B,EAAQ6T,SAAW,KACnC7W,KAAKy4B,SAAW,IAEhB,IAAMx0B,GAAQjB,EAAQiB,MAChBs4B,EAAQv5B,EAAQu5B,KACtB,IAAIt4B,GAASs4B,EACX,KAAM,IAAI/1B,OAAM,6DAGdvC,GACFjE,KAAKk8B,OAAS,GAAIrD,IAAa50B,UACtBs4B,IACTv8B,KAAKi8B,QAAS,EACdj8B,KAAKq8B,SAAWE,EAAMjf,QACtBtd,KAAKgb,cAAgBpa,OAAO4d,UAAW4a,EAAqBmD,EAAMxhB,cAClE/a,KAAKw8B,cAAgBD,EAAMhf,cAAgB+Z,EAI7C,KADA,GAAItwB,GAAMhE,EAAQy5B,SAAW,GACE,MAAxBz1B,EAAIA,EAAI9D,OAAS,IACtB8D,EAAMA,EAAI/F,MAAM,GAAG,EAGrBjB,MAAK4c,KAAO5V,EAEZhH,KAAK+D,0BAA4DZ,SAAhCH,EAAQ05B,oBAAoC15B,EAAQ05B,oBAAsB75B,EAAU6D,uBAErH,IAAMkxB,KAAoB50B,EAAQ40B,eAClCH,GAAWz3B,KAAMA,KAAK8F,KAAMuzB,EAAWzB,GACvCH,EAAWz3B,KAAMA,KAAKg4B,KAAM2B,EAAW/B,GACvCH,EAAWz3B,KAAMA,KAAKgV,MAAO4kB,EAAYhC,GACzCH,EAAWz3B,KAAMA,KAAKs4B,QAAS0B,EAAcpC,GAC7CH,EAAWz3B,KAAMA,KAAKw4B,KAAM0B,EAAWtC,GACvCH,EAAWz3B,KAAMA,KAAK0zB,QAAS0G,EAAcxC,GAC7CH,EAAWz3B,KAAMA,KAAK24B,SAAUuC,EAAetD,GAE3C50B,EAAQ0wB,SACV1zB,KAAK0zB,QAAQ2G,KAAKr3B,EAAQ0wB,SAI5B1zB,KAAKsF,UAAY,WACf,GAAMtE,IAAQhB,MAAMsB,OAAOgH,MAAMzH,UAAUI,MAAMV,KAAK0C,WACtD,OAAOJ,GAAUqC,cAAc7D,MAAMrB,KAAMgB,O5B6zJ5C2K,IAAK,YACLpJ,MAAO,W4B1zJ4B,GAAAoG,GAAA3I,KAA3B28B,EAA2B15B,UAAAC,OAAA,GAAAC,SAAAF,UAAA,IAAAA,UAAA,GAC9BqZ,EAAQtc,KAAKm8B,UACnB,OAAI7f,KAAU6c,GAAU7c,IAAU2c,EACzBj5B,KAAKo8B,YAGdp8B,KAAKm8B,WAAalD,EAClBj5B,KAAKo8B,WAAap8B,KAAKqE,OAAOhB,KAAK,SAACgB,GAClC,GAAIA,GAAQsE,EAAKszB,OACf,KAAM,IAAIz1B,OAAM,yCAElB,IAAImC,EAAKszB,OAIP,MAHIU,IAAqBh0B,EAAKqS,cAAcyB,cAC1C9T,EAAKqS,cAAcyB,YAAcif,EAAwB/yB,EAAKqS,cAAcyB,cAEvEub,EAAK3a,UAAL1U,EAELA,EAAK0zB,SACL1zB,EAAKqS,cACLrS,EAAK6zB,cACLG,EAKJ,IAAIt4B,EACF,OAAO,EAAAS,EAAAsqB,cACF,IAAIzmB,EAAKuzB,OACd,MAAO/3B,SAAQoK,SAAS5J,OAAQ,KAAMV,MAAO0E,EAAKuzB,QAElD,MAAM,IAAI11B,OAAM,+BAIpBxG,KAAKo8B,WAAW/4B,KACd,WAAQsF,EAAKwzB,WAAahD,GAC1B,WAAQxwB,EAAKwzB,WAAajD,IAErBl5B,KAAKo8B,e5B6zJXzwB,IAAK,kBACLpJ,MAAO,S4B3zJOoC,EAAQV,GACvB,GAAMsa,IAAS5Z,SAAQV,QACvB,OAAKjE,MAAKq8B,UAAYr8B,KAAKm8B,aAAelD,GAG1Cj5B,KAAKq8B,SAASxe,KAAKma,EAAK/Z,SAAUM,GAClCve,KAAKo8B,WAAaj4B,QAAQoK,QAAQgQ,GAC3Bve,KAAKo8B,YAJHj4B,QAAQoK,QAAQgQ,M5Bk0JxB5S,IAAK,WACLpJ,MAAO,S4B5zJAQ,GAAM,GAAA4rB,GAAA3uB,IACd,OAAOA,MAAKqE,OAAOhB,KAAK,SAACgB,GACvB,GAAMu4B,GAAav4B,EAAO,UAAY,EACtC,OAAOsqB,GAAK/R,KAAOggB,EAAa75B,O5Bk0JjC4I,IAAK;AACLpJ,MAAO,W4B/zJF,GAAAwsB,GAAA/uB,IACN,OAAKA,MAAKs8B,SAcHn4B,QAAQoK,QAA0B,IAAlBvO,KAAKs8B,WAbnB,EAAA13B,EAAAC,OAAM,iBAAMrB,OAASurB,EAAKnS,KAAd,aAA+B,KAC/CvZ,KAAK,SAACQ,GACL,GAAKA,EAAIgC,GAGP,MAAOhC,GAAIqC,MAFX,MAAM,IAAIM,OAAM,iCAKnBnD,KAAK,SAACoB,GAEL,MADAsqB,GAAKuN,SAAiCn5B,SAAtBsB,EAAOo4B,WAA2B,EAAI,EAC/C9N,EAAK1qB,a5Bw0JZ4W,I4B7yJVpb,GAAOD,QAAU,GAAIqb,GACrBra,OAAO4d,OAAO3e,EAAOD,SAAUqb,SAAQsT,4BAAcW,iC5B40J/C,SAASrvB,EAAQD,EAASM,GAE/B,Y6BxnKD,SAAS48B,GAAe91B,EAAKmG,EAASmiB,EAAQxpB,EAAMi3B,GAClD,GAAMtb,GAAWtU,EAAQ6vB,aACzB,KAAKvb,EAAU,KAAM,IAAIjb,OAAM,qDAE/B,IAAMI,GAAS6a,EAASwb,WACxB,KAAKr2B,EAAQ,KAAM,IAAIJ,OAAM,8CAE7B,IAAM02B,GAASzb,EAASM,cAAc,SAEP,mBAApBgb,KAAgCG,EAAOC,OAASJ,GAE3DG,EAAOE,aAAa,MAAOp2B,GAC3Bk2B,EAAOG,UAAUha,IAAIia,GACrBnwB,EAAQkV,YAAY6a,GACpBA,EAAOK,OAGP,IAAMC,GAAgBx2B,EAAIoJ,MAAM,IAAK,GAAG4D,KAAK,IAE7C,OAAO,IAAI7P,SAAQ,SAACoK,EAAStE,GAC3B,GAAIwzB,IAAa,EACXC,EAAiB,QAAjBA,GAAkBvoB,GACtB,GAAIA,EAAMrO,SAAW02B,EAArB,CAEA,GAAwB,SAApBroB,EAAMrP,KAAKof,KAIb,YADA5d,QAAQC,MAAQD,QAAQC,KAAK,6DAI/B,IAAI4N,EAAMrP,KAAKof,OAAX,UAA8BoK,EAAO1K,IAArC,SAEF,MADA6Y,IAAa,EACNtoB,EAAMwoB,OAAOjb,YAAY5c,EAAMqP,EAAMrO,OAG9C,IAAI22B,GAActoB,EAAMrP,KAAKof,OAAX,UAA8BoK,EAAO1K,IAArC,UAMhB,OALC,QAAS,SAAU,WAAY,aAAa/S,QAAQ,SAAA+rB,GAC/CzoB,EAAMrP,KAAK+3B,aAAY1wB,EAAQ2wB,MAAMD,WAAa1oB,EAAMrP,KAAK+3B,YAC7D1oB,EAAMrP,KAAKi4B,WAAWH,KAAOzwB,EAAQ2wB,MAAMF,GAAWzoB,EAAMrP,KAAKi4B,WAAWH,GAA/C,SAG5B,CAGTh3B,GAAO8oB,oBAAoB,UAAWgO,EACtC,IAAMM,GAAoB,WAExBd,EAAOhb,YAAcgb,EAAOhb,WAAWC,YAAY+a,GAGrD,OAAIO,IAActoB,EAAMrP,KAAKof,OAAX,UAA8BoK,EAAO1K,IAArC,sBACTrW,GAASyvB,oBAAmBvyB,IAAK0J,EAAMrP,KAAK2b,YAGrDuc,IAEI7oB,EAAMrP,KAAKof,OAAX,UAA8BoK,EAAO1K,IAArC,SACK3a,EAAOg0B,EAAgBC,YAAY/oB,EAAMrP,KAAKO,QAGnDo3B,GAActoB,EAAMrP,KAAKof,OAAX,UAA8BoK,EAAO1K,IAArC,UACTrW,EAAQ,MAGbkvB,GAActoB,EAAMrP,KAAKof,OAAX,UAA8BoK,EAAO1K,IAArC,QACTrW,EAAQ4G,EAAMrP,KAAK2b,UAGvBgc,EAAL,OACSxzB,EAAO,GAAIzD,OAAM,uDAW5BI,GAAO+oB,iBAAiB,UAAW+N,KAIhC,QAASr7B,GAAQS,EAAMysB,EAAQrK,GAAmC,GAA7Bpf,GAA6B7C,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MAAlB+yB,EAAkB/yB,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KACvE,KAAKssB,EAAQ,KAAM,IAAI/oB,OAAJ,uDACnB,KAAK0e,EAAM,KAAM,IAAI1e,OAAJ,qDAEjB,IAAM23B,IAAgB,EAAA9iB,EAAAnW,eAAcpC,EAAM,OAAQ,YAChDgD,MACEof,KAAM,kBACNY,YACEyJ,OAAQA,EACRrK,KAAMA,EACNpf,KAAMA,EACNkwB,YAAaA,KAiBnB,OAZAmI,GAAcC,MAAQ,SAACjxB,EAAS4vB,GAC9B,MAAOoB,GAAc96B,KAAK,SAAAisB,GACxB,GAAI+O,GAAU/O,EAAOxJ,WAAWwY,UAAYhP,EAAOxJ,WAAWwY,SAAS,EAEvE,OAAKD,GAIEvB,EAAcuB,EAAQ3f,KAAMvR,EAASmiB,EAAQxpB,EAAMi3B,GAHjD54B,QAAQ8F,OAAO,GAAIzD,OAAM,gCAO/B23B,EAGT,QAASI,GAAkBjP,EAAQ1oB,GACjC,MAAO,IAAIzC,SAAQ,SAACoK,EAAStE,GAC3B,GAAMu0B,GAAuB,QAAvBA,GAAwBrpB,GACxBA,EAAMrO,SAAWwoB,EAAOxJ,WAAWnhB,SAEvCiC,EAAO8oB,oBAAoB,UAAW8O,GACtCjwB,EAAQ4G,EAAMrP,OAGhBc,GAAO+oB,iBAAiB,UAAW6O,GACnC53B,EAAOyoB,OAAO3M,aACZwC,eAAgBoK,EAAO1K,IAAvB,UACC0K,EAAOxJ,WAAWnhB,UAKlB,QAASs1B,GAAen3B,EAAM27B,EAAUC,GAE7C,GADAA,EAAgBA,GAAmC,mBAAX93B,SAA0BA,QAC7D83B,EAAe,KAAM,IAAIl4B,OAAM,2CAGpC,IADAi4B,EAAWA,GAAYC,EAAc73B,SAASi1B,OAAO1rB,MAAM,KAAK,IAC3DquB,EAAU,KAAM,IAAIj4B,OAAM,kCAE/B,QAAO,EAAA6U,EAAAnW,eAAcpC,EAAM,MAApB,YAAuC27B,GAC3Cp7B,KAAK,SAAAisB,GACJ,GAAIqP,IAAa,EAEXC,EAAY,SAAC71B,GACjB,GAAI41B,EAAY,KAAM,IAAIn4B,OAAM,6CAChCm4B,IAAa,EACbD,EAAcrP,OAAO3M,YAAY3Z,EAASumB,EAAOxJ,WAAWnhB,SAGxDk6B,EAAe,SAACd,EAAYe,GAChC,GAAIH,EAAY,KAAM,IAAIn4B,OAAM,qCAEhC,IAAMuC,IACJmc,eAAgBoK,EAAO1K,IAAvB,UAEAmZ,WAAYA,EAAW5wB,QACnBvM,OAAO4d,UAAWuf,GAClBgB,UAAWhB,EAAW5wB,QAAQ6xB,aAC9BC,SAAUlB,EAAW5wB,QAAQ+xB,cAE3BnB,EACNF,WAAYiB,EAGdJ,GAAcrP,OAAO3M,YAAY3Z,EAASumB,EAAOxJ,WAAWnhB,SAGxD0F,EAAS,WACbu0B,GAAW1Z,eAAgBoK,EAAO1K,IAAvB,YASb,OAJA8Z,GAAc/O,iBAAiB,SAAU,WAClCgP,GAAYt0B,MAGZk0B,EAAiBjP,EAAQoP,GAC7Br7B,KAAK,SAAAyC,GACJ,OACEq5B,QAAS,iBAAMr5B,IACfs5B,UAAW,iBAAM9P,IACjBsP,UAAW,SAACnzB,GACV,MACSmzB,GADL94B,GAAQA,EAAKu5B,0BAEbna,eAAgBoK,EAAO1K,IAAvB,sBACAnD,SAAUhW,IAIVyZ,eAAgBoK,EAAO1K,IAAvB,QACAnD,SAAUhW,KAIhB6zB,MAAO,SAAAj5B,GAAA,MAASu4B,IACd1Z,eAAgBoK,EAAO1K,IAAvB,SACAve,MAAO43B,EAAgBsB,UAAUl5B,MAEnCw4B,aAAcA,EACdx0B,OAAQA,O7Bi7JnBzJ,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,E6BxiKeyC,S7ByiKfzC,E6Bz/Jeq6B,eA5JhB,IAAA5e,GAAAnb,EAAA,GAEMo9B,EAAc,aAGdW,EAAmB,WACvB,QAASuB,GAAoBC,EAAMC,GACjC,GAAMt1B,GAASxJ,OAAO4d,OAAOkhB,EAAID,GAC3BE,GAAoB,OAAQ,UAClC,OAAOA,GAAiB7L,OAAO,SAAC1pB,EAAQw1B,GAItC,MAHIH,GAAKG,KACPF,EAAGE,GAAYH,EAAKG,IAEfx1B,GACNA,GAEL,OACEm1B,UAAW,SAACl5B,GAAD,MAAWm5B,GAAmBn5B,OACzC63B,YAAa,SAACp4B,GAAD,MAAU05B,GAAmB15B,EAAM,GAAIU,OAAMV,EAAKiD,gB7Bs3K7D,SAASlJ,EAAQD,EAASM,GAE/B,Y8Bx4KM,SAASuO,GAAO3L,EAAM+8B,GAC3B,OAAO,EAAAxkB,EAAAnW,eAAcpC,EAAM,MAApB,eAA0C+8B,GAC9Cx8B,KAAK,SAAAyC,GAAA,MAAQA,GAAK5C,SAGhB,QAASi3B,GAAQr3B,EAAM+8B,GAC5B,OAAO,EAAAxkB,EAAAnW,eAAcpC,EAAM,MAApB,eAA0C+8B,GAG5C,QAASx9B,GAAQS,EAAM+8B,EAAY7+B,EAAMgC,GAC9C,OAAO,EAAAqY,EAAAnW,eAAcpC,EAAM,OAApB,eAA2C+8B,GAChD/5B,MACEof,KAAM,eACNY,YACE7iB,UAAWjC,MACXgC,QAASA,U9B23KhBpC,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,E8B74Ke6O,Q9B84Kf7O,E8Bz4Keu6B,S9B04Kfv6B,E8Bt4KeyC,QAXhB,IAAAgZ,GAAAnb,EAAA,I9B66KM,SAASL,EAAQD,EAASM,GAE/B,YAuBA,SAAS4/B,GAAgBt+B,EAAKmK,EAAKpJ,GAAiK,MAApJoJ,KAAOnK,GAAOZ,OAAO4G,eAAehG,EAAKmK,GAAOpJ,MAAOA,EAAOC,YAAY,EAAME,cAAc,EAAMD,UAAU,IAAkBjB,EAAImK,GAAOpJ,EAAgBf,E+Bl8KrM,QAAS83B,GAAax2B,EAAM0M,EAASxD,GAC1C,MAAOlJ,GAAKuB,OAAOhB,KAAK,SAACgB,GAEvB,GADAmL,GAAU,EAAAqgB,EAAAnb,kBAAiB5R,EAAMuB,EAAMmL,IAClClH,MAAMC,QAAQyD,IAA6B,IAAlBA,EAAO9I,OACnC,KAAM,IAAIsD,OAAM,iDAElB,OAAInC,GACK07B,EAAcj9B,EAAM0M,EAASxD,GAE7Bg0B,EAAcl9B,EAAM0M,EAASxD,KAKnC,QAASyD,GAAO3M,EAAMm9B,EAAUj9B,GACrC,MAAOF,GAAKuB,OAAOhB,KAAK,SAACgB,GACvB,IAAK47B,EACH,KAAM,IAAIz5B,OAAM,sCAElB,OAAInC,GACK67B,EAAQp9B,EAAMm9B,EAAUj9B,GAExBm9B,EAAQr9B,EAAMm9B,EAAUj9B,KAK9B,QAAS+2B,GAAYj3B,EAAMm9B,EAAUj9B,GAC1C,GAAMkQ,GAAOktB,EAAaH,EAAUj9B,EACpC,QAAO,EAAAqY,EAAA5V,kBAAiB3C,EAAM,OAAQ,eAAgBoQ,GACnD7P,KAAK,SAACkC,GAAD,MAAcvC,GAAQq9B,cAAgB96B,EAAWA,EAAS6qB,OAoBpE,QAAS2P,GAAej9B,EAAM0M,EAASxD,GACrC,GAAIs0B,GAAY,KAAOt0B,EAAO0B,IAAI6yB,GAAYvsB,KAAK,IAC/CwsB,GAAoB9yB,IAAK+yB,EAAgBjxB,EAASxD,GAAS8nB,OAAQ,UACnE/wB,cAAmByM,EAAnB,IAA8B8wB,EAA9B,GACJ,QAAO,EAAAjlB,EAAAnW,eAAcpC,EAAM,MAAOC,EAAMy9B,GACrCn9B,KAAK,kBAASmM,QAASA,EAAS0V,KAAM,YAAapc,KAAMw3B,EAAWt0B,OAAQA,KAGjF,QAASg0B,GAAel9B,EAAM0M,EAASxD,GACrC,GAAIjJ,IAAO,EAAA6B,EAAA2K,YAAWzM,GAAM,EAAO0M,EAAS,UACxCgxB,GAAmBjuB,OAAUvG,UACjC,QAAO,EAAAqP,EAAAnW,eAAcpC,EAAM,OAAQC,EAAMy9B,GACtCn9B,KAAK,SAACkC,GACL,GAAMm7B,IAAgBlxB,QAASA,EAAS0V,KAAM,QAASpc,KAAMvD,EAASlF,GAAI2L,SAE1E,IAAwB,WAApBzG,EAAS6E,OAAqB,MAAOs2B,EAGzC,IAAM5uB,KACNA,GAAS9F,EAAO,KAAOoF,IAAO,KAE9B,IAAM8B,GAAOktB,EAAaM,GAAc5uB,SAAYA,IAChD/O,GAAO,EAAA6B,EAAA2K,YAAWzM,GAAM,EAAO49B,EAAYlxB,QAAS,QACxD,QAAO,EAAA6L,EAAAnW,eAAcpC,EAAM,OAAQC,EAAMmQ,GACxC7P,KAAK,iBAAMq9B,KACX5xB,MAAM,WACL,OAAO,EAAAlK,EAAAyJ,OAAM,KACZhL,KAAK,kBAAM,EAAAgY,EAAAnW,eAAcpC,EAAM,OAAQC,EAAMmQ,KAC7C7P,KAAK,iBAAMq9B,KACX5xB,MAAM,WACL,OAAO,EAAAlK,EAAAyJ,OAAM,KAAKhL,KAAK,iBAAMq9B,WAQvC,QAASR,GAASp9B,EAAMm9B,EAAUj9B,GAChC,GAAsB,cAAlBi9B,EAAS/a,KACX,KAAM,IAAI1e,OAAM,6DAEdxD,GAAQgJ,SACV,EAAApH,EAAA2C,MAAK,qCAGP,IAAIxE,eAAmBk9B,EAASzwB,QAA5B,IAAuCywB,EAASn3B,KAAhD,IACAoK,EAAOytB,EAAmBV,EAAUj9B,EACxC,QAAO,EAAAqY,EAAAnW,eAAcpC,EAAM,OAAQC,EAAMmQ,GACtC7P,KAAK,SAACkC,GAAD,MAAcA,GAASmI,IAAI,SAAA0Y,GAAA,MAAKA,GAAE7jB,UAI5C,QAAS49B,GAASr9B,EAAMm9B,EAAUj9B,GAChC,GAAMkQ,GAAOktB,EAAaH,EAAUj9B,GAEhCD,GAAO,EAAA6B,EAAA2K,YAAWzM,GAAM,EAAOm9B,EAASzwB,QAAS,QACrD,QAAO,EAAA6L,EAAAnW,eAAcpC,EAAM,OAAQC,EAAMmQ,GACtC7P,KAAK,SAACkC,GAAD,MAAcvC,GAAQq9B,cAAgB96B,EAAWA,EAAS6qB,OAGpE,QAASgQ,GAAcH,EAAUj9B,GAC/B,GAAsB,UAAlBi9B,EAAS/a,KACX,KAAM,IAAI1e,OAAM,uDAGlB,IAAI0M,IACF0tB,UAAWX,EAASn3B,KACpBkD,OAAQhJ,EAAQgJ,OAChB8F,SAAU9O,EAAQ8O,SAClB+uB,MAAO79B,EAAQ69B,MACfC,KAAM99B,EAAQ89B,KACdC,MAAO/9B,EAAQ+9B,MACfpwB,KAAM3N,EAAQ2N,KAOhB,OAJI3N,GAAQg+B,aACV9tB,EAAKvC,KAAOsvB,EAASj0B,OAAO0B,IAAI,SAAAwpB,GAAA,MAAA4I,MAAS5I,EAAI,WAGxChkB,EAIT,QAASqtB,GAAYz3B,GACnB,MAAOA,GAAKm4B,OAAO,GAAGC,cAAgBp4B,EAAK7H,MAAM,GAGnD,QAASw/B,GAAiBjxB,EAASxD,GAGjC,MAFAA,GAAS,IAAMA,EAAO0B,IAAI,SAAA5E,GAAA,MAAQ,OAASA,IAAMkL,KAAK,KAAO,IAEtDmtB,EAAal6B,QAAQ,qBAAsBuI,EAAQ8Z,eACtCriB,QAAQ,oBAAqB+E,GAU5C,QAASo1B,GAAetvB,GAAuC,GAA7B/O,GAA6BE,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MAAlB+N,EAAkB/N,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAP,KAC7D,IAA0B,YAAtB,mBAAQ6O,GAAR,YAAAqiB,EAAQriB,IACV,QAAS/O,EAAMiO,EAAUc,GAG3B,IAAIrE,GAAO7M,OAAO6M,KAAKqE,EACvB,IAAoB,IAAhBrE,EAAKvK,OACP,KAAM,IAAIsD,OAAM,iBAEhB,OAAOiH,GAAKqmB,OAAO,SAAUuN,EAAK/rB,GAChC,GAAIgsB,EAAer7B,QAAQqP,MAAO,EAChC,KAAM,IAAI9O,OAAM,kDACX,OAAI+6B,GAAet7B,QAAQqP,MAAO,EAChC+rB,EAAI//B,OAAO8/B,EAActvB,EAASwD,GAAIvS,EAAMuS,IAE5C+rB,EAAI//B,OAAO8/B,EAActvB,EAASwD,GAAIvS,EAAKzB,OAAOgU,GAAI,aAY9D,QAASksB,GAAmB1vB,GACjC,GAAI2vB,GAAUL,EAActvB,EAC5B,OAAO2vB,GAAQ3N,OAAO,SAAUuN,EAAK3tB,GAAQ,GAAAguB,GAAAl9B,EACnBkP,EADmB,GACtC3Q,EADsC2+B,EAAA,GAChCC,EADgCD,EAAA,GAC5Bn/B,EAD4Bm/B,EAAA,GAEvC90B,EAAQ7J,EAAKiR,KAAK,IAGtB,OAFAqtB,GAAIz0B,GAASy0B,EAAIz0B,OACjBy0B,EAAIz0B,GAAO+0B,GAAMp/B,EACV8+B,OAMX,QAASO,GAAe9vB,EAAUoB,GAChC,GAAI3Q,GAAQuP,EAAA,IACR+vB,EAAQC,EACRC,EAAQC,EACRC,QAEJ,IAAI1/B,EAGF,MAFA2Q,GAAKE,SAAS/K,KAAK9F,GACnB2Q,EAAKG,OAAOhL,KAAK9F,IACV,CAIT,IADAA,EAAQuP,EAAA,IAEN,KAAM,IAAItL,OAAM,mDAuBlB,OApBAjE,GAAQuP,EAAA,KACJvP,IACFs/B,EAAQt/B,GAGVA,EAAQuP,EAAA,KACJvP,IACFw/B,EAAQx/B,EACR0/B,GAAe,GAGjB1/B,EAAQuP,EAAA,IACJvP,IACFw/B,EAAQx/B,EACR0/B,GAAe,GAGjB/uB,EAAKE,SAAS/K,KAAKw5B,GACnB3uB,EAAKG,OAAOhL,KAAK05B,GACI5+B,SAAjB8+B,IAA4B/uB,EAAKK,cAAgB0uB,IAC9C,EAKF,QAAStB,GAAoBV,EAAUxwB,GAC5C,GAAIyyB,IACF9uB,YACAC,UACAygB,QAAQ,GAENqO,EAAsB,KACtBC,EAAqBZ,EAAkB/xB,EAAMqC,SAiCjD,OA/BAmuB,GAASj0B,OAAO6F,QAAQ,SAAUjF,GAChC,GAAIkF,GAAWswB,EAAmBx1B,EAElC,IAAIkF,GAAmC,MAAvBqwB,EACd,KAAM,IAAI37B,OAAM,qBAAuBoG,EAAQ,gBAAkBu1B,EAAsB,oCAClF,IAAIrwB,EAAU,CACnBA,EAASuwB,MAAO,CAChB,IAAIC,GAAcV,EAAc9vB,EAAUowB,EACtCI,KAAaH,EAAsBv1B,OACP,OAAvBu1B,IACTA,EAAsBv1B,EACtBs1B,EAAQ7uB,OAAOhL,KAAK25B,MAIxBphC,OAAO6M,KAAK20B,GAAoBvwB,QAAQ,SAAUjF,GAChD,IAAKw1B,EAAmBx1B,GAAOy1B,KAC7B,KAAM,IAAI77B,OAAM,0BAA4BoG,EAAQ,0BAIpD6C,EAAMuxB,aACRkB,GACElB,YAAY,EACZlN,QAAQ,EACR1gB,SAAU8uB,EAAQ7uB,OAClBA,OAAQ6uB,EAAQ9uB,SAChBG,cAAe2uB,EAAQ3uB,gBAIpB2uB,E/B2pKRthC,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,GAGT,IAAIiC,GAAiB,WAAc,QAASiD,GAAcC,EAAK/G,GAAK,GAAIgH,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAK3E,MAAW,KAAM,IAAK,GAAiC4E,GAA7BC,EAAKN,EAAIO,OAAOC,cAAmBN,GAAMG,EAAKC,EAAGG,QAAQC,QAAoBT,EAAKU,KAAKN,EAAGxF,QAAY5B,GAAKgH,EAAKzE,SAAWvC,GAA3DiH,GAAK,IAAoE,MAAOxB,GAAOyB,GAAK,EAAMC,EAAK1B,EAAO,QAAU,KAAWwB,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAK/G,GAAK,GAAI2H,MAAMC,QAAQb,GAAQ,MAAOA,EAAY,IAAIO,OAAOC,WAAYtH,QAAO8G,GAAQ,MAAOD,GAAcC,EAAK/G,EAAa,MAAM,IAAImB,WAAU,4DAEllBqyB,EAA4B,kBAAXlsB,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU1G,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXyG,SAAyBzG,EAAIc,cAAgB2F,QAAUzG,IAAQyG,OAAOpH,UAAY,eAAkBW,GAEtQ5B,G+Br7Ke05B,c/Bs7Kf15B,E+Bx6Ke6P,Q/By6Kf7P,E+B55Kem6B,a/B65Kfn6B,E+BhyKewhC,gB/BiyKfxhC,E+BtwKe4hC,oB/BuwKf5hC,E+BhtKe+gC,oBA9OhB,IAAA/7B,GAAA1E,EAAA,GACA2vB,EAAA3vB,EAAA,GACAmb,EAAAnb,EAAA,GAqCMqhC,GAAkB,MAAO,MAAO,OAAQ,MAAO,QAC/CD,GAAkB,MAAO,OAAQ,QAGjCH,EAAgB,SAAU11B,GACI,uBAA9BA,EAAIqkB,QAAQxG,eACdlS,KAAKmrB,kBAAmB92B,IAEzBmO,WAAW3S,QAAQ,KAAM,IAAIA,QAAQ,MAAO,IACzC+6B,GAAoBQ,IAAU,KAC9BV,EAAiB,M/BisLjB,SAASjiC,EAAQD,EAASM,GAE/B,YAqCA,SAASqB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GgCpwLjF,QAAS64B,GAAMv3B,EAAfwB,GAAsD,GAAAm+B,GAAAn+B,EAA/BtB,UAA+BG,SAAAs/B,OAAAC,EAAAp+B,EAAjBq+B,WAAiBx/B,SAAAu/B,OAAArS,GAAA,EAAAC,GAAA,EAAAC,EAAAptB,MAAA,KAC3D,OAAAqtB,GAAAC,EAAoBkS,EAApB16B,OAAAC,cAAAmoB,GAAAG,EAAAC,EAAAtoB,QAAAC,MAAAioB,GAAA,EAA8B,IAArB7gB,GAAqBghB,EAAAjuB,KAC5Bg4B,GAAez3B,EAAM0M,EAASxM,IAF2B,MAAAoD,GAAAkqB,GAAA,EAAAC,EAAAnqB,EAAA,aAAAiqB,GAAAI,EAAAC,QAAAD,EAAAC,SAAA,WAAAJ,EAAA,KAAAC,KAQ7D,QAASqS,GAAS9/B,EAAM0M,GAGtB,MAFA1M,GAAK21B,SAAW31B,EAAK21B,aACrB31B,EAAK21B,SAASjpB,GAAW1M,EAAK21B,SAASjpB,OAChC1M,EAAK21B,SAASjpB,GAGhB,QAAS8qB,GAAax3B,GAE3B,MADAA,GAAK21B,SAAW31B,EAAK21B,aACd73B,OAAO6M,KAAK3K,EAAK21B,UAOnB,QAAShE,GAAa3xB,EAAM0M,GACjC,MAAsCrM,UAA/BuxB,EAAY5xB,EAAM0M,GAGpB,QAASklB,GAAa5xB,EAAM0M,GACjC,MAAOozB,GAAQ9/B,EAAM0M,GAASqzB,SAGzB,QAASC,GAAahgC,EAAM0M,EAASqzB,GAE1C,MADA//B,GAAK21B,SAASjpB,GAASqzB,SAAWA,EAC3BnO,EAAY5xB,EAAM0M,GAGpB,QAAS+qB,GAAgBz3B,EAAM0M,GAAuB,GAAdxM,GAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KAO3D,OANK8/B,KACHC,EAAAthC,QAAQspB,OAARiY,EAAAvhC,SAC2C,mBAAhCwhC,8BAA6CF,EAAAthC,QAAQspB,OAAOkY,6BACvEH,GAAe,GAGbtO,EAAY3xB,EAAM0M,GACbrL,QAAQoK,QAAQmmB,EAAY5xB,EAAM0M,KAG3CszB,EAAYhgC,EAAM0M,EAAS,GAAAwzB,GAAAthC,QAAY8N,EAASxM,IACzCmgC,EAAcrgC,EAAM0M,GAASnM,KAAK,iBAAMqxB,GAAY5xB,EAAM0M,MAG5D,QAASgrB,GAAiB13B,EAAM0M,GACrC,MAAKilB,GAAY3xB,EAAM0M,GAIhBwrB,EAAwBl4B,EAAM0M,GAClCnM,KAAK,iBAAMu3B,GAAgB93B,EAAM0M,KACjCnM,KAAK,iBAAMqxB,GAAY5xB,EAAM0M,GAASqe,YACtCxqB,KAAK,SAAAkC,GAEJ,MADAu9B,GAAYhgC,EAAM0M,EAASrM,QACpBoC,IARFpB,QAAQoK,SAAQ,GAYpB,QAASksB,GAAoB33B,GAClC,GAAM6/B,GAAWrI,EAAYx3B,GACvB+qB,EAAU,SAACre,GAAD,MAAagrB,GAAgB13B,EAAM0M,GACnD,OAAOrL,SAAQC,IAAIu+B,EAASj1B,IAAImgB,IAGlC,QAASsV,GAAergC,EAAM0M,GAC5B,MAAIA,qBACKklB,EAAY5xB,EAAM0M,GAAS4zB,aAAa7wB,OAAQvG,QAAS,aAE3D7H,QAAQoK,UAOV,QAASmsB,GAAgB53B,EAAM0M,GACpC,MAAyCrM,UAAlCkgC,EAAevgC,EAAM0M,GAG9B,QAAS6zB,GAAgBvgC,EAAM0M,GAC7B,MAAOozB,GAAQ9/B,EAAM0M,GAAS8zB,YAGhC,QAASC,GAAgBzgC,EAAM0M,EAAS8zB,GAEtC,MADAxgC,GAAK21B,SAASjpB,GAAS8zB,YAAcA,EAC9BD,EAAevgC,EAAM0M,GAG9B,QAASg0B,GAAmB1gC,EAAM0M,GAChC,MAAO1M,GAAKa,YACTN,KAAK,SAAAO,GACJ,GAAM6/B,GAAQ7/B,EAAYK,MAAMy/B,aAChC,QAAQ5gC,EAAK8Z,KAAO,SAAWpN,GAASvI,QAAQ,KAAzC,KAAoDw8B,KAIjE,QAASE,GAAuB7gC,EAAM0M,GACpC,MAAOozB,GAAQ9/B,EAAM0M,GAASo0B,mBAGhC,QAASC,GAAuB/gC,EAAM0M,EAASzF,GAE7C,MADAjH,GAAK21B,SAASjpB,GAASo0B,mBAAqB75B,EACrC45B,EAAsB7gC,EAAM0M,GAG9B,QAASmrB,GAAmB73B,EAAM0M,GAAuB,GAAdxM,GAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KAC9D,OAAO4gC,GAAsB/gC,EAAM0M,EAAS,GAAIrL,SAAQ,SAACoK,EAAStE,GAIhE,MAHKwqB,GAAY3xB,EAAM0M,IACrB+qB,EAAez3B,EAAM0M,GAEnBxM,EAAQ8gC,QAAS,EACZ75B,EAAO,GAAIzD,OAAM,oDAGtB,EAAA5B,EAAAwJ,cACFnE,EAAO85B,QACP/gC,EAAQskB,SAAWtkB,EAAQskB,QAAQyc,SAIrCP,GAAkB1gC,EAAM0M,GACrBnM,KAAK,SAAA2D,GAAA,MAAOu8B,GAAezgC,EAAM0M,EAChCklB,EAAY5xB,EAAM0M,GAASw0B,UAAUvE,KAAKz4B,EAAKhE,GAAS+T,GAAG,WAAY,SAACktB,GACtEV,EAAezgC,EAAM0M,EAASrM,QAC9BoL,EAAQ01B,GACRjhC,EAAQkhC,YAAclhC,EAAQkhC,WAAWD,KACxCltB,GAAG,QAAS,SAAC3Q,GACI,oCAAdA,EAAIC,MACNvD,EAAKa,YAAYN,KAAK,SAAAkB,GAAqB,GAAnBI,GAAmBJ,EAAnBI,OAAQV,EAAWM,EAAXN,OAC9B,EAAAa,EAAAC,cAAajC,EAAM6B,EAAQV,GACxBZ,KAAK,SAAC2B,GAAD,MAAclC,GAAKmC,gBAAgBN,EAAQK,KAChD3B,KAAK,SAACO,GAAD,MAAiB+2B,GAAkB73B,EAAM0M,EAASxM,QAG5DsE,QAAQC,KAAR,sBAAmCiI,EAAnC,YACAlI,QAAQC,KAAKnB,GACbm9B,EAAezgC,EAAM0M,EAASrM,QAC9B8G,EAAO7D,GACPpD,EAAQskB,SAAWtkB,EAAQskB,QAAQlhB,YAOxC,QAASw0B,GAAiB93B,EAAM0M,GACrC,MAAKklB,GAAY5xB,EAAM0M,IAAakrB,EAAe53B,EAAM0M,GAIlD,GAAIrL,SAAQ,SAAAoK,GACjB,IACEo1B,EAAsB7gC,EAAM0M,GAASnM,KAAK,WACxCkL,MAEF80B,EAAevgC,EAAM0M,GAASnF,SAE9B,MAAOhD,GACPkH,OAXKpK,QAAQoK,UAgBZ,QAASssB,GAAoB/3B,GAClC,GAAM6/B,GAAWrI,EAAYx3B,GACvBqhC,EAAO,SAAC30B,GAAD,MAAaorB,GAAgB93B,EAAM0M,GAChD,OAAOrL,SAAQC,IAAIu+B,EAASj1B,IAAIy2B,IAOlC,QAASC,GAAwBthC,EAAM0M,GACrC,MAAOozB,GAAQ9/B,EAAM0M,GAAS60B,SAGhC,QAASC,GAAwBxhC,EAAM0M,EAAS60B,GAC9CvhC,EAAK21B,SAASjpB,GAAS60B,SAAWA,EAG7B,QAASvJ,GAAwBh4B,EAAM0M,GAC5C,MAAiDrM,UAA1CihC,EAAuBthC,EAAM0M,GAG/B,QAASurB,GAA0Bj4B,EAAM0M,EAAS+0B,GAAqB,GAAdvhC,GAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KAE5E,OAAI63B,GAAuBh4B,EAAM0M,GACxB40B,EAAuBthC,EAAM0M,GAG/B80B,EAAuBxhC,EAAM0M,EAASg1B,YAAY,WACvD,OAAI,EAAA5/B,EAAAwJ,iBAEF9G,SAAQ28B,KAAKF,QAGVrJ,EAAe53B,EAAM0M,IACxBmrB,EAAkB73B,EAAM0M,EAASxM,KAG1B,IAARuhC,IAGE,QAASvJ,GAAyBl4B,EAAM0M,GAK7C,MAJIsrB,GAAuBh4B,EAAM0M,KAC/Bi1B,cAAcL,EAAuBthC,EAAM0M,IAC3C80B,EAAuBxhC,EAAM0M,EAASrM,SAEpCu3B,EAAe53B,EAAM0M,GAChBorB,EAAgB93B,EAAM0M,GAGxBrL,QAAQoK,UAGV,QAAS0sB,GAA4Bn4B,GAC1C,GAAM6/B,GAAWrI,EAAYx3B,GACvBqhC,EAAO,SAAC30B,GAAD,MAAawrB,GAAwBl4B,EAAM0M,GACxD,OAAOrL,SAAQC,IAAIu+B,EAASj1B,IAAIy2B,IhC+/KjCvjC,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,EAAQmkC,wBAA0B5gC,OAClCvD,EgCruLey6B,OhCsuLfz6B,EgCxtLe06B,chCytLf16B,EgChtLe60B,chCitLf70B,EgC7sLe80B,chC8sLf90B,EgC1sLekjC,chC2sLfljC,EgCtsLe26B,iBhCusLf36B,EgCxrLe46B,kBhCyrLf56B,EgC3qLe66B,qBhC4qLf76B,EgC3pLe86B,iBhC4pLf96B,EgC9nLe+6B,oBhC+nLf/6B,EgCvlLeg7B,kBhCwlLfh7B,EgCtkLei7B,qBhCukLfj7B,EgCrjLek7B,yBhCsjLfl7B,EgCljLem7B,2BhCmjLfn7B,EgChiLeo7B,0BhCiiLfp7B,EgCrhLeq7B,4BAnPhB,IAAApL,GAAA3vB,EAAA,GACA4E,EAAA5E,EAAA,GACA0E,EAAA1E,EAAA,GACAwkC,EAAAxkC,EAAA,IhC+wLK8iC,EAAYzhC,EAAuBmjC,GgC9wLxCC,EAAAzkC,EAAA,IhCkxLK+iC,EAAgB1hC,EAAuBojC,GgChxL/BZ,4BAA0B,sDAEnChB,GAAe,GhCmjMb,SAASljC,EAAQD,EAASM,GAE/B,YiC3jMD,SAAS0kC,GAAiBC,GACxB,MAAO,UAAU/hC,EAAM2I,EAAK0kB,GAC1B,IAAK1kB,EAAK,KAAM,IAAIjF,OAAM,uBACrB8B,OAAMC,QAAQ4nB,KAAMA,GAAOA,GAEhC,IAAM2U,GAAO3U,EAAIziB,IAAI,SAACrN,GAAD,OAAU6kB,qBAAqB7kB,OAEpD,QAAO,EAAAgb,EAAAnW,eAAcpC,EAAM+hC,EAAME,EAAmBt5B,IAAO3F,KAAMg/B,KAO9D,QAASrL,GAAqB32B,EAAM2I,GACzC,IAAKA,EAAK,KAAM,IAAIjF,OAAM,uBAC1B,QAAO,EAAA6U,EAAAnW,eAAcpC,EAAM,MAAOiiC,EAAmBt5B,IAClDpI,KAAK,SAAC2R,GAAD,MAAWA,GAAMtH,IAAI,SAACioB,GAAD,MAAUA,GAAK/Q,QAGvC,QAAS8U,GAAsB52B,EAAM2I,EAAKzI,GAC/C,IAAKyI,EAAK,KAAM,IAAIjF,OAAM,uBAC1B,IAAMw+B,GAASpkC,OAAO6M,KAAKzK,GAAS0K,IAAI,SAAA/B,GAAA,eAAgBA,EAAhB,KAAwB3I,EAAQ2I,KAAQqI,KAAK,GAErF,QAAO,EAAAqH,EAAA5V,kBAAiB3C,EAAM,MAAUiiC,EAAmBt5B,GAApD,+BAAuFu5B,GAGhG,QAASD,GAAoBt5B,GAC3B,GAAMyZ,GAAOvV,mBAAmBlE,EAAIia,OAC9BrlB,EAAKsP,mBAAmBlE,EAAImZ,IAClC,gBAAgBM,EAAhB,IAAwB7kB,EAAxB,4BjC+hMDO,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,EAAQ45B,sBAAwB55B,EAAQ25B,mBAAqBp2B,OAC7DvD,EiCnjMe65B,sBjCojMf75B,EiC9iMe85B,sBAvBhB,IAAAre,GAAAnb,EAAA,GACA2vB,EAAA3vB,EAAA,EAaaq5B,sBAAqBqL,EAAgB,QACrCpL,wBAAwBoL,EAAgB,WjCsmM/C,SAAS/kC,EAAQD,EAASM,GAE/B,YkCrnMM,SAASi7B,GAAWr4B,GACzB,OAAO,EAAAuY,EAAAnW,eAAcpC,EAAM,MAApB,wBAGF,QAASs4B,GAAkBt4B,EAAMmiC,EAAmBC,GACzD,OAAO,EAAA7pB,EAAAnW,eAAcpC,EAAM,MAApB,wBACLqiC,mBAAoBF,EACpBG,eAAgBF,IAIb,QAAS7J,GAAav4B,GAC3B,OAAO,EAAAuY,EAAAnW,eAAcpC,EAAM,MAApB,sBAGF,QAASw4B,GAAgBx4B,EAAMlB,GACpC,OAAO,EAAAyZ,EAAAnW,eAAcpC,EAAM,MAApB,qBAAiDlB,GAGnD,QAAS25B,GAAYz4B,GAC1B,OAAO,EAAAuY,EAAAnW,eAAcpC,EAAM,MAApB,qBAGF,QAAS04B,GAAkB14B,EAAMzC,GACtC,OAAO,EAAAgb,EAAAnW,eAAcpC,EAAM,SAApB,qBAAmDzC,GAGrD,QAASo7B,GAAgB34B,GAC9B,OAAO,EAAAuY,EAAAnW,eAAcpC,EAAM,OAAQ,0BlC2lMpClC,OAAO4G,eAAe5H,EAAS,cAC7B2C,OAAO,IAET3C,EkC1nMeu7B,YlC2nMfv7B,EkCvnMew7B,mBlCwnMfx7B,EkCjnMey7B,clCknMfz7B,EkC9mMe07B,iBlC+mMf17B,EkC3mMe27B,alC4mMf37B,EkCxmMe47B,mBlCymMf57B,EkCrmMe67B,gBA7BhB,IAAApgB,GAAAnb,EAAA,IlCuqMM,SAASL,EAAQD,EAASM,ImCvqMhC,SAAAgJ,GAsCA,QAAAm8B,KAIA,2BAAAz+B,kBAAA,mBAAAA,QAAAsC,SAAA,aAAAtC,OAAAsC,QAAAgc,QAMA,mBAAAzD,qBAAA,oBAAAA,UAAAW,gBAAA0b,OAEA,mBAAAl3B,wBAAAU,kBAAAg+B,SAAAh+B,QAAAi+B,WAAAj+B,QAAAk+B,QAGA,mBAAAt3B,iCAAAu3B,WAAAv3B,UAAAu3B,UAAAnc,cAAA8C,MAAA,mBAAA5T,SAAAktB,OAAAC,GAAA,SAEA,mBAAAz3B,iCAAAu3B,WAAAv3B,UAAAu3B,UAAAnc,cAAA8C,MAAA,uBAsBA,QAAAwZ,GAAA5kC,GACA,GAAAqkC,GAAArlC,KAAAqlC,SASA,IAPArkC,EAAA,IAAAqkC,EAAA,SACArlC,KAAA6lC,WACAR,EAAA,WACArkC,EAAA,IACAqkC,EAAA,WACA,IAAAzlC,EAAAkmC,SAAA9lC,KAAA+lC,MAEAV,EAAA,CAEA,GAAA5kC,GAAA,UAAAT,KAAAgmC,KACAhlC,GAAA8L,OAAA,IAAArM,EAAA,iBAKA,IAAA8R,GAAA,EACA0zB,EAAA,CACAjlC,GAAA,GAAAiG,QAAA,uBAAAmlB,GACA,OAAAA,IACA7Z,IACA,OAAA6Z,IAGA6Z,EAAA1zB,MAIAvR,EAAA8L,OAAAm5B,EAAA,EAAAxlC,IAUA,QAAAkN,KAGA,sBAAArG,UACAA,QAAAqG,KACAu4B,SAAArlC,UAAAQ,MAAAd,KAAA+G,QAAAqG,IAAArG,QAAArE,WAUA,QAAA4a,GAAAsoB,GACA,IACA,MAAAA,EACAvmC,EAAA0d,QAAA0R,WAAA,SAEApvB,EAAA0d,QAAA8oB,MAAAD,EAEG,MAAA9+B,KAUH,QAAA2W,KACA,IACA,MAAApe,GAAA0d,QAAA8oB,MACG,MAAA/+B,IAGH,sBAAA6B,IAAA,OAAAA,GACA,MAAAA,GAAAyN,IAAA0vB,MAqBA,QAAAC,KACA,IACA,MAAA1/B,QAAA6nB,aACG,MAAApnB,KA9KHzH,EAAAC,EAAAD,QAAAM,EAAA,IACAN,EAAA+N,MACA/N,EAAAgmC,aACAhmC,EAAAie,OACAje,EAAAoe,OACApe,EAAAylC,YACAzlC,EAAA0d,QAAA,mBAAAipB,SACA,mBAAAA,QAAAjpB,QACAipB,OAAAjpB,QAAAkpB,MACAF,IAMA1mC,EAAA6mC,QACA,gBACA,cACA,YACA,aACA,aACA,WAmCA7mC,EAAA8mC,WAAA/iB,EAAA,SAAAgjB,GACA,IACA,MAAAjhC,MAAAC,UAAAghC,GACG,MAAAvgC,GACH,qCAAAA,EAAA2C,UAkGAnJ,EAAAgnC,OAAA5oB,OnC4rM8Bzd,KAAKX,EAASM,EAAoB,KAI1D,SAASL,EAAQD,EAASM,GoCzzMhC,QAAA2mC,GAAAhB,GACA,GAAAllC,GAAAsK,EAAA,CAEA,KAAAtK,IAAAklC,GACA56B,MAAA,GAAAA,EAAA46B,EAAAja,WAAAjrB,GACAsK,GAAA,CAGA,OAAArL,GAAA6mC,OAAAj6B,KAAAuG,IAAA9H,GAAArL,EAAA6mC,OAAAvjC,QAWA,QAAA4jC,GAAAjB,GAEA,QAAAO,KAEA,GAAAA,EAAAW,QAAA,CAEA,GAAA/kC,GAAAokC,EAGAY,GAAA,GAAAzsB,MACA0sB,EAAAD,GAAAE,GAAAF,EACAhlC,GAAA+jC,KAAAkB,EACAjlC,EAAAmlC,KAAAD,EACAllC,EAAAglC,OACAE,EAAAF,CAIA,QADAhmC,GAAA,GAAAsH,OAAArF,UAAAC,QACAvC,EAAA,EAAmBA,EAAAK,EAAAkC,OAAiBvC,IACpCK,EAAAL,GAAAsC,UAAAtC,EAGAK,GAAA,GAAApB,EAAAwnC,OAAApmC,EAAA,IAEA,gBAAAA,GAAA,IAEAA,EAAAqmC,QAAA,KAIA,IAAA90B,GAAA,CACAvR,GAAA,GAAAA,EAAA,GAAAiG,QAAA,yBAAAmlB,EAAAkb,GAEA,UAAAlb,EAAA,MAAAA,EACA7Z,IACA,IAAAg1B,GAAA3nC,EAAA8mC,WAAAY,EACA,sBAAAC,GAAA,CACA,GAAA9sB,GAAAzZ,EAAAuR,EACA6Z,GAAAmb,EAAAhnC,KAAAyB,EAAAyY,GAGAzZ,EAAA8L,OAAAyF,EAAA,GACAA,IAEA,MAAA6Z,KAIAxsB,EAAAgmC,WAAArlC,KAAAyB,EAAAhB,EAEA,IAAAwmC,GAAApB,EAAAz4B,KAAA/N,EAAA+N,KAAArG,QAAAqG,IAAA85B,KAAAngC,QACAkgC,GAAAnmC,MAAAW,EAAAhB,IAaA,MAVAolC,GAAAP,YACAO,EAAAW,QAAAnnC,EAAAmnC,QAAAlB,GACAO,EAAAf,UAAAzlC,EAAAylC,YACAe,EAAAJ,MAAAa,EAAAhB,GAGA,kBAAAjmC,GAAAy6B,MACAz6B,EAAAy6B,KAAA+L,GAGAA,EAWA,QAAAQ,GAAAT,GACAvmC,EAAAie,KAAAsoB,EAKA,QAHA/1B,IAAA+1B,GAAA,IAAA/1B,MAAA,UACA5G,EAAA4G,EAAAlN,OAEAvC,EAAA,EAAiBA,EAAA6I,EAAS7I,IAC1ByP,EAAAzP,KACAwlC,EAAA/1B,EAAAzP,GAAAsG,QAAA,aACA,MAAAk/B,EAAA,GACAvmC,EAAA8nC,MAAAr/B,KAAA,GAAAq9B,QAAA,IAAAS,EAAA5Y,OAAA,SAEA3tB,EAAA+nC,MAAAt/B,KAAA,GAAAq9B,QAAA,IAAAS,EAAA,OAWA,QAAAyB,KACAhoC,EAAAgnC,OAAA,IAWA,QAAAG,GAAAj+B,GACA,GAAAnI,GAAA6I,CACA,KAAA7I,EAAA,EAAA6I,EAAA5J,EAAA8nC,MAAAxkC,OAAyCvC,EAAA6I,EAAS7I,IAClD,GAAAf,EAAA8nC,MAAA/mC,GAAAwoB,KAAArgB,GACA,QAGA,KAAAnI,EAAA,EAAA6I,EAAA5J,EAAA+nC,MAAAzkC,OAAyCvC,EAAA6I,EAAS7I,IAClD,GAAAf,EAAA+nC,MAAAhnC,GAAAwoB,KAAArgB,GACA,QAGA,UAWA,QAAAs+B,GAAA3sB,GACA,MAAAA,aAAAjU,OAAAiU,EAAA9B,OAAA8B,EAAA1R,QACA0R,EA7LA7a,EAAAC,EAAAD,QAAAknC,EAAAV,MAAAU,EAAAplC,QAAAolC,EACAlnC,EAAAwnC,SACAxnC,EAAAgoC,UACAhoC,EAAAgnC,SACAhnC,EAAAmnC,UACAnnC,EAAAkmC,SAAA5lC,EAAA,IAMAN,EAAA+nC,SACA/nC,EAAA8nC,SAQA9nC,EAAA8mC,aAMA,IAAAQ,IpC+gNM,SAASrnC,EAAQD,GqC5hNvB,QAAAioC,KACA7nC,KAAA8nC,QAAA9nC,KAAA8nC,YACA9nC,KAAA+nC,cAAA/nC,KAAA+nC,eAAA5kC,OAwQA,QAAAulB,GAAAsf,GACA,wBAAAA,GAGA,QAAAC,GAAAD,GACA,sBAAAA,GAGA,QAAAE,GAAAF,GACA,sBAAAA,IAAA,OAAAA,EAGA,QAAAG,GAAAH,GACA,gBAAAA,EAnRAnoC,EAAAD,QAAAioC,EAGAA,iBAEAA,EAAAhnC,UAAAinC,QAAA3kC,OACA0kC,EAAAhnC,UAAAknC,cAAA5kC,OAIA0kC,EAAAO,oBAAA,GAIAP,EAAAhnC,UAAAwnC,gBAAA,SAAAlc,GACA,IAAA8b,EAAA9b,MAAA,GAAA9R,MAAA8R,GACA,KAAArqB,WAAA,8BAEA,OADA9B,MAAA+nC,cAAA5b,EACAnsB,MAGA6nC,EAAAhnC,UAAAuW,KAAA,SAAA8N,GACA,GAAAojB,GAAAC,EAAA/+B,EAAAxI,EAAAL,EAAA6nC,CAMA,IAJAxoC,KAAA8nC,UACA9nC,KAAA8nC,YAGA,UAAA5iB,KACAllB,KAAA8nC,QAAAzhC,OACA6hC,EAAAloC,KAAA8nC,QAAAzhC,SAAArG,KAAA8nC,QAAAzhC,MAAAnD,QAAA,CAEA,GADAolC,EAAArlC,UAAA,GACAqlC,YAAA9hC,OACA,KAAA8hC,EAGA,IAAAliC,GAAA,GAAAI,OAAA,yCAAA8hC,EAAA,IAEA,MADAliC,GAAAoxB,QAAA8Q,EACAliC,EAOA,GAFAmiC,EAAAvoC,KAAA8nC,QAAA5iB,GAEAijB,EAAAI,GACA,QAEA,IAAA7f,EAAA6f,GACA,OAAAtlC,UAAAC,QAEA,OACAqlC,EAAAhoC,KAAAP,KACA,MACA,QACAuoC,EAAAhoC,KAAAP,KAAAiD,UAAA,GACA,MACA,QACAslC,EAAAhoC,KAAAP,KAAAiD,UAAA,GAAAA,UAAA,GACA,MAEA,SACAjC,EAAAsH,MAAAzH,UAAAI,MAAAV,KAAA0C,UAAA,GACAslC,EAAAlnC,MAAArB,KAAAgB,OAEG,IAAAknC,EAAAK,GAIH,IAHAvnC,EAAAsH,MAAAzH,UAAAI,MAAAV,KAAA0C,UAAA,GACAulC,EAAAD,EAAAtnC,QACAuI,EAAAg/B,EAAAtlC,OACAvC,EAAA,EAAeA,EAAA6I,EAAS7I,IACxB6nC,EAAA7nC,GAAAU,MAAArB,KAAAgB,EAGA,WAGA6mC,EAAAhnC,UAAAmW,YAAA,SAAAkO,EAAAujB,GACA,GAAAjoC,EAEA,KAAAkoB,EAAA+f,GACA,KAAA3mC,WAAA,8BA2CA,OAzCA9B,MAAA8nC,UACA9nC,KAAA8nC,YAIA9nC,KAAA8nC,QAAAY,aACA1oC,KAAAoX,KAAA,cAAA8N,EACAwD,EAAA+f,YACAA,cAEAzoC,KAAA8nC,QAAA5iB,GAGAgjB,EAAAloC,KAAA8nC,QAAA5iB,IAEAllB,KAAA8nC,QAAA5iB,GAAA7c,KAAAogC,GAGAzoC,KAAA8nC,QAAA5iB,IAAAllB,KAAA8nC,QAAA5iB,GAAAujB,GANAzoC,KAAA8nC,QAAA5iB,GAAAujB,EASAP,EAAAloC,KAAA8nC,QAAA5iB,MAAAllB,KAAA8nC,QAAA5iB,GAAA3U,SAIA/P,EAHA2nC,EAAAnoC,KAAA+nC,eAGAF,EAAAO,oBAFApoC,KAAA+nC,cAKAvnC,KAAA,GAAAR,KAAA8nC,QAAA5iB,GAAAhiB,OAAA1C,IACAR,KAAA8nC,QAAA5iB,GAAA3U,QAAA,EACAjJ,QAAAjB,MAAA,mIAGArG,KAAA8nC,QAAA5iB,GAAAhiB,QACA,kBAAAoE,SAAAiC,OAEAjC,QAAAiC,UAKAvJ,MAGA6nC,EAAAhnC,UAAAkW,GAAA8wB,EAAAhnC,UAAAmW,YAEA6wB,EAAAhnC,UAAAsI,KAAA,SAAA+b,EAAAujB,GAMA,QAAAE,KACA3oC,KAAAkX,eAAAgO,EAAAyjB,GAEAC,IACAA,GAAA,EACAH,EAAApnC,MAAArB,KAAAiD,YAVA,IAAAylB,EAAA+f,GACA,KAAA3mC,WAAA,8BAEA,IAAA8mC,IAAA,CAcA,OAHAD,GAAAF,WACAzoC,KAAA+W,GAAAmO,EAAAyjB,GAEA3oC,MAIA6nC,EAAAhnC,UAAAqW,eAAA,SAAAgO,EAAAujB,GACA,GAAAI,GAAAC,EAAA5lC,EAAAvC,CAEA,KAAA+nB,EAAA+f,GACA,KAAA3mC,WAAA,8BAEA,KAAA9B,KAAA8nC,UAAA9nC,KAAA8nC,QAAA5iB,GACA,MAAAllB,KAMA,IAJA6oC,EAAA7oC,KAAA8nC,QAAA5iB,GACAhiB,EAAA2lC,EAAA3lC,OACA4lC,GAAA,EAEAD,IAAAJ,GACA/f,EAAAmgB,EAAAJ,WAAAI,EAAAJ,mBACAzoC,MAAA8nC,QAAA5iB,GACAllB,KAAA8nC,QAAA5wB,gBACAlX,KAAAoX,KAAA,iBAAA8N,EAAAujB,OAEG,IAAAP,EAAAW,GAAA,CACH,IAAAloC,EAAAuC,EAAoBvC,KAAA,GACpB,GAAAkoC,EAAAloC,KAAA8nC,GACAI,EAAAloC,GAAA8nC,UAAAI,EAAAloC,GAAA8nC,aAAA,CACAK,EAAAnoC,CACA,OAIA,GAAAmoC,EAAA,EACA,MAAA9oC,KAEA,KAAA6oC,EAAA3lC,QACA2lC,EAAA3lC,OAAA,QACAlD,MAAA8nC,QAAA5iB,IAEA2jB,EAAA/7B,OAAAg8B,EAAA,GAGA9oC,KAAA8nC,QAAA5wB,gBACAlX,KAAAoX,KAAA,iBAAA8N,EAAAujB,GAGA,MAAAzoC,OAGA6nC,EAAAhnC,UAAAsW,mBAAA,SAAA+N,GACA,GAAAvZ,GAAA68B,CAEA,KAAAxoC,KAAA8nC,QACA,MAAA9nC,KAGA,KAAAA,KAAA8nC,QAAA5wB,eAKA,MAJA,KAAAjU,UAAAC,OACAlD,KAAA8nC,WACA9nC,KAAA8nC,QAAA5iB,UACAllB,MAAA8nC,QAAA5iB,GACAllB,IAIA,QAAAiD,UAAAC,OAAA,CACA,IAAAyI,IAAA3L,MAAA8nC,QACA,mBAAAn8B,GACA3L,KAAAmX,mBAAAxL,EAIA,OAFA3L,MAAAmX,mBAAA,kBACAnX,KAAA8nC,WACA9nC,KAKA,GAFAwoC,EAAAxoC,KAAA8nC,QAAA5iB,GAEAwD,EAAA8f,GACAxoC,KAAAkX,eAAAgO,EAAAsjB,OACG,IAAAA,EAEH,KAAAA,EAAAtlC,QACAlD,KAAAkX,eAAAgO,EAAAsjB,IAAAtlC,OAAA,GAIA,cAFAlD,MAAA8nC,QAAA5iB,GAEAllB,MAGA6nC,EAAAhnC,UAAA2nC,UAAA,SAAAtjB,GACA,GAAAwI,EAOA,OAHAA,GAHA1tB,KAAA8nC,SAAA9nC,KAAA8nC,QAAA5iB,GAEAwD,EAAA1oB,KAAA8nC,QAAA5iB,KACAllB,KAAA8nC,QAAA5iB,IAEAllB,KAAA8nC,QAAA5iB,GAAAjkB,YAIA4mC,EAAAhnC,UAAAkoC,cAAA,SAAA7jB,GACA,GAAAllB,KAAA8nC,QAAA,CACA,GAAAkB,GAAAhpC,KAAA8nC,QAAA5iB,EAEA,IAAAwD,EAAAsgB,GACA,QACA,IAAAA,EACA,MAAAA,GAAA9lC,OAEA,UAGA2kC,EAAAkB,cAAA,SAAAE,EAAA/jB,GACA,MAAA+jB,GAAAF,cAAA7jB,KrCykNM,SAASrlB,EAAQD,GsCh2NvB,GAAA2I,GAAAD,MAAAC,QAMAwP,EAAAnX,OAAAC,UAAA+Y,QAmBA/Z,GAAAD,QAAA2I,GAAA,SAAAkS,GACA,QAAAA,GAAA,kBAAA1C,EAAAxX,KAAAka,KtC62NM,SAAS5a,EAAQD,EAASM,GuCx4NhCA,EAAA,IACAL,EAAAD,QAAAoC,KAAAwB,MAAAikC,KAAAzlC,OvCm5NM,SAASnC,EAAQD,GwC32NvB,QAAAkvB,GAAA/W,GAEA,GADAA,EAAAmH,OAAAnH,KACAA,EAAA7U,OAAA,MAGA,GAAAkpB,GAAA,wHAAA8c,KAAAnxB,EACA,IAAAqU,EAAA,CAGA,GAAAD,GAAAzT,WAAA0T,EAAA,IACAlH,GAAAkH,EAAA,UAAA9C,aACA,QAAApE,GACA,YACA,WACA,UACA,SACA,QACA,MAAAiH,GAAAU,CACA,YACA,UACA,QACA,MAAAV,GAAAd,CACA,aACA,WACA,UACA,SACA,QACA,MAAAc,GAAAgd,CACA,eACA,aACA,WACA,UACA,QACA,MAAAhd,GAAA3rB,CACA,eACA,aACA,WACA,UACA,QACA,MAAA2rB,GAAAhB,CACA,oBACA,kBACA,YACA,WACA,SACA,MAAAgB,EACA,SACA,UAYA,QAAAid,GAAAnC,GACA,MAAAA,IAAA5b,EACA7e,KAAA68B,MAAApC,EAAA5b,GAAA,IAEA4b,GAAAkC,EACA38B,KAAA68B,MAAApC,EAAAkC,GAAA,IAEAlC,GAAAzmC,EACAgM,KAAA68B,MAAApC,EAAAzmC,GAAA,IAEAymC,GAAA9b,EACA3e,KAAA68B,MAAApC,EAAA9b,GAAA,IAEA8b,EAAA,KAWA,QAAAqC,GAAArC,GACA,MAAAsC,GAAAtC,EAAA5b,EAAA,QACAke,EAAAtC,EAAAkC,EAAA,SACAI,EAAAtC,EAAAzmC,EAAA,WACA+oC,EAAAtC,EAAA9b,EAAA,WACA8b,EAAA,MAOA,QAAAsC,GAAAtC,EAAA9a,EAAArjB,GACA,KAAAm+B,EAAA9a,GAGA,MAAA8a,GAAA,IAAA9a,EACA3f,KAAAwS,MAAAioB,EAAA9a,GAAA,IAAArjB,EAEA0D,KAAAg9B,KAAAvC,EAAA9a,GAAA,IAAArjB,EAAA,IA/IA,GAAAqiB,GAAA,IACA3qB,EAAA,GAAA2qB,EACAge,EAAA,GAAA3oC,EACA6qB,EAAA,GAAA8d,EACAtc,EAAA,OAAAxB,CAgBAxrB,GAAAD,QAAA,SAAA6a,EAAAzX,GACAA,OACA,IAAAkiB,SAAAzK,EACA,eAAAyK,GAAAzK,EAAAvX,OAAA,EACA,MAAA4rB,GAAArU,EACG,eAAAyK,GAAA7K,MAAAI,MAAA,EACH,MAAAzX,GAAAymC,KACAH,EAAA7uB,GACA2uB,EAAA3uB,EAEA,UAAAjU,OAAA,wDAAAd,KAAAC,UAAA8U,MxCihOM,SAAS5a,EAAQD,GyCnjOvB,YAEA,SAAA8pC,GAAA3xB,EAAA4xB,EAAAC,GAGA,IAFA,GAAAC,GAAA,GACAC,EAAAF,EAAA7xB,EAAA7U,OACA2mC,EAAA3mC,OAAA4mC,GACAD,GAAAF,CAEA,OAAAE,GAGAjqC,EAAA+Z,QAAA,SAAA5B,EAAA4xB,EAAAC,GACA,GAAAC,GAAAH,EAAA3xB,EAAA4xB,EAAAC,EACA,OAAAC,GAAA9xB,GAGAnY,EAAAmqC,SAAA,SAAAhyB,EAAA4xB,EAAAC,GACA,GAAAC,GAAAH,EAAA3xB,EAAA4xB,EAAAC,EACA,OAAA7xB,GAAA8xB,GAGAjqC,EAAAoqC,iBAAA,SAAA7oC,EAAAC,GAEA,GAGAT,GAHAspC,EAAA9oC,EAAA+B,OACAgnC,EAAA9oC,EAAA8B,MAGA,KAAAvC,EAAA,EAAaA,EAAAspC,EAAUtpC,IAAA,CACvB,GAAAA,IAAAupC,EAEA,QAEA,IAAAC,GAAAhpC,EAAA8/B,OAAAtgC,GACAypC,EAAAhpC,EAAA6/B,OAAAtgC,EACA,IAAAwpC,IAAAC,EACA,MAAAD,GAAAC,GAAA,IAIA,MAAAH,GAAAC,GAEA,EAGA,GAOAtqC,EAAAyqC,iBAAA,SAAAC,GAEA,GAAAC,GAAAD,EAAA,EACAlgC,EAAA,EAEA,IACA,GAAAogC,GAAAD,GAAA/9B,KAAAg9B,KAAAc,EAAA,IAAA99B,KAAAwS,MAAAsrB,EAAA,GAEAlgC,GAAAogC,EAAApgC,EACAkgC,EAAAC,EAAA/9B,KAAAg9B,KAAAc,EAAA,IAAA99B,KAAAwS,MAAAsrB,EAAA,UACGA,EAOH,OAJAC,IAAA,MAAAngC,IACAA,EAAA,IAAAA,GAGAA,IzC0jOM,SAASvK,EAAQD,EAASM,G0C9nOhC,YAMA,SAAAyF,GAAAsM,GACA,IAAAA,EACA,iBAIA,cAAAA,IACA,eAEA,MAAAA,GAAA2H,UACA,cAEA,MAAA3H,GAAA2H,UACA,SAEA,MAAAlU,MAAAC,UAAAsM,IAnBA,GAAAsX,GAAArpB,EAAA,IACAgS,EAAAhS,EAAA,IACAiE,EAAA+N,EAAA/N,OAqBAtE,GAAAD,QAAA,SAAAsT,GACA,GAAAu3B,GAAAv3B,EAAAsW,GACA/E,EAAAvR,EAAAuR,SACAimB,EAAAx3B,EAAAxF,IACAi9B,EAAAz3B,EAAA4gB,OACA8W,EAAA13B,EAAA03B,UACAC,EAAA33B,EAAA23B,WAGAC,EAAAnlC,EAAA+kC,GAAA/kC,EAAAglC,GACA,WAEA,KAAAC,GAAAH,EAAAM,aAAA,CACA,GAAAC,GAAAP,EAAAM,aAAAD,EACA,IAAAE,EACA,MAAA7mC,GAAAoK,QAAAy8B,GAIA,MAAAP,GAAAxG,OAAA5gC,KAAA,SAAA4gC,GAOA,QAAAgH,GAAAx/B,GACAA,EAAAkZ,MAAAlZ,EAAAkZ,SACA,IAAAumB,GAAAzmB,CACAymB,GAAAjlC,QAAA,YACAilC,EAAAzmB,EAAA,IAAAA,EAEA,IAAA0mB,GAAA1/B,EAAAkZ,MAAAumB,GAAAz/B,EAAAkZ,MAAAumB,MAEA,KAAAC,EAAAC,GAIA,MADAD,GAAAC,IAAA,EACA3/B,EAjBA,GAAA2/B,GAAAnH,EAAAoH,QAAA,YACAT,EAAA,OAAA14B,EAAApH,IAAAggC,GAkBA,OAAAvhB,GAAAkhB,EAAA,UAAAI,EAAAI,GAAA5nC,KAAA,WACA,MAAAonC,GAAAa,0BAAAF,GAAA/nC,KAAA,SAAAQ,GACA,GAAA2lB,GAAA3lB,EAAA2lB,EACAA,GAAA+hB,iBAAA,CACA,IAAA7mB,IACA5b,KAAAsiC,EACA5hB,KACAihB,WACAe,QAAAf,EAAAe,QACAd,SACAC,YAEA,OAAAjmB,GAAA8E,GAAAxjB,IAAA,kBAAA8I,MAAA,SAAA1I,GAEA,SAAAA,EAAA3B,OACA,KAAA2B,KAES/C,KAAA,SAAAooC,GAST,MARA/mB,GAAAgnB,IAAAD,IAAAC,IAAA,EACAd,IACAH,EAAAM,aAAAN,EAAAM,iBACAN,EAAAM,aAAAD,GAAApmB,EACAA,EAAA8E,GAAAzS,GAAA,6BACA0zB,GAAAM,aAAAD,MAGApmB,Y1C0oOM,SAAS7kB,EAAQD,EAASM,I2CruOhC,SAAAgJ,GAAA,YAqBA,SAAAyiC,GAAA5iC,GACA/I,KAAAyE,OAAA,IACAzE,KAAA8I,KAAA,oBACA9I,KAAA+I,UACA/I,KAAAqG,OAAA,CACA,KACAG,MAAAqC,kBAAA7I,KAAA2rC,GACG,MAAAtkC,KAKH,QAAAukC,GAAA7iC,GACA/I,KAAAyE,OAAA,IACAzE,KAAA8I,KAAA,YACA9I,KAAA+I,UACA/I,KAAAqG,OAAA,CACA,KACAG,MAAAqC,kBAAA7I,KAAA4rC,GACG,MAAAvkC,KAKH,QAAAwkC,GAAA/iC,GAGA,MAAAA,GAAA7C,QAAA,WAAA6C,OAAAsH,MAAA,KAGA,QAAA07B,GAAAva,GAGA,WAAAA,EAAAruB,QAAA,MAAAimB,KAAAoI,EAAA,GAAA1L,KAGA,QAAAkmB,GAAA1yB,EAAAwT,GACA,GAAAmf,GAAAh5B,EAAAqG,EAAA1N,IAAAkhB,EAAAlhB,IACA,YAAAqgC,IAAAh5B,EAAAqG,EAAA9W,MAAAsqB,EAAAtqB,OAGA,QAAA0pC,GAAAC,EAAArL,EAAAC,GAEA,MADAA,MAAA,EACA,gBAAAD,GACAqL,EAAAjrC,MAAA6/B,EAAAD,EAAAC,GACGA,EAAA,EACHoL,EAAAjrC,MAAA6/B,GAEAoL,EAGA,QAAAC,GAAAt5B,GACA,GAAA4H,GAAA5H,EAAAtQ,MAGAgoB,EAAA9P,GAAA,gBAAAA,MAAAmK,KAAA/R,EAAAxS,EACA,OAAAkqB,GAGA,QAAA6hB,GAAA5iB,EAAAniB,GACA,IACAmiB,EAAApS,KAAA,QAAA/P,GACG,MAAAjB,GACHkB,QAAAjB,MACA,qMAIAiB,QAAAjB,MAAAgB,IAIA,QAAAglC,GAAA7iB,EAAApgB,EAAApI,GAGA,IACA,OACAuiB,OAAAna,EAAA/H,MAAA,KAAAL,IAEG,MAAAqG,GAEH,MADA+kC,GAAA5iB,EAAAniB,IACYhB,MAAAgB,IAIZ,QAAAilC,GAAAtpC,EAAAoG,GACA,GAAAmjC,GAAAvpC,EAAAg+B,WAAA,oBACAwL,EAAAxpC,EAAAg+B,WAAA,mBAEA,uBAAAh+B,GAAAupC,IACA,mBAAAvpC,GAAAwpC,IACAx5B,EAAAhQ,EAAAupC,GAAAvpC,EAAAwpC,IAAA,EACA,SAAAb,GAAA,kGAEG,IAAAviC,EAAA0qB,QAAA9wB,EAAA8wB,UAAA,GACH,GAAA9wB,EAAA4mB,aACA,SAAA+hB,GAAA,4CACK,IAAA3oC,EAAAyK,MAAAzK,EAAAyK,KAAAvK,OAAA,IACLF,EAAAypC,QAAAzpC,EAAA0pC,YACA,SAAAf,GAAA,6DAGA,GAAA3oC,EAAA0pC,YAAA,CACA,mBAAA1pC,GAAA0pC,YACA,SAAAf,GAAA,+BAAA3oC,EAAA0pC,YAAA,IAEA,IAAA1pC,EAAA0pC,YAAA,EACA,SAAAf,GAAA,wCACA3oC,EAAA0pC,YAAA,MAKA,QAAAC,GAAApqC,GACA,gBAAAmG,GAEA,SAAAA,EAAAjE,OACA,MAAAlC,EAEA,MAAAmG,IAKA,QAAAkkC,GAAAp6B,GAWA,QAAAq6B,GAAAtiB,EAAA7F,EAAAooB,GAOA,QAAAC,KACA,MAAAjB,GAAAva,GAGAptB,EAAAoK,QAAAy+B,GAEAtoB,EAAA8E,GAAAxjB,IAAAinC,GAAAn+B,MAAA69B,EAAAK,IAGA,QAAAE,GAAAC,GACA,MAAAA,GAAA1/B,KAAAvK,OAIAwhB,EAAA8E,GAAAG,SACAlc,KAAA0/B,EAAA1/B,KACAmc,cAAA,IAJAzlB,EAAAoK,SAAgCmE,UAQhC,QAAA06B,GAAAD,EAAAE,GAIA,OAHAC,MACAC,KAEA5sC,EAAA,EAAA6I,EAAA6jC,EAAA36B,KAAAxP,OAAkDvC,EAAA6I,EAAS7I,IAAA,CAC3D,GAAAkS,GAAAw6B,EAAA36B,KAAA/R,GACA8K,EAAAoH,EAAApH,GACA,IAAAA,IAGA6hC,EAAAjlC,KAAAoD,GACA8hC,EAAA9hC,EAAAmZ,MAAA,EACAnZ,EAAA+hC,UAAAC,EAAAhiC,EAAAmZ,MACAnZ,EAAA+hC,UAAA,CACA,GAAAE,GAAAD,EAAAhiC,EAAAmZ,IACA,UAAA8oB,KACAjiC,EAAAlJ,MAAAmrC,EAAAnrC,QAKA,GAAAorC,GAAA/sC,OAAA6M,KAAAggC,EAiBA,OAhBAE,GAAA97B,QAAA,SAAAlG,GACA,IAAA4hC,EAAA5hC,GAAA,CAEA,GAAAiiC,IACAhpB,IAAAjZ,GAEA+hC,EAAAD,EAAA9hC,EACA,UAAA+hC,KACAE,EAAArrC,MAAAmrC,EAAAnrC,OAEA+qC,EAAAjlC,KAAAulC,MAGAT,EAAA1/B,KAAAyE,EAAA1E,KAAAmgC,EAAArsC,OAAA6rC,EAAA1/B,OACA6/B,EAAAjlC,KAAA8kC,GAEAG,EAhEA,GAAAL,GAAA,cAAA1iB,EACAyiB,GAA0BpoB,IAAAqoB,EAAAx/B,SAC1BogC,EAAAf,EAAAviB,GACAkjB,EAAAI,EAAAJ,yBACAlc,EAAAsc,EAAAtc,OA+DA,OAAAwb,KAAA1pC,KAAA,SAAA8pC,GACA,MAAAD,GAAAC,GAAA9pC,KAAA,SAAAgqC,GACA,MAAAD,GAAAD,EAAAE,OAOA,QAAAS,GAAAppB,EAAAooB,EAAApB,GACA,GAAAqC,GAAA,gBACA,OAAArpB,GAAA8E,GAAAxjB,IAAA+nC,GACAj/B,MAAA69B,GAAuB/nB,IAAAmpB,EAAArC,IAAA,KACvBroC,KAAA,SAAAooC,GACA,GAAAuC,GAAAptC,OAAA6M,KAAAq/B,EACA,OAAA3oC,GAAAC,IAAA4pC,EAAAtgC,IAAA,SAAA6c,GACA,MAAAsiB,GAAAtiB,EAAA7F,EAAAooB,MACOzpC,KAAA,SAAA4qC,GACP,GAAAC,GAAAh8B,EAAA7G,QAAA4iC,EAIA,OAHAxC,GAAAC,MACAwC,EAAA7lC,KAAAojC,GAEA/mB,EAAA8E,GAAA2kB,UAAiC/d,KAAA8d,QAKjC,QAAAE,GAAA1pB,GACA,GAAAD,GAAA,gBAAAC,OAAA5b,KACAoN,EAAAm4B,EAAA5pB,EAIA,OAHAvO,KACAA,EAAAm4B,EAAA5pB,GAAA,GAAA6pB,IAEAp4B,EAGA,QAAAq4B,GAAA7pB,GACA,MAAAxS,GAAAgR,cAAAkrB,EAAA1pB,GAAA,WACA,MAAA8pB,GAAA9pB,OAIA,QAAA8pB,GAAA9pB,GAKA,QAAAtN,GAAAzL,EAAApJ,GACA,GAAAghB,IAAoBljB,GAAAoL,EAAAmZ,IAAAjZ,IAAAsO,EAAAtO,GAGpB,oBAAApJ,IAAA,OAAAA,IACAghB,EAAAhhB,MAAA0X,EAAA1X,IAEAksC,EAAApmC,KAAAkb,GAOA,QAAAmrB,GAAA5B,EAAApB,GACA,kBACA,MAAAoC,GAAAppB,EAAAooB,EAAApB,IAnBA,GAAA+C,GACAhjC,EAYAi/B,EAAAtmB,EAAAM,EAAAgmB,OAAAtzB,GAEAu3B,EAAAjqB,EAAAgnB,KAAA,EAQAx1B,EAAA,GAAAo4B,EAEA,WAAAnqC,GAAA,SAAAoK,EAAAtE,GAEA,QAAA2kC,KACA14B,EAAA24B,SAAAxrC,KAAA,WACAqhB,EAAAgnB,IAAAiD,EACApgC,MAIA,QAAAugC,KAkDA,QAAAxnB,GAAAlhB,GACA6D,EAAA7D,GAlDAse,EAAA+lB,SAAAlZ,SACAwd,WAAA,EACAnlB,cAAA,EACAkU,MAAA,WACAiD,MAAA4N,EACA9N,MAAAmO,IACSj4B,GAAA,oBAAAxR,GACT,GAAA2mC,GAAA3mC,EAAA2mC,OACA,KAAAA,EAAAhpC,OACA,MAAA0rC,IAGA,QADA9B,MACAnsC,EAAA,EAAAqN,EAAAk+B,EAAAhpC,OAA6CvC,EAAAqN,EAAOrN,IAAA,CACpD,GAAAsuC,GAAA/C,EAAAvrC,EACA,UAAAsuC,EAAAxjC,IAAAmZ,IAAA,IACA6pB,KACAhjC,EAAAwjC,EAAAxjC,IAEAA,EAAA+hC,UACAnB,EAAA3nB,EAAA+lB,SAAAC,GAAAj/B,IAEAgjC,EAAA99B,KAAAo7B,EAIA,QADAmD,GADAzB,KAEA9pB,EAAA,EAAAwrB,EAAAV,EAAAvrC,OAAqDygB,EAAAwrB,EAAQxrB,IAAA,CAC7D,GAAAniB,GAAAitC,EAAA9qB,GACAyrB,GAAA5tC,EAAAmK,IAAAnK,EAAAnB,GACA,KAAA2S,EAAAxR,EAAAmK,IAAAujC,IACAE,EAAA/mC,KAAAsb,EAEA,IAAA0rB,GAAAz3B,EAAAw3B,EACA3B,GAAA4B,GAAA7tC,EACA0tC,EAAA1tC,EAAAmK,IAEAmhC,EAAAmC,EAAAxjC,IAAAmZ,MACA6oB,2BACAlc,QAAA0d,EAAA1d,SAGAod,EAAAM,EAAAvD,IAGA,MADAx1B,GAAAmN,IAAAqrB,EAAA5B,EAAA6B,IACAzC,EAAAhpC,OAAA8rC,EACAJ,IAEAE,MACS/3B,GAAA,QAAAuQ,GAOTwnB,MAIA,QAAAQ,GAAA5qB,EAAAwnB,EAAAlpC,GACA,IAAAA,EAAA0pC,mBACA1pC,GAAA0pC,WAGA,IAAA6C,GAAAvsC,EAAAypC,OAAAzpC,EAAA0pC,YAEA/B,EAAArmB,EAAAI,EAAAimB,WAEA6E,KACAC,EAAAzsC,EAAA0pC,WACAR,GAAAr6B,QAAA,SAAAxK,GACA,GAAAqoC,GAAAF,IAAAtsC,OAAA,GACAyI,EAAA4jC,EAAAloC,EAAAsE,IAAA,IAOA,OAJA4jC,IAAAjnC,MAAAC,QAAAoD,IAAA,gBAAA8jC,KACA9jC,IAAAzI,OAAAusC,EAAA9jC,EAAA1K,MAAA,EAAAwuC,GAAA9jC,GAGA+jC,GAAA,IAAA18B,EAAA08B,EAAA/jC,IAAA,MAAAA,IACA+jC,EAAA/jC,IAAAtD,MAAAsD,EAAAtE,EAAAhH,SACAqvC,GAAAntC,MAAA8F,KAAAhB,EAAA9E,YAGAitC,GAAAnnC,MAAmBsD,MACnBA,EAAAtE,EAAAhH,KACAkC,OAAA8E,EAAA9E,UAEA,QAAA5B,GAAA,EAAA6I,EAAAgmC,EAAAtsC,OAAwCvC,EAAA6I,EAAS7I,IAAA,CACjD,GAAA0G,GAAAmoC,EAAA7uC,GACAgvC,EAAAtD,EAAA3nB,EAAA+lB,SAAAE,GAAAtjC,EAAAsE,IAAAtE,EAAA9E,OAAA,GAGA,IAAAotC,EAAAtpC,OAAA,eAAA8iB,KAAAwmB,EAAAtpC,MAAA/D,aAEA,KAAAqtC,GAAAtpC,KAGAgB,GAAA9E,MAAAotC,EAAAtpC,MAAA,KAAAspC,EAAApsB,OACAlc,EAAAsE,IAAAtE,EAAAsE,IAAA,MAGA,OAAY+G,KAAAu5B,EAAAuD,EAAAxsC,EAAA69B,MAAA79B,EAAA89B,OAGZ,QAAA8O,GAAAlrB,EAAAxR,GACA,MAAAhB,GAAAgR,cAAAkrB,EAAA1pB,GAAA,WACA,MAAAmrB,GAAAnrB,EAAAxR,OAIA,QAAA28B,GAAAnrB,EAAAxR,GAUA,QAAA48B,GAAAC,GAEA,MADAA,GAAAnmB,cAAA,EACAlF,EAAA8E,GAAAG,QAAAomB,GAAA1sC,KAAA,SAAAQ,GAEA,MADAmsC,GAAAnsC,EAAAomB,WACApmB,EAAA6O,KAAAhF,IAAA,SAAAtD,GAMA,YAAAA,GAAAqB,KAAA,gBAAArB,GAAAqB,IAAAlJ,OACA,OAAA6H,EAAAqB,IAAAlJ,MAAA,CACA,GAAAkL,GAAA7M,OAAA6M,KAAArD,EAAAqB,IAAAlJ,OAAAoO,OAGAs/B,GAAA,mBACA,MAAAxiC,EAAAwiC,GAAAxiC,EAAAwiC,GACA,MAAA7lC,GAAAqB,IAAAlJ,MAIA,GAAA2tC,GAAAC,EAAAz1B,qBAAAtQ,EAAAqB,IAAAmZ,IACA,QACAjZ,IAAAukC,EAAA,GACA7vC,GAAA6vC,EAAA,GACA3tC,MAAA,SAAA6H,GAAAqB,IAAArB,EAAAqB,IAAAlJ,MAAA,UAMA,QAAA6tC,GAAA19B,GACA,GAAA29B,EAUA,IARAA,EADAC,EACAhB,EAAA5qB,EAAAhS,EAAAQ,IAGA+W,WAAA+lB,EACAO,OAAAzP,EACApuB,QAGAQ,EAAA0W,aAAA,CACA,GAAAokB,GAAA97B,EAAA1E,KAAAkF,EAAAhF,IAAAy+B,GAEA,OAAAznB,GAAA+lB,SAAA9gB,SACAlc,KAAAugC,EACApkB,cAAA,EACAmlB,UAAA77B,EAAA67B,UACAyB,YAAAt9B,EAAAs9B,YACAC,OAAAv9B,EAAAu9B,SACSptC,KAAA,SAAAwmB,GACT,GAAA6mB,KAaA,OAZA7mB,GAAAnX,KAAAb,QAAA,SAAAgB,GACAA,EAAApH,MACAilC,EAAA,IAAA79B,EAAAxS,IAAAwS,EAAApH,OAGAiH,EAAAb,QAAA,SAAAgB,GACA,GAAA0X,GAAA4hB,EAAAt5B,GACApH,EAAAilC,EAAA,IAAAnmB,EACA9e,KACAoH,EAAApH,SAGA4kC,IAGA,MAAAA,GA7EA,GAAAL,GACAM,EAAA5rB,EAAAimB,WAAAz3B,EAAA4gB,UAAA,EACAgN,EAAA5tB,EAAA4tB,MAAA,CACA,oBAAA5tB,GAAAzF,MAAAyF,EAAAzF,KAAAvK,SAEAgQ,EAAA2tB,MAAA,QACA3tB,GAAAzF,KA2EA,IAAApC,GAAA,SAAAmL,GACA,MAAAA,GAAAsd,OAAA,SAAAqT,EAAAwJ,GACA,MAAAxJ,GAAA7lC,OAAAqvC,KAIA,uBAAAz9B,GAAAzF,KAAA,CACA,GAAAA,GAAAyF,EAAAzF,KACAmjC,EAAAnjC,EAAAC,IAAA,SAAA/B,GACA,GAAAokC,IACA38B,SAAAwE,GAAAjM,IACA0H,OAAAuE,GAAAjM,OAEA,OAAAmkC,GAAAC,IAEA,OAAA5rC,GAAAC,IAAAwsC,GAAAvtC,KAAAgI,GAAAhI,KAAA+sC,GAEA,GAAAL,IACA/O,WAAA9tB,EAAA8tB,WAOA,IALA,mBAAA9tB,GAAAE,WACA28B,EAAA38B,SACAwE,EADA1E,EAAA8tB,YACA9tB,EAAAE,cACAF,EAAAE,YAEA,mBAAAF,GAAAG,OAAA,CACA,GAAA4uB,GAAA/uB,EAAAK,iBAAA,CACAL,GAAA8tB,aACAiB,MAGA8N,EAAA18B,OAAAuE,EAAAqqB,GAAA/uB,EAAAG,YAA2EH,EAAAG,SAE3E,sBAAAH,GAAAvH,IAAA,CACA,GAAAklC,GAAAj5B,GAAA1E,EAAAvH,MACAmlC,EAAAl5B,GAAA1E,EAAAvH,QACAokC,GAAA/O,YACA+O,EAAA18B,OAAAw9B,EACAd,EAAA38B,SAAA09B,IAEAf,EAAA38B,SAAAy9B,EACAd,EAAA18B,OAAAy9B,GASA,MANAR,KACA,gBAAAp9B,GAAA2tB,QACAkP,EAAAlP,MAAA3tB,EAAA2tB,OAEAkP,EAAAjP,QAEAgP,EAAAC,GAAA1sC,KAAA+sC,GAIA,QAAAW,GAAAvnB,GACA,MAAAA,GAAAxjB,IAAA,UAAA6kC,GAAAxnC,KAAA,SAAA8pC,GACA,GAAA6D,KACApwC,QAAA6M,KAAA0/B,EAAAxoB,OAAA9S,QAAA,SAAAq5B,GACA,GAAA/6B,GAAA07B,EAAAX,GACA+F,EAAA,WAAA9gC,EAAA,GACAsU,EAAAtU,EAAA,EACA6gC,GAAAC,GAAAD,EAAAC,OACAD,EAAAC,GAAAxsB,IAAA,GAEA,IAAAvR,IACAzF,KAAA7M,OAAA6M,KAAAujC,GACApnB,cAAA,EAEA,OAAAJ,GAAAG,QAAAzW,GAAA7P,KAAA,SAAAQ,GACA,GAAAqtC,KACArtC,GAAA6O,KAAAb,QAAA,SAAAgB,GACA,GAAAs+B,GAAAt+B,EAAAlH,IAAAQ,UAAA,EACAvL,QAAA6M,KAAAujC,EAAAn+B,EAAAlH,MAAAkG,QAAA,SAAA4S,GACA,GAAAymB,GAAAiG,EAAA,IAAA1sB,CAEA0oB,GAAAxoB,MAAAumB,KAGAA,EAAAzmB,EAEA,IAAA2sB,GAAAxwC,OAAA6M,KAAA0/B,EAAAxoB,MAAAumB,IAEAmG,EAAAx+B,EAAApH,KAAAoH,EAAApH,IAAAkZ,OAAA9R,EAAApH,IAAAkZ,MAAAF,EACA2sB,GAAAv/B,QAAA,SAAAy/B,GACAJ,EAAAI,GAAAJ,EAAAI,IAAAD,OAIA,IAAAE,GAAA3wC,OAAA6M,KAAAyjC,GAAAx9B,OAAA,SAAA49B,GACA,OAAAJ,EAAAI,KAEAE,EAAAD,EAAA7jC,IAAA,SAAA4jC,GACA,MAAAp/B,GAAAgR,cAAAkrB,EAAAkD,GAAA,WACA,UAAA9nB,GAAAlnB,YAAAgvC,EAAA9nB,EAAAioB,QAAA5jB,eAGA,OAAA1pB,GAAAC,IAAAotC,GAAAnuC,KAAA,WACA,OAAkBwC,IAAA,QAGb8mC,GAAc9mC,IAAA,KAGnB,QAAA6rC,GAAAloB,EAAApgB,EAAA8J,GACA,mBAAA9J,GAAA,CAEAkjC,EAAAp5B,EAAA9J,EAEA,IAAAuoC,IACAnoB,KACA/E,SAAA,sBACA/W,IAAAtE,EAAAsE,IACAomB,OAAA1qB,EAAA0qB,OACA8W,WAAA,EACAC,aAYA,OAVA+G,GAAAvuB,IAAA,WACA,MAAAwuB,GAAAF,GAAAtuC,KAAA,SAAAqhB,GACA,QAAAotB,KACA,MAAAptB,GAAA8E,GAAAqE,UAEA,MAAA3b,GAAA8Q,IAAAurB,EAAA7pB,GAAArhB,KAAA,WACA,MAAAusC,GAAAlrB,EAAAxR,KACW4+B,OAGXF,EAAA/C,SAGA,GAAA3D,GAAA9hC,EACA+G,EAAA07B,EAAAX,GACA+F,EAAA9gC,EAAA,GACAsU,EAAAtU,EAAA,EACA,OAAAqZ,GAAAxjB,IAAA,WAAAirC,GAAA5tC,KAAA,SAAAoI,GACA,GAAArC,GAAAqC,EAAAkZ,OAAAlZ,EAAAkZ,MAAAF,EAEA,KAAArb,EAEA,SAAAwiC,GAAA,QAAAngC,EAAAmZ,IAAA,sBACAH;AAGAF,EAAA9Y,EAAAgZ,GACA6nB,EAAAp5B,EAAA9J,EAEA,IAAAuoC,IACAnoB,KACA/E,SAAAymB,EACAx9B,IAAAtE,EAAAsE,IACAomB,OAAA1qB,EAAA0qB,OACA+W,aAEA,OAAAgH,GAAAF,GAAAtuC,KAAA,SAAAqhB,GACA,aAAAxR,EAAA6+B,OAAA,iBAAA7+B,EAAA6+B,OACA,iBAAA7+B,EAAA6+B,OACA7oC,EAAAY,SAAA,WACAykC,EAAA7pB,KAGAkrB,EAAAlrB,EAAAxR,IAEAq7B,EAAA7pB,GAAArhB,KAAA,WACA,MAAAusC,GAAAlrB,EAAAxR,SA9fA,GAAA23B,GAAAr4B,EAAA1J,KACAsb,EAAA5R,EAAA4R,OACAE,EAAA9R,EAAA8R,QACAC,EAAA/R,EAAA+R,cAmgBA9U,EAAA,SAAArG,EAAA8J,EAAAhJ,GACA,GAAAsf,GAAAxpB,IACA,mBAAAkT,KACAhJ,EAAAgJ,EACAA,MAEAA,EAAAhB,EAAA1H,QAAA,KAAgC0I,GAEhC,kBAAA9J,KACAA,GAAasE,IAAAtE,GAGb,IAAAW,GAAA5F,EAAAoK,UAAAlL,KAAA,WACA,MAAAquC,GAAAloB,EAAApgB,EAAA8J,IAGA,OADAhB,GAAAvH,iBAAAZ,EAAAG,GACAH,GAGAioC,EAAA9/B,EAAAzH,YAAA,WACA,GAAA+e,GAAAxpB,IACA,OAAA+wC,GAAAvnB,IAGA,QACA/Z,QACAuiC,eAjrBA,GAMArkC,GANAwiC,EAAAjwC,EAAA,GACAouC,EAAApuC,EAAA,IACA8S,EAAAm9B,EAAAn9B,QACA4E,EAAAu4B,EAAAv4B,kBACAqC,EAAAk2B,EAAAl2B,aACA43B,EAAA3xC,EAAA,GAIAyN,GADA,mBAAArG,UAAA,kBAAAA,SAAAqG,IACAu4B,SAAArlC,UAAA4mC,KAAAlnC,KAAA+G,QAAAqG,IAAArG,SAEA,YAEA,IAAA4K,GAAAhS,EAAA,IACAiE,EAAA+N,EAAA/N,QACAkqC,KACAuD,EAAA,GAAAtD,GACAU,EAAA,EAYA98B,GAAA5H,SAAAqhC,EAAAnlC,OAYA0L,EAAA5H,SAAAshC,EAAAplC,OA4oBA3G,EAAAD,QAAAgtC,I3CyuO8BrsC,KAAKX,EAASM,EAAoB,KAI1D,SAASL,EAAQD,EAASM,G4Cp6PhC,YAOA,SAAAouC,KACAtuC,KAAA+J,QAAA,GAAA5F,GAAA,SAAA6F,GAAiDA,MAHjD,GAAA7F,GAAAjE,EAAA,IAAAiE,OAKAmqC,GAAAztC,UAAAwiB,IAAA,SAAAF,GAMA,MALAnjB,MAAA+J,QAAA/J,KAAA+J,QAAA+E,MAAA,cAEGzL,KAAA,WACH,MAAA8f,OAEAnjB,KAAA+J,SAEAukC,EAAAztC,UAAAguC,OAAA,WACA,MAAA7uC,MAAA+J,SAGAlK,EAAAD,QAAA0uC,G5C26PM,SAASzuC,EAAQD,EAASM,G6Cj8PhC,YAIA,SAAAkjC,GAAA5Z,EAAA5V,EAAA1J,GACA0J,EAAAq+B,EAAAr+B,GAEA4V,EAAA0oB,SACA/sC,OAAA,OACA6B,IAAA,SACA5B,KAAAwO,GACG1J,GAGH,QAAA8lB,GAAAxG,EAAA5V,EAAA1J,GACAsf,EAAA0oB,SACA/sC,OAAA,OACA6B,IAAA,QACA5B,KAAAwO,GACG1J,GAGH,QAAAwf,GAAAF,EAAAtf,GACAsf,EAAA0oB,SACA/sC,OAAA,MACA6B,IAAA,UACGkD,GAGH,QAAAioC,GAAA3oB,EAAAnX,EAAAnI,GAGA,GAAAsa,GAAAnS,EAAAmS,KACAU,EAAA7S,EAAA6S,MAAA,OACApc,EAAAuJ,EAAAvJ,IAEA,KAAA0b,EACA,MAAAta,GAAA,GAAA1D,OAAA,oCAGA,KAAAsC,EACA,MAAAoB,GAAA,GAAA1D,OAAA,oCAGA,IAAAQ,GAAA,WAAAwd,EAAAU,EAAApc,GAAA4E,IAAAiC,oBAAAqE,KAAA,IAEAwV,GAAA0oB,SACA/sC,OAAA,SACA6B,OACGkD,GA/CH,GAAA+nC,GAAA/xC,EAAA,GAkDAN,GAAAwjC,cACAxjC,EAAAowB,OACApwB,EAAA8pB,aACA9pB,EAAAuyC,e7Cu8PM,SAAStyC,EAAQD,EAASM,G8C9/PhC,YAYA,SAAAqpB,GAAAC,EAAAe,EAAAd,GACA,MAAA2oB,GAAA7oB,OAAAhpB,KAAAipB,EAAAe,EAAAd,GAGA,QAAA2Z,GAAA5Z,EAAA5V,GAiBA,QAAAy+B,GAAA5mC,GASA,MARAA,GAAAka,MAAA,UAAAla,EAAAse,WACAuoB,GAAA,GAEA7mC,EAAAse,SAAA,QACAte,EAAAkZ,MAAAlZ,EAAAkZ,YAEA4tB,IAAA9mC,EAAAkZ,MAAAF,MAMAhZ,EAAAkZ,MAAAF,IACA/W,KACA1B,OAAAkG,EAAA3G,aAAAqI,EAAArB,MAAAvG,SAEA8nB,OAAA,SACA9wB,SACAwP,IAAAggC,IAIA/mC,GAvCAmI,EAAAq+B,EAAAr+B,EACA,IAAA4+B,GAAAtgC,EAAA3H,MAAAqJ,EAAArB,MACAqB,GAAArB,MAAAH,EAAAwB,EAAArB,OAEAiB,EAAAI,EAAArB,MAEA,IAAAma,GAAAxa,EAAApH,IAAApF,KAAAC,UAAAiO,IAEA6Q,EAAA7Q,EAAA9K,MAAA,OAAA4jB,EAEAykB,EAAAv9B,EAAA4Q,MAAA,OAAAkI,EACA+lB,EAAA,WAAAtB,EAEAmB,GAAA,EACAC,GAAA,CA8BA,OAFA5kC,GAAA,iBAAA8kC,GAEAlpB,EAAAC,EAAAipB,EAAAJ,GAAAhvC,KAAA,WACA,GAAAivC,EACA,SAAA9rC,OAAA,sCACAisC,EACA,2BAEGpvC,KAAA,WAIH,GAAAqvC,GAAAvB,EAAA,IAAA1sB,CACA,OAAAM,GAAAtV,MAAAlP,KAAAipB,EAAAkpB,GACA7R,MAAA,EACA/M,QAAA,IACKzwB,KAAA,WACL,OACAhD,GAAAoyC,EACA3pC,KAAA2b,EACAra,OAAAmoC,EAAA,wBA7EA,GAAArgC,GAAAhS,EAAA,GACAyN,EAAAuE,EAAAvE,IAEAykC,EAAAlyC,EAAA,IACA6kB,EAAA7kB,EAAA,IACA2kB,EAAA3kB,EAAA,GACAsT,EAAAqR,EAAArR,cACApB,EAAAyS,EAAAzS,gBACA6/B,EAAA/xC,EAAA,GA2EAL,GAAAD,QAAAwjC,G9CqgQM,SAASvjC,EAAQD,EAASM,G+C1lQhC,YAKA,SAAAiyC,GAAA3oB,EAAAjX,GAaA,QAAAogC,GAAAlnC,GACA,WAAA7K,OAAA6M,KAAAhC,EAAAkZ,OAAAzhB,QAAAuI,EAAAkZ,MAAAF,IAEcG,IAAA2F,EAAAijB,UAAA,UAGd/hC,GAAAkZ,MAAAF,GACAhZ,GAlBA,IAAA8G,EAAAiS,KACA,SAAAhe,OAAA,8CAGA,KAAA+L,EAAAzJ,KACA,SAAAtC,OAAA,8CAGA,IAAA+jB,GAAAhY,EAAAiS,KACAC,EAAAlS,EAAAzJ,IAYA,OAAAygB,GAAAC,EAAAe,EAAAooB,GAAAtvC,KAAA,WACA,MAAA0hB,GAAAitB,YAAA3wC,MAAAmoB,KACGnmB,KAAA,WACH,OAAYwC,IAAA,KA7BZ,GAAAkf,GAAA7kB,EAAA,IACAqpB,EAAArpB,EAAA,GAgCAL,GAAAD,QAAAuyC,G/CgmQM,SAAStyC,EAAQD,EAASM,GgDnoQhC,YAoBA,SAAA0yC,GAAAjiC,GAEA,QAAAkiC,GAAApnC,GACA,MAAAkF,GAAAjD,IAAA,SAAAkD,GACA,GAAA7E,GAAAyE,EAAAI,GACAlF,EAAAI,EAAAC,GACA+mC,EAAAtnC,EAAAC,EAAAC,EACA,OAAAonC,KAIA,gBAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAAE,EAAAtnC,KACAynC,EAAAL,EAAAG,EAAAvnC,KACA0nC,EAAAngC,EAAAigC,EAAAC,EACA,YAAAC,EACAA,EAGAjhC,EAAAnF,QAAAgmC,EAAAtnC,IAAAmZ,IAAAouB,EAAAvnC,IAAAmZ,MAIA,QAAAwuB,GAAA1gC,EAAAkB,EAAAy/B,GAKA,GAJA3gC,IAAAgB,OAAA,SAAAb,GACA,MAAAygC,GAAAzgC,EAAApH,IAAAmI,EAAA9B,SAAAuhC,KAGAz/B,EAAAjD,KAAA,CAEA,GAAA4iC,GAAAX,EAAAh/B,EAAAjD,KACA+B,KAAA/B,KAAA4iC,GACA,gBAAA3/B,GAAAjD,KAAA,IACA,SAAAF,EAAAmD,EAAAjD,KAAA,MACA+B,IAAA8gC,WAIA,YAAA5/B,IAAA,QAAAA,GAAA,CAEA,GAAAktB,GAAAltB,EAAAktB,MAAA,EACAD,GAAA,SAAAjtB,KAAAitB,MAAAnuB,EAAAxP,QAAA49B,CACApuB,KAAAzR,MAAA6/B,EAAAD,GAEA,MAAAnuB,GAGA,QAAA4gC,GAAA7nC,EAAAqG,EAAAuhC,GACA,MAAAA,GAAAI,MAAA,SAAA7mC,GACA,GAAAmF,GAAAD,EAAAlF,GACAlB,EAAAI,EAAAc,GACAkmC,EAAAtnC,EAAAC,EAAAC,EACA,OAAAmF,GAAAjE,GACA8mC,EAAA9mC,EAAAmF,EAAAtG,GAGAkoC,EAAA5hC,EAAAtG,EAAAC,EAAAonC,KAIA,QAAAa,GAAA5hC,EAAAtG,EAAAC,EAAAonC,GACA,OAAA/gC,GAKAnR,OAAA6M,KAAAsE,GAAA0hC,MAAA,SAAAG,GACA,GAAAC,GAAA9hC,EAAA6hC,EACA,OAAAxnB,GAAAwnB,EAAAnoC,EAAAooC,EAAAnoC,EAAAonC,KAIA,QAAAY,GAAA9mC,EAAAmF,EAAAtG,GAEA,cAAAmB,EACAmF,EAAA+hC,KAAA,SAAAC,GACA,MAAAT,GAAA7nC,EAAAsoC,EAAAnzC,OAAA6M,KAAAsmC,MAIA,SAAAnnC,GACA0mC,EAAA7nC,EAAAsG,EAAAnR,OAAA6M,KAAAsE,KAIAA,EAAAie,KAAA,SAAA+jB,GACA,MAAAT,GAAA7nC,EAAAsoC,EAAAnzC,OAAA6M,KAAAsmC,MAKA,QAAA3nB,GAAAwnB,EAAAnoC,EAAAooC,EAAAnoC,EAAAonC,GACA,IAAAkB,EAAAJ,GACA,SAAAptC,OAAA,qBAAAotC,EACA,0HAGA,OAAAI,GAAAJ,GAAAnoC,EAAAooC,EAAAnoC,EAAAonC,GAGA,QAAAmB,GAAAnB,GACA,yBAAAA,IAAA,OAAAA,EAGA,QAAAoB,GAAApB,GACA,yBAAAA,GAGA,QAAAqB,GAAArB,EAAAe,GACA,GAAAO,GAAAP,EAAA,GACAQ,EAAAR,EAAA,EACA,QAAAO,EACA,SAAA5tC,OAAA,qCAGA,IAAAgS,SAAA47B,EAAA,MAAAA,EACA,SAAA5tC,OAAA,4BAGA,IAAAgS,SAAA67B,EAAA,MAAAA,EACA,SAAA7tC,OAAA,4BAGA,OAAAgS,UAAAs6B,EAAA,MAAAA,GAIAA,EAAAsB,IAAAC,EAGA,QAAAC,GAAAxB,EAAAe,GACA,MAAAA,GAAAC,KAAA,SAAAr5B,GACA,MAAAq4B,aAAAxqC,OACAwqC,EAAA7sC,QAAAwU,IAAA,EAGAq4B,IAAAr4B,IAIA,QAAA85B,GAAAzB,EAAAe,GACA,MAAAA,GAAAJ,MAAA,SAAAh5B,GACA,MAAAq4B,GAAA7sC,QAAAwU,IAAA,IAIA,QAAA+5B,GAAA1B,EAAAe,GACA,MAAAf,GAAA5vC,SAAA2wC,EAGA,QAAAY,GAAA3B,EAAAe,GACA,GAAAa,GAAA,GAAAhP,QAAAmO,EAEA,OAAAa,GAAAvrB,KAAA2pB,GAGA,QAAA6B,GAAA7B,EAAAe,GAEA,OAAAA,GACA,WACA,cAAAf,CACA,eACA,yBACA,cACA,wBACA,cACA,wBACA,aACA,MAAAA,aAAAxqC,MACA,cACA,MAAgB,uBAAAsR,SAAArZ,KAAAuyC,GAGhB,SAAAtsC,OAAAqtC,EAAA,8FAxLA,GAAAtrC,GAAArI,EAAA,IACA8S,EAAA9S,EAAA,GAAA8S,QACA6R,EAAA3kB,EAAA,GACA2Q,EAAAgU,EAAAhU,qBACAL,EAAAqU,EAAArU,OACAC,EAAAoU,EAAApU,SACA3E,EAAA+Y,EAAA/Y,WACAoG,EAAAhS,EAAA,GACAsL,EAAA0G,EAAA1G,gBAqLAwoC,GAEAY,WAAA,SAAAnpC,EAAAooC,EAAAnoC,EAAAonC,GACA,QAAAvqC,EAAAuqC,KAIA,IAAAA,EAAA5vC,SAIA,gBAAA4vC,GAAA,GACAA,EAAAgB,KAAA,SAAAr5B,GACA,MAAA64B,GAAA74B,EAAAo5B,EAAAjzC,OAAA6M,KAAAomC,MAIAf,EAAAgB,KAAA,SAAAr5B,GACA,MAAAk5B,GAAAE,EAAApoC,EAAAC,EAAA+O,QAIAvJ,IAAA,SAAAzF,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAoB,GAAApB,IAAA,IAAA9/B,EAAA8/B,EAAAe,IAGA1iC,KAAA,SAAA1F,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAoB,GAAApB,IAAA9/B,EAAA8/B,EAAAe,IAAA,GAGAziC,IAAA,SAAA3F,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAoB,GAAApB,IAAA9/B,EAAA8/B,EAAAe,GAAA,GAGAviC,KAAA,SAAA7F,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAoB,GAAApB,IAAA9/B,EAAA8/B,EAAAe,IAAA,GAGAtiC,IAAA,SAAA9F,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAoB,GAAApB,IAAA9/B,EAAA8/B,EAAAe,GAAA,GAGAgB,QAAA,SAAAppC,EAAAooC,EAAAnoC,EAAAonC,GAEA,MAAAe,GACAK,EAAApB,IAGAoB,EAAApB,IAGAgC,KAAA,SAAArpC,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAmB,GAAAnB,IAAAqB,EAAArB,EAAAe,IAGApiC,IAAA,SAAAhG,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAe,GAAAJ,MAAA,SAAAsB,GACA,WAAA/hC,EAAA8/B,EAAAiC,MAGAC,IAAA,SAAAvpC,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAmB,GAAAnB,IAAAwB,EAAAxB,EAAAe,IAGAoB,KAAA,SAAAxpC,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAmB,GAAAnB,KAAAwB,EAAAxB,EAAAe,IAGAqB,MAAA,SAAAzpC,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAmB,GAAAnB,IAAA0B,EAAA1B,EAAAe,IAGAsB,KAAA,SAAA1pC,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAvqC,GAAAuqC,IAAAyB,EAAAzB,EAAAe,IAGAuB,OAAA,SAAA3pC,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAAmB,GAAAnB,IAAA2B,EAAA3B,EAAAe,IAGAwB,MAAA,SAAA5pC,EAAAooC,EAAAnoC,EAAAonC,GACA,MAAA6B,GAAA7B,EAAAe,IAIAh0C,GAAAD,QAAAwzC,GhD0oQM,SAASvzC,EAAQD,EAASM,GiDr6QhC,YAmBA,SAAAo1C,GAAA/iC,GAEA,MAAAA,GAAAiS,KAAArY,UAAA,OAAAoG,EAAAzJ,KAGA,QAAAysC,GAAA/rB,EAAAgsB,GACA,GAAAtiC,GAAA3I,EAAAirC,EAwBA,OAnBAtiC,GAAA8tB,YACA,UAAA9tB,IAAA,gBAAAA,GAAAG,SACAH,EAAAG,OAAA,IAEA,YAAAH,IAAA,gBAAAA,GAAAE,WACAF,EAAA2tB,MAAA,KAGA,YAAA3tB,IAAA,gBAAAA,GAAAE,WACAF,EAAAE,SAAA,IAEA,UAAAF,IAAA,gBAAAA,GAAAG,SACAH,EAAA2tB,MAAA,IAGA,OAAA3tB,IAAA,gBAAAA,GAAAvH,MACAuH,EAAA2tB,MAAA,GAGArX,EAAAG,QAAAzW,GAGA,QAAA8c,GAAAxG,EAAA5V,GAWA,MATAA,GAAA9B,WACA8B,EAAA9B,SAAAE,EAAA4B,EAAA9B,WAEA8B,EAAAjD,OACAiD,EAAAjD,KAAAD,EAAAkD,EAAAjD,OAGAsD,EAAAL,GAEA8V,EAAAF,GAAAnmB,KAAA,SAAAoyC,GAEA,GAAAC,GAAAC,EAAA/hC,EAAA6hC,EAAA3rB,SAEA8rB,EAAAF,EAAAnjC,KAEAoB,GAAAC,EAAAgiC,EAEA,IAAA1iC,GAAAhB,EAAA1H,QAAA,GACAof,cAAA,EACAkK,QAAA,GACK4hB,EAAAG,UAEL,gBAAA3iC,IAAA,UAAAA,IACAF,EAAAE,EAAAE,SAAAF,EAAAG,QAAA,EAEA,OAAc+c,QAGd,IAAA0lB,GAAAliC,EAAAjD,MACA,gBAAAiD,GAAAjD,KAAA,IACA,SAAAF,EAAAmD,EAAAjD,KAAA,GAmBA,OAjBAmlC,KAEA5iC,EAAA8tB,YAAA,EACA9tB,EAAAD,EAAAC,IAGAwiC,EAAArC,eAAAnwC,SAGA,SAAA0Q,KACAV,EAAA2tB,MAAAjtB,EAAAitB,OAEA,QAAAjtB,KACAV,EAAA4tB,KAAAltB,EAAAktB,OAIA38B,EAAAoK,UAAAlL,KAAA,WACA,iBAAAuyC,EAAA9sC,KACA,MAAAysC,GAAA/rB,EAAAtW,EAEA,IAAAw/B,GAAA4C,EAAAM,EACA,OAAA7wB,GAAAtV,MAAAlP,KAAAipB,EAAAkpB,EAAAx/B,KAEK7P,KAAA,SAAAQ,GAELqP,EAAAI,mBAAA,IAGAzP,EAAA6O,KAAAD,EAAA5O,EAAA6O,KAAAQ,EAAAE,SAAAwiC,IAGAF,EAAArC,eAAAnwC,SAEAW,EAAA6O,KAAA0gC,EAAAvvC,EAAA6O,KAAAkB,EAAA8hC,EAAArC,gBAGA,IAAA/vC,IACA8sB,KAAAvsB,EAAA6O,KAAAhF,IAAA,SAAAmF,GACA,GAAApH,GAAAoH,EAAApH,GACA,OAAAmI,GAAA5H,OACAkG,EAAA9F,KAAAX,EAAAmI,EAAA5H,QAEAP,IAQA,OAJAmqC,GAAA/hC,cACAvQ,EAAAyyC,QAAA,mEAGAzyC,MAvIA,GAAA4O,GAAAhS,EAAA,GACAqK,EAAA2H,EAAA3H,MACAmf,EAAAxpB,EAAA,IACA8S,EAAA9S,EAAA,GAAA8S,QACA+R,EAAA7kB,EAAA,IACAy1C,EAAAz1C,EAAA,IACA2kB,EAAA3kB,EAAA,GACAkzC,EAAAlzC,EAAA,IACA8R,EAAA6S,EAAA7S,gBACAtB,EAAAmU,EAAAnU,YACAD,EAAAoU,EAAApU,SACAwD,EAAA4Q,EAAA5Q,oBACAN,EAAAkR,EAAAlR,aACAV,EAAA4R,EAAA5R,eACAR,EAAAoS,EAAApS,qBACAtO,EAAA+N,EAAA/N,OA6HAtE,GAAAD,QAAAowB,GjD46QM,SAASnwB,EAAQD,EAASM,GkD1jRhC,YAgBA,SAAA81C,GAAAzjC,EAAA3F,GAEA,OADAgG,GAAAL,EAAAC,IAAAxG,OAAA0B,IAAA8C,GACA7P,EAAA,EAAA6I,EAAAoJ,EAAA1P,OAA2CvC,EAAA6I,EAAS7I,IAAA,CACpD,GAAAs1C,GAAArjC,EAAAjS,EACA,IAAAiM,IAAAqpC,EACA,SAGA,SAQA,QAAAC,GAAApkC,EAAAlF,GACA,GAAAmF,GAAAD,EAAAlF,GACAgnC,EAAApjC,EAAAuB,EAEA,eAAA6hC,EAKA,QAAAuC,GAAAhiC,EAAA5B,GACA,GAAAK,GAAAL,EAAAC,IAAAxG,OAAA0B,IAAA8C,EAEA,OAAA2D,GAAAlT,QAAA0P,KAAA,SAAAxP,EAAAC,GACA,GAAAg1C,GAAAxjC,EAAA3M,QAAA9E,GACAk1C,EAAAzjC,EAAA3M,QAAA7E,EAOA,OANAg1C,MAAA,IACAA,EAAA9hC,OAAAC,WAEA8hC,KAAA,IACAA,EAAA/hC,OAAAC,WAEArC,EAAAnF,QAAAqpC,EAAAC,KAKA,QAAAC,GAAA/jC,EAAAT,EAAAqC,GAEAA,EAAAgiC,EAAAhiC,EAAA5B,EAIA,QADAgkC,IAAA,EACA51C,EAAA,EAAA6I,EAAA2K,EAAAjR,OAA0CvC,EAAA6I,EAAS7I,IAAA,CACnD,GAAAiM,GAAAuH,EAAAxT,EACA,IAAA41C,IAAAP,EAAAzjC,EAAA3F,GACA,MAAAuH,GAAAlT,MAAAN,EAEAA,GAAA6I,EAAA,GAAA0sC,EAAApkC,EAAAlF,KACA2pC,GAAA,GAGA,SAGA,QAAAC,GAAA1kC,GACA,GAAA9F,KASA,OARApL,QAAA6M,KAAAqE,GAAAD,QAAA,SAAAjF,GACA,GAAAmF,GAAAD,EAAAlF,EACAhM,QAAA6M,KAAAsE,GAAAF,QAAA,SAAAb,GACA,QAAAA,GACAhF,EAAA3D,KAAAuE,OAIAZ,EAGA,QAAAyqC,GAAAC,EAAAnkC,EAAAT,EAAAqC,GACA,GAAA/J,GAAA8H,EAAA7G,QAEAqrC,EAEAJ,EAAA/jC,EAAAT,EAAAqC,GAEAqiC,EAAA1kC,GAGA,OAAAqkC,GAAAjkC,EAAA1E,KAAApD,GAAAmI,GAKA,QAAAokC,GAAA/jC,EAAA6B,EAAAzI,GACA,GAAAyI,EAAA,CAGA,GAAAmiC,GAAA1kC,EAAAxF,gCAAA+H,EAAA7B,GACAikC,EAAA3kC,EAAA7F,0BAAAL,EAAA4G,EAEA,OAAAgkC,IAAAC,EAMA,MAAA3kC,GAAAvF,wBAAAX,EAAA4G,GAIA,QAAAkkC,GAAA/kC,GACA,MAAAglC,GAAA9wC,QAAA8L,MAAA,EAOA,QAAAilC,GAAApkC,EAAAd,GACA,GAAAmlC,GAAArkC,EAAA,GACAb,EAAAD,EAAAmlC,GAEAC,EAAAt2C,OAAA6M,KAAAsE,GAAA+hC,KAAA,SAAAqD,GACA,OAAAL,EAAAK,IAGA,KAAAD,EACA,QAGA,IAAAE,GAAA,IAAAx2C,OAAA6M,KAAAsE,GAAA7O,QACA,QAAAsN,EAAAuB,EAEA,QAAAqlC,EAGA,QAAAC,GAAA9kC,EAAAkC,EAAAzI,EAAA8F,GAEA,GAAAc,GAAAL,EAAAC,IAAAxG,OAAA0B,IAAA8C,GAEA8mC,EAAAX,EAAA/jC,EAAA6B,EAAAzI,EAEA,SAAAsrC,GAIAN,EAAApkC,EAAAd,GAUA,QAAAylC,GAAAzlC,EAAAqC,EAAAM,EAAAqV,GAEA,MAAAA,GAAAgK,OAAA,SAAAjwB,EAAA0O,GACA,GAAAilC,GAAAH,EAAA9kC,EAAAkC,EAAAN,EAAArC,EAIA,OAHA0lC,IACA3zC,EAAAwE,KAAAkK,GAEA1O,OAMA,QAAA4zC,GAAA3lC,EAAAqC,EAAAM,EAAAqV,GAiBA,QAAA4tB,GAAAnlC,GAGA,OAFAK,GAAAL,EAAAC,IAAAxG,OAAA0B,IAAA8C,GACApD,EAAA,EACAzM,EAAA,EAAA6I,EAAAoJ,EAAA1P,OAA6CvC,EAAA6I,EAAS7I,IAAA,CACtD,GAAAs1C,GAAArjC,EAAAjS,EACAg3C,GAAA1B,IACA7oC,IAGA,MAAAA,GAxBA,GAAAwqC,GAAAL,EAAAzlC,EAAAqC,EAAAM,EAAAqV,EAEA,QAAA8tB,EAAA10C,OAAA,CAGA,GAAA20C,GAAA/tB,EAAA,EAEA,OADA+tB,GAAAhkC,aAAA,EACAgkC,EAEA,OAAAD,EAAA10C,OACA,MAAA00C,GAAA,EAGA,IAAAD,GAAAzlC,EAAAlF,cAAAmH,EAcA,OAAAjC,GAAAjF,IAAA2qC,EAAAF,GAGA,QAAAI,GAAAlE,EAAAC,GACA,OAAAD,GACA,UACA,OAAcjoC,IAAAkoC,EACd,YACA,OAAcxgC,OAAAwgC,EACd,YACA,OAAczgC,SAAAygC,EACd,WACA,OACAxgC,OAAAwgC,EACAtgC,eAAA,EAEA,WACA,OACAH,SAAAygC,EACAvgC,iBAAA,IAKA,QAAAykC,GAAAjmC,EAAAS,GACA,GAMAylC,GANAprC,EAAA4D,EAAA+B,EAAAC,IAAAxG,OAAA,IACA+F,EAAAD,EAAAlF,GACAymC,KAEA4E,EAAAr3C,OAAA6M,KAAAsE,EAsBA,OAlBAkmC,GAAApmC,QAAA,SAAA+hC,GAEA,GAAAkD,EAAAlD,GAEA,WADAP,GAAAhrC,KAAAuE,EAIA,IAAAinC,GAAA9hC,EAAA6hC,GAEAsE,EAAAJ,EAAAlE,EAAAC,EAGAmE,GADAA,EACA9lC,EAAA3G,cAAAysC,EAAAE,IAEAA,KAKArC,UAAAmC,EACA3E,kBAIA,QAAA8E,GAAAvE,EAAAC,GACA,OAAAD,GACA,UACA,OACAxgC,SAAAygC,EACAxgC,OAAAwgC,EAEA,YACA,OACAxgC,OAAAwgC,EAEA,YACA,OACAzgC,SAAAygC,EAEA,WACA,OACAxgC,OAAAwgC,EACAtgC,eAAA,EAEA,WACA,OACAH,SAAAygC,EACAvgC,iBAAA,IAKA,QAAA8kC,GAAAtmC,EAAAS,GAWA,QAAAs8B,GAAAluC,GAEA03C,KAAA,GACAjlC,EAAA/K,KAAAiwC,GAEArW,KAAA,GACA5uB,EAAAhL,KAAAkwC,GAIAlF,EAAAzgC,EAAA3R,MAAAN,GAGA,OAjBA03C,GACApW,EANArvB,EAAAL,EAAAC,IAAAxG,OAAA0B,IAAA8C,GAEA6iC,KACAjgC,KACAC,KAkBA1S,EAAA,EAAA6I,EAAAoJ,EAAA1P,OAA2CvC,EAAA6I,EAAS7I,IAAA,CACpD,GAAAs1C,GAAArjC,EAAAjS,GAEAoR,EAAAD,EAAAmkC,EAEA,KAAAlkC,EAAA,CACA88B,EAAAluC,EACA,OACK,GAAAA,EAAA,GACL,UAAAoR,GAAA,CACA88B,EAAAluC,EACA,OAEA,GAAA63C,GACA,OAAAzmC,IAAA,QAAAA,IACA,OAAAA,IAAA,QAAAA,GACA0mC,EAAA73C,OAAA6M,KAAAqE,EAAAc,EAAAjS,EAAA,KACA+3C,EAAAxmC,EAAA7E,YAAAorC,GAAA,QACAE,EAAAzmC,EAAA7E,YAAAorC,EAAA73C,OAAA6M,KAAAsE,IACA6mC,EAAAJ,IAAAE,IAAAC,CACA,IAAAC,EAAA,CACA/J,EAAAluC,EACA,QAQA,OAJAs3C,GAAAr3C,OAAA6M,KAAAsE,GAEAimC,EAAA,KAEAr0B,EAAA,EAAmBA,EAAAs0B,EAAA/0C,OAA0BygB,IAAA,CAC7C,GAAAiwB,GAAAqE,EAAAt0B,GACAkwB,EAAA9hC,EAAA6hC,GAEAzgC,EAAAglC,EAAAvE,EAAAC,EAGAmE,GADAA,EACA9lC,EAAA3G,cAAAysC,EAAA7kC,IAEAA,EAIAC,EAAA/K,KAAA,YAAA2vC,KAAA5kC,SAAAklC,GACAjlC,EAAAhL,KAAA,UAAA2vC,KAAA3kC,OAAAklC,GACA,mBAAAP,KACAK,EAAAL,EAAA1kC,iBAEA,iBAAA0kC,KACA/V,EAAA+V,EAAAzkC,eAIA,GAAA1P,IACAuP,WACAC,SAUA,OAPA,mBAAAglC,KACAx0C,EAAAyP,gBAAA+kC,GAEA,mBAAApW,KACAp+B,EAAA0P,cAAA0uB,IAIA4T,UAAAhyC,EACAwvC,kBAIA,QAAAwF,KACA,OACAhD,WAAgBziC,SAAA,MAEhBigC,mBAIA,QAAAyF,GAAAhnC,EAAAS,GACA,MAAAA,GAAAsB,YACAglC,EAAA/mC,EAAAS,GAGA,IAAAA,EAAAC,IAAAxG,OAAA9I,OAEA60C,EAAAjmC,EAAAS,GAGA6lC,EAAAtmC,EAAAS,GAGA,QAAAojC,GAAAzD,EAAApoB,GAEAnc,EAAA,iBAAAukC,EAEA,IAAApgC,GAAAogC,EAAApgC,SACAnB,EAAAuhC,EAAAvhC,KAEAooC,EAAA7kC,EAAApC,EAAAnB,GAEAwD,EAAA4kC,EAAA/sC,OACAyI,EAAAskC,EAAAtkC,UACAlC,EAAAklC,EAAA3lC,EAAAqC,EAAAM,EAAAqV,GAEAkvB,EAAAF,EAAAhnC,EAAAS,GACAsjC,EAAAmD,EAAAnD,UACAa,EAAAsC,EAAA3F,eAEAA,EAAAoD,EAAAC,EAAAnkC,EAAAT,EAAAqC,GAEAtQ,GACAgyC,YACAtjC,QACA8gC,iBAGA,OADA1lC,GAAA,aAAA9J,GACAA,EAjbA,GAAAqO,GAAAhS,EAAA,GACAyN,EAAAuE,EAAAvE,IACAkX,EAAA3kB,EAAA,GACAsQ,EAAAqU,EAAArU,OACA0D,EAAA2Q,EAAA3Q,cAGAokC,EAAA,KAGAC,GAAkB/V,QA4GlBuU,GAAA,gCA8TAl3C,GAAAD,QAAA+1C,GlDikRM,SAAS91C,EAAQD,EAASM,GmDv/RhC,YAEA,IAAAgS,GAAAhS,EAAA,GACAuK,EAAAyH,EAAAzH,WAEA7K,GAAAwjC,YAAA34B,EAAAvK,EAAA,KACAN,EAAAowB,KAAAvlB,EAAAvK,EAAA,KACAN,EAAA8pB,WAAAjf,EAAAvK,EAAA,KACAN,EAAAuyC,YAAA1nC,EAAAvK,EAAA,MnD6/RM,SAASL,EAAQD,EAASM,GoDrgShC,YAEA,IAAAgS,GAAAhS,EAAA,GAEA+4C,EAAA/4C,EAAA,IACAg5C,EAAAh5C,EAAA,IAEA8qB,IACAA,GAAAoY,YAAAlxB,EAAAzI,UAAA,SAAAmK,EAAA1J,GAEA,mBAAA0J,GACA,MAAA1J,GAAA,GAAA1D,OAAA,uCAGA,IAAAglC,GAAA,SAAAxrC,KAAAklB,OAAA+zB,EAAAC,CAEA1N,GAAApI,YAAApjC,KAAA4T,EAAA1J,KAGA8gB,EAAAgF,KAAA9d,EAAAzI,UAAA,SAAAmK,EAAA1J,GAOA,GALA,mBAAAA,KACAA,EAAA0J,EACAA,EAAAzQ,QAGA,gBAAAyQ,GACA,MAAA1J,GAAA,GAAA1D,OAAA,gDAGA,IAAAglC,GAAA,SAAAxrC,KAAAklB,OAAA+zB,EAAAC,CAEA1N,GAAAxb,KAAAhwB,KAAA4T,EAAA1J,KAGA8gB,EAAAtB,WAAAxX,EAAAzI,UAAA,SAAAS,GAEA,GAAAshC,GAAA,SAAAxrC,KAAAklB,OAAA+zB,EAAAC,CAEA1N,GAAA9hB,WAAA1pB,KAAAkK,KAGA8gB,EAAAmnB,YAAAjgC,EAAAzI,UAAA,SAAA4I,EAAAnI,GAEA,mBAAAmI,GACA,MAAAnI,GAAA,GAAA1D,OAAA,uCAGA,IAAAglC,GAAA,SAAAxrC,KAAAklB,OAAA+zB,EAAAC,CAEA1N,GAAA2G,YAAAnyC,KAAAqS,EAAAnI,KAGArK,EAAAD,QAAAorB,EAGA,mBAAApkB,gBAAAmkB,SACAnkB,OAAAmkB,QAAAC,WpD6gSM,SAASnrB,EAAQD,EAASM,IqDtkShC,SAAAgJ,GAsCA,QAAAm8B,KAIA,2BAAAz+B,iBAAAsC,SAAA,aAAAtC,OAAAsC,QAAAgc,QAMA,mBAAAzD,oBAAAW,iBAAAX,SAAAW,gBAAA0b,OAAArc,SAAAW,gBAAA0b,MAAAqb,kBAEA,mBAAAvyC,gBAAAU,UAAAV,OAAAU,QAAAg+B,SAAA1+B,OAAAU,QAAAi+B,WAAA3+B,OAAAU,QAAAk+B,QAGA,mBAAAt3B,sBAAAu3B,WAAAv3B,UAAAu3B,UAAAnc,cAAA8C,MAAA,mBAAA5T,SAAAktB,OAAAC,GAAA,SAEA,mBAAAz3B,sBAAAu3B,WAAAv3B,UAAAu3B,UAAAnc,cAAA8C,MAAA,uBAsBA,QAAAwZ,GAAA5kC,GACA,GAAAqkC,GAAArlC,KAAAqlC,SASA,IAPArkC,EAAA,IAAAqkC,EAAA,SACArlC,KAAA6lC,WACAR,EAAA,WACArkC,EAAA,IACAqkC,EAAA,WACA,IAAAzlC,EAAAkmC,SAAA9lC,KAAA+lC,MAEAV,EAAA,CAEA,GAAA5kC,GAAA,UAAAT,KAAAgmC,KACAhlC,GAAA8L,OAAA,IAAArM,EAAA,iBAKA,IAAA8R,GAAA,EACA0zB,EAAA,CACAjlC,GAAA,GAAAiG,QAAA,uBAAAmlB,GACA,OAAAA,IACA7Z,IACA,OAAA6Z,IAGA6Z,EAAA1zB,MAIAvR,EAAA8L,OAAAm5B,EAAA,EAAAxlC,IAUA,QAAAkN,KAGA,sBAAArG,UACAA,QAAAqG,KACAu4B,SAAArlC,UAAAQ,MAAAd,KAAA+G,QAAAqG,IAAArG,QAAArE,WAUA,QAAA4a,GAAAsoB,GACA,IACA,MAAAA,EACAvmC,EAAA0d,QAAA0R,WAAA,SAEApvB,EAAA0d,QAAA8oB,MAAAD,EAEG,MAAA9+B,KAUH,QAAA2W,KACA,GAAAoI,EACA,KACAA,EAAAxmB,EAAA0d,QAAA8oB,MACG,MAAA/+B,IAOH,OAJA+e,GAAA,mBAAAld,IAAA,OAAAA,KACAkd,EAAAld,EAAAyN,IAAA0vB,OAGAjgB,EAoBA,QAAAkgB,KACA,IACA,MAAA1/B,QAAA6nB,aACG,MAAApnB,KAjLHzH,EAAAC,EAAAD,QAAAM,EAAA,IACAN,EAAA+N,MACA/N,EAAAgmC,aACAhmC,EAAAie,OACAje,EAAAoe,OACApe,EAAAylC,YACAzlC,EAAA0d,QAAA,mBAAAipB,SACA,mBAAAA,QAAAjpB,QACAipB,OAAAjpB,QAAAkpB,MACAF,IAMA1mC,EAAA6mC,QACA,gBACA,cACA,YACA,aACA,aACA,WAmCA7mC,EAAA8mC,WAAA/iB,EAAA,SAAAgjB,GACA,IACA,MAAAjhC,MAAAC,UAAAghC,GACG,MAAAvgC,GACH,qCAAAA,EAAA2C,UAqGAnJ,EAAAgnC,OAAA5oB,OrD2lS8Bzd,KAAKX,EAASM,EAAoB,KAI1D,SAASL,EAAQD,EAASM,GsD3tShC,QAAA2mC,GAAAhB,GACA,GAAAllC,GAAAsK,EAAA,CAEA,KAAAtK,IAAAklC,GACA56B,MAAA,GAAAA,EAAA46B,EAAAja,WAAAjrB,GACAsK,GAAA,CAGA,OAAArL,GAAA6mC,OAAAj6B,KAAAuG,IAAA9H,GAAArL,EAAA6mC,OAAAvjC,QAWA,QAAA4jC,GAAAjB,GAEA,QAAAO,KAEA,GAAAA,EAAAW,QAAA,CAEA,GAAA/kC,GAAAokC,EAGAY,GAAA,GAAAzsB,MACA0sB,EAAAD,GAAAE,GAAAF,EACAhlC,GAAA+jC,KAAAkB,EACAjlC,EAAAmlC,KAAAD,EACAllC,EAAAglC,OACAE,EAAAF,CAIA,QADAhmC,GAAA,GAAAsH,OAAArF,UAAAC,QACAvC,EAAA,EAAmBA,EAAAK,EAAAkC,OAAiBvC,IACpCK,EAAAL,GAAAsC,UAAAtC,EAGAK,GAAA,GAAApB,EAAAwnC,OAAApmC,EAAA,IAEA,gBAAAA,GAAA,IAEAA,EAAAqmC,QAAA,KAIA,IAAA90B,GAAA,CACAvR,GAAA,GAAAA,EAAA,GAAAiG,QAAA,yBAAAmlB,EAAAkb,GAEA,UAAAlb,EAAA,MAAAA,EACA7Z,IACA,IAAAg1B,GAAA3nC,EAAA8mC,WAAAY,EACA,sBAAAC,GAAA,CACA,GAAA9sB,GAAAzZ,EAAAuR,EACA6Z,GAAAmb,EAAAhnC,KAAAyB,EAAAyY,GAGAzZ,EAAA8L,OAAAyF,EAAA,GACAA,IAEA,MAAA6Z,KAIAxsB,EAAAgmC,WAAArlC,KAAAyB,EAAAhB,EAEA,IAAAwmC,GAAApB,EAAAz4B,KAAA/N,EAAA+N,KAAArG,QAAAqG,IAAA85B,KAAAngC,QACAkgC,GAAAnmC,MAAAW,EAAAhB,IAaA,MAVAolC,GAAAP,YACAO,EAAAW,QAAAnnC,EAAAmnC,QAAAlB,GACAO,EAAAf,UAAAzlC,EAAAylC,YACAe,EAAAJ,MAAAa,EAAAhB,GAGA,kBAAAjmC,GAAAy6B,MACAz6B,EAAAy6B,KAAA+L,GAGAA,EAWA,QAAAQ,GAAAT,GACAvmC,EAAAie,KAAAsoB,GAEAvmC,EAAA+nC,SACA/nC,EAAA8nC,QAKA,QAHAt3B,IAAA,gBAAA+1B,KAAA,IAAA/1B,MAAA,UACA5G,EAAA4G,EAAAlN,OAEAvC,EAAA,EAAiBA,EAAA6I,EAAS7I,IAC1ByP,EAAAzP,KACAwlC,EAAA/1B,EAAAzP,GAAAsG,QAAA,aACA,MAAAk/B,EAAA,GACAvmC,EAAA8nC,MAAAr/B,KAAA,GAAAq9B,QAAA,IAAAS,EAAA5Y,OAAA,SAEA3tB,EAAA+nC,MAAAt/B,KAAA,GAAAq9B,QAAA,IAAAS,EAAA,OAWA,QAAAyB,KACAhoC,EAAAgnC,OAAA,IAWA,QAAAG,GAAAj+B,GACA,GAAAnI,GAAA6I,CACA,KAAA7I,EAAA,EAAA6I,EAAA5J,EAAA8nC,MAAAxkC,OAAyCvC,EAAA6I,EAAS7I,IAClD,GAAAf,EAAA8nC,MAAA/mC,GAAAwoB,KAAArgB,GACA,QAGA,KAAAnI,EAAA,EAAA6I,EAAA5J,EAAA+nC,MAAAzkC,OAAyCvC,EAAA6I,EAAS7I,IAClD,GAAAf,EAAA+nC,MAAAhnC,GAAAwoB,KAAArgB,GACA,QAGA,UAWA,QAAAs+B,GAAA3sB,GACA,MAAAA,aAAAjU,OAAAiU,EAAA9B,OAAA8B,EAAA1R,QACA0R,EAhMA7a,EAAAC,EAAAD,QAAAknC,EAAAV,MAAAU,EAAA,QAAAA,EACAlnC,EAAAwnC,SACAxnC,EAAAgoC,UACAhoC,EAAAgnC,SACAhnC,EAAAmnC,UACAnnC,EAAAkmC,SAAA5lC,EAAA,IAMAN,EAAA+nC,SACA/nC,EAAA8nC,SAQA9nC,EAAA8mC,aAMA,IAAAQ,ItDo7SM,SAASrnC,EAAQD,GuDx6SvB,QAAAkvB,GAAA/W,GAEA,GADAA,EAAAmH,OAAAnH,KACAA,EAAA7U,OAAA,MAGA,GAAAkpB,GAAA,wHAAA8c,KACAnxB,EAEA,IAAAqU,EAAA,CAGA,GAAAD,GAAAzT,WAAA0T,EAAA,IACAlH,GAAAkH,EAAA,UAAA9C,aACA,QAAApE,GACA,YACA,WACA,UACA,SACA,QACA,MAAAiH,GAAAU,CACA,YACA,UACA,QACA,MAAAV,GAAAd,CACA,aACA,WACA,UACA,SACA,QACA,MAAAc,GAAAgd,CACA,eACA,aACA,WACA,UACA,QACA,MAAAhd,GAAA3rB,CACA,eACA,aACA,WACA,UACA,QACA,MAAA2rB,GAAAhB,CACA,oBACA,kBACA,YACA,WACA,SACA,MAAAgB,EACA,SACA,UAYA,QAAAid,GAAAnC,GACA,MAAAA,IAAA5b,EACA7e,KAAA68B,MAAApC,EAAA5b,GAAA,IAEA4b,GAAAkC,EACA38B,KAAA68B,MAAApC,EAAAkC,GAAA,IAEAlC,GAAAzmC,EACAgM,KAAA68B,MAAApC,EAAAzmC,GAAA,IAEAymC,GAAA9b,EACA3e,KAAA68B,MAAApC,EAAA9b,GAAA,IAEA8b,EAAA,KAWA,QAAAqC,GAAArC,GACA,MAAAsC,GAAAtC,EAAA5b,EAAA,QACAke,EAAAtC,EAAAkC,EAAA,SACAI,EAAAtC,EAAAzmC,EAAA,WACA+oC,EAAAtC,EAAA9b,EAAA,WACA8b,EAAA,MAOA,QAAAsC,GAAAtC,EAAA9a,EAAArjB,GACA,KAAAm+B,EAAA9a,GAGA,MAAA8a,GAAA,IAAA9a,EACA3f,KAAAwS,MAAAioB,EAAA9a,GAAA,IAAArjB,EAEA0D,KAAAg9B,KAAAvC,EAAA9a,GAAA,IAAArjB,EAAA,IAlJA,GAAAqiB,GAAA,IACA3qB,EAAA,GAAA2qB,EACAge,EAAA,GAAA3oC,EACA6qB,EAAA,GAAA8d,EACAtc,EAAA,OAAAxB,CAgBAxrB,GAAAD,QAAA,SAAA6a,EAAAzX,GACAA,OACA,IAAAkiB,SAAAzK,EACA,eAAAyK,GAAAzK,EAAAvX,OAAA,EACA,MAAA4rB,GAAArU,EACG,eAAAyK,GAAA7K,MAAAI,MAAA,EACH,MAAAzX,GAAAymC,KAAAH,EAAA7uB,GAAA2uB,EAAA3uB,EAEA,UAAAjU,OACA,wDACAd,KAAAC,UAAA8U,MvDklTA,GAEM,SAAS5a,EAAQD,EAASM,GwDtnThC,YAEA,SAAAgqB,GAAAC,GAA+B,MAAAA,IAAA,gBAAAA,IAAA,WAAAA,KAAA,QAAAA,EAE/B,GAAAC,GAAAF,EAAAhqB,EAAA,KAGAmqB,EAAA,kBAAAlmB,iBAAAimB,CAEAvqB,GAAAD,QAAAyqB,GxD4nTM,SAASxqB,EAAQD,EAASM,IyDroThC,SAAA8gB,GAAA,YAEA,SAAAkJ,GAAAC,GAA+B,MAAAA,IAAA,gBAAAA,IAAA,WAAAA,KAAA,QAAAA,EAe/B,QAAAivB,GAAAC,GACA,yBAAArrB,cAAAqrB,YAAArrB,cACA,mBAAAmE,OAAAknB,YAAAlnB,MAGA,QAAAmnB,GAAA3rB,GACA,qBAAAA,GAAA1sB,MACA,MAAA0sB,GAAA1sB,MAAA,EAGA,IAAAse,GAAA,GAAAyO,aAAAL,EAAAO,YACAqrB,EAAA,GAAA16B,YAAAU,GACAi6B,EAAA,GAAA36B,YAAA8O,EAEA,OADA4rB,GAAAjrB,IAAAkrB,GACAj6B,EAGA,QAAAk6B,GAAAJ,GACA,GAAAA,YAAArrB,aACA,MAAAsrB,GAAAD,EAEA,IAAAK,GAAAL,EAAAK,KACAx0B,EAAAm0B,EAAAn0B,IAEA,yBAAAm0B,GAAAp4C,MACAo4C,EAAAp4C,MAAA,EAAAy4C,EAAAx0B,GAGAm0B,EAAAM,YAAA,EAAAD,EAAAx0B,GAUA,QAAAqD,GAAAhmB,GACA,GAAAo1B,GAAA/2B,OAAAgI,eAAArG,EAEA,WAAAo1B,EACA,QAEA,IAAAiiB,GAAAjiB,EAAAr1B,WACA,yBAAAs3C,IACAA,gBAAAC,GAAAt5C,KAAAq5C,IAAAE,GAGA,QAAAvvC,GAAA8uC,GACA,GAAAU,GACAp5C,EACA6I,CAEA,KAAA6vC,GAAA,gBAAAA,GACA,MAAAA,EAGA,IAAA/wC,MAAAC,QAAA8wC,GAAA,CAEA,IADAU,KACAp5C,EAAA,EAAA6I,EAAA6vC,EAAAn2C,OAAoCvC,EAAA6I,EAAS7I,IAC7Co5C,EAAAp5C,GAAA4J,EAAA8uC,EAAA14C,GAEA,OAAAo5C,GAKA,GAAAV,YAAA9+B,MACA,MAAA8+B,GAAAW,aAGA,IAAAZ,EAAAC,GACA,MAAAI,GAAAJ,EAGA,KAAA9wB,EAAA8wB,GACA,MAAAA,EAGAU,KACA,KAAAp5C,IAAA04C,GAEA,GAAAz4C,OAAAC,UAAAC,eAAAP,KAAA84C,EAAA14C,GAAA,CACA,GAAA4B,GAAAgI,EAAA8uC,EAAA14C,GACA,oBAAA4B,KACAw3C,EAAAp5C,GAAA4B,GAIA,MAAAw3C,GAGA,QAAA5wC,GAAAC,GACA,GAAAC,IAAA,CACA,OAAAC,IAAA,SAAAtI,GAEA,GAAAqI,EAEA,SAAA7C,OAAA,6BAEA6C,IAAA,EACAD,EAAA/H,MAAArB,KAAAgB,KAKA,QAAAyI,GAAAC,GAEA,MAAAJ,IAAA,SAAAtI,GAEAA,EAAAuJ,EAAAvJ,EACA,IAAAgB,GAAAhC,KAEA2J,EAAA,kBAAA3I,KAAAkC,OAAA,IAAAlC,EAAA6I,MACAE,EAAA,GAAAkwC,IAAA,SAAAjwC,EAAAC,GACA,GAAA3G,EACA,KACA,GAAA4G,GAAAf,EAAA,SAAA/C,EAAA+D,GACA/D,EACA6D,EAAA7D,GAEA4D,EAAAG,IAKAnJ,GAAAqH,KAAA6B,GACA5G,EAAAoG,EAAArI,MAAAW,EAAAhB,GACAsC,GAAA,kBAAAA,GAAAD,MACA2G,EAAA1G,GAEO,MAAA+D,GACP4C,EAAA5C,KASA,OALAsC,IACAI,EAAA1G,KAAA,SAAA+G,GACAT,EAAA,KAAAS,IACOT,GAEPI,IAMA,QAAAmwC,GAAApxC,EAAAoB,GACA,QAAAiwC,GAAAn4C,EAAA8G,EAAA9H,GAEA,GAAA2M,GAAAo5B,QAAA,CAEA,OADAqT,IAAAp4C,EAAA8G,QACAnI,EAAA,EAAqBA,EAAAK,EAAAkC,OAAA,EAAqBvC,IAC1Cy5C,EAAA/xC,KAAArH,EAAAL,GAEAgN,IAAAtM,MAAA,KAAA+4C,EAGA,IAAAC,GAAAr5C,IAAAkC,OAAA,EACAlC,KAAAkC,OAAA,YAAAkD,EAAAvC,GACA,GAAAy2C,IAAAt4C,EAAA8G,OACAwxC,KAAAh5C,OACA8E,GAAA,QAAAA,IAAA,UAAAvC,IAEA8J,GAAAtM,MAAA,KAAAi5C,GACAD,EAAAj0C,EAAAvC,KAKA,MAAA4F,GAAAH,GAAA,SAAAtI,GACA,GAAAhB,KAAAu6C,QACA,MAAAN,IAAAhwC,OAAA,GAAAzD,OAAA,sBAEA,IAAAxG,KAAAw6C,WACA,MAAAP,IAAAhwC,OAAA,GAAAzD,OAAA,yBAEA,IAAAxE,GAAAhC,IAEA,OADAm6C,GAAAn4C,EAAA8G,EAAA9H,GACAhB,KAAAy6C,UAAAC,QAWAxwC,EAAA7I,MAAArB,KAAAgB,GAVA,GAAAi5C,IAAA,SAAAjwC,EAAAC,GACAjI,EAAAy4C,UAAAE,QAAA,SAAAC,GACAA,EACA3wC,EAAA2wC,GAEA5wC,EAAAhI,EAAA8G,GAAAzH,MAAAW,EAAAhB,WAUA,QAAAoL,GAAA5K,EAAAkG,GAEA,OADA7D,MACAlD,EAAA,EAAA6I,EAAA9B,EAAAxE,OAAmCvC,EAAA6I,EAAS7I,IAAA,CAC5C,GAAAi9B,GAAAl2B,EAAA/G,EACAi9B,KAAAp8B,KACAqC,EAAA+5B,GAAAp8B,EAAAo8B,IAGA,MAAA/5B,GAGA,QAAAg3C,GAAAlvC,GACA,UAAAA,EAEA,QAAAmvC,GAAAnvC,GACA,MAAAA,GAAAQ,UAAA,GAEA,QAAA4uC,KACA/6C,KAAAg7C,UAoCA,QAAAC,GAAAzkC,GAIA,GAHAxW,KAAAg7C,OAAA,GAAAD,GAGAvkC,GAAAlO,MAAAC,QAAAiO,GACA,OAAA7V,GAAA,EAAA6I,EAAAgN,EAAAtT,OAAuCvC,EAAA6I,EAAS7I,IAChDX,KAAAqjB,IAAA7M,EAAA7V,IAyBA,QAAAu6C,KACA,sBAAAjzC,SAAA,mBAAAkzC,MAAA,mBAAAC,KACA,QAEA,IAAAxd,GAAAh9B,OAAAy6C,yBAAAF,IAAAlzC,OAAAqzC,QACA,OAAA1d,IAAA,OAAAA,IAAAud,IAAAlzC,OAAAqzC,WAAAH,IAwBA,QAAAI,GAAAliC,GACA,MAAAA,GAGA,QAAAmiC,GAAApxC,GACA,QACAvE,GAAAuE,IAKA,QAAAqxC,GAAAjyB,EAAAtW,EAAAhJ,GAiBA,QAAAwxC,KACA,GAAAxP,KACAyP,GAAA9pC,QAAA,SAAAhO,GACAA,EAAAusB,KAAAve,QAAA,SAAAoyB,GACAiI,EAAA7jC,MACAhI,GAAAwD,EAAAxD,GACA+vB,MAAA6T,SAIA/5B,EAAA,MAAoBgiC,YAGpB,QAAA0P,OACAC,IAAAC,GACAJ,IAIA,QAAAK,GAAAC,EAAA37C,EAAA+vB,GACAurB,EAAAK,IAA+B37C,KAAA+vB,QAC/BwrB,IAUA,QAAAK,KAEA,KAAAt7C,GAAAu7C,EAAAh5C,QAAA,CAIA,GAAAi5C,GAAA3vC,KAAAC,IAAA9L,EAAAy7C,GAAAF,EAAAh5C,QACAm5C,EAAAH,EAAAj7C,MAAAN,EAAAw7C,EACAG,GAAAD,EAAA17C,GACAA,GAAA07C,EAAAn5C,QAGA,QAAAo5C,GAAAD,EAAA9L,GACA8L,EAAAxqC,QAAA,SAAA0Y,EAAA5G,GACA,GAAA44B,GAAAhM,EAAA5sB,EACA64B,EAAAC,EAAAz2C,IAAAukB,GAQAmyB,EAAAtwC,EAAAowC,EAAA,gCACAE,GAAAC,UAAAH,EAAA9uC,IAAA,SAAAwkC,GAEA,MAAAA,GAAArsB,MAIA62B,EAAAC,UAAAD,EAAAC,UAAAjpC,OAAA6nC,EAEA,IAAAqB,GAAArB,CAEA,KAAAmB,EAAAC,UAAAz5C,eACAw5C,GAAAC,UAKAC,EAAApB,IAIA,+CAAA3pC,QAAA,SAAAgrC,GACAA,IAAA3pC,KACAwpC,EAAAG,GAAA3pC,EAAA2pC,MAGArzB,EAAAxjB,IAAAukB,EAAAmyB,EAAA,SAAAt2C,EAAAvC,GACA,GAAAuG,EAGAA,GADAhE,IACqBC,MAAAD,IAErBw2C,EAAA/4C,GAEAk4C,EAAAQ,EAAAhyB,EAAAngB,GACA6xC,QAzGA,GAAAa,GAAA5pC,EAAAkd,KAGAqsB,EAAA,GAAAM,GACAD,GAAAjrC,QAAA,SAAAqgC,GACAuK,EAAA5gB,IAAAqW,EAAA7xC,IACAo8C,EAAAz2C,IAAAksC,EAAA7xC,IAAAgI,KAAA6pC,GAEAuK,EAAAnuB,IAAA4jB,EAAA7xC,IAAA6xC,KAIA,IAAA4J,GAAAW,EAAA/C,KACAmC,EAAA,EACAF,EAAA,GAAArzC,OAAAwzC,GA0BAI,IACAO,GAAA5qC,QAAA,SAAAtP,EAAAoJ,GACAuwC,EAAA7zC,KAAAsD,IAGA,IAAAhL,GAAA,CAiEAs7C,KAIA,QAAAe,KACA,yBAAAzW,SACA,mBAAAA,QAAAjpB,SACA,mBAAAipB,QAAAjpB,QAAAkpB,MAgBA,QAAAyW,KACA,MAAAC,IAMA,QAAAC,GAAAn7C,GACAg7C,IACAzW,OAAAjpB,QAAA8/B,UAAApmC,YAAA,SAAA3P,GAEA,MAAAA,EAAAgkC,SAEArpC,EAAAoV,KAAA/P,EAAAg2C,OAAAC,YAGGL,MACH,mBAAAttB,kBACAA,iBAAA,mBAAAtoB,GACArF,EAAAoV,KAAA/P,EAAAsE,OAGA/E,OAAA22C,YAAA,mBAAAl2C,GACArF,EAAAoV,KAAA/P,EAAAsE,QAMA,QAAA6xC,KACAC,GAAA5V,aAAAtnC,KAAAP,MACAA,KAAA09C,cAEAP,EAAAn9C,MAwEA,QAAA29C,GAAAx4C,GAEA,iBAAAmC,SAAAnC,IAAAmC,SAAA,CACA,GAAAtG,GAAAsH,MAAAzH,UAAAI,MAAAV,KAAA0C,UAAA,EACAqE,SAAAnC,GAAA9D,MAAAiG,QAAAtG,IAIA,QAAA48C,GAAAnxC,EAAAQ,GACA,GAAA4wC,GAAA,GACApxC,GAAA+L,SAAA/L,EAAA,OACAQ,EAAAuL,SAAAvL,EAAA,IACAA,UAAAR,EACAQ,GAAAR,GAAA,MAEAQ,GAAA,EAGAA,EAAA4wC,IACApxC,EAAAoxC,GAAA,EACA5wC,EAAA4wC,EAEA,IAAAC,GAAAtxC,KAAA2C,SACA4uC,EAAA9wC,EAAAR,CAEA,UAAAsxC,EAAAD,EAAArxC,GAGA,QAAAuxC,GAAAvxC,GACA,GAAAQ,GAAA,CAIA,OAHAR,KACAQ,EAAA,KAEA2wC,EAAAnxC,EAAAQ,GAKA,QAAAgxC,GAAAx5C,EAAAsT,GACA4lC,EAAA,oBAAAl5C,EAAA,uBAAAsT,GAkCA,QAAAmmC,GAAAz5C,EAAA4B,EAAAqC,GACAlC,MAAAjG,KAAAP,KAAA0I,GACA1I,KAAAyE,SACAzE,KAAA8I,KAAAzC,EACArG,KAAA+I,QAAAL,EACA1I,KAAAqG,OAAA,EAqCA,QAAA83C,GAAA93C,EAAAqC,GACA,QAAA01C,GAAA11C,GAIA,OAAAhI,KAAA2F,GACA,kBAAAA,GAAA3F,KACAV,KAAAU,GAAA2F,EAAA3F,GAIAyC,UAAAuF,IACA1I,KAAA0I,UAIA,MADA01C,GAAAv9C,UAAAq9C,EAAAr9C,UACA,GAAAu9C,GAAA11C,GAGA,QAAA21C,GAAAj4C,GAEA,mBAAAA,GAAA,CACA,GAAAN,GAAAM,CACAA,GAAAk4C,GACAl4C,EAAAN,OAoBA,MAjBA,SAAAM,IAAA,aAAAA,EAAAC,QACAD,EAAA0C,KAAA,WACA1C,EAAA3B,OAAA,KAGA,QAAA2B,KACAA,EAAA0C,KAAA1C,EAAAC,OAAA,WAGA,UAAAD,KACAA,EAAA3B,OAAA,KAGA,WAAA2B,KACAA,EAAA2C,QAAA3C,EAAA2C,SAAA3C,EAAAsC,QAGAtC,EAGA,QAAAm4C,GAAA7qC,EAAAjI,EAAA+yC,GACA,IACA,OAAA9qC,EAAAjI,EAAA+yC,GACG,MAAAp4C,GACH,GAAAq4C,GAAA,0BAAAr4C,EAAAwT,UACA,OAAAukC,GAAAO,GAAAD,IAIA,QAAAE,GAAAzrC,GACA,GAAAsrC,MACAI,EAAA1rC,EAAAQ,QAAA,kBAAAR,GAAAQ,MAGA,OAFA8qC,GAAA/uC,MAAAyD,EAAA2rC,aAEA,SAAA5P,GACAA,EAAAxjC,MAGAwjC,EAAAxjC,OAGA,IAAAqzC,GAAAF,GAAAL,EAAArrC,EAAAQ,OAAAu7B,EAAAxjC,IAAA+yC,EAEA,oBAAAM,GACA,MAAAA,EAGA,IAAAA,EACA,QAGA,IAAA5rC,EAAA0W,cAEK,IAAA1W,EAAAs9B,YACL,OAAAuO,KAAA9P,GAAAxjC,IAAAuzC,aAEA/P,EAAAxjC,IAAAuzC,aAAAl+C,eAAAi+C,KACA9P,EAAAxjC,IAAAuzC,aAAAD,GAAAE,MAAA,cALAhQ,GAAAxjC,GASA,WAIA,QAAAJ,GAAAiY,GAEA,OADAzf,MACAlD,EAAA,EAAA6I,EAAA8Z,EAAApgB,OAAoCvC,EAAA6I,EAAS7I,IAC7CkD,IAAAvC,OAAAgiB,EAAA3iB,GAEA,OAAAkD,GAOA,QAAAqzB,MAsBA,QAAAgoB,GAAA7+C,GACA,GAAA+F,EAQA,IAPA/F,EAEG,gBAAAA,GACH+F,EAAA+3C,EAAAgB,IACG,KAAAh2B,KAAA9oB,KAAA,mBAAA8oB,KAAA9oB,KACH+F,EAAA+3C,EAAAiB,KAJAh5C,EAAA+3C,EAAAkB,IAMAj5C,EACA,KAAAA,GAIA,QAAA2iC,GAAAuW,EAAAp6B,GACA,uBAAAo6B,KAAAvW,cAAA7jB,GACAu4B,GAAA5V,aAAAkB,cAAAuW,EAAAp6B,GAeA,QAAAq6B,GAAAp0B,GACA,IAAAA,EACA,WAEA,IAAAhb,GAAAgb,EAAA/a,MAAA,IACA,YAAAD,EAAAjN,OACAiN,EAEA,IAAAA,EAAAjN,QACAioB,KAEA,KAGA,QAAAq0B,GAAAr0B,GACA,GAAAs0B,GAAAF,EAAAp0B,EACA,OAAAs0B,KAAAzrC,KAAA,UAeA,QAAA0rC,GAAA3nC,GAKA,IAJA,GAAAvX,GAAAm/C,GAAAzW,KAAAnxB,GACA6nC,KACAj/C,EAAA,GAEAA,KAAA,CACA,GAAAgL,GAAA8B,GAAA9M,GACA4B,EAAA/B,EAAAG,IAAA,GACAk/C,GAAA,mBAAA55C,QAAA0F,MAAA,CACAi0C,GAAAj0C,GAAAk0C,EAAAvvC,mBAAA/N,KAUA,MAPAq9C,GAAAE,OACAF,EAAAnyC,GAAA,KAAAxG,QAAA84C,GAAA,SAAAC,EAAAra,EAAAsa,GACAta,IACAia,EAAAE,IAAAna,GAAAsa,KAIAL,EAMA,QAAAr2B,GAAAC,EAAAe,EAAAd,GACA,UAAAwwB,IAAA,SAAAjwC,EAAAC,GACAuf,EAAAxjB,IAAAukB,EAAA,SAAAnkB,EAAAqF,GACA,GAAArF,EAAA,CAEA,SAAAA,EAAA3B,OACA,MAAAwF,GAAA7D,EAEAqF,MAIA,GAAA+e,GAAA/e,EAAAka,KACA8E,EAAAhB,EAAAhe,EAEA,OAAAgf,IAQAA,EAAA7F,IAAA2F,EACAE,EAAA9E,KAAA6E,MACAxgB,GAAA0gB,EAAAlB,EAAAiB,EAAAhB,KAPAzf,GAAwB2gB,SAAA,EAAA9E,IAAA2E,QAYxB,QAAAE,GAAAlB,EAAA/d,EAAAge,GACA,MAAAD,GAAAoB,IAAAnf,GAAApI,KAAA,SAAAQ,GACA,OACA8mB,SAAA,EACA9E,IAAAhiB,EAAAgiB,MAEG,SAAAzf,GAEH,SAAAA,EAAA3B,OACA,KAAA2B,EAEA,OAAAmjB,GAAAC,EAAA/d,EAAAmZ,IAAA6E,KA4CA,QAAAhZ,GAAAyvC,GACA,SAAA1zC,KAAA2C,SAAA+wC,EAEA,QAAAC,GAAA32C,EAAA02C,GACAA,KAAAE,GAAAl9C,MACA,IAAAwkB,GAAA,GACA/mB,GAAA,CAEA,IAAA6I,EAAA,CAEA,OAAA7I,EAAA6I,GACAke,GAAA04B,GAAA3vC,EAAAyvC,GAEA,OAAAx4B,GAKA,OAAA/mB,EAAA,IACA,OAAAA,GACA,OACA,QACA,QACA,QACA+mB,GAAA,GACA,MACA,SACAA,GAAA04B,GAAA,EAAA3vC,EAAA,MACA,MACA,SACAiX,GAAA04B,GAAA3vC,EAAA,KAIA,MAAAiX,GAQA,QAAA24B,GAAAC,GAMA,IALA,GAAAC,GACAC,EACAC,EAEAC,EADAC,EAAAL,EAAAM,SAAA3/C,QAEAy/C,EAAAC,EAAA92C,OAAA,CACA,GAAAg3C,GAAAH,EAAAvwB,IACA2wB,EAAAD,EAAA,GACAE,EAAAL,EAAAK,GACA,IAAAD,EAAA59C,OACA,OAAAvC,GAAA,EAAA6I,EAAAs3C,EAAA59C,OAA4CvC,EAAA6I,EAAS7I,IACrDggD,EAAAt4C,MAAsB04C,MAAA,EAAA5wB,IAAA2wB,EAAAngD,SAFtB,CAMA,GAAAwuB,KAAA0xB,EAAA,GAAA1xB,QACA9uB,EAAAwgD,EAAA,EAEAN,MAAAE,IAAAtxB,EAAAsxB,EACAD,IAAAO,EAAAP,EAAAO,EAAAR,EAAAlgD,KACAkgD,EAAAlgD,EACAmgD,EAAAO,EACAN,EAAAtxB,IAIA,MAAAqxB,GAAA,IAAAD,EAOA,QAAAS,GAAAC,EAAA/2C,GAIA,IAHA,GAEAw2C,GAFAC,EAAAM,EAAAhgD,QAGAy/C,EAAAC,EAAA92C,OAMA,OALAk3C,GAAAL,EAAAK,IACAF,EAAAH,EAAAvwB,IACA2wB,EAAAD,EAAA,GACAK,EACAh3C,EAAA,IAAA42C,EAAA59C,OAAA69C,EAAAF,EAAA,GAAAH,EAAAhpB,IAAAmpB,EAAA,IACAlgD,EAAA,EAAA6I,EAAAs3C,EAAA59C,OAA0CvC,EAAA6I,EAAS7I,IACnDggD,EAAAt4C,MAAoB04C,MAAA,EAAA5wB,IAAA2wB,EAAAngD,GAAA+2B,IAAAwpB,IAKpB,QAAAC,GAAAhgD,EAAAC,GACA,MAAAD,GAAA4/C,IAAA3/C,EAAA2/C,IAGA,QAAAK,GAAAH,GACA,GAAAI,KACAL,GAAAC,EAAA,SAAAK,EAAAP,EAAA1gD,EAAAghC,EAAAnuB,GACAouC,GACAD,EAAAh5C,MAAmBwd,IAAAk7B,EAAA,IAAA1gD,EAAA0gD,MAAA7tC,WAGnBmuC,EAAA1wC,KAAAwwC,GAAA3N,SACA,QAAA7yC,GAAA,EAAA6I,EAAA63C,EAAAn+C,OAAsCvC,EAAA6I,EAAS7I,UAC/C0gD,GAAA1gD,GAAAogD,GAEA,OAAAM,GAMA,QAAAE,GAAAjB,GAIA,OAHAkB,GAAAnB,EAAAC,GACAe,EAAAD,EAAAd,EAAAM,UACA7R,KACApuC,EAAA,EAAA6I,EAAA63C,EAAAn+C,OAAsCvC,EAAA6I,EAAS7I,IAAA,CAC/C,GAAA8gD,GAAAJ,EAAA1gD,EACA8gD,GAAA57B,MAAA27B,GAAAC,EAAAvuC,KAAAic,SACA4f,EAAA1mC,KAAAo5C,EAAA57B,KAGA,MAAAkpB,GAKA,QAAA2S,GAAApB,GACA,GAAAW,KAQA,OAPAD,GAAAV,EAAAM,SAAA,SAAAU,EAAAP,EACAY,EAAAjqB,EAAAxkB,GACA,cAAAA,EAAAzO,QAAA68C,IACAL,EAAA54C,KAAA04C,EAAA,IAAAY,GACAzuC,EAAAzO,OAAA,aAGAw8C,EAIA,QAAAW,GAAAX,GAIA,IAHA,GAEAP,GAFAnqB,KACAoqB,EAAAM,EAAAhgD,QAEAy/C,EAAAC,EAAA92C,OAAA,CACA,GAAAk3C,GAAAL,EAAAK,IACAF,EAAAH,EAAAvwB,IACA9vB,EAAAwgD,EAAA,GACA3tC,EAAA2tC,EAAA,GACAC,EAAAD,EAAA,GACAS,EAAA,IAAAR,EAAA59C,OAEA2+C,EAAAnB,EAAAmB,QAAAnB,EAAAmB,QAAA5gD,UACA4gD,GAAAx5C,MAAkBhI,KAAA6S,SAClBouC,GACA/qB,EAAAluB,MAAkB04C,MAAA,EAAAc,EAAA3+C,OAAAitB,IAAA0xB,GAElB,QAAAlhD,GAAA,EAAA6I,EAAAs3C,EAAA59C,OAA0CvC,EAAA6I,EAAS7I,IACnDggD,EAAAt4C,MAAoB04C,MAAA,EAAA5wB,IAAA2wB,EAAAngD,GAAAkhD,YAGpB,MAAAtrB,GAAAid,UAcA,QAAAsO,GAAA3gD,EAAAC,GACA,MAAAD,GAAA4/C,IAAA3/C,EAAA2/C,IAIA,QAAAgB,GAAAr6C,EAAAknB,EAAAozB,GAIA,IAHA,GAEAC,GAFAC,EAAA,EACAC,EAAAz6C,EAAAxE,OAEAg/C,EAAAC,GACAF,EAAAC,EAAAC,IAAA,EACAH,EAAAt6C,EAAAu6C,GAAArzB,GAAA,EACAszB,EAAAD,EAAA,EAEAE,EAAAF,CAGA,OAAAC,GAIA,QAAAE,IAAA16C,EAAAknB,EAAAozB,GACA,GAAA1oC,GAAAyoC,EAAAr6C,EAAAknB,EAAAozB,EACAt6C,GAAAoF,OAAAwM,EAAA,EAAAsV,GAMA,QAAAyzB,IAAAt/C,EAAAu/C,GAGA,OAFA5iD,GACA+hD,EACA9gD,EAAA2hD,EAAA94C,EAAAzG,EAAAG,OAA6CvC,EAAA6I,EAAS7I,IAAA,CACtD,GAAA+/C,GAAA39C,EAAApC,GACA4hD,GAAA7B,EAAArgD,GAAAqgD,EAAAxtC,QACAuuC,IACAA,EAAA,GAAAp5C,KAAAk6C,GACAd,EAAAc,GAEA7iD,EAAA+hD,EAAAc,EAGA,MAAA7iD,GAIA,QAAA8iD,IAAArhD,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,QAKA,QAAAqhD,IAAAC,EAAAC,GAGA,IAFA,GAAAzsC,KAAgB0sC,MAAAF,EAAAG,MAAAF,IAChB5T,GAAA,EACA74B,EAAAhT,OAAA,IACA,GAAA0rB,GAAA1Y,EAAArM,MACA+4C,EAAAh0B,EAAAg0B,MACAC,EAAAj0B,EAAAi0B,OAEAD,EAAA,GAAAn+C,QAAAo+C,EAAA,GAAAp+C,UACAm+C,EAAA,GAAAn+C,OACA,cAAAm+C,EAAA,GAAAn+C,QACA,cAAAo+C,EAAA,GAAAp+C,OAAA,sBAGA,QAAA9D,GAAA,EAAmBA,EAAAkiD,EAAA,GAAA3/C,OAAqBvC,IACxC,GAAAiiD,EAAA,OAOA,OADAE,IAAA,EACAn/B,EAAA,EAAqBA,EAAAi/B,EAAA,GAAA1/C,OAAqBygB,IAC1Ci/B,EAAA,GAAAj/B,GAAA,KAAAk/B,EAAA,GAAAliD,GAAA,KACAuV,EAAA7N,MAAsBu6C,QAAA,GAAAj/B,GAAAk/B,QAAA,GAAAliD,KACtBmiD,GAAA,EAGAA,KACA/T,EAAA,aACAqT,GAAAQ,EAAA,GAAAC,EAAA,GAAAliD,GAAA6hD,SAdAzT,GAAA,WACA6T,EAAA,MAAAC,EAAA,GAAAliD,GAiBA,OAAUouC,YAAA8R,KAAA6B,GAGV,QAAAK,IAAAlC,EAAA99C,EAAAigD,GACA,GAGAn/C,GAHAo/C,KACAlU,GAAA,EACA+T,GAAA,CAGA,KAAAjC,EAAA39C,OACA,OAAY29C,MAAA99C,GAAAgsC,UAAA,WAGZ,QAAApuC,GAAA,EAAA6I,EAAAq3C,EAAA39C,OAAoCvC,EAAA6I,EAAS7I,IAAA,CAC7C,GAAAuiD,GAAArC,EAAAlgD,EACA,IAAAuiD,EAAAnC,MAAAh+C,EAAAg+C,KAAAmC,EAAA/yB,IAAA,KAAAptB,EAAAotB,IAAA,GAGAtsB,EAAA4+C,GAAAS,EAAA/yB,IAAAptB,EAAAotB,KACA8yB,EAAA56C,MAAoB04C,IAAAmC,EAAAnC,IAAA5wB,IAAAtsB,EAAAg9C,OACpB9R,KAAAlrC,EAAAkrC,UACA+T,GAAA,MACK,IAAAE,KAAA,GAML,GAAAG,GAAAD,EAAAnC,IAAAh+C,EAAAg+C,IAAAmC,EAAAngD,EACAqgD,EAAAF,EAAAnC,IAAAh+C,EAAAg+C,IAAAh+C,EAAAmgD,EACAnd,EAAAqd,EAAArC,IAAAoC,EAAApC,IAEAsC,KAEAC,IAEA,KADAA,EAAAj7C,MAAkB8nB,IAAAgzB,EAAAhzB,IAAA4V,OAAA1W,OAAA,KAAAk0B,UAAA,OAClBD,EAAApgD,OAAA,IACA,GAAA0rB,GAAA00B,EAAAz5C,KACA,QAAA+kB,EAAAmX,KAOA,OADAyd,GAAA50B,EAAAuB,IAAA,GACAxM,EAAA,EAAA8/B,EAAAD,EAAAtgD,OAAsDygB,EAAA8/B,EAAiB9/B,IACvE2/B,EAAAj7C,MACA8nB,IAAAqzB,EAAA7/B,GACAoiB,KAAAnX,EAAAmX,KAAA,EACA1W,OAAAT,EAAAuB,IACAozB,UAAA5/B,QAXAiL,GAAAuB,IAAA,KAAAizB,EAAAjzB,IAAA,IACAkzB,EAAAh7C,KAAAumB,GAeA,GAAA80B,GAAAL,EAAA,EAEAK,IAGA7/C,EAAA4+C,GAAAiB,EAAAvzB,IAAAizB,EAAAjzB,KACAuzB,EAAAr0B,OAAA,GAAAq0B,EAAAH,WAAA1/C,EAAAg9C,KACAoC,EAAA56C,MAAsB04C,IAAAoC,EAAApC,IAAA5wB,IAAAgzB,EAAAhzB,MACtB4e,KAAAlrC,EAAAkrC,UACA+T,GAAA,GANAG,EAAA56C,KAAA66C,OASAD,GAAA56C,KAAA66C,GAWA,MANAJ,IACAG,EAAA56C,KAAAtF,GAGAkgD,EAAAtyC,KAAAmxC,IAGAjB,KAAAoC,EACAlU,aAAA,iBAKA,QAAA4U,IAAA9C,EAAA+C,GAMA,OADAx5C,GAHAmsB,EAAAqrB,EAAAf,GACAgD,KAGAljD,EAAA,EAAA6I,EAAA+sB,EAAArzB,OAAqCvC,EAAA6I,EAAS7I,IAAA,CAW9C,OARAoC,GAAAwzB,EAAA51B,GACAmjD,EAAA/gD,EAAAotB,IACAmyB,EAAA91C,KAAAS,IAAA,EAAA62C,EAAA5gD,OAAA0gD,GACAG,GACAhD,IAAAh+C,EAAAg+C,IAAAuB,EACAnyB,IAAAkyB,GAAAyB,EAAAxB,IAGAn3B,EAAA,EAAmBA,EAAAm3B,EAAgBn3B,IAAA,CACnC,GAAAtF,GAAA9iB,EAAAg+C,IAAA51B,EAAA,IAAA24B,EAAA34B,GAAA9qB,EACAwjD,GAAAh+B,IAAA,EAMAzb,EADAA,EACA24C,GAAA34C,EAAA25C,GAAA,GAAAlD,MAEAkD,GASA,MALA/C,GAAA52C,EAAA,SAAAk3C,EAAAP,EAAAY,SAEAkC,GAAA9C,EAAA,IAAAY,MAIAd,KAAAz2C,EACA62C,KAAArgD,OAAA6M,KAAAo2C,IAIA,QAAAG,IAAAnD,EAAA99C,EAAA6gD,GACA,GAAAK,GAAAlB,GAAAlC,EAAA99C,GACA+gD,EAAAH,GAAAM,EAAApD,KAAA+C,EACA,QACA/C,KAAAiD,EAAAjD,KACAqD,YAAAJ,EAAA7C,KACAlS,UAAAkV,EAAAlV,WAKA,QAAAoV,IAAAlD,EAAAp7B,GAOA,IANA,GAKA66B,GALAC,EAAAM,EAAAhgD,QACAmjD,EAAAv+B,EAAAzV,MAAA,KACAi0C,EAAA7rC,SAAA4rC,EAAA,OACAE,EAAAF,EAAA,GAGA1D,EAAAC,EAAA92C,OAAA,CACA,GAAA62C,EAAAK,MAAAsD,GAAA3D,EAAAvwB,IAAA,KAAAm0B,EACA,QAGA,QADAxD,GAAAJ,EAAAvwB,IAAA,GACAxvB,EAAA,EAAA6I,EAAAs3C,EAAA59C,OAA0CvC,EAAA6I,EAAS7I,IACnDggD,EAAAt4C,MAAoB04C,IAAAL,EAAAK,IAAA,EAAA5wB,IAAA2wB,EAAAngD,KAGpB,SAGA,QAAA4jD,IAAA7D,GACA,MAAAA,GAAAvwB,IAMA,QAAAq0B,IAAAlE,EAAAz6B,GACAA,IACAA,EAAAw6B,EAAAC,GAMA,KAJA,GAGAO,GAHAxgD,EAAAwlB,EAAA1Z,UAAA0Z,EAAA5f,QAAA,QACA06C,EAAAL,EAAAM,SAAAlzC,IAAA62C,IAGA1D,EAAAF,EAAA92C,OAAA,CACA,GAAAg3C,EAAA,KAAAxgD,EACA,QAAAwgD,EAAA,GAAA1xB,OAEAwxB,KAAAr/C,OAAAu/C,EAAA,KAIA,QAAA4D,IAAApkD,GACA,gBAAA8oB,KAAA9oB,GAIA,QAAAqkD,IAAA7+B,EAAAy6B,GAGA,IAFA,GACAI,GADAC,EAAAL,EAAAM,SAAA3/C,QAEAy/C,EAAAC,EAAA92C,OAAA,CACA,GAAAk3C,GAAAL,EAAAK,IACAF,EAAAH,EAAAvwB,IACA9vB,EAAAwgD,EAAA,GACA3tC,EAAA2tC,EAAA,GACAC,EAAAD,EAAA,GACAS,EAAA,IAAAR,EAAA59C,OAEA2+C,EAAAnB,EAAAmB,QAAAnB,EAAAmB,QAAA5gD,UAGA,IAFA4gD,EAAAx5C,MAAkBhI,KAAA0gD,MAAA7tC,SAElBouC,EACA,OAAA3gD,GAAA,EAAA6I,EAAAq4C,EAAA3+C,OAA2CvC,EAAA6I,EAAS7I,IAAA,CACpD,GAAAgkD,GAAA9C,EAAAlhD,GACAikD,EAAAD,EAAA5D,IAAA,IAAA4D,EAAAtkD,EAEA,IAAAukD,IAAA/+B,EAEA,MAAAk7B,GAAA,IAAA1gD,EAKA,OAAAsjB,GAAA,EAAA3V,EAAA8yC,EAAA59C,OAAwCygB,EAAA3V,EAAO2V,IAC/Cg9B,EAAAt4C,MAAoB04C,MAAA,EAAA5wB,IAAA2wB,EAAAn9B,GAAAk+B,YAKpB,SAAAr7C,OAAA,4CAAA85C,EAAAjgD,GAAA,SAAAwlB,GAGA,QAAAg/B,IAAA5yC,GACA,MAAA6yC,IAAA,yBAAkC7yC,EAAA,QAGlC,QAAA8yC,IAAA9yC,GACA,GAAAkL,IACA,yBACA,kBACA,yBACA,iCACA,sBACA,OACA,gBAAAlL,EAAA,IACA,eACA,mBACA,mBACA,MACA,MACA+B,KAAA,KAEA,OAAA8wC,IAAA3nC,MAKA,QAAA6nC,IAAAhjD,EAAAitC,GAEA,IACAjtC,EAAAoV,KAAA,SAAA63B,GACG,MAAA5nC,GACHs2C,EAAA,4CAAAt2C,IAIA,QAAA49C,IAAAz7B,EAAAtW,EAAAhJ,GAsBA,QAAAg7C,KACAljD,EAAAqI,SAtBAozC,GAAA5V,aAAAtnC,KAAAP,KACA,IAAAgC,GAAAhC,IACAA,MAAAwpB,KACAtW,IAAA3I,EAAA2I,KACA,IAAA07B,GAAA17B,EAAA07B,SAAAzlC,EAAA,SAAA/C,EAAA9C,GACA8C,EACA2iC,EAAA/mC,EAAA,YACAA,EAAAoV,KAAA,QAAAhR,GAGApE,EAAAoV,KAAA,WAAA9T,GAEAtB,EAAAmV,qBACAqS,EAAAtS,eAAA,YAAAguC,IAEAh7C,KACAlI,EAAA+U,GAAA,oBAAAzT,GACA4G,EAAA,KAAA5G,KAEAtB,EAAA+U,GAAA,QAAA7M,IAKAsf,EAAArgB,KAAA,YAAA+7C,GAEAhyC,EAAAiyC,SAAA,SAAAlW,GAEAjtC,EAAAojD,aAGAJ,GAAAhjD,EAAAitC,GAGA,IAAAllC,GAAA,GAAAkwC,IAAA,SAAAjwC,EAAAC,GACAiJ,EAAA07B,SAAA,SAAAxoC,EAAAvC,GACAuC,EACA6D,EAAA7D,GAEA4D,EAAAnG,KAIA7B,GAAAmH,KAAA,oBACAqgB,EAAAtS,eAAA,YAAAguC,GACAhyC,EAAA07B,SAAA,MAAyBnqC,OAAA,gBAEzBzE,KAAAqD,KAAA0G,EAAA1G,KAAAokC,KAAA19B,GACA/J,KAAA,MAAA+J,EAAA,MAAA09B,KAAA19B,GACA/J,KAAAqD,KAAA,SAAA+G,GACAwkC,EAAA,KAAAxkC,IACGwkC,GAIHplB,EAAAixB,UAAAC,QAWA14C,EAAAqjD,UAAAnyC,GAVAsW,EAAAixB,UAAAE,QAAA,SAAAC,GACAA,EACA1nC,EAAA07B,SAAAgM,GACO54C,EAAAojD,YACPpjD,EAAAoV,KAAA,UAEApV,EAAAqjD,UAAAnyC,KAaA,QAAAw7B,IAAAjjC,EAAA60C,EAAAptC,GACA,GAAAoyC,KAAqBz/B,IAAApa,EAAAka,MACrB,cAAAzS,EAAA4qB,QACAwnB,EAAAlE,EAAAd,EAAAM,UACAlzC,IAAA,SAAA2L,GAAuB,OAASwM,IAAAxM,EAAAwM,OAEhC,IAAAopB,IACA5uC,GAAAigD,EAAAjgD,GACAkxB,QAAA+zB,EACA75C,MAYA,OATA+4C,IAAAlE,EAAA70C,EAAAka,QACAspB,EAAA9f,SAAA,GAEAjc,EAAA67B,YACAE,EAAAxjC,IAAA85C,WAAAhE,EAAAjB,GACArR,EAAAxjC,IAAA85C,WAAAriD,cACA+rC,GAAAxjC,IAAA85C,YAGAtW,EAgIA,QAAAliC,IAAAT,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,IAKA,QAAAi5C,IAAAt7C,GACA,gBAAA9D,EAAA8lC,GACA9lC,GAAA8lC,EAAA,IAAAA,EAAA,GAAA7lC,MACA6D,EAAA9D,GAAA8lC,EAAA,IAEAhiC,EAAA,KAAAgiC,EAAAhpC,OAAAgpC,EAAA,GAAAA,IAMA,QAAAuZ,IAAAr1B,GACA,OAAAzvB,GAAA,EAAiBA,EAAAyvB,EAAAltB,OAAiBvC,IAAA,CAClC,GAAA8K,GAAA2kB,EAAAzvB,EACA,IAAA8K,EAAA+hC,eACA/hC,GAAAuzC,iBACK,IAAAvzC,EAAAuzC,aAGL,OADA0G,GAAA9kD,OAAA6M,KAAAhC,EAAAuzC,cACAr7B,EAAA,EAAqBA,EAAA+hC,EAAAxiD,OAAiBygB,IAAA,CACtC,GAAAo7B,GAAA2G,EAAA/hC,EACAlY,GAAAuzC,aAAAD,GAAA3yC,EAAAX,EAAAuzC,aAAAD,IACA,4DAOA,QAAA4G,IAAAxkD,EAAAC,GACA,GAAAwkD,GAAA74C,GAAA5L,EAAAyjB,IAAAxjB,EAAAwjB,IACA,QAAAghC,EACA,MAAAA,EAEA,IAAAC,GAAA1kD,EAAA2kD,WAAA3kD,EAAA2kD,WAAA1nB,MAAA,EACA2nB,EAAA3kD,EAAA0kD,WAAA1kD,EAAA0kD,WAAA1nB,MAAA,CACA,OAAArxB,IAAA84C,EAAAE,GAKA,QAAAC,IAAA/E,GACA,GAAAgF,MACAC,IAoBA,OAnBAlF,GAAAC,EAAA,SAAAK,EAAAP,EAAA1gD,EAAA8lD,GACA,GAAAtgC,GAAAk7B,EAAA,IAAA1gD,CAOA,OANAihD,KACA2E,EAAApgC,GAAA,GAEA1iB,SAAAgjD,GACAD,EAAA79C,MAAkBo3B,KAAA0mB,EAAAzmB,GAAA7Z,IAElBA,IAGAqgC,EAAA1S,UACA0S,EAAAr0C,QAAA,SAAAu0C,GACAjjD,SAAA8iD,EAAAG,EAAA3mB,MACAwmB,EAAAG,EAAA3mB,MAAA,EAAAwmB,EAAAG,EAAA1mB,IAEAumB,EAAAG,EAAA3mB,MAAAjzB,KAAAC,IAAAw5C,EAAAG,EAAA3mB,MAAA,EAAAwmB,EAAAG,EAAA1mB,OAGAumB,EAGA,QAAAI,IAAAC,EAAApzC,EAAAhJ,GACA,GAAAuD,GAAA,SAAAyF,GACAA,EAAAzF,KAAAxM,MAAAiS,EAAA4tB,KAAA5tB,EAAA2tB,MAAA3tB,EAAA4tB,MACA5tB,EAAA4tB,KAAA,EAAA5tB,EAAAzF,KAAAxM,MAAAiS,EAAA4tB,MAAA5tB,EAAAzF,IAIA,IAHAyF,EAAA8tB,YACAvzB,EAAA+lC,WAEA/lC,EAAAvK,OACA,MAAAojD,GAAAC,UAAyB1lB,MAAA,GAAS32B,EAElC,IAAAmmC,IACAE,OAAAr9B,EAAA4tB,KAEA,OAAAmZ,IAAA71C,IAAAqJ,EAAAC,IAAA,SAAA/B,GACA,GAAA66C,GAAAC,IAA4B96C,MAAAwjB,QAAA,MAAwBjc,EAIpD,QAHA,uBAAArB,QAAA,SAAA60C,SACAF,GAAAE,KAEA,GAAAzM,IAAA,SAAA1rC,EAAAtE,GACAq8C,EAAAC,SAAAC,EAAA,SAAApgD,EAAAvC,GAEA,MAAAuC,GACA6D,EAAA7D,IAEAiqC,EAAApmB,WAAApmB,EAAAomB,eACA1b,GAAA1K,EAAA6O,KAAA,KAAgC/G,MAAAtF,MAAA,sBAG7BhD,KAAA,SAAA6oC,GAEH,MADAmE,GAAA39B,KAAAw5B,EACAmE,IAMA,QAAAsW,IAAA3kD,GACA,GAAAmf,GAAAnf,EAAA4kD,iBAAA,GACA1zC,EAAAiO,EAAAjO,KACAhJ,EAAAiX,EAAAjX,QACAlI,GAAAgE,IAAA,qBAAA8I,MAAA,WACA,WACGzL,KAAA,SAAAoI,GACHA,KAAAo7C,WACA3zC,EAAA2zC,SAAAp7C,EAAAo7C,UAEA7kD,EAAA8kD,SAAA5zC,EAAA,SAAA9M,EAAAvC,GAEAuC,EACA8D,EAAA9D,GAEA8D,EAAA,KAAArG,GAEAiG,GAAA,WACA9H,EAAA4kD,iBAAAG,QACA/kD,EAAA4kD,iBAAA1jD,QACAyjD,GAAA3kD,SAOA,QAAAglD,IAAAl+C,GACA,YAAAA,EAAAm4B,OAAA,IACAn4B,EAAA,yEAQA,QAAAm+C,MACAxJ,GAAA5V,aAAAtnC,KAAAP,MA0uBA,QAAAknD,MACAlnD,KAAA06C,SAAA,EACA16C,KAAA46C,QAAA,EACA56C,KAAAkW,SAkCA,QAAAixC,IAAAr+C,EAAAoK,GACA,GAAAkZ,GAAAtjB,EAAAsjB,MAAA,sBACA,IAAAA,EAEA,OACAtjB,KAAA,SAAAqgB,KAAAiD,EAAA,IAAAA,EAAA,SAAAA,EAAA,GAAAA,EAAA,GACAof,QAAApf,EAAA,GAIA,IAAAg7B,GAAAC,GAAAD,SACAE,EAAAD,GAAAC,kBACA94B,EAAA64B,GAAA74B,OACA+4B,EAAAr0C,EAAAs4B,OAEA,KAAA+b,EACA,OAAA5mD,GAAA,EAAmBA,EAAA2mD,EAAApkD,SAA8BvC,EAAA,CACjD4mD,EAAAD,EAAA3mD,EAGA,eAAA4mD,GAAA,UAAAH,IACAnK,KAAAxuB,aAAA,oBAAAD,EAAA1lB,IAMA,KAJA60C,GAAA,iCAAA70C,EAAA,+EAQA,GAAA0iC,GAAA4b,EAAAG,GAGAC,IAAAhc,GAAA,cAAAA,KACAA,EAAAic,UAEA,QACA3+C,KAAA0+C,EAAAh5B,EAAA1lB,IACA0iC,QAAA+b,GAcA,QAAAG,IAAA1lD,GAIA,QAAA2lD,KACA3lD,EAAAkV,eAAA,SAAA0wC,GACA5lD,EAAAM,YAAA8U,KAAA,YAAApV,EAAA8G,MAGA,QAAA++C,KACA7lD,EAAAkV,eAAA,YAAAywC,GACA3lD,EAAAkV,eAAA,SAAA0wC,GACA5lD,EAAAoV,KAAA,aAGA,QAAAwwC,KACA5lD,EAAAkV,eAAA,YAAAywC,GACAG,EAAAxpC,OAAAtc,EAAA8G,MAfA,GAAAg/C,GAAA9lD,EAAAM,YAAAylD,qBAkBA/lD,GAAAmH,KAAA,YAAAw+C,GACA3lD,EAAAmH,KAAA,SAAAy+C,GAGAE,EAAAjsB,IAAA75B,EAAA8G,OACAg/C,EAAAx5B,IAAAtsB,EAAA8G,SAEAg/C,EAAA9hD,IAAAhE,EAAA8G,MAAAT,KAAAw/C,GAIA,QAAAR,IAAAv+C,EAAAoK,GAGA,KAAAlT,eAAAqnD,KACA,UAAAA,IAAAv+C,EAAAoK,EAGA,IAAAlR,GAAAhC,IAcA,IAbAkT,QAEApK,GAAA,gBAAAA,KACAoK,EAAApK,EACAA,EAAAoK,EAAApK,WACAoK,GAAApK,MAGA9I,KAAAyxC,OAAAv+B,EAAA3I,EAAA2I,GAEAlR,EAAAupC,gBAAAr4B,EAAAq4B,gBACAvpC,EAAAwsB,OAAA64B,GAAA74B,OAEA,gBAAA1lB,GACA,SAAAtC,OAAA,0BAGA,IAAAwhD,IAAA90C,EAAAsb,QAAA,IAAA1lB,EACAm/C,EAAAd,GAAAa,EAAA90C,EASA,IAPAA,EAAApK,KAAAm/C,EAAAn/C,KACAoK,EAAAs4B,QAAAt4B,EAAAs4B,SAAAyc,EAAAzc,QAEAxpC,EAAA8G,OACA9G,EAAAkmD,SAAAh1C,EAAAs4B,QACApF,GAAA,sCAAAlzB,EAAAs4B,UAEA6b,GAAAD,SAAAl0C,EAAAs4B,WACA6b,GAAAD,SAAAl0C,EAAAs4B,SAAA2c,QACA,SAAA3hD,OAAA,oBAAA0M,EAAAs4B,QAGAyb,IAAA1mD,KAAAyB,GACAA,EAAAy4C,UAAA,GAAAyM,IAEAllD,EAAAwpC,QAAAt4B,EAAAs4B,QAEA6b,GAAAD,SAAAl0C,EAAAs4B,SAAAjrC,KAAAyB,EAAAkR,EAAA,SAAA9M,GACA,MAAAA,GACApE,EAAAy4C,UAAA2N,KAAAhiD,IAEAshD,GAAA1lD,GAEAA,EAAAoV,KAAA,UAAApV,GACAqlD,GAAAjwC,KAAA,UAAApV,EAAA8G,UACA9G,GAAAy4C,UAAA4N,MAAArmD,MAcA,QAAAsmD,IAAAC;AACA3nD,OAAA6M,KAAAgwC,GAAA5V,aAAAhnC,WAAAgR,QAAA,SAAAlG,GACA,kBAAA8xC,IAAA5V,aAAAhnC,UAAA8K,KACA48C,EAAA58C,GAAA68C,GAAA78C,GAAA87B,KAAA+gB,MAMA,IAAAC,GAAAF,EAAAR,sBAAA,GAAAhL,GACAwL,GAAAxxC,GAAA,qBAAAjO,GACA2/C,EAAAziD,IAAA8C,GAAA+I,QAAA,SAAA3H,GACAA,MAEAu+C,EAAAnqC,OAAAxV,KAoEA,QAAA4/C,IAAAlyC,GACA,MAAAA,GAAAsd,OAAA,SAAAtyB,EAAAotB,GAEA,MADAptB,GAAAotB,IAAA,EACAptB,OAoCA,QAAAmnD,IAAA9iC,GACA,cAAAsD,KAAAtD,GACA,MAAAs4B,GAAAyK,GAEA,IAAAtvC,GAAAuM,EAAA5f,QAAA,KACAqG,EAAAuZ,EAAA1Z,UAAA,EAAAmN,GACA/M,EAAAsZ,EAAA1Z,UAAAmN,EAAA,EACA,QACAkV,OAAAhW,SAAAlM,EAAA,IACAjM,GAAAkM,GAIA,QAAAs8C,IAAAC,EAAA51C,GAMA,OALA6tC,GAAA+H,EAAA1qB,MAAA0qB,EAAA34B,IAAAjtB,OAAA,EAEA6lD,EAAAD,EAAA34B,IACAA,GAAA44B,EAAA,GAAA71C,MAEAvS,EAAA,EAAA6I,EAAAu/C,EAAA7lD,OAA2CvC,EAAA6I,EAAS7I,IACpDwvB,GAAA44B,EAAApoD,IAA4B8D,OAAA,YAAkB0rB,GAG9C,SACA4wB,MACA5wB,QAMA,QAAA64B,IAAAv9C,EAAAw9C,GAEA,GAAAC,GACAC,EACAC,EACAl2C,GAAczO,OAAA,YAKd,IAJAgH,EAAA+hC,WACAt6B,EAAAic,SAAA,GAGA85B,EAKA,GAJAx9C,EAAAmZ,MACAnZ,EAAAmZ,IAAAu7B,KAEAgJ,EAAAhJ,EAAA,OAAA72B,cACA7d,EAAAka,KAAA,CAEA,GADAyjC,EAAAT,GAAAl9C,EAAAka,MACAyjC,EAAA/iD,MACA,MAAA+iD,EAEA39C,GAAA49C,YACAtI,IAAAqI,EAAA56B,OACA2B,KAAAi5B,EAAA/oD,IAA2BoE,OAAA,aAAkB0kD,EAAAj2C,UAE7Cg2C,EAAAE,EAAA56B,OAAA,MAEA/iB,GAAA49C,YACAtI,IAAA,EACA5wB,KAAAg5B,EAAAj2C,QAEAg2C,EAAA,MAQA,IALAz9C,EAAAq6C,aACAr6C,EAAA49C,UAAAR,GAAAp9C,EAAAq6C,WAAA5yC,GACAg2C,EAAAz9C,EAAAq6C,WAAA1nB,MACA+qB,EAAA19C,EAAAq6C,WAAA31B,IAAA,KAEA1kB,EAAA49C,UAAA,CAEA,GADAD,EAAAT,GAAAl9C,EAAAka,MACAyjC,EAAA/iD,MACA,MAAA+iD,EAEAF,GAAAE,EAAA56B,OACA26B,EAAAC,EAAA/oD,GACAoL,EAAA49C,YACAtI,IAAAmI,EACA/4B,KAAAg5B,EAAAj2C,QAKAgsC,EAAAzzC,EAAAmZ,KAEAnZ,EAAAka,KAAAujC,EAAA,IAAAC,CAEA,IAAA/+C,IAAgBk2C,YAAax6C,QAC7B,QAAA6F,KAAAF,GAEA,GAAA7K,OAAAC,UAAAC,eAAAP,KAAAkL,EAAAE,GAAA,CACA,GAAA29C,GAAA,MAAA39C,EAAA,EACA,IAAA29C,IAAAC,GAAA59C,GAAA,CACA,GAAAtF,GAAA83C,EAAAqL,GAAA79C,EAEA,MADAtF,GAAA0C,QAAAygD,GAAAzgD,QAAA,KAAA4C,EACAtF,EACOijD,IAAAG,GAAA99C,GACPvB,EAAAk2C,SAAA30C,EAAA1K,MAAA,IAAAwK,EAAAE,GAEAvB,EAAAtE,KAAA6F,GAAAF,EAAAE,GAIA,MAAAvB,GAcA,QAAAs/C,IAAAv5C,EAAAw5C,GAEAx5C,QACAw5C,OACA,KACA,UAAAx3B,MAAAhiB,EAAAw5C,GACG,MAAAtiD,GACH,iBAAAA,EAAAyB,KACA,KAAAzB,EAOA,QALAuiD,GAAA,mBAAAC,yBACA,mBAAAC,6BACA,mBAAAC,+BACAC,kBACAC,EAAA,GAAAL,GACAjpD,EAAA,EAAmBA,EAAAwP,EAAAjN,OAAkBvC,GAAA,EACrCspD,EAAAj9B,OAAA7c,EAAAxP,GAEA,OAAAspD,GAAAC,QAAAP,EAAAzkC,OAMA,QAAAilC,IAAAC,GAIA,OAHAlnD,GAAAknD,EAAAlnD,OACAmnD,EAAA,GAAAr8B,aAAA9qB,GACAwE,EAAA,GAAAmX,YAAAwrC,GACA1pD,EAAA,EAAiBA,EAAAuC,EAAYvC,IAC7B+G,EAAA/G,GAAAypD,EAAAx+B,WAAAjrB,EAEA,OAAA0pD,GAGA,QAAAC,IAAAC,EAAArlC,GACA,MAAAwkC,KAAAS,GAAAI,KAA6DrlC,SAG7D,QAAAslC,IAAAC,EAAAvlC,GACA,MAAAolC,IAAAI,GAAAD,GAAAvlC,GAMA,QAAAylC,IAAAhsC,GAIA,OAHA8xB,GAAA,GACAma,EAAA,GAAA/rC,YAAAF,GACAzb,EAAA0nD,EAAA18B,WACAvtB,EAAA,EAAiBA,EAAAuC,EAAYvC,IAC7B8vC,GAAAvxB,OAAAC,aAAAyrC,EAAAjqD,GAEA,OAAA8vC,GAIA,QAAAoa,IAAAC,EAAA5gD,GACA,sBAAA6gD,YAGA,MAAA7gD,GAAAygD,IACA,GAAAK,iBAAAC,kBAAAH,IAGA,IAAAI,GAAA,GAAAH,YACAI,EAAA,kBAAAD,GAAAL,kBACAK,GAAAE,UAAA,SAAA/jD,GACA,GAAA+C,GAAA/C,EAAAkY,OAAAnV,QAAA,EACA,OAAA+gD,GACAjhD,EAAAE,OAEAF,GAAAygD,GAAAvgD,KAEA+gD,EACAD,EAAAL,mBAAAC,GAEAI,EAAAD,kBAAAH,GAIA,QAAAO,IAAAC,EAAAphD,GACA2gD,GAAAS,EAAA,SAAAlB,GACAlgD,EAAAkgD,KAIA,QAAAmB,IAAAD,EAAAphD,GACAmhD,GAAAC,EAAA,SAAAE,GACAthD,EAAAuhD,GAAAD,MAKA,QAAAP,IAAAH,EAAA5gD,GACA,sBAAA6gD,YAGA,MAAA7gD,IAAA,GAAA8gD,iBAAAC,kBAAAH,GAGA,IAAAI,GAAA,GAAAH,WACAG,GAAAE,UAAA,SAAA/jD,GACA,GAAA+C,GAAA/C,EAAAkY,OAAAnV,QAAA,GAAA4jB,aAAA,EACA9jB,GAAAE,IAEA8gD,EAAAD,kBAAAH,GAQA,QAAAY,IAAAj+B,GACA,MAAAg+B,IAAAh+B,GAGA,QAAAk+B,IAAAC,EAAAxtB,EAAA5Q,GACA,MAAAo+B,GAAAjS,YACAiS,EAAAjS,YAAAvb,EAAA5Q,GAEAo+B,EAAA3qD,MAAAm9B,EAAA5Q,GAGA,QAAAq+B,IAAAltC,EAAAitC,EAAAxtB,EAAA5Q,EAAAtjB,IACAk0B,EAAA,GAAA5Q,EAAAo+B,EAAAlS,QAEAkS,EAAAD,GAAAC,EAAAxtB,EAAA5Q,IAEAy9B,GAAAW,EAAA,SAAAE,GACAntC,EAAAqO,OAAA8+B,GACA5hD,MAIA,QAAA6hD,IAAAptC,EAAA5T,EAAAqzB,EAAA5Q,EAAAtjB,IACAk0B,EAAA,GAAA5Q,EAAAziB,EAAA7H,UAEA6H,IAAAoB,UAAAiyB,EAAA5Q,IAEA7O,EAAAuO,aAAAniB,GACAb,IAGA,QAAA8hD,IAAAlmD,EAAAoE,GAUA,QAAA/B,KACA8jD,GAAAC,GAGA,QAAA9jD,KACA,GAAAqlB,GAAA9O,EAAA6O,KAAA,GACAg+B,EAAAE,GAAAj+B,EACAvjB,GAAAshD,GACA7sC,EAAAkP,UAGA,QAAAq+B,KACA,GAAA9tB,GAAA+tB,EAAAC,EACA5+B,EAAA4Q,EAAAguB,CACAD,KACAA,EAAAE,EACAr/B,EAAArO,EAAA7Y,EAAAs4B,EAAA5Q,EAAArlB,GAEA6kB,EAAArO,EAAA7Y,EAAAs4B,EAAA5Q,EAAAplB,GA3BA,GAAAkkD,GAAA,gBAAAxmD,GACA0D,EAAA8iD,EAAAxmD,EAAA5C,OAAA4C,EAAA4zC,KACA0S,EAAA5/C,KAAAC,IAAA8/C,GAAA/iD,GACA6iD,EAAA7/C,KAAAg9B,KAAAhgC,EAAA4iD,GACAD,EAAA,EACAxtC,EAAA2tC,EAAA,GAAAzhD,IAAA,GAAAA,IAAAmjB,YAEAhB,EAAAs/B,EAAAP,GAAAF,EAuBAK,KAGA,QAAAM,IAAAzhD,GACA,MAAAF,IAAAI,KAAAF,GAGA,QAAA0hD,IAAA3mD,GACA,IACA,MAAA4kD,IAAA5kD,GACG,MAAAuB,GACH,GAAAjB,GAAA+3C,EAAAuO,GACA,0CACA,QAAYrmD,MAAAD,IAIZ,QAAAumD,IAAA5N,EAAA6N,EAAA1iD,GACA,GAAA2iD,GAAAJ,GAAA1N,EAAAj5C,KACA,OAAA+mD,GAAAxmD,MACA6D,EAAA2iD,EAAAxmD,QAGA04C,EAAA77C,OAAA2pD,EAAA3pD,OACA,SAAA0pD,EACA7N,EAAAj5C,KAAAwkD,GAAAuC,EAAA9N,EAAA+N,cACG,WAAAF,EACH7N,EAAAj5C,KAAA2lD,GAAAoB,GAEA9N,EAAAj5C,KAAA+mD,MAEAb,IAAAa,EAAA,SAAAziD,GACA20C,EAAA3zC,OAAA,OAAAhB,EACAF,OAIA,QAAA6iD,IAAAhO,EAAA6N,EAAA1iD,GACA8hD,GAAAjN,EAAAj5C,KAAA,SAAA4mB,GACAqyB,EAAA3zC,OAAA,OAAAshB,EAEAqyB,EAAA77C,OAAA67C,EAAAj5C,KAAA4zC,MAAAqF,EAAAj5C,KAAA5C,QAAA,EACA,WAAA0pD,EACAvB,GAAAtM,EAAAj5C,KAAA,SAAAykD,GACAxL,EAAAj5C,KAAAykD,EACArgD,MAEK,WAAA0iD,EACLrB,GAAAxM,EAAAj5C,KAAA,SAAA2kD,GACA1L,EAAAj5C,KAAA2kD,EACAvgD,MAGAA,MAKA,QAAA8iD,IAAAjO,EAAA6N,EAAA1iD,GACA,MAAA60C,GAAAE,KACA/0C,SAEA,gBAAA60C,GAAAj5C,KACA6mD,GAAA5N,EAAA6N,EAAA1iD,GAEA6iD,GAAAhO,EAAA6N,EAAA1iD,IAIA,QAAA+iD,IAAAC,EAAAN,EAAA1iD,GAkCA,QAAA9B,KACA+kD,IACAD,EAAAhqD,SAAAiqD,IACAC,EACAljD,EAAAkjD,GAEAljD,KAtCA,IAAAgjD,EAAAhqD,OACA,MAAAgH,IAGA,IACAkjD,GADAD,EAAA,CAGAD,GAAAr7C,QAAA,SAAAw7C,GASA,QAAAC,GAAAlnD,GACAgnD,EAAAhnD,EACAmnD,IACAA,IAAA/c,EAAAttC,QACAkF,IAZA,GAAAooC,GAAA6c,EAAAvnD,MAAAunD,EAAAvnD,KAAAk5C,aACAp+C,OAAA6M,KAAA4/C,EAAAvnD,KAAAk5C,iBACAuO,EAAA,CAEA,KAAA/c,EAAAttC,OACA,MAAAkF,IAWA,QAAAuD,KAAA0hD,GAAAvnD,KAAAk5C,aACAqO,EAAAvnD,KAAAk5C,aAAAl+C,eAAA6K,IACAqhD,GAAAK,EAAAvnD,KAAAk5C,aAAArzC,GACAihD,EAAAU,KAiBA,QAAAE,IAAAC,EAAAtmB,EAAAkmB,EAAAnhB,EACAvrC,EAAA+J,EAAAgjD,EAAAzE,GAEA,GAAA9E,GAAAhd,EAAAyZ,SAAAyM,EAAA/M,SAAAz6B,KAEA,MADAqmB,GAAAvrC,GAAA0sD,EACA3iD,GAIA,IAAAijD,GAAAxmB,EAAAkZ,cAAAlZ,GACAymB,EAAA,WAAAzmB,KAAAhY,QACAq1B,GAAArd,EAAAwmB,GACAx+B,EAAA,WAAAk+B,GAAA/M,SAAA+M,EAAA/M,SAAAnxB,QACAq1B,GAAA6I,EAAA/M,UACAuN,EAAA,MAAA1kC,KAAAkkC,EAAA/M,SAAAz6B,IAEA,IAAA+nC,IAAAz+B,GAAA85B,GAAA4E,EAAA,CACA,GAAApjC,GAAA4iC,EAAAvnD,IACA2kB,GAAA9E,KAAAgoC,EACAljC,EAAA7F,IAAAyoC,EAAA/M,SAAAjgD,GACAgtD,EAAArE,GAAAv+B,EAAAw+B,GAGA,GAAAnG,GAAAkB,GAAA7c,EAAAyZ,SAAAyM,EAAA/M,SAAAM,SAAA,GAAA6M,GAEAK,EAAA7E,IAAA2E,GAAAz+B,IACAy+B,GAAA,aAAA9K,EAAA/T,WACA6e,IAAAz+B,GAAA,eAAA2zB,EAAA/T,UAEA,IAAA+e,EAAA,CACA,GAAA1nD,GAAA+3C,EAAA4P,GAEA,OADA7hB,GAAAvrC,GAAAyF,EACAsE,IAGA,GAAAsjD,GAAAX,EAAA/M,SAAAz6B,GACAwnC,GAAA/M,SAAAM,SAAAkC,EAAAjC,KACAwM,EAAAnJ,YAAApB,EAAAoB,gBAEA/c,EAAA8mB,UACAZ,EAAA/M,SAAA2N,QAAA9mB,EAAA8mB,QAIA,IAQAC,GARAC,EAAA9N,EAAAgN,EAAA/M,UACA8N,EAAA5J,GAAA6I,EAAA/M,SAAA6N,GAIAE,EAAAT,IAAAQ,EAAA,EACAR,EAAAQ,GAAA,GAKAF,GAFAF,IAAAG,EAEAC,EAGA5J,GAAA6I,EAAA/M,SAAA0N,GAGAN,EAAAL,EAAAc,EAAAC,EAAAF,GACA,EAAAG,EAAA1tD,EAAA+J,GAGA,QAAA4jD,IAAAjB,GACA,kBAAAA,EAAA/M,SAAAM,SAAA,GAAAzwB,IAAA,GAAA1rB,OAGA,QAAA8pD,IAAAd,EAAAP,EAAA5G,EAAAkI,EAAAC,EAAAviB,EACAwhB,EAAAx6C,EAAAw7C,GAKA,QAAAC,GAAAtB,EAAAuB,EAAA1kD,GAEA,GAAAikD,GAAA9N,EAAAgN,EAAA/M,UACAnxB,EAAAq1B,GAAA6I,EAAA/M,SAAA6N,EACA,kBAAAj7C,IAAAic,EAEA,MADA+c,GAAA0iB,GAAAzQ,EAAA0Q,GAAA,WACA3kD,GAIA,IAAA4jD,GAAA7E,GAAAqF,GAAAjB,EAEA,IAAAS,EAAA,CACA,GAAA1nD,GAAA+3C,EAAA4P,GAEA,OADA7hB,GAAA0iB,GAAAxoD,EACA8D,IAGA,GAAAmkD,GAAAl/B,EAAA,GAEAu+B,GAAAL,EAAAc,EAAAh/B,KAAA,EACAk/B,EAAAO,EAAA1kD,GASA,QAAA4kD,OACAC,IAAAC,GAAAN,GACAA,IAlCAjB,KAAA,GA0BA,IAAAxE,GAAA/1C,EAAA+7C,UACAC,EAAA,GAAAnS,IAEAgS,EAAA,EACAC,EAAA9B,EAAAhqD,MAQAgqD,GAAAr7C,QAAA,SAAAs9C,EAAAP,GAEA,GAAAO,EAAAvqC,KAAA6/B,GAAA0K,EAAAvqC,KAAA,CACA,GAAAxb,GAAA+lD,EAAA3hB,SAAA,0BAKA,YAJA8Y,GAAAl9C,GAAA+lD,GAA4Bz3B,IAAA+2B,GAAQ,SAAAroD,EAAAvC,GACpCqoC,EAAA0iB,GAAAxoD,GAAAvC,EACAirD,MAKA,GAAAzuD,GAAA8uD,EAAA7O,SAAAjgD,EACA6uD,GAAArzB,IAAAx7B,IACA2uD,IACAE,EAAAlpD,IAAA3F,GAAAgI,MAAA8mD,EAAAP,KAEAM,EAAA5gC,IAAAjuB,IAAA8uD,EAAAP,OAMAM,EAAAr9C,QAAA,SAAAue,EAAA/vB,GAGA,QAAA+uD,OACAvT,EAAAzrB,EAAAltB,OACAmsD,IAEAP,IAGA,QAAAO,KACA,GAAA9sD,GAAA6tB,EAAAyrB,GACAsT,EAAA5sD,EAAA,GACAqsD,EAAArsD,EAAA,EAEA,IAAAisD,EAAA3yB,IAAAx7B,GACAmtD,GAAAC,EAAAe,EAAAxoD,IAAA3F,GAAA8uD,EAAAjjB,EACA0iB,EAAAQ,EAAA1B,EAAAzE,OACO,CAEP,GAAAnG,GAAAkB,MAAAmL,EAAA7O,SAAAM,SAAA,GAAA6M,EACA0B,GAAA7O,SAAAM,SAAAkC,EAAAjC,KACAsO,EAAAjL,YAAApB,EAAAoB,gBACAyK,EAAAQ,EAAAP,EAAAQ,IAtBA,GAAAvT,GAAA,CAyBAwT,OA6BA,QAAAC,IAAAv3C,GAIA,IACA,MAAArS,MAAAopB,MAAA/W,GACG,MAAA1Q,GAEH,MAAAkoD,IAAAzgC,MAAA/W,IAIA,QAAAy3C,IAAAtpD,GACA,IACA,MAAAR,MAAAC,UAAAO,GACG,MAAAmB,GAEH,MAAAkoD,IAAA5pD,UAAAO,IAIA,QAAAupD,IAAAvlD,GACA,gBAAAwlD,GACA,GAAA3mD,GAAA,eACA2mD,GAAAnwC,QAAAmwC,EAAAnwC,OAAAlZ,QACA0C,EAAA2mD,EAAAnwC,OAAAlZ,MAAAyC,MAAA4mD,EAAAnwC,OAAAlZ,MAAA0C,SAEAmB,EAAAi0C,EAAAwR,GAAA5mD,EAAA2mD,EAAAxqC,QAWA,QAAA0qC,IAAAtP,EAAAD,EAAAlxB,GACA,OACArpB,KAAA0pD,GAAAlP,GACAD,aACAwP,eAAA1gC,EAAA,QACAuc,IAAA4U,EAAA5U,IACArrC,GAAAigD,EAAAjgD,IAIA,QAAAyvD,IAAAC,GACA,IAAAA,EACA,WAEA,IAAAzP,GAAAgP,GAAAS,EAAAjqD,KAIA,OAHAw6C,GAAAD,WAAA0P,EAAA1P,WACAC,EAAAnxB,QAAA,MAAA4gC,EAAAF,eACAvP,EAAA5U,IAAAqkB,EAAArkB,IACA4U,EAKA,QAAA0P,IAAAvkD,GACA,IAAAA,EACA,MAAAA,EAEA,IAAA6N,GAAA7N,EAAAwkD,YAAAC,YAAA,IAIA,OAHAzkD,GAAAmZ,IAAAnZ,EAAAwkD,YAAA9jD,UAAA,EAAAmN,EAAA,GACA7N,EAAAka,KAAAla,EAAAwkD,YAAA9jD,UAAAmN,EAAA,SACA7N,GAAAwkD,YACAxkD,EAMA,QAAA0kD,IAAA/qD,EAAA8f,EAAAkrC,EAAAlmD,GACAkmD,EAIAlmD,EAHA9E,EAEK,gBAAAA,GACLA,EAEAolD,GAAAplD,EAAA8f,GAJAwkC,IAAA,KAAiCxkC,UAOjC9f,EAEK,gBAAAA,GACLylD,GAAAzlD,EAAA,SAAAqrC,GACAvmC,EAAAuhD,GAAAhb,MAGAvmC,EAAA9E,GANA8E,EAAA,IAWA,QAAAmmD,IAAA5kD,EAAAyH,EAAAo9C,EAAA5lD,GAOA,QAAAkxC,OACAC,IAAArL,EAAAttC,QAAAwH,GACAA,IAIA,QAAA6lD,GAAA9kD,EAAAszC,GACA,GAAAyR,GAAA/kD,EAAAuzC,aAAAD,GACA3zC,EAAAolD,EAAAplD,OACAozC,EAAA8R,EAAAG,YAAAC,IAAA1qD,IAAAoF,EACAozC,GAAAmS,UAAA,SAAAtpD,GACAmpD,EAAAprD,KAAAiC,EAAAkY,OAAAnV,OAAAhF,KACAw2C,KAlBA,GAAApL,GAAA5vC,OAAA6M,KAAAhC,EAAAuzC,iBACA,KAAAxO,EAAAttC,OACA,MAAAwH,OAEA,IAAAmxC,GAAA,CAkBArL,GAAA3+B,QAAA,SAAAktC,GACA7rC,EAAAs9B,aAAAt9B,EAAA0W,aACA2mC,EAAA9kD,EAAAszC,IAEAtzC,EAAAuzC,aAAAD,GAAAE,MAAA,EACArD,OASA,QAAAgV,IAAA1kB,EAAAkkB,GACA,MAAAnW,IAAA71C,IAAA8nC,EAAAx+B,IAAA,SAAAmF,GACA,GAAAA,EAAApH,KAAAoH,EAAApH,IAAAuzC,aAAA,CACA,GAAA6R,GAAAjwD,OAAA6M,KAAAoF,EAAApH,IAAAuzC,aACA,OAAA/E,IAAA71C,IAAAysD,EAAAnjD,IAAA,SAAAqxC,GACA,GAAAyR,GAAA39C,EAAApH,IAAAuzC,aAAAD,EACA,YAAAyR,GAAA,CAGA,GAAAprD,GAAAorD,EAAAprD,KACA8f,EAAAsrC,EAAA1D,YACA,WAAA7S,IAAA,SAAA1rC,GACA4hD,GAAA/qD,EAAA8f,EAAAkrC,EAAA,SAAAtqD,GACA+M,EAAApH,IAAAuzC,aAAAD,GAAA0H,GACAr6C,EAAAokD,GAAA,2BACe1qD,SAEfyI,gBAQA,QAAAuiD,IAAA7P,EAAA12B,EAAA+lC,GAQA,QAAA1U,KACAntC,IACAA,GACAsiD,IAIA,QAAAA,KACAC,EAAA9tD,QAGA8tD,EAAAn/C,QAAA,SAAAzG,GACA,GAAA6lD,GAAAC,EAAA3+C,MAAA,aAAA9D,MACA0iD,YAAAC,MACAhmD,EAAA,KAAAA,EAAA,aACA6lD,GAAAN,UAAA,SAAAtpD,GACA,GAAAoH,GAAApH,EAAAkY,OAAAnV,MACAqE,IAEA4iD,EAAA/yC,OAAAlT,MAzBA,GAAA4lD,MACAM,EAAAhB,EAAAG,YAAAc,IACAF,EAAAf,EAAAG,YAAAC,IACAQ,EAAAZ,EAAAG,YAAAe,IACA/iD,EAAAwyC,EAAA/9C,MA2BA+9C,GAAApvC,QAAA,SAAAgU,GACA,GAAAtT,GAAA++C,EAAA/+C,MAAA,eACA5G,EAAA4e,EAAA,KAAA1E,CACAtT,GAAA/B,OAAA7E,GAAAglD,UAAA,SAAAtpD,GACA,GAAAqkC,GAAArkC,EAAAkY,OAAAnV,MACA,oBAAAshC,GACA,MAAAkQ,IAEA0V,GAAAhzC,OAAAotB,EAEA,IAAA+lB,GAAAP,EAAA3+C,MAAA,OACAm/C,WAAAP,YAAAQ,KAAAjmB,GAEA+lB,GAAAd,UAAA,SAAAx7C,GACA,GAAAs8C,GAAAt8C,EAAAoK,OAAAnV,MACA,IAAAqnD,EAAA,CACA,GAAArmD,GAAAqmD,EAAAlvD,MAAAqvD,UAAAxhD,MAAA,QACA4gD,GAAA3oD,KAAA+C,GACA8lD,EAAA5yC,OAAAmzC,EAAAI,YACAJ,EAAAK,eAEAlW,SAOA,QAAAmW,IAAAC,EAAAC,EAAAC,GACA,IACA,OACA5B,IAAA0B,EAAAG,YAAAF,EAAAC,IAEG,MAAA9rD,GACH,OACAC,MAAAD,IAOA,QAAAgsD,IAAAC,EAAA7T,EAAAtrC,EAAAozC,EAAA0L,EAAA9nD,GAwCA,QAAAooD,KAEA,GAAAL,IACAM,GAAAhB,GACAb,GACA8B,GAAAhB,GACAiB,IAEAC,EAAAX,GAAAC,EAAAC,EAAA,YACA,OAAAS,GAAArsD,MACA6D,EAAAwoD,EAAArsD,QAEAiqD,EAAAoC,EAAApC,IACAA,EAAAqC,QAAAlD,GAAAvlD,GACAomD,EAAAsC,UAAAnD,GAAAvlD,GACAomD,EAAAuC,WAAAjkB,EACAkkB,EAAAxC,EAAAG,YAAA8B,IACAQ,EAAAzC,EAAAG,YAAAc,IACAyB,EAAA1C,EAAAG,YAAAC,IACAuC,EAAA3C,EAAAG,YAAAe,IACA0B,EAAA5C,EAAAG,YAAAgC,IAEAS,EAAAltD,IAAAysD,IAAA9B,UAAA,SAAAtpD,GACA8lC,EAAA9lC,EAAAkY,OAAAnV,OACA+oD,SAGAC,GAAA,SAAAhtD,GACA,MAAAA,IACAitD,GAAA,EACAnpD,EAAA9D,QAEAktD,QAIA,QAAAC,KACAC,GAAA,EACAL,IAGA,QAAAM,KACAlF,GAAA8D,EAAAqB,WAAAxG,EAAA5G,EAAAkI,EACA8B,EAAApkB,EAAAwhB,EAAAx6C,EAAAqgD,GAGA,QAAAJ,KACAhmB,GAAAqmB,IAKArmB,EAAAwmB,UAAAC,EACAV,EAAAtoC,IAAAuiB,IAGA,QAAAmmB,KAQA,QAAA1X,OACAiY,IAAA3G,EAAAhqD,QACAuwD,IAIA,QAAAK,GAAA3+C,GACA,GAAAmrC,GAAAwP,GAAA36C,EAAAoK,OAAAnV,OAEAk2C,IACAkO,EAAAlgC,IAAAgyB,EAAAjgD,GAAAigD,GAEA1E,IAlBA,GAAAsR,EAAAhqD,OAqBA,OAjBA2wD,GAAA,EAiBAlzD,EAAA,EAAA6I,EAAA0jD,EAAAhqD,OAA0CvC,EAAA6I,EAAS7I,IAAA,CACnD,GAAA0sD,GAAAH,EAAAvsD,EACA,IAAA0sD,EAAAzoC,KAAA6/B,GAAA4I,EAAAzoC,KACAg3B,QADA,CAIA,GAAA4C,GAAAsU,EAAA9sD,IAAAqnD,EAAA/M,SAAAjgD,GACAm+C,GAAAmS,UAAAmD,IAIA,QAAAllB,KACAykB,IAIAU,GAAAC,OAAA1N,EAAA2N,MAAAnrD,MACAoB,EAAA,KAAAgiC,IAGA,QAAAgoB,GAAA9oD,EAAAlB,GAEA,GAAAs0C,GAAAwU,EAAAhtD,IAAAoF,EACAozC,GAAAmS,UAAA,SAAAtpD,GACA,GAAAA,EAAAkY,OAAAnV,OAOAF,QAPA,CACA,GAAA9D,GAAA+3C,EAAAgW,GACA,uCACA/oD,EACAhF,GAAA3B,OAAA,IACAyF,EAAA9D,KAOA,QAAAgtD,GAAAvkB,GAoBA,QAAA+M,OACAC,IAAAuY,EAAAlxD,QACA2rC,EAAAzoC,GAnBA,GAAAguD,KAWA,IAVAlH,EAAAr7C,QAAA,SAAAw7C,GACAA,EAAAvnD,MAAAunD,EAAAvnD,KAAAk5C,cACAp+C,OAAA6M,KAAA4/C,EAAAvnD,KAAAk5C,cAAAntC,QAAA,SAAAwiD,GACA,GAAAtV,GAAAsO,EAAAvnD,KAAAk5C,aAAAqV,EACAtV,GAAAE,MACAmV,EAAA/rD,KAAA02C,EAAA3zC,aAKAgpD,EAAAlxD,OACA,MAAA2rC,IAEA,IACAzoC,GADAy1C,EAAA,CAQAuY,GAAAviD,QAAA,SAAAzG,GACA8oD,EAAA9oD,EAAA,SAAAkpD,GACAA,IAAAluD,IACAA,EAAAkuD,GAEA1Y,QAKA,QAAA8R,GAAAL,EAAAc,EAAAC,EAAAF,EACAqG,EAAAlG,EAAAO,EAAA1kD,GAEAmjD,EAAA/M,SAAAD,WAAA8N,EACAd,EAAA/M,SAAAnxB,QAAAi/B,CAEA,IAAA3iD,GAAA4hD,EAAAvnD,IACA2F,GAAAmZ,IAAAyoC,EAAA/M,SAAAjgD,GACAoL,EAAAka,KAAA0nC,EAAA/M,SAAAz6B,IAEAqoC,IACAziD,EAAA+hC,UAAA,EAGA,IAAAgnB,GAAA/oD,EAAAuzC,cACAp+C,OAAA6M,KAAAhC,EAAAuzC,cAAA97C,MACA,OAAAsxD,GACAC,EAAApH,EAAAc,EAAAC,EACAmG,EAAA3F,EAAA1kD,IAGA0pD,GAAAvF,EACA8E,QAEAuB,GAAArH,EAAAc,EAAAC,EACAmG,EAAA3F,EAAA1kD,IAGA,QAAAwqD,GAAArH,EAAAc,EAAAC,EACAmG,EAAA3F,EAAA1kD,GASA,QAAAyqD,GAAAttD,GACA,GAAAutD,GAAAvH,EAAAnJ,eAEAqQ,IAAAjO,EAAA/a,kBACAqpB,IAAAtzD,OAAAogD,EAAA2L,EAAA/M,YAGAsU,KAAA1xD,QACA4tD,GAAA8D,EAAAvH,EAAA/M,SAAAjgD,GAAAiwD,GAGAhQ,EAAA5U,IAAArkC,EAAAkY,OAAAnV,MAGA,IAAAyqD,GAAAjF,GAAAtP,EAAA6N,EACAC,GACA0G,EAAAhC,EAAAloC,IAAAiqC,EACAC,GAAAnE,UAAAoE,EAGA,QAAAC,GAAA3tD,GAEAA,EAAA4tD,iBACA5tD,EAAA6tD,iBACA,IAAA3iD,GAAAwgD,EAAAxgD,MAAA,eACA4iD,EAAA5iD,EAAA/B,OAAA/E,EAAAwkD,YACAkF,GAAAxE,UAAA,SAAAtpD,GACA,GAAA+tD,GAAArC,EAAAnoC,IAAAnf,EAAApE,EAAAkY,OAAAnV,OACAgrD,GAAAzE,UAAAgE,GAIA,QAAAI,KACA7oB,EAAA0iB,IACA/oD,IAAA,EACAxF,GAAAigD,EAAAjgD,GACAwlB,IAAAy6B,EAAAz6B,KAEA2oC,EAAAlgC,IAAA++B,EAAA/M,SAAAjgD,GAAAgtD,EAAA/M,UACA+U,EAAAhI,EAAA/M,EAAA5U,IAAAxhC,GA9CA,GAAAuB,GAAA4hD,EAAAvnD,KACAw6C,EAAA+M,EAAA/M,QAEA70C,GAAAwkD,YAAA3P,EAAAjgD,GAAA,KAAAigD,EAAAz6B,UACApa,GAAAmZ,UACAnZ,GAAAka,IA4CA,IAAAyvC,GAAArC,EAAAnoC,IAAAnf,EAEA2pD,GAAAzE,UAAAgE,EACAS,EAAAE,QAAAN,EAGA,QAAAP,GAAApH,EAAAc,EAAAC,EACAmG,EAAA3F,EAAA1kD,GAQA,QAAAqrD,KACA1Z,IAAArL,EAAAttC,QACAwxD,EAAArH,EAAAc,EAAAC,EACAmG,EAAA3F,EAAA1kD,GAIA,QAAAsrD,KACA3Z,IACA0Z,IAdA,GAAA9pD,GAAA4hD,EAAAvnD,KAEA+1C,EAAA,EACArL,EAAA5vC,OAAA6M,KAAAhC,EAAAuzC,aAcAxO,GAAA3+B,QAAA,SAAAlG,GACA,GAAAozC,GAAAsO,EAAAvnD,KAAAk5C,aAAArzC,EACA,IAAAozC,EAAAE,KAOApD,IACA0Z,QARA,CACA,GAAAzvD,GAAAi5C,EAAAj5C,WACAi5C,GAAAj5C,KACAi5C,EAAA0W,OAAAj9C,SAAA21C,EAAA,GACA,IAAA/iD,GAAA2zC,EAAA3zC,MACAsqD,GAAAtqD,EAAAtF,EAAA0vD,MAUA,QAAAH,GAAAhI,EAAA3hB,EAAAxhC,GASA,QAAA0xC,OACA+Z,IAAAC,EAAA1yD,QACAgH,IAIA,QAAAmZ,GAAA07B,GACA,GAAA3zC,GAAAiiD,EAAAvnD,KAAAk5C,aAAAD,GAAA3zC,OACAozC,EAAAyU,EAAAroC,KACA8gB,MACAkmB,UAAAxmD,EAAA,KAAAsgC,GAGA8S,GAAAmS,UAAA/U,EACA4C,EAAA8W,QAAA,SAAAjuD,GAIAA,EAAA4tD,iBACA5tD,EAAA6tD,kBACAtZ,KA3BA,GAAA+Z,GAAA,EACAC,EAAAh1D,OAAA6M,KAAA4/C,EAAAvnD,KAAAk5C,iBAEA,KAAA4W,EAAA1yD,OACA,MAAAgH,IA0BA,QAAAvJ,GAAA,EAAmBA,EAAAi1D,EAAA1yD,OAAsBvC,IACzC0iB,EAAAuyC,EAAAj1D,IAIA,QAAA+0D,GAAAtqD,EAAAtF,EAAAoE,GAGA,GAAAirD,GAAAnC,EAAAvkD,MAAArD,EACA+pD,GAAAxE,UAAA,SAAAtpD,GACA,GAAAoH,GAAApH,EAAAkY,OAAAnV,MACA,IAAAqE,EACA,MAAAvE,IAEA,IAAA2rD,IACAzqD,SACAhG,KAAAU,GAEAsvD,EAAApC,EAAApoC,IAAAirC,EACAT,GAAAzE,UAAAzmD,GAlWA,OATAomD,GACAwC,EACAC,EACAC,EACAC,EACAC,EACA4C,EACA3oB,EARA+f,EAAA1O,EAAApuB,KAUAzvB,EAAA,EAAA6I,EAAA0jD,EAAAhqD,OAAwCvC,EAAA6I,EAAS7I,IAAA,CACjD,GAAA8K,GAAAyhD,EAAAvsD,EACA8K,GAAAmZ,KAAA6/B,GAAAh5C,EAAAmZ,OAGAnZ,EAAAyhD,EAAAvsD,GAAAqoD,GAAAv9C,EAAAyH,EAAA+7C,WACAxjD,EAAApF,QAAAyvD,IACAA,EAAArqD,IAIA,GAAAqqD,EACA,MAAA5rD,GAAA4rD,EAGA,IAAAtC,IAAA,EACAI,EAAA,EACA1nB,EAAA,GAAA5jC,OAAA4kD,EAAAhqD,QACAsrD,EAAA,GAAAzR,IACAsW,GAAA,EACAzG,EAAAtG,EAAA2N,MAAA8B,YAAA,eAEA9I,IAAAC,EAAAN,EAAA,SAAAxmD,GACA,MAAAA,GACA8D,EAAA9D,OAEAksD,OAiVA,QAAA0D,IAAAvF,EAAAwF,EAAAj1B,EAAAk1B,EAAAC,GAiBA,QAAAC,GAAA/uD,GACAgvD,EAAAhvD,EAAAkY,OAAAnV,OACAksD,GACAH,EAAAG,EAAAD,EAAAE,GAIA,QAAAC,GAAAnvD,GACAivD,EAAAjvD,EAAAkY,OAAAnV,OACAisD,GACAF,EAAAG,EAAAD,EAAAE,GAIA,QAAAE,KACA,IAAAH,EAAApzD,OACA,MAAAizD,IAGA,IACAO,GADAxnB,EAAAonB,IAAApzD,OAAA,EAEA,IAAA+yD,KAAAl0B,MACA,IACA20B,EAAAvF,YAAAC,MAAAliB,EAAA+mB,EAAAl0B,OACA,EAAAk0B,EAAAU,WACO,MAAAtvD,GACP,iBAAAA,EAAAyB,MAAA,IAAAzB,EAAA8V,KACA,MAAAg5C,SAIAO,GAAAvF,YAAAyF,WAAA1nB,GAAA,EAEA+mB,GAAAS,EACAJ,EAAA,KACAD,EAAA,KACA5F,EAAAoG,OAAAZ,EAAAC,GAAAvF,UAAAyF,EACA3F,EAAAqG,WAAAb,EAAAC,GAAAvF,UAAA6F,EAGA,QAAAO,GAAA1vD,GACA,GAAAoqD,GAAApqD,EAAAkY,OAAAnV,MACA,OAAAqnD,OAIA0E,IAAA1E,EAAA9lD,MAAA8lD,EAAAlvD,OAAAkvD,GAHA0E,IAnDA,GAIAG,GACAD,EACAE,EANAS,EAAA,kBAAAvG,GAAAoG,QACA,kBAAApG,GAAAqG,YACAZ,EAAA,IAAAl1B,CAuDAg2B,IACAT,GAAoBzE,SAAA2E,GACpBhG,EAAAoG,OAAAZ,EAAAC,GAAAvF,UAAAyF,EACA3F,EAAAqG,WAAAb,EAAAC,GAAAvF,UAAA6F,GACGx1B,EACHyvB,EAAAiB,WAAAuE,EAAA,QAAAtF,UAAAoG,EAEAtG,EAAAiB,WAAAuE,GAAAtF,UAAAoG,EAKA,QAAAF,IAAApG,EAAAwF,EAAA1uC,GASA,QAAAwvC,GAAA1vD,GACA,GAAAoqD,GAAApqD,EAAAkY,OAAAnV,MACAqnD,IACA1pC,EAAA1f,KAAAopD,EAAAlvD,OACAkvD,EAAAK,YAEAvqC,GACAhI,QACAnV,OAAA2d,KAhBA,qBAAA0oC,GAAAoG,OAGA,YADApG,EAAAoG,OAAAZ,GAAAtF,UAAAppC,EAIA,IAAAQ,KAgBA0oC,GAAAiB,WAAAuE,GAAAtF,UAAAoG,EAGA,QAAAE,IAAA74B,EAAA5Q,EAAAyU,EAAAt2B,EAAAq1B,GACA,IACA,GAAA5C,GAAA5Q,EACA,MAAAwT,GACAmwB,YAAAC,MAAA5jC,EAAA4Q,GAAA6D,GAAA,GAEAkvB,YAAAC,MAAAhzB,EAAA5Q,GAAA,GAAAyU,EAEK,IAAA7D,EACL,MAAA4C,GACAmwB,YAAA+F,WAAA94B,GAEA+yB,YAAAyF,WAAAx4B,EAEK,IAAA5Q,EACL,MAAAwT,GACAmwB,YAAAyF,WAAAppC,GAAAyU,GAEAkvB,YAAA+F,WAAA1pC,GAAAyU,EAEK,IAAAt2B,EACL,MAAAwlD,aAAAQ,KAAAhmD,GAEG,MAAAtE,GACH,OAAYhB,MAAAgB,GAEZ,YAGA,QAAA8vD,IAAAjkD,EAAA8+C,EAAA9nD,GA2CA,QAAAktD,GAAA9W,EAAAztC,EAAAs7C,GACA,GAAAxiD,GAAA20C,EAAAjgD,GAAA,KAAA8tD,CACAkJ,GAAArxD,IAAA2F,GAAAglD,UAAA,SAAAtpD,GAEA,GADAwL,EAAApH,IAAAukD,GAAA3oD,EAAAkY,OAAAnV,QACA8I,EAAA67B,UAAA,CACA,GAAAA,GAAAwS,EAAAjB,EACAvR,GAAA7rC,SACA2P,EAAApH,IAAA85C,WAAAxW,GAGAshB,GAAAx9C,EAAApH,IAAAyH,EAAAo9C,IAIA,QAAAgH,GAAAnJ,EAAA7N,GACA,GAAAztC,IACAxS,GAAAigD,EAAAjgD,GACAsL,IAAA20C,EAAAjgD,GACAkC,OACAsjB,IAAAsoC,IAGAh/B,EAAAmxB,EAAAnxB,OACA,QAAAjc,EAAAic,SACA+c,EAAA7jC,KAAAwK,GAEAsc,GACAtc,EAAAtQ,MAAA4sB,SAAA,EACAtc,EAAApH,IAAA,MACOyH,EAAA0W,cACPwtC,EAAA9W,EAAAztC,EAAAs7C,KAEKh/B,GAAA2R,KAAA,IACLoL,EAAA7jC,KAAAwK,GACAK,EAAA0W,cACAwtC,EAAA9W,EAAAztC,EAAAs7C,IAKA,QAAA7R,GAAAib,GACA,OAAA52D,GAAA,EAAA6I,EAAA+tD,EAAAr0D,OAA6CvC,EAAA6I,GAC7C0iC,EAAAhpC,SAAA29B,EADsDlgC,IAAA,CAItD,GAAA62D,GAAAD,EAAA52D,GACA2/C,EAAAwP,GAAA0H,GACArJ,EAAA7N,EAAAD,UACAiX,GAAAnJ,EAAA7N,IAIA,QAAA6V,GAAAsB,EAAAF,EAAA9F,GACAA,IAGAnV,EAAAib,GACArrB,EAAAhpC,OAAA29B,GACA4wB,EAAAK,YAIA,QAAAsE,GAAA/uD,GACA,GAAA0gB,GAAA1gB,EAAAkY,OAAAnV,MACA8I,GAAA8tB,aACAjZ,IAAAyrB,WAEA8I,EAAAv0B,GAGA,QAAA2vC,KACAxtD,EAAA,MACA+f,WAAA0pC,EACApjB,OAAAr9B,EAAA4tB,KACApuB,KAAAw5B,IAIA,QAAAyrB,KACAzkD,EAAAs9B,YACAogB,GAAA1kB,EAAAh5B,EAAAu9B,QAAAptC,KAAAq0D,GAEAA,IA5HA,GAAAt5B,GAAA,YAAAlrB,MAAAE,SACAoa,EAAA,UAAAta,MAAAG,OACA1H,EAAA,OAAAuH,MAAAvH,IACAm1B,EAAA5tB,EAAA4tB,MAAA,EACAD,EAAA,gBAAA3tB,GAAA2tB,MAAA3tB,EAAA2tB,OAAA,EACAoB,EAAA/uB,EAAAK,iBAAA,EAEA0iD,EAAAgB,GAAA74B,EAAA5Q,EAAAyU,EAAAt2B,EAAAuH,EAAA8tB,YACA42B,EAAA3B,KAAA5vD,KACA,IAAAuxD,IAAA,cAAAA,EAAA9uD,MACA,IAAA8uD,EAAAz6C,MAGA,MAAAjT,GAAAi0C,EAAAwR,GACAiI,EAAA9uD,KAAA8uD,EAAA7uD,SAGA,IAAAkpD,IAAAM,GAAAhB,GAAAkB,GAEAv/C,GAAAs9B,aACAyhB,EAAA5pD,KAAAqoD,GAEA,IAAAgC,GAAAX,GAAAC,EAAAC,EAAA,WACA,IAAAS,EAAArsD,MACA,MAAA6D,GAAAwoD,EAAArsD,MAEA,IAAAiqD,GAAAoC,EAAApC,GACAA,GAAAuC,WAAA8E,EACArH,EAAAqC,QAAAlD,GAAAvlD,EACA,IAKAypD,GALAb,EAAAxC,EAAAG,YAAA8B,IACAjB,EAAAhB,EAAAG,YAAAc,IACA2B,EAAA5C,EAAAG,YAAAgC,IACA4E,EAAA/F,EAAA/+C,MAAA,eACA25B,IAgGA,OA7FAgnB,GAAAltD,IAAAysD,IAAA9B,UAAA,SAAAtpD,GACAssD,EAAAtsD,EAAAkY,OAAAnV,OAAAupD,UA4FAiE,GAAA,IAAA/2B,EAAA,OAGAA,KAAA,EACAg2B,GAAA/D,EAAAmD,EAAAG,OAIAJ,IAAAlD,EAAAmD,EAAA/iD,EAAA8tB,WAAAH,EAAAC,EAAAq1B,GAeA,QAAA0B,IAAAvH,GACA,UAAArW,IAAA,SAAA1rC,GACA,GAAAq9C,GAAAlC,IAAA,KACAlL,EAAA8R,EAAAG,YAAAqH,IAAAltC,IAAAghC,EAAA,MAEApN,GAAAmS,UAAA,WACA,GAAAoH,GAAA7pD,UAAAu3B,UAAArZ,MAAA,iBACA4rC,EAAA9pD,UAAAu3B,UAAArZ,MAAA,SAGA7d,GAAAypD,IAAAD,GACAv/C,SAAAu/C,EAAA,aAGAzH,EAAAqC,QAAA,SAAAtrD,GAGAA,EAAA4tD,iBACA5tD,EAAA6tD,kBACA3mD,GAAA,MAEGO,MAAA,WACH,WAIA,QAAAmpD,IAAA3H,EAAA5lD,GACA,GAAA6H,GAAA+9C,EAAAG,YAAA8B,IAAAhgD,MAAA,iBACAA,GAAA9D,MAAA0iD,YAAAQ,KAAA,MAAAhB,UAAA,SAAAtpD,GACAqD,EAAArD,EAAAkY,OAAAnV,SAWA,QAAAiiC,IAAAjjC,EAAAhD,EAAAvC,EAAAknB,GACA,IACA3hB,EAAAhD,EAAAvC,GACG,MAAAuC,GAIH2kB,EAAA3T,KAAA,QAAAhR,IAIA,QAAA8xD,OACAC,IAAAjiD,GAAAhT,SAGAi1D,IAAA,EACAjiD,GAAA6wC,WAGA,QAAAqR,IAAA7oC,EAAArlB,EAAA6gB,GACA7U,GAAA7N,KAAA,WACAknB,EAAA,SAAAnpB,EAAAvC,GACAwoC,GAAAniC,EAAA9D,EAAAvC,EAAAknB,GACAotC,IAAA,EACAruD,GAAA,WACAouD,GAAAntC,SAIAmtC,KAGA,QAAA3mC,IAAAre,EAAAozC,EAAAjJ,EAAA2U,GA2CA,QAAAmE,GAAAsB,EAAAF,EAAA9F,GAQA,QAAA4G,GAAA/X,EAAAgY,GACA,GAAArpB,GAAA/7B,EAAAw7B,cAAA4pB,EAAAhY,EAAAptC,EACAqlD,GAAAtpB,EAAAvD,IAAA4U,EAAA5U,GAEA,IAAA8sB,GAAA9kD,EAAAu7B,EACA,uBAAAupB,GACAtlD,EAAA07B,SAAA4pB,QAGAA,IACAC,IACAC,GACAxsB,EAAA7jC,KAAA4mC,GAIA/7B,EAAAs9B,aAAAt9B,EAAA0W,aACAymC,GAAAiI,EAAAplD,EAAAo9C,EAAA,WACAM,IAAA3hB,GAAA/7B,EAAAu9B,QAAAptC,KAAA,WACA6P,EAAAiyC,SAAAlW,OAIA/7B,EAAAiyC,SAAAlW,KAKA,QAAA0pB,KACA,OAAAh4D,GAAA,EAAA6I,EAAAovD,EAAA11D,OAA+CvC,EAAA6I,GAC/CivD,IAAA53B,EADwDlgC,IAAA,CAIxD,GAAA23D,GAAAM,EAAAj4D,EACA,IAAA23D,EAAA,CAGA,GAAAhY,GAAAuY,EAAAl4D,EACA03D,GAAA/X,EAAAgY,IAGAG,IAAA53B,GACA4wB,EAAAK,WAjDA,GAAAL,GAAAgG,EAAAv0D,OAAA,CAIA,GAAA01D,GAAA,GAAAtwD,OAAAmvD,EAAAv0D,QACA21D,EAAA,GAAAvwD,OAAAmvD,EAAAv0D,QAmDA24C,EAAA,CACA0b,GAAA1lD,QAAA,SAAAtP,EAAA5B,GACA,GAAA8K,GAAAukD,GAAAztD,GACAmpC,EAAA+rB,EAAA92D,EACAm4D,GAAArtD,EAAAigC,EAAA,SAAA4U,EAAAgY,GACAO,EAAAl4D,GAAA2/C,EACAsY,EAAAj4D,GAAA23D,IACAzc,IAAA4b,EAAAv0D,QACAy1D,SAMA,QAAAI,GAAAttD,EAAAigC,EAAA4U,EAAA51C,GACA,GAAA41C,EAAA5U,QAEA,MAAAhhC,IAGA,IAAA41C,EAAAD,aAAA50C,EAAAka,KAEA,MAAAjb,GAAA41C,EAAA70C,EAIA,IAAAutD,GAAAvtD,EAAAmZ,IAAA,KAAA07B,EAAAD,WACA7B,EAAA6Y,EAAArxD,IAAAgzD,EACAxa,GAAAmS,UAAA,SAAAtpD,GACAqD,EAAA41C,EAAA0P,GAAA3oD,EAAAkY,OAAAnV,UAIA,QAAA0uD,GAAArtD,EAAAigC,EAAAhhC,GACA,GAAAsjC,MAAAnS,IAAApwB,EAAAmZ,KACA,MAAAla,IAGA,IAAA41C,GAAA2Y,EAAAjzD,IAAAyF,EAAAmZ,IACA,OAAA07B,GACAyY,EAAAttD,EAAAigC,EAAA4U,EAAA51C,QAGAooD,EAAA9sD,IAAAyF,EAAAmZ,KAAA+rC,UAAA,SAAAtpD,GACAi5C,EAAAwP,GAAAzoD,EAAAkY,OAAAnV,QACA6uD,EAAA3qC,IAAA7iB,EAAAmZ,IAAA07B,GACAyY,EAAAttD,EAAAigC,EAAA4U,EAAA51C,KAIA,QAAAmkC,KACA37B,EAAA07B,SAAA,MACA1C,UACA2a,SAAA0R,IAIA,QAAAZ,MACAzkD,EAAAgmD,YAAAhmD,EAAAs9B,YAGAogB,GAAA1kB,GAAA7oC,KAAAwrC,GAEAA,IAhKA,GAFA37B,EAAA3I,EAAA2I,GAEAA,EAAAgmD,WAAA,CACA,GAAA74D,GAAAg9C,EAAA,IAAA8C,GAGA,OAFA4T,IAAA/8C,YAAAqmC,EAAAh9C,EAAAimD,EAAApzC,GACA6gD,GAAAC,OAAA3W,IAEAhzC,OAAA,WACA0pD,GAAA78C,eAAAmmC,EAAAh9C,KAKA,GAAA2tC,GAAA96B,EAAAimD,SAAA,GAAAC,IAAAlmD,EAAAimD,QAEAjmD,GAAA6tB,MAAA7tB,EAAA6tB,OAAA,CACA,IAAAw3B,GAAArlD,EAAA6tB,MAEAF,EAAA,SAAA3tB,KAAA2tB,OAAA,CACA,KAAAA,IACAA,EAAA,EAEA,IAAA63B,EAEAA,GADA,eAAAxlD,GACAA,EAAAmmD,cACG,cAAAnmD,KAEHA,EAAAwlD,UAKA,IAKApI,GACAyC,EACAD,EACAuE,EARAnrB,KACAusB,EAAA,EACA/kD,EAAAirC,EAAAzrC,GACA+lD,EAAA,GAAAlc,IAmIAuc,GAAA/G,GAAAhB,GACAr+C,GAAAs9B,aACA8oB,EAAAjxD,KAAAqoD,GAEA,IAAAgC,GAAAX,GAAAC,EAAAsH,EAAA,WACA,IAAA5G,EAAArsD,MACA,MAAA6M,GAAA07B,SAAA8jB,EAAArsD,MAEAiqD,GAAAoC,EAAApC,IACAA,EAAAqC,QAAAlD,GAAAv8C,EAAA07B,UACA0hB,EAAAuC,WAAA8E,EAEA5E,EAAAzC,EAAAG,YAAAc,IACAuB,EAAAxC,EAAAG,YAAA8B,IACA8E,EAAAtE,EAAAxgD,MAAA,cAEA,IAAA0jD,GAAA/iD,EAAA6tB,QAAA7tB,EAAA8tB,WACAmwB,YAAAyF,WAAA1jD,EAAA6tB,OAAA,OAEAi1B,IAAAjD,EAAAkD,EAAA/iD,EAAA8tB,WAAAH,EAAAs1B,GAOA,QAAAoD,IAAArmD,EAAAhJ,GACA,GAAAo8C,GAAAtmD,IAEAo4D,IAAA,SAAAoB,GACAn/B,GAAAisB,EAAApzC,EAAAsmD,IACGtvD,EAAAo8C,EAAAhkD,aAGH,QAAA+3B,IAAAisB,EAAApzC,EAAAhJ,GAQA,QAAAuvD,GAAAjwC,GACA,GAAAspC,GAAAtpC,EAAAkwC,kBAAAnH,IAAoDoH,QAAA,MACpDnwC,GAAAkwC,kBAAAnI,IAAwCqI,eAAA,IACxCx2B,YAAA,6BAAkDy2B,QAAA,IAClDrwC,EAAAkwC,kBAAAhJ,IAAwCiJ,QAAA,WACxCnwC,EAAAkwC,kBAAAjH,IAAsCkH,QAAA,KAAAC,eAAA,IACtCpwC,EAAAkwC,kBAAA5B,IAGAhF,EAAA1vB,YAAA,mCAA8Dy2B,QAAA,IAG9DrwC,EAAAkwC,kBAAAlH,IAAuCmH,QAAA,OAGvC,IAAAzI,GAAA1nC,EAAAkwC,kBAAAlI,IACOoI,eAAA,GACP1I,GAAA9tB,YAAA,aACA8tB,EAAA9tB,YAAA,yBAA0Dy2B,QAAA,IAM1D,QAAAC,GAAAxJ,EAAApmD,GACA,GAAA4oD,GAAAxC,EAAAG,YAAA8B,GACAO,GAAA1vB,YAAA,mCAA8Dy2B,QAAA,IAE9D/G,EAAApB,aAAAf,UAAA,SAAAx7C,GACA,GAAAs8C,GAAAt8C,EAAAoK,OAAAnV,MACA,IAAAqnD,EAAA,CACA,GAAAnR,GAAAmR,EAAAlvD,MACA4sB,EAAAq1B,GAAAlE,EACAA,GAAAuP,eAAA1gC,EAAA,QACA2jC,EAAAloC,IAAA01B,GACAmR,EAAAK,eAEA5nD,MAMA,QAAA6vD,GAAAvwC,GACAA,EAAAkwC,kBAAAlH,IAAuCmH,QAAA,QACvCv2B,YAAA,6BAAkDy2B,QAAA,IAIlD,QAAAG,GAAA1J,EAAA5lD,GACA,GAAAuvD,GAAA3J,EAAAG,YAAA+B,IACAM,EAAAxC,EAAAG,YAAA8B,IACAjB,EAAAhB,EAAAG,YAAAc,IAEAE,EAAAqB,EAAApB,YACAD,GAAAd,UAAA,SAAAx7C,GACA,GAAAs8C,GAAAt8C,EAAAoK,OAAAnV,MACA,IAAAqnD,EAAA,CACA,GAAAnR,GAAAmR,EAAAlvD,MACAgoB,EAAA+1B,EAAAjgD,GACAmmC,EAAAie,GAAAl6B,GACA1E,EAAAw6B,EAAAC,EACA,IAAA9Z,EAAA,CACA,GAAAwyB,GAAAzuC,EAAA,KAAA1E,EAGAuY,EAAA7T,EAAA,KACAiD,EAAAjD,EAAA,MACAhY,EAAA++C,EAAA/+C,MAAA,eACAwrC,EAAAoT,YAAAC,MAAAhzB,EAAA5Q,GAAA,MACA0sC,EAAA3nD,EAAAm/C,WAAA3T,EACAmc,GAAAvJ,UAAA,SAAAtpD,GAEA,GADA6yD,EAAA7yD,EAAAkY,OAAAnV,OAKa,CACb,GAAAtE,GAAAo0D,EAAA33D,KACAuD,GAAAmqD,cAAA+I,GACAiB,EAAArvC,IAAA9kB,GAEAwrD,EAAAhzC,OAAA47C,EAAArI,YACAqI,EAAApI,eARAgB,GAAAx0C,OAAAmzC,EAAAI,YACAJ,EAAAK,gBAWAL,GAAAK,eAEOpnD,IACPA,KAMA,QAAAyvD,GAAA3wC,GACA,GAAA0nC,GAAA1nC,EAAAkwC,kBAAAlI,IACOoI,eAAA,GACP1I,GAAA9tB,YAAA,aACA8tB,EAAA9tB,YAAA,yBAA0Dy2B,QAAA,IAI1D,QAAAO,GAAA9J,EAAApmD,GACA,GAAAonD,GAAAhB,EAAAG,YAAAc,IACAF,EAAAf,EAAAG,YAAAC,IACAQ,EAAAZ,EAAAG,YAAAe,IAKAhT,EAAA6S,EAAA5iD,OACA+vC,GAAAmS,UAAA,SAAAtpD,GACA,GAAAoH,GAAApH,EAAAkY,OAAAnV,MACA,OAAAqE,QAIA6iD,EAAAI,aAAAf,UAAA,SAAAtpD,GACA,GAAAoqD,GAAApqD,EAAAkY,OAAAnV,MACA,KAAAqnD,EACA,MAAAvnD,IAMA,QAJAuB,GAAAgmD,EAAAlvD,MACAmpC,EAAA+lB,EAAAI,WACAnM,EAAA9kD,OAAA6M,KAAAhC,EAAAuzC,kBACAqb,KACA12C,EAAA,EAAuBA,EAAA+hC,EAAAxiD,OAAiBygB,IAAA,CACxC,GAAAo7B,GAAAtzC,EAAAuzC,aAAA0G,EAAA/hC,GACA02C,GAAAtb,EAAA3zC,SAAA,EAEA,GAAAgpD,GAAAxzD,OAAA6M,KAAA4sD,EACA,KAAA12C,EAAA,EAAmBA,EAAAywC,EAAAlxD,OAAoBygB,IAAA,CACvC,GAAAvY,GAAAgpD,EAAAzwC,EACAutC,GAAAtmC,KACA8gB,MACAkmB,UAAAxmD,EAAA,KAAAsgC,IAGA+lB,EAAAK,aAxBA5nD,KAmCA,QAAAowD,GAAAhK,GAEA,QAAAiK,GAAAxK,GACA,MAAAA,GAAAjqD,KAKAgqD,GAAAC,IAHAA,EAAA5gC,QAAA,MAAA4gC,EAAAF,eACAE,GAOA,GAAAgD,GAAAzC,EAAAG,YAAAc,IACAuB,EAAAxC,EAAAG,YAAA8B,IACAd,EAAAqB,EAAApB,YACAD,GAAAd,UAAA,SAAAtpD,GAUA,QAAAmzD,KAGA,GAAAp8B,GAAAkiB,EAAAjgD,GAAA,KACAmtB,EAAA8yB,EAAAjgD,GAAA,MACAm+C,EAAAuU,EAAAxgD,MAAA,eAAAm/C,WACAP,YAAAC,MAAAhzB,EAAA5Q,IAEAitC,EAAA,CACAjc,GAAAmS,UAAA,SAAAtpD,GACA,GAAAoqD,GAAApqD,EAAAkY,OAAAnV,MACA,KAAAqnD,EAEA,MADAnR,GAAA5U,IAAA+uB,EACAC,GAEA,IAAAhvB,GAAA+lB,EAAAI,UACAnmB,GAAA+uB,IACAA,EAAA/uB,GAEA+lB,EAAAK,YAIA,QAAA4I,KACA,GAAA7F,GAAAjF,GAAAtP,EACAA,EAAAD,WAAAC,EAAAnxB,SAEAqvB,EAAAsU,EAAAloC,IAAAiqC,EACArW,GAAAmS,UAAA,WACAc,EAAAK,YAtCA,GAAAL,GAAApqD,EAAAkY,OAAAnV,MACA,IAAAqnD,EAAA,CAGA,GAAAnR,GAAAia,EAAA9I,EAAAlvD,MAsCA,OApCA+9C,GAAAD,WAAAC,EAAAD,YACAA,EAAAC,GAmCAA,EAAA5U,IACAgvB,QAGAF,OA5NA,GAAAnd,GAAAnqC,EAAApK,KAEAkpD,EAAA,IACA1L,GAAA2N,MAAA,KA8NA3N,EAAAphC,KAAA,WACA,aAGAohC,EAAA1hC,IAAAnb,EAAA,SAAAS,GACAA,EAAA,KAAAo8C,EAAA2N,MAAA0G,cAGArU,EAAAsU,UAAA,SAAApc,EAAAqc,EAAA3wD,GACAkoD,GAAAl/C,EAAAsrC,EAAAqc,EAAAvU,EAAA0L,EAAA9nD,IAKAo8C,EAAAwU,KAAA,SAAAz6D,EAAA6S,EAAAhJ,GAcA,QAAA2kC,KACA3kC,EAAA9D,GAAqBqF,MAAA60C,WAAA5oB,IAAA44B,IAdrB,GAAA7kD,GACA60C,EACAl6C,EACAkqD,EAAAp9C,EAAAwkB,GACA,KAAA44B,EAAA,CACA,GAAAoC,GAAAX,GAAAC,GACAO,GAAAhB,GAAAb,IAAA,WACA,IAAAgC,EAAArsD,MACA,MAAA6D,GAAAwoD,EAAArsD,MAEAiqD,GAAAoC,EAAApC,IAOAA,EAAAG,YAAA8B,IAAAvsD,IAAA3F,GAAAswD,UAAA,SAAAtpD,GAOA,GANAi5C,EAAAwP,GAAAzoD,EAAAkY,OAAAnV,SAMAk2C,EAEA,MADAl6C,GAAA+3C,EAAA0Q,GAAA,WACAhgB,GAGA,IAAAhpB,EACA,IAAA3S,EAAA2S,IAQAA,EAAA3S,EAAAwxC,UAAAxxC,EAAA2S,IAAAy6B,GAAAptC,EAAA2S,QARA,CACAA,EAAAy6B,EAAAD,UACA,IAAAlxB,GAAAq1B,GAAAlE,EACA,IAAAnxB,EAEA,MADA/oB,GAAA+3C,EAAA0Q,GAAA,WACAhgB,IAMA,GAAA4hB,GAAAH,EAAAG,YAAAc,IACA5lD,EAAA20C,EAAAjgD,GAAA,KAAAwlB,CAEA4qC,GAAAl+C,MAAA,eAAAvM,IAAA2F,GAAAglD,UAAA,SAAAtpD,GAKA,MAJAoE,GAAApE,EAAAkY,OAAAnV,OACAqB,IACAA,EAAAukD,GAAAvkD,IAEAA,MAIAojC,MAHAzoC,EAAA+3C,EAAA0Q,GAAA,WACAhgB,QAOAyX,EAAAyU,eAAA,SAAAxwC,EAAAywC,EAAAC,EAAA/nD,EAAAhJ,GACA,GAAAomD,EACA,IAAAp9C,EAAAwkB,IACA44B,EAAAp9C,EAAAwkB,QACK,CACL,GAAAg7B,GAAAX,GAAAC,GACAO,GAAAhB,GAAAb,IAAA,WACA,IAAAgC,EAAArsD,MACA,MAAA6D,GAAAwoD,EAAArsD,MAEAiqD,GAAAoC,EAAApC,IAEA,GAAAllD,GAAA6vD,EAAA7vD,OACA8Z,EAAA+1C,EAAAnO,YAEAwD,GAAAG,YAAAC,IAAA1qD,IAAAoF,GAAAulD,UAAA,SAAAtpD,GACA,GAAAjC,GAAAiC,EAAAkY,OAAAnV,OAAAhF,IACA+qD,IAAA/qD,EAAA8f,EAAAhS,EAAAu9B,OAAA,SAAAyqB,GACAhxD,EAAA,KAAAgxD,OAKA5U,EAAA6U,MAAA,SAAAjxD,GACA,GAAAkxD,GACAzH,EAEAjB,EAAAX,GAAAC,GAAAS,GAAAlB,IAAA,WACA,IAAAmB,EAAArsD,MACA,MAAA6D,GAAAwoD,EAAArsD,MAEA,IAAAiqD,GAAAoC,EAAApC,GACAA,GAAAG,YAAAgC,IAAAzsD,IAAAysD,IAAA9B,UAAA,SAAAtpD,GACAssD,EAAAtsD,EAAAkY,OAAAnV,OAAAupD,UAEArD,EAAAG,YAAAc,IAAAG,WAAA,aAAAf,UAAA,SAAAtpD,GACA,GAAAoqD,GAAApqD,EAAAkY,OAAAnV,MACAgxD,GAAA3J,IAAA9lD,IAAA,GAGA2kD,EAAAuC,WAAA,WACA3oD,EAAA,MACAmxD,UAAA1H,EACA2H,WAAAF,EAEAG,sBAAAjV,EAAA2N,MAAA8B,YAAA,sBAKAzP,EAAAC,SAAA,SAAArzC,EAAAhJ,GACAitD,GAAAjkD,EAAA8+C,EAAA9nD,IAGAo8C,EAAAkV,SAAA,SAAAtoD,GACAqe,GAAAre,EAAAozC,EAAAjJ,EAAA2U,IAGA1L,EAAAmV,OAAA,SAAAvxD,GAGA8nD,EAAA0J,QACAC,GAAAr9C,OAAA++B,GACAnzC,KAGAo8C,EAAAsV,iBAAA,SAAArxC,EAAArgB,GACA,GAAAwoD,GAAAX,GAAAC,GAAAO,IAAA,WACA,IAAAG,EAAArsD,MACA,MAAA6D,GAAAwoD,EAAArsD,MAEA,IAAAiqD,GAAAoC,EAAApC,IACA9R,EAAA8R,EAAAG,YAAA8B,IAAAvsD,IAAAukB,EACAi0B,GAAAmS,UAAA,SAAAx7C,GACA,GAAA1J,GAAAqkD,GAAA36C,EAAAoK,OAAAnV,OACAqB,GAGAvB,EAAA,KAAAuB,EAAAm1C,UAFA12C,EAAAi0C,EAAA0Q,OAUAvI,EAAAuV,cAAA,SAAAtxC,EAAA02B,EAAA/2C,GACA,GAAA+nD,IACAM,GACAhB,GACAb,GACAc,IAEAkB,EAAAX,GAAAC,EAAAC,EAAA,YACA,IAAAS,EAAArsD,MACA,MAAA6D,GAAAwoD,EAAArsD,MAEA,IAAAiqD,GAAAoC,EAAApC,IAEAwC,EAAAxC,EAAAG,YAAA8B,GAEAO,GAAA9sD,IAAAukB,GAAAomC,UAAA,SAAAx7C,GACA,GAAAmrC,GAAAwP,GAAA36C,EAAAoK,OAAAnV,OACA42C,GAAAV,EAAAM,SAAA,SAAAU,EAAAP,EACAY,EAAAjqB,EAAAxkB,GACA,GAAA2S,GAAAk7B,EAAA,IAAAY,CACAV,GAAAh7C,QAAA4f,MAAA,IACA3S,EAAAzO,OAAA,aAGAqsD,GAAA7P,EAAA12B,EAAA+lC,EACA,IAAAnC,GAAA7N,EAAAD,WACAlxB,EAAAmxB,EAAAnxB,OACAmhC,GAAAG,YAAA8B,IAAA3nC,IACAglC,GAAAtP,EAAA6N,EAAAh/B,KAEAmhC,EAAAqC,QAAAlD,GAAAvlD,GACAomD,EAAAuC,WAAA,WACA3oD,MAKAo8C,EAAAwV,UAAA,SAAAz7D,EAAA6J,GACA,GAAAwoD,GAAAX,GAAAC,GAAAQ,IAAA,WACA,IAAAE,EAAArsD,MACA,MAAA6D,GAAAwoD,EAAArsD,MAEA,IAAAooD,GAAAiE,EAAApC,IACA9R,EAAAiQ,EAAAgC,YAAA+B,IAAAxsD,IAAA3F,EAEAm+C,GAAA8W,QAAA7F,GAAAvlD,GACAs0C,EAAAmS,UAAA,SAAAtpD,GACA,GAAAoE,GAAApE,EAAAkY,OAAAnV,MACAqB,UAGAA,GAAA,YACAvB,EAAA,KAAAuB,IAHAvB,EAAAi0C,EAAA0Q,OAQAvI,EAAAyV,UAAA,SAAAtwD,EAAAyH,EAAAhJ,GACA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,YAEAzH,GAAAq6C,UACA,IAAAkW,GAAAvwD,EAAAka,KACAtlB,EAAAoL,EAAAmZ,GACAo3C,GAGAvwD,EAAAka,KAAA,MAAAnN,SAAAwjD,EAAA5rD,MAAA,eAFA3E,EAAAka,KAAA,KAKA,IACA+H,GADA+gC,EAAAv7C,EAAAwkB,GAEA,KAAA+2B,EAAA,CACA,GAAAiE,GAAAX,GAAAC,GAAAQ,IAAA,YACA,IAAAE,EAAArsD,MACA,MAAA6D,GAAAwoD,EAAArsD,MAEAooD,GAAAiE,EAAApC,IACA7B,EAAA6G,QAAA7F,GAAAvlD,GACAukD,EAAAoE,WAAA,WACAnlC,GACAxjB,EAAA,KAAAwjB,IAKA,GACA8wB,GADAyd,EAAAxN,EAAAgC,YAAA+B,GAEAwJ,IACAxd,EAAAyd,EAAAj2D,IAAA3F,GACAm+C,EAAAmS,UAAA,SAAAtpD,GACA,GAAA60D,GAAA70D,EAAAkY,OAAAnV,MACA,IAAA8xD,KAAAv2C,OAAAq2C,EAES,CACT,GAAAxd,GAAAyd,EAAArxC,IAAAnf,EACA+yC,GAAAmS,UAAA,WACAjjC,GAAmB7nB,IAAA,EAAAxF,GAAAoL,EAAAmZ,IAAAiB,IAAApa,EAAAka,MACnBzS,EAAAwkB,KACAxtB,EAAA,KAAAwjB,QANAxjB,GAAAi0C,EAAA4P,QAYAvP,EAAAyd,EAAA54C,IAAA5X,GACA+yC,EAAA8W,QAAA,SAAAjuD,GAEA6C,EAAAi0C,EAAA4P,KACA1mD,EAAA4tD,iBACA5tD,EAAA6tD,mBAEA1W,EAAAmS,UAAA,WACAjjC,GAAe7nB,IAAA,EAAAxF,GAAAoL,EAAAmZ,IAAAiB,IAAApa,EAAAka,MACfzS,EAAAwkB,KACAxtB,EAAA,KAAAwjB,MAMA44B,EAAA6V,aAAA,SAAA1wD,EAAAyH,EAAAhJ,GACA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,KAEA,IAAAu7C,GAAAv7C,EAAAwkB,GACA,KAAA+2B,EAAA,CACA,GAAAiE,GAAAX,GAAAC,GAAAQ,IAAA,YACA,IAAAE,EAAArsD,MACA,MAAA6D,GAAAwoD,EAAArsD,MAEAooD,GAAAiE,EAAApC,IACA7B,EAAAoE,WAAA,WACAnlC,GACAxjB,EAAA,KAAAwjB,IAIA,GAAAA,GACArtB,EAAAoL,EAAAmZ,IACAq3C,EAAAxN,EAAAgC,YAAA+B,IACAhU,EAAAyd,EAAAj2D,IAAA3F,EAEAm+C,GAAA8W,QAAA7F,GAAAvlD,GACAs0C,EAAAmS,UAAA,SAAAtpD,GACA,GAAA60D,GAAA70D,EAAAkY,OAAAnV,MACA8xD,MAAAv2C,OAAAla,EAAAka,MAGAs2C,EAAA39C,OAAAje,GACAqtB,GAAe7nB,IAAA,EAAAxF,KAAAwlB,IAAA,OACf3S,EAAAwkB,KACAxtB,EAAA,KAAAwjB,IALAxjB,EAAAi0C,EAAA0Q,OAWAvI,EAAA8V,SAAA,SAAAlpD,EAAAhJ,GACA6pD,GAAA58C,mBAAAkmC,EAGA,IAAAgf,GAAAC,GAAAt2D,IAAAq3C,EACAgf,MAAAjyD,SACAiyD,EAAAjyD,OAAAsxD,QACAC,GAAAr9C,OAAA++B,GAEA,IAAAmB,GAAA+d,UAAAC,eAAAnf,EAEAmB,GAAAmS,UAAA,WAEA2L,GAAAh+C,OAAA++B,GACAJ,KAAAI,IAAA5uB,qBACAA,cAAA4uB,GAEAnzC,EAAA,MAAsBrE,IAAA,KAGtB24C,EAAA8W,QAAA7F,GAAAvlD,GAGA,IAAAuyD,GAAAd,GAAA31D,IAAAq3C,EAEA,IAAAof,EAGA,MAFAzK,GAAAyK,EAAAzK,IACA1L,EAAA2N,MAAAwI,EAAAz7C,OACAlX,GAAA,WACAI,EAAA,KAAAo8C,IAIA,IAAA9H,EAEAA,GADAtrC,EAAAoK,QACAo/C,GAAArf,EAAAnqC,EAAAoK,SAEAi/C,UAAAI,KAAAtf,EAAAuf,IAGAN,GAAAhuC,IAAA+uB,EAAAmB,GAEAA,EAAAqe,gBAAA,SAAAx1D,GA2BA,QAAAc,KACA,GAAA20D,GAAAC,EAAAp8D,EAAA,EACAA,KACAm8D,GACAA,EAAAxM,EAAAnoD,GA9BA,GAAAqhB,GAAAniB,EAAAkY,OAAAnV,MACA,IAAA/C,EAAA21D,WAAA,EACA,MAAAvD,GAAAjwC,EAIA,IAAA8mC,GAAAjpD,EAAA41D,cAAA9K,WAIA9qD,GAAA21D,WAAA,GACAjD,EAAAvwC,GAEAniB,EAAA21D,WAAA,GACA7C,EAAA3wC,EAGA,IAAAuzC,IACAjD,EACAE,EACAI,EACAE,GAGA35D,EAAA0G,EAAA21D,UAUA70D,MAGAq2C,EAAAmS,UAAA,SAAAtpD,GAkCA,QAAA61D,KACA,mBAAAnH,IAAAoH,IAGA7W,EAAA2N,OACAnrD,KAAAu0C,EACAsd,aACA5E,eAGA4F,GAAArtC,IAAA+uB,GACA2U,MACAhxC,OAAAslC,EAAA2N,QAEA/pD,EAAA,KAAAo8C,IAGA,QAAA8W,KACA,sBAAAzJ,IAAA,mBAAAxmB,GAAA,CAGA,GAAAkwB,GAAAhgB,EAAA,KACAggB,KAAAlwB,GACAwtB,EAAAxtB,EAAAkwB,GAEAlwB,EAAAkwB,GAAA1C,EAAAxa,IAEAhT,EAAAwmB,WACArD,EAAAG,YAAAgC,IAAA7nC,IAAAuiB,IA5DA6kB,EAAA3qD,EAAAkY,OAAAnV,OAEA4nD,EAAAsL,gBAAA,WACAtL,EAAA0J,QACAC,GAAAr9C,OAAA++B,IAGA2U,EAAAW,QAAA,SAAAtrD,GACAs2C,EAAA,wCAAAt2C,EAAAkY,OAAAlZ,OACA2rD,EAAA0J,QACAC,GAAAr9C,OAAA++B,GAUA,IAOAlQ,GACAwmB,EACAoC,EACA4E,EAVArK,EAAA0B,EAAAG,aACAM,GACAqF,GACAvF,IACA,aAEA4K,GAAA,CAwCA7M,GAAAG,YAAAgC,IAAAzsD,IAAAysD,IAAA9B,UAAA,SAAAtpD,GACA8lC,EAAA9lC,EAAAkY,OAAAnV,SAAoC/J,GAAAoyD,IACpC2K,KAMAnF,GAAA3H,EAAA,SAAA7hD,GACAklD,EAAAllD,EACA2uD,MAMAG,KAEAA,GAAA1F,GAAAvH,IAGAiN,GAAAl6D,KAAA,SAAAoX,GACAs7C,EAAAt7C,EACAyiD,MAKA5M,EAAAuC,WAAA,WACAsK,GAAA,EACAD,MAIA1e,EAAA8W,QAAA,WACA,GAAA7W,GAAA,6DACAd,GAAA,QAAAc,GACAv0C,EAAAi0C,EAAAwR,GAAAlR,KAmBA,QAAAie,IAAArf,EAAA//B,GACA,IACA,MAAAi/C,WAAAI,KAAAtf,GACAxmC,QAAA+lD,GACAt/C,YAEG,MAAAlX,GACH,MAAAm2D,WAAAI,KAAAtf,EAAAuf,KAmBA,QAAAY,IAAAzlD,GACA,MAAAzH,oBAAAmtD,OAAA1lD,IAGA,QAAA2lD,IAAAC,GAIA,MAAAA,GAAA,GAAAA,EAAA,GAAAA,EAAA,GAQA,QAAAC,IAAA7lD,EAAAqmB,EAAA5Q,GAEA,IADA,GAAApjB,GAAA,GACAg0B,EAAA5Q,GACApjB,GAAA8U,OAAAC,aACAu+C,GAAA3lD,EAAA6T,WAAAwS,OAAA,EACAs/B,GAAA3lD,EAAA6T,WAAAwS,MAEA,OAAAh0B,GAQA,QAAAyzD,IAAA9lD,EAAAqmB,EAAA5Q,GAEA,IADA,GAAApjB,GAAA,GACAg0B,EAAA5Q,GAEApjB,GAAA8U,OAAAC,aACAu+C,GAAA3lD,EAAA6T,WAAAwS,EAAA,QACAs/B,GAAA3lD,EAAA6T,WAAAwS,EAAA,OACAs/B,GAAA3lD,EAAA6T,WAAAwS,KAAA,EACAs/B,GAAA3lD,EAAA6T,WAAAwS,EAAA,KACAA,GAAA,CAEA,OAAAh0B,GAGA,QAAA0zD,IAAA/lD,EAAAgmD,GACA,gBAAAA,EACAP,GAAAI,GAAA7lD,EAAA,EAAAA,EAAA7U,SAEA26D,GAAA9lD,EAAA,EAAAA,EAAA7U,QAIA,QAAA86D,IAAAjmD,GACA,UAAAA,EAAA,IAwBA,QAAAkmD,IAAAlmD,GACA,MAAAA,GACA9Q,QAAA,gBACAA,QAAA,gBACAA,QAAA,gBAGA,QAAAi3D,IAAAnmD,GACA,MAAAA,GACA9Q,QAAA,sBACAA,QAAA,qBACAA,QAAA,qBAGA,QAAAk3D,IAAA1yD,GAKA,aAFAA,GAAAmZ,UACAnZ,GAAAka,KACAjgB,KAAAC,UAAA8F,GAGA,QAAA2yD,IAAA3yD,EAAApL,EAAAwlB,GAIA,MAHApa,GAAA/F,KAAAopB,MAAArjB,GACAA,EAAAmZ,IAAAvkB,EACAoL,EAAAka,KAAAE,EACApa,EAIA,QAAA4yD,IAAArmD,GAEA,IADA,GAAAmT,GAAA,IACAnT,KACAmT,GAAA,IACAnT,IACAmT,GAAA,IAGA,OAAAA,GAAA,IAGA,QAAAmzC,IAAAxsD,EAAA0zB,EAAA+4B,EAAAC,EAAAC,GACA,gBAAA3sD,EAAA,UACA,gBAAA0zB,OAAAxxB,KAAA,YACAuqD,EAAA,OAAAA,EAAA,KACAC,EAAA,WACA,gBAAAA,OAAAxqD,KAAA,eACAyqD,EAAA,aAAAA,EAAA,IAGA,QAAAC,IAAAzd,EAAA12B,EAAAkkC,GASA,QAAA7S,OACAC,IAAAoF,EAAA/9C,QACAy7D,IAIA,QAAAA,KAGA,GAAAC,EAAA17D,OAAA,CAIA,GAAA27D,GAAA,yCACAC,GAAA,iBAAAT,GAAAO,EAAA17D,OAEAurD,GAAAsQ,WAAAF,EAAAD,EAAA,SAAAnQ,EAAA5qD,GAGA,OADAm7D,MACAr+D,EAAA,EAAqBA,EAAAkD,EAAA6O,KAAAxP,OAAqBvC,IAC1Cq+D,EAAA32D,KAAAxE,EAAA6O,KAAAkc,KAAAjuB,GAAAyK,OAEA,IAAA4zD,EAAA97D,OAAA,CAIA,GAAA27D,GAAA,eAAAC,GACA,kBACAF,EAAAlxD,IAAA,WAA8B,YAAcsG,KAAA,KAC5C,GACAy6C,GAAAsQ,WAAAF,EAAAD,EAAA,SAAAnQ,GAEA,GAAAoQ,GAAA,sBAAAC,GACA,qBACAE,EAAAtxD,IAAA,WAA0C,YAAcsG,KAAA,KACxD,GACAy6C,GAAAsQ,WAAAF,EAAAG,EAAA,SAAAvQ,EAAA5qD,GAEA,OADAo7D,GAAA,GAAA7F,IACAz4D,EAAA,EAAyBA,EAAAkD,EAAA6O,KAAAxP,OAAqBvC,IAC9Cs+D,EAAA57C,IAAAxf,EAAA6O,KAAAkc,KAAAjuB,GAAAyK,OAEA4zD,GAAAntD,QAAA,SAAAzG,GACA6zD,EAAApjC,IAAAzwB,KAGAqjD,EAAAsQ,WACA,eAAAD,GAAA,mBACA1zD,IACAqjD,EAAAsQ,WACA,eAAAG,GAAA,mBAAA9zD,eAxDA,GAAA61C,EAAA/9C,OAAA,CAIA,GAAA24C,GAAA,EACA+iB,IA2DA3d,GAAApvC,QAAA,SAAAgU,GACA,GAAAg5C,GAAA,mBAAAM,GACA,2BAEA1Q,GAAAsQ,WAAAF,GAAAt0C,EAAA1E,GAAA,SAAA4oC,EAAA5qD,GACA,IAAAA,EAAA6O,KAAAxP,OACA,MAAA04C,IAEA,IAAAlQ,GAAA7nC,EAAA6O,KAAAkc,KAAA,GAAA8c,GACAkzB,GAAAv2D,KAAAqjC,GAEA+iB,EAAAsQ,WACA,eAAAI,GAAA,gBAAAzzB,GAAAkQ,QAKA,QAAAwjB,IAAAl1D,GACA,gBAAAiL,GACAwoC,EAAA,gCAAAxoC,EAEA,IAAAkqD,GAAAlqD,KAAA7S,YAAAsX,WACAwS,MAAA,qBACAkzC,EAAAD,KAAA,IAAAlqD,EAAA+P,KACAq6C,EAAApqD,EAAAoK,QAAApK,EAAApM,OACAmB,GAAAi0C,EAAAqhB,GAAAD,EAAAD,KAIA,QAAAG,IAAAvsD,GACA,WAAAA,GAGA,WAAAA,EAAAwmC,IAQA,IAAAgmB,GAAA,mBAAAxxD,YACA,UAAAib,KAAAjb,UAAAu3B,UACA,OAAAi6B,GAAA,MAGA,QAAAC,IAAAtN,EAAA7T,EAAAtrC,EAAAozC,EAAA98B,EAAAo2C,EAAA11D,GAyBA,QAAA0kC,KACA,MAAAykB,GACAnpD,EAAAmpD,IAEAuM,EAAA5L,OAAA1N,EAAAuZ,WACA31D,GAAA,KAAAgiC,IAGA,QAAAgoB,GAAA9oD,EAAAlB,GACA,GAAA20D,GAAA,+BAAAK,GACA,iBACAzQ,GAAAsQ,WAAAF,GAAAzzD,GAAA,SAAAqjD,EAAArkD,GACA,OAAAA,EAAAsI,KAAAkc,KAAA,GAAAkxC,IAAA,CACA,GAAA15D,GAAA+3C,EAAAgW,GACA,uCACA/oD,EACAlB,GAAA9D,OAEA8D,OAKA,QAAAkpD,GAAAvkB,GAkBA,QAAA+M,OACAC,IAAAuY,EAAAlxD,QACA2rC,EAAAzoC,GAnBA,GAAAguD,KAWA,IAVAlH,EAAAr7C,QAAA,SAAAw7C,GACAA,EAAAvnD,MAAAunD,EAAAvnD,KAAAk5C,cACAp+C,OAAA6M,KAAA4/C,EAAAvnD,KAAAk5C,cAAAntC,QAAA,SAAAwiD,GACA,GAAAtV,GAAAsO,EAAAvnD,KAAAk5C,aAAAqV,EACAtV,GAAAE,MACAmV,EAAA/rD,KAAA02C,EAAA3zC,aAKAgpD,EAAAlxD,OACA,MAAA2rC,IAEA,IACAzoC,GADAy1C,EAAA,CAQAuY,GAAAviD,QAAA,SAAAzG,GACA8oD,EAAA9oD,EAAA,SAAAkpD,GACAA,IAAAluD,IACAA,EAAAkuD,GAEA1Y,QAKA,QAAA8R,GAAAL,EAAAc,EAAAC,EAAAF,EACAqG,EAAAlG,EAAAO,EAAA1kD,GAEA,QAAA2kC,KAaA,QAAAwmB,GAAA3pB,EAAAxhC,GAOA,QAAA0xC,KAIA,QAHA+Z,IAAAC,EAAA1yD,QACAgH,KAEA,EAEA,QAAAmZ,GAAA07B,GACA,GAAA8f,GAAA,eAAAC,GACA,8BACAiB,GAAAj6D,EAAAk5C,aAAAD,GAAA3zC,OAAAsgC,EACA+iB,GAAAsQ,WAAAF,EAAAkB,EAAAnkB,KAhBA,GAAA+Z,GAAA,EACAC,EAAAh1D,OAAA6M,KAAA3H,EAAAk5C,iBAEA,KAAA4W,EAAA1yD,OACA,MAAAgH,IAiBA,QAAAvJ,GAAA,EAAuBA,EAAAi1D,EAAA1yD,OAAsBvC,IAC7C0iB,EAAAuyC,EAAAj1D,IAnCA,GAAAmF,GAAAunD,EAAAvnD,KACAk6D,EAAA9R,EAAA,IAEA7tD,EAAAyF,EAAA8e,IACAiB,EAAA/f,EAAA6f,KACAzf,EAAAi4D,GAAAr4D,GACA+4D,EAAA,eAAAM,GACA,qDACAY,GAAA1/D,EAAAwlB,EAAA3f,EAAA85D,EA+BAvR,GAAAsQ,WAAAF,EAAAkB,EAAA,SAAAtR,EAAArkD,GACA,GAAAshC,GAAAthC,EAAA61D,QACA5K,GAAA3pB,EAAA,WACAw0B,EAAAzR,EAAA/iB,MAEO,WAEP,GAAAy0B,GAAA7B,GAAA,MAAAa,GAAA,KACA,qBAYA,OAXA1Q,GAAAsQ,WAAAoB,GAAA9/D,EAAAwlB,GAAA,SAAA4oC,EAAA5qD,GACA,GAAA6nC,GAAA7nC,EAAA6O,KAAAkc,KAAA,GAAA8c,IACAmzB,EAAA,UAAAM,GACA,mDACAY,GAAA75D,EAAA85D,EAAA3/D,EAAAwlB,EACA4oC,GAAAsQ,WAAAF,EAAAkB,EAAA,SAAAtR,GACA4G,EAAA3pB,EAAA,WACAw0B,EAAAzR,EAAA/iB,UAIA,IAIA,QAAA6pB,GAAA6K,GACAh6D,IACAg6D,GACAh6D,EAAAg6D,EACAl2D,EAAA9D,IACSmnD,IAAA/c,EAAAttC,QACT2rC,KAiBA,QAAA2mB,GAAApvD,GACAmnD,IACAgI,EAAAnvD,GAqBA,QAAA85D,GAAAzR,EAAA/iB,GACA,GAAArrC,GAAAgtD,EAAA/M,SAAAjgD,GAEAggE,EAAAhT,EAAAnJ,eACAqQ,IAAAjO,EAAA/a,kBACA80B,EAAA3e,EAAA2L,EAAA/M,UAAAh/C,OAAA++D,IAEAA,EAAAn9D,QACAw7D,GAAA2B,EAAAhgE,EAAAouD,GAGApB,EAAA/M,SAAA5U,KACA,IAAA7lB,GAAAwnC,EAAA/M,SAAAz6B,UACAwnC,GAAA/M,SAAAz6B,GAEA,IAAAg5C,GAAAtK,EACA,UAAA+L,GACA,uDACAnB,GACA,iBAAAmB,GAAA,4BACA,eAAAA,GACA,qDACAC,EAAA/Q,GAAAnC,EAAA/M,UACAtb,EAAAuvB,GACAgM,EAAA70B,EAAAyiB,EAAA9tD,IACAA,EAAAqrC,IAAA60B,EACA9R,GAAAsQ,WAAAF,EAAA75B,EAAA,WACAkH,EAAA0iB,IACA/oD,IAAA,EACAxF,GAAAgtD,EAAA/M,SAAAjgD,GACAwlB,OAEA2oC,EAAAlgC,IAAAjuB,EAAAgtD,EAAA/M,UACAp2C,MApEA,GAAA9D,GAAA,KACAmnD,EAAA,CAEAF,GAAAvnD,KAAA8e,IAAAyoC,EAAA/M,SAAAjgD,GACAgtD,EAAAvnD,KAAA6f,KAAA0nC,EAAA/M,SAAAz6B,GACA,IAAA2qB,GAAA5vC,OAAA6M,KAAA4/C,EAAAvnD,KAAAk5C,iBAGAkP,KACAb,EAAAvnD,KAAA0nC,UAAA,GAQAgD,EAAA3+B,QAAA,SAAAlG,GACA,GAAAozC,GAAAsO,EAAAvnD,KAAAk5C,aAAArzC,EACA,IAAAozC,EAAAE,KAOAsO,IACAgI,QARA,CACA,GAAAzvD,GAAAi5C,EAAAj5C,WACAi5C,GAAAj5C,KACAi5C,EAAA0W,OAAAj9C,SAAA21C,EAAA,GACA,IAAA/iD,GAAA2zC,EAAA3zC,MACAsqD,GAAAtqD,EAAAtF,EAAA0vD,MAOAhlB,EAAAttC,QACA2rC,IAyCA,QAAA2xB,KACAjS,GAAA8D,EAAAqB,WAAAxG,EAAA5G,EAAAkI,EAAAC,EACAviB,EAAAwhB,EAAAx6C,GAGA,QAAAogD,GAAAppD,GAOA,QAAA0xC,OACAiY,IAAA3G,EAAAhqD,QACAgH,IARA,IAAAgjD,EAAAhqD,OACA,MAAAgH,IAGA,IAAA2pD,GAAA,CAQA3G,GAAAr7C,QAAA,SAAAw7C,GACA,GAAAA,EAAAzoC,KAAA6/B,GAAA4I,EAAAzoC,KACA,MAAAg3B,IAEA,IAAAv7C,GAAAgtD,EAAA/M,SAAAjgD,EACAouD,GAAAsQ,WAAA,oBAAAuB,GACA,iBAAAjgE,GAAA,SAAAouD,EAAArkD,GACA,GAAAA,EAAAsI,KAAAxP,OAAA,CACA,GAAAo9C,GAAAgP,GAAAllD,EAAAsI,KAAAkc,KAAA,GAAA1oB,KACAsoD,GAAAlgC,IAAAjuB,EAAAigD,GAEA1E,QAKA,QAAA8Z,GAAAtqD,EAAAtF,EAAAoE,GACA,GAAA20D,GAAA,sBAAAK,GAAA,iBACAzQ,GAAAsQ,WAAAF,GAAAzzD,GAAA,SAAAqjD,EAAArkD,GACA,MAAAA,GAAAsI,KAAAxP,OACAgH,KAKA20D,EAAA,eAAAK,GACA,8CACAzQ,GAAAsQ,WAAAF,GAAAzzD,EAAA6yD,GAAAn4D,IAAA,WACAoE,KACO,WAGP,MADAA,MACA,OAzRA,GAAA++C,GAAA/1C,EAAA+7C,UACAwR,EAAAjiB,EAAApuB,KAGA88B,EAAAuT,EAAA/yD,IAAA,SAAAjC,GACA,GAAAA,EAAAmZ,KAAA6/B,GAAAh5C,EAAAmZ,KACA,MAAAnZ,EAEA,IAAAgf,GAAAu+B,GAAAv9C,EAAAw9C,EACA,OAAAx+B,KAGAi2C,EAAAxT,EAAAx5C,OAAA,SAAA25C,GACA,MAAAA,GAAAhnD,OAEA,IAAAq6D,EAAAx9D,OACA,MAAAgH,GAAAw2D,EAAA,GAGA,IAAAjS,GAIA4E,EAHAnnB,EAAA,GAAA5jC,OAAA4kD,EAAAhqD,QACAsrD,EAAA,GAAAzR,GAyQAkQ,IAAAC,EAAA,kBAAA9mD,GACA,MAAAA,GACA8D,EAAA9D,OAEAojB,GAAA2oC,YAAA,SAAA7B,GACA7B,EAAA6B,EACA8C,EAAA,SAAAhtD,GACAA,EACAitD,EAAAjtD,EAEAktD,EAAAkN,MAGKpB,GAAAl1D,GAAA0kC,KAOL,QAAA+xB,IAAAztD,GACA,MAAAA,GAAA0tD,OAAA1tD,EAAApK,KAAAoK,EAAA2D,QAAA3D,EAAA2tD,YAAA3tD,EAAAwmC,MAGA,QAAAonB,IAAA5tD,GACA,IACA,OACAsW,GAAAm3C,GAAAztD,IAEG,MAAA9M,GACH,OACAC,MAAAD,IAKA,QAAA26D,IAAA7tD,GACA,GAAA8tD,GAAAC,GAAAj7D,IAAAkN,EAAApK,KAKA,OAJAk4D,KACAA,EAAAF,GAAA5tD,GACA+tD,GAAA3yC,IAAApb,EAAApK,KAAAk4D,IAEAA,EAKA,QAAAE,IAAAz1D,EAAAyH,EAAAozC,EAAAgK,EAAA5lD,GAOA,QAAAkxC,OACAC,IAAArL,EAAAttC,QAAAwH,GACAA,IAIA,QAAA6lD,GAAA9kD,EAAAszC,GACA,GAAAyR,GAAA/kD,EAAAuzC,aAAAD,GACAoiB,GAAmB1wB,OAAAv9B,EAAAu9B,OAAA/Y,IAAA44B,EACnBhK,GAAAyU,eAAAtvD,EAAAmZ,IAAAm6B,EAAAyR,EAAA2Q,EAAA,SAAAC,EAAAt7D,GACA2F,EAAAuzC,aAAAD,GAAA0H,GACAr6C,EAAAokD,GAAA,2BACS1qD,SAET81C,MApBA,GAAApL,GAAA5vC,OAAA6M,KAAAhC,EAAAuzC,iBACA,KAAAxO,EAAAttC,OACA,MAAAwH,OAEA,IAAAmxC,GAAA,CAoBArL,GAAA3+B,QAAA,SAAAktC,GACA7rC,EAAAs9B,aAAAt9B,EAAA0W,aACA2mC,EAAA9kD,EAAAszC,IAEAtzC,EAAAuzC,aAAAD,GAAAE,MAAA,EACArD,OAiCA,QAAAylB,IAAAnuD,EAAAhJ,GA0BA,QAAAo3D,KAEArkB,MACAr2C,OAAA6nB,aAAA,oBAAA63B,EAAAuZ,QAAA,GAEA31D,EAAA,KAAAo8C,GAQA,QAAAib,GAAA9S,EAAAvkD,GAEAukD,EAAAsQ,WAAAyC,IAEA/S,EAAAsQ,WAAA,eAAAI,GACA,yDACA1Q,EAAAsQ,WAAA0C,IACAhT,EAAAsQ,WAAA,eAAAuB,GACA,uDACA7R,EAAAsQ,WAAA,uDACAuB,GAAA,eAEA,IAAAzB,GAAA,UAAAyB,GAAA,uBAAAA,GACA,0BAAAnB,GAAA,SAAAmB,GACA,OAAAnB,GAAA,UAAAmB,GAAA,aAEA7R,GAAAsQ,WAAAF,KAAA,SAAApQ,EAAArkD,GAKA,OAHA+kB,MACAqX,KAEA7lC,EAAA,EAAyBA,EAAAyJ,EAAAsI,KAAAxP,OAAwBvC,IAAA,CACjD,GAAAiuB,GAAAxkB,EAAAsI,KAAAkc,KAAAjuB,GACA+qC,EAAA9c,EAAA8c,IACA4U,EAAA56C,KAAAopB,MAAAF,EAAA0xB,SACAkE,IAAAlE,IACAnxB,EAAA9mB,KAAAqjC,GAEA+Y,GAAAnE,EAAAjgD,KACAmmC,EAAAn+B,KAAAi4C,EAAAjgD,IAGAouD,EAAAsQ,WAAA,UAAAuB,GAAA,6BACAjC,GAAA73B,EAAAtjC,QAAAsjC,EAAA,WACAioB,EAAAsQ,WAAA,UAAAI,GACA,iCACAd,GAAAlvC,EAAAjsB,QAAAisB,EAAAjlB,WAQA,QAAAw3D,GAAAjT,EAAAvkD,GACA,GAAAs8B,GAAA,8BAAAm7B,GACA,yBACAlT,GAAAsQ,WAAAv4B,KAAA,WACA,GAAAq4B,GAAA,UAAAyB,GAAA,cACAnB,GAAA,sBACAA,GAAA,SACAmB,GAAA,OAAAnB,GAAA,UACAmB,GAAA,6BACA7R,GAAAsQ,WAAAF,KAAA,SAAApQ,EAAA5qD,GAKA,QAAA+9D,KACA,IAAAlvD,EAAAxP,OACA,MAAAgH,GAAAukD,EAEA,IAAA57C,GAAAH,EAAAq0C,QACAlhC,EAAAngB,KAAAopB,MAAAjc,EAAA/M,MAAA6f,IACA8oC,GAAAsQ,WAAA,eAAA4C,GACA,mCACA9uD,EAAAxS,GAAAwlB,EAAAhT,EAAA/M,MAAA,SAAA2oD,GACAA,EAAAsQ,WAAA,eAAAuB,GAAA,eACAztD,EAAAxS,IAAA,SAAAouD,GACAA,EAAAsQ,WAAA,eAAAI,GAAA,gBACAtsD,EAAA64B,KAAA,WACAk2B,UAhBA,OADAlvD,MACA/R,EAAA,EAAuBA,EAAAkD,EAAA6O,KAAAxP,OAAqBvC,IAC5C+R,EAAArK,KAAAxE,EAAA6O,KAAAkc,KAAAjuB,GAoBAihE,SAMA,QAAAC,GAAApT,EAAAvkD,GAEA,QAAA43D,GAAApvD,GACA,QAAAkvD,KACA,IAAAlvD,EAAAxP,OACA,MAAAgH,GAAAukD,EAEA,IAAA57C,GAAAH,EAAAq0C,QACAgb,EAAAjE,GAAAjrD,EAAA4Z,IAAAsxC,GACAzkD,EAAAyoD,EAAA7R,YAAA,MACA8R,EAAAD,EAAA51D,UAAA,EAAAmN,GACAuM,EAAAk8C,EAAA51D,UAAAmN,EAAA,GACAulD,EAAA,UAAAM,GACA,yCACA1Q,GAAAsQ,WAAAF,GAAAmD,EAAAn8C,EAAAk8C,GAAA,WACAH,MAGAA,IAGA,GAAA/C,GAAA,eAAAM,GAAA,oBACA1Q,GAAAsQ,WAAAF,KAAA,SAAApQ,GACA,GAAAoQ,GAAA,eAAAM,GAAA,iBACA1Q,GAAAsQ,WAAAF,KAAA,SAAApQ,GACAA,EAAAsQ,WAAAkD,MAAA,SAAAxT,GACA,GAAAoQ,GAAA,sCAAAM,EACA1Q,GAAAsQ,WAAAF,KAAA,SAAApQ,EAAA5qD,GAEA,OADA6O,MACA/R,EAAA,EAA2BA,EAAAkD,EAAA6O,KAAAxP,OAAqBvC,IAChD+R,EAAArK,KAAAxE,EAAA6O,KAAAkc,KAAAjuB,GAEAmhE,GAAApvD,WASA,QAAAwvD,GAAAzT,EAAAvkD,GAEA,QAAAkwD,GAAA3L;AAIA,GAAAoQ,GAAA,+BAAAK,EACAzQ,GAAAsQ,WAAAF,KAAA,SAAApQ,EAAA5qD,GAQA,QAAAs+D,KACA,GAAAtD,GAAAP,GACA8D,GAAA,KAAA9B,GAAA,aACAA,GAAAnB,IACAkD,GACA,KACA/B,GAAA,OAEAzB,IAAA,UAAAyD,EAAA,WAAA/xB,EACAA,GAAA+xB,EACA7T,EAAAsQ,WAAAF,KAAA,SAAApQ,EAAA5qD,GAKA,QAAA0+D,GAAAn3D,EAAAsgC,GAEA,GAAAkzB,GAAA4D,EAAAp3D,GAAAo3D,EAAAp3D,MACAwzD,GAAA34D,QAAAylC,MAAA,GACAkzB,EAAAv2D,KAAAqjC,GARA,IAAA7nC,EAAA6O,KAAAxP,OACA,MAAAgH,GAAAukD,EAUA,QARA+T,MAQA7hE,EAAA,EAA2BA,EAAAkD,EAAA6O,KAAAxP,OAAqBvC,IAIhD,OAHAkS,GAAAhP,EAAA6O,KAAAkc,KAAAjuB,GACA8K,EAAA2yD,GAAAvrD,EAAA/M,KAAA+M,EAAAxS,GAAAwS,EAAAgT,KACA6/B,EAAA9kD,OAAA6M,KAAAhC,EAAAuzC,kBACAr7B,EAAA,EAA6BA,EAAA+hC,EAAAxiD,OAAiBygB,IAAA,CAC9C,GAAAo7B,GAAAtzC,EAAAuzC,aAAA0G,EAAA/hC,GACA4+C,GAAAxjB,EAAA3zC,OAAAyH,EAAA64B,KAGA,GAAA+2B,KAOA,IANA7hE,OAAA6M,KAAA+0D,GAAA3wD,QAAA,SAAAzG,GACA,GAAAwzD,GAAA4D,EAAAp3D,EACAwzD,GAAA/sD,QAAA,SAAA65B,GACA+2B,EAAAp6D,MAAA+C,EAAAsgC,SAGA+2B,EAAAv/D,OACA,MAAAi/D,IAEA,IAAAtmB,GAAA,CACA4mB,GAAA5wD,QAAA,SAAAxB,GACA,GAAAwuD,GAAA,eAAAC,GACA,6BACArQ,GAAAsQ,WAAAF,EAAAxuD,EAAA,aACAwrC,IAAA4mB,EAAAv/D,QACAi/D,UAtDA,GAAA1zD,GAAA5K,EAAA6O,KAAAkc,KAAA,GAAAkxC,GACA,KAAArxD,EACA,MAAAvE,GAAAukD,EAGA,IAAAle,GAAA,EACA+xB,EAAA,EAsDAH,OAIA,GAAAO,GAAA,8BACA5D,GAAA,wBACArQ,GAAAsQ,WAAA2D,KAAA,SAAAjU,GACAA,EAAAsQ,WACA4D,MAAA,SAAAlU,GACAA,EAAAsQ,WACA6D,MACAxI,OAOA,QAAAyI,GAAApU,EAAAvkD,GACA,GAAA20D,GAAA,eAAAK,GACA,0CACAzQ,GAAAsQ,WAAAF,KAAA30D,GAKA,QAAA44D,GAAArU,EAAAvkD,GACA,GAAA20D,GAAA,eAAAyB,GACA,6BACA7R,GAAAsQ,WAAAF,KAAA,SAAApQ,GACA,GAAAoQ,GAAA,UAAAyB,GAAA,sCACAnB,GAAA,mBACA1Q,GAAAsQ,WAAAF,KAAA,SAAApQ,GAGA,GAAAoQ,GACA,0DACAyB,GAAA,YACA7R,GAAAsQ,WAAAF,KAAA30D,OAKA,QAAA64D,GAAAtU,EAAA/jD,GAEA+jD,EAAAsQ,WAAA,qCAAAtQ,EAAA5qD,GACA,GAAA4oB,GAAA5oB,EAAA6O,KAAAkc,KAAA,GAAAnC,GACAsxC,GAAA,IAAAtxC,EAAAvpB,OAAA,iBACAwH,MAKA,QAAAs4D,KACA,KAAAC,EAAA//D,OAAA,IACA,GAAAggE,GAAAD,EAAAp5D,KACAq5D,GAAA,KAAAvI,IAIA,QAAAwI,GAAA1U,EAAA2U,GACA,OAAAA,EAAA,CAGA,GAAAx9C,GAAA,8BAAAy9C,GACA,8BACAC,EAAA,8BAAApE,GACA,kDACAwD,EAAA,8BACA5D,GAAA,yBAEArzD,EAAA,8BAAA60D,GACA,yDACA50B,EAAA,8BAAAyzB,GACA,2FAEA34B,EAAA,8BAAAm7B,GACA,yBAGAlT,GAAAsQ,WAAAuE,GACA7U,EAAAsQ,WAAAv4B,GACAioB,EAAAsQ,WAAA2D,KAAA,WACAjU,EAAAsQ,WAAA6D,IACAnU,EAAAsQ,WAAA4D,MAEAlU,EAAAsQ,WAAAtzD,KAAA,WACAgjD,EAAAsQ,WAAAyC,IACA/S,EAAAsQ,WAAArzB,KAAA,WACA+iB,EAAAsQ,WAAA0C,IACAhT,EAAAsQ,WAAAkD,IACAxT,EAAAsQ,WAAAn5C,KAAA,WAEA,GAAA29C,GAAA,eAAAF,GACA,kCACA1I,GAAAxa,GACA,IAAAqjB,IAAAC,GAAA9I,EACAlM,GAAAsQ,WAAAwE,EAAAC,EAAA,WACAR,gBAKK,CAEL,GAAAU,GAAA,WACA,GAAAC,GAAAP,EAAAK,EACAE,IAEAlV,EAAAsQ,WAAA,UAAAsE,GAAA,qBACAI,GAGA,IAAA5E,GAAA,oBAAAwE,EACA5U,GAAAsQ,WAAAF,KAAA,SAAApQ,EAAArkD,GACAuwD,EAAAvwD,EAAAsI,KAAAkc,KAAA,GAAAg1C,KACAZ,OAMAa,GACAtC,EACAG,EACAG,EACAK,EACAW,EACAC,EACAY,GAIA/iE,EAAAyiE,EACAU,EAAA,SAAArV,GACAoV,EAAAljE,EAAA,GAAA8tD,EAAAqV,GACAnjE,IAEAmjE,GAAArV,IAIA,QAAAsV,KACAv6C,EAAA2oC,YAAA,SAAA1D,GAEAsU,EAAAtU,EAAA,WAEAuV,EAAAvV,MAEK2Q,GAAAl1D,GAAAo3D,GAGL,QAAA0C,GAAAvV,GACA,GAAAoQ,GAAA,kDAAAwE,EACA5U,GAAAsQ,WAAAF,KAAA,SAAApQ,EAAArkD,GACAA,EAAAsI,KAAAxP,OAGO,aAAAimB,KAAA/e,EAAAsI,KAAAkc,KAAA,GAAAiwC,KASPpQ,EAAAsQ,WAAA,0BAAAsE,MACA,SAAA5U,EAAArkD,GACA,GAAAg5D,GAAAh5D,EAAAsI,KAAAkc,KAAA,GAAAq1C,UACAd,GAAA1U,EAAA2U,KATA3U,EAAAsQ,WAAA,eAAAsE,GACA,+CAEAF,EAAA1U,EAAA,KAPA0U,EAAA1U,EAAA,KAqBA,QAAAyV,GAAAzV,EAAAvkD,GACA,GAAA20D,GAAA,+BAAAM,EACA1Q,GAAAsQ,WAAAF,KAAA,SAAApQ,EAAA5qD,GACA,GAAAu3D,GAAAv3D,EAAA6O,KAAAkc,KAAA,GAAA8c,KAAA,CACAxhC,GAAAkxD,KAIA,QAAAnD,GAAAxJ,EAAAvkD,GAEA,GAAA20D,GAAAP,GACA,SAAAgC,GAAA,iBACAA,GAAAnB,IACAkD,GACAlD,GAAA,aAEA1Q,GAAAsQ,WAAAF,KAAA,SAAApQ,EAAArkD,GACAF,EAAAE,EAAAsI,KAAAkc,KAAA,GAAA5W,OAmCA,QAAAmsD,GAAA1V,EAAApuD,EAAAwlB,EAAA3b,EAAA2kC,GACA,GAAAgwB,GAAAP,GACA8D,IACA9B,GAAAnB,IACAkD,GACA/B,GAAA,SACAP,GAAA1/D,EAEAouD,GAAAsQ,WAAAF,EAAAkB,EAAA,SAAA5+D,EAAA+qC,GACA,IAAAA,EAAAx5B,KAAAxP,OAAA,CACA,GAAAkD,GAAA+3C,EAAA0Q,GAAA,UACA,OAAAhgB,GAAAzoC,GAEA,GAAAwoB,GAAAsd,EAAAx5B,KAAAkc,KAAA,GACA0xB,EAAAgP,GAAA1gC,EAAA0xB,SACAp2C,GAAAw6C,GAAA7+B,EAAAy6B,MA1dA,GAIAyd,GAJAzX,EAAAtmD,KACA26D,EAAA,KACAjhB,EAAA+lB,GAAAvsD,GACA+vD,IAGA3c,GAAAuZ,MAAA3sD,EAAApK,IAIA,IAAAs7D,GAAA3d,MAA8BvzC,GAC9B2D,QAAAwtD,GACAxD,YAAA3tD,EAAApK,KACA4wC,SAEA4qB,EAAAvD,GAAAqD,EACA,IAAAE,EAAAj+D,MACA,MAAA+4D,IAAAl1D,GAAAo6D,EAAAj+D,MAEA,IAAAmjB,GAAA86C,EAAA96C,EACA,mBAAAA,GAAA+6C,kBAEA/6C,EAAA+6C,gBAAA/6C,EAAA2oC,aA+XA4R,IAuBAzd,EAAAphC,KAAA,WACA,gBAGAohC,EAAA1hC,IAAAnb,EAAA,SAAAS,GACAA,EAAA,KAAAywD,KAGArU,EAAA6U,MAAA,SAAAjxD,GACA,GAAAwhC,GACAioB,CACAnqC,GAAA+6C,gBAAA,SAAA9V,GACAyV,EAAAzV,EAAA,SAAA+V,GACA94B,EAAA84B,IAEAvM,EAAAxJ,EAAA,SAAAgW,GACA9Q,EAAA8Q,KAEKrF,GAAAl1D,GAAA,WACLA,EAAA,MACAmxD,UAAA1H,EACA2H,WAAA5vB,EACAg5B,gBAAA3G,OAKAzX,EAAAsU,UAAA,SAAApc,EAAAqc,EAAA3wD,GACAy1D,GAAAzsD,EAAAsrC,EAAAqc,EAAAvU,EAAA98B,EAAAo2C,GAAA11D,IAsBAo8C,EAAAwU,KAAA,SAAAz6D,EAAA6S,EAAAhJ,GAUA,QAAA2kC,GAAAzoC,GACA8D,EAAA9D,GAAqBqF,MAAA60C,WAAA5oB,IAAA+2B,IAVrB,GAAAhjD,GACA60C,EACAmO,EAAAv7C,EAAAwkB,GACA,KAAA+2B,EACA,MAAAjlC,GAAA+6C,gBAAA,SAAAjU,GACAhK,EAAAwU,KAAAz6D,EAAAomD,IAA+B/uB,IAAA44B,GAASp9C,GAAAhJ,IAQxC,IAAA20D,GACAkB,CAEA,IAAA7sD,EAAA2S,IAOK,IAAA3S,EAAAwxC,OAML,WALAyf,GAAA1V,EAAApuD,EAAA6S,EAAA2S,IAAA,SAAA8+C,GACAzxD,EAAAwxC,QAAA,EACAxxC,EAAA2S,IAAA8+C,EACAre,EAAAwU,KAAAz6D,EAAA6S,EAAAhJ,IACO2kC,EAGPgwB,GAAAP,GACA8D,IACA9B,GAAAnB,IACAmB,GAAA,OAAAnB,GAAA,WACAA,GAAA,YAAAA,GAAA,WACAY,GAAA1/D,EAAA6S,EAAA2S,SAnBAg5C,GAAAP,GACA8D,IACA9B,GAAAnB,IACAkD,GACA/B,GAAA,SACAP,GAAA1/D,EAiBAouD,GAAAsQ,WAAAF,EAAAkB,EAAA,SAAA5+D,EAAA+qC,GACA,IAAAA,EAAAx5B,KAAAxP,OAAA,CACA,GAAA0hE,GAAAzmB,EAAA0Q,GAAA,UACA,OAAAhgB,GAAA+1B,GAEA,GAAAh2C,GAAAsd,EAAAx5B,KAAAkc,KAAA,EAEA,IADA0xB,EAAAgP,GAAA1gC,EAAA0xB,UACA1xB,EAAAO,UAAAjc,EAAA2S,IAAA,CACA,GAAAg/C,GAAA1mB,EAAA0Q,GAAA,UACA,OAAAhgB,GAAAg2B,GAEAp5D,EAAA2yD,GAAAxvC,EAAA9oB,KAAAw6C,EAAAjgD,GAAAuuB,EAAA/I,KACAgpB,OAIAyX,EAAAC,SAAA,SAAArzC,EAAAhJ,GACA,GACA8lC,GADA9D,KAGA9N,EAAA,YAAAlrB,MAAAE,SACAoa,EAAA,UAAAta,MAAAG,OACA1H,EAAA,OAAAuH,MAAAvH,IACAq1B,EAAA,cAAA9tB,MAAA8tB,WACAH,EAAA,SAAA3tB,KAAA2tB,OAAA,EACA0P,EAAA,QAAAr9B,KAAA4tB,KAAA,EACAmB,EAAA/uB,EAAAK,iBAAA,EAEAwsD,KACA+E,IAEA,IAAAn5D,KAAA,EACAm5D,EAAAz8D,KAAAi4D,GAAA,WACAP,EAAA13D,KAAAsD,OACK,IAAAyyB,KAAA,GAAA5Q,KAAA,GAKL,GAJA4Q,KAAA,IACA0mC,EAAAz8D,KAAAi4D,GAAA,QAAAt/B,EAAA,iBACA++B,EAAA13D,KAAA+1B,IAEA5Q,KAAA,GACA,GAAAw0B,GAAAhhB,EAAA,OACAiB,KACA+f,GAAA,KAEA8iB,EAAAz8D,KAAAi4D,GAAA,OAAAte,EAAA,MACA+d,EAAA13D,KAAAmlB,GAEA7hB,KAAA,IACAm5D,EAAAz8D,KAAAi4D,GAAA,WACAP,EAAA13D,KAAAsD,IAIA,OAAAuH,EAAAic,SAEA21C,EAAAz8D,KAAA82D,GAAA,gBAGA31C,EAAA+6C,gBAAA,SAAA9V,GAMA,GAJAwJ,EAAAxJ,EAAA,SAAAkF,GACA3jB,EAAA2jB,IAGA,IAAA9yB,EAAA,CAKA,GAAAg+B,GAAAP,GACA8D,IACA9B,GAAAnB,IACAkD,GACAyC,EACAxE,GAAA,QAAAt/B,EAAA,cAEA69B,IAAA,UAAAh+B,EAAA,WAAA0P,EAEAke,EAAAsQ,WAAAF,EAAAkB,EAAA,SAAAtR,EAAArkD,GACA,OAAAzJ,GAAA,EAAAqN,EAAA5D,EAAAsI,KAAAxP,OAA+CvC,EAAAqN,EAAOrN,IAAA,CACtD,GAAAiuB,GAAAxkB,EAAAsI,KAAAkc,KAAAjuB,GACA2/C,EAAAgP,GAAA1gC,EAAA0xB,UACAjgD,EAAAigD,EAAAjgD,GACAyF,EAAAs4D,GAAAxvC,EAAA9oB,KAAAzF,EAAAuuB,EAAA/I,KACAsoC,EAAAroD,EAAA6f,KACAla,GACApL,KACAsL,IAAAtL,EACAkC,OAAoBsjB,IAAAsoC,GAEpB,IAAAj7C,EAAA0W,aAAA,CAGA,GAFAne,MAAA3F,EACA2F,MAAAka,KAAAwoC,EACAj7C,EAAA67B,UAAA,CACA,GAAAA,GAAAwS,EAAAjB,EACAvR,GAAA7rC,SACAuI,MAAA85C,WAAAxW,GAGAmyB,GAAAz1D,MAAAyH,EAAAozC,EAAAmI,GAEA,GAAA7/B,EAAAO,QAAA,CACA,UAAAjc,EAAAic,QAIA,QAHA1jB,GAAAlJ,MAAA4sB,SAAA,EACA1jB,MAAA,KAKAygC,EAAA7jC,KAAAoD,QAGK2zD,GAAAl1D,GAAA,WACLA,EAAA,MACA+f,WAAA+lB,EACAO,OAAAr9B,EAAA4tB,KACApuB,KAAAw5B,OAKAoa,EAAAkV,SAAA,SAAAtoD,GAoCA,QAAA6xD,KAEA,GAAAC,GACA1E,GAAA,sBACAA,GAAA,uBACAnB,GAAA,wBACAA,GAAA,sBAEA1/B,EAAA6gC,GAAA,SAAAnB,GAEAZ,EAAA+B,GAAA,OAAAnB,GAAA,eACAmB,GAAA,eAAAnB,GAAA,OAEA2F,GAAA,cACA/E,GAAA7sD,EAAA6tB,MAEA7tB,GAAAimD,UACA2L,EAAAz8D,KAAAi4D,GAAA,UAAAjC,GAAAnrD,EAAAimD,QAAAj2D,SACA68D,IAAAz+D,OAAA4R,EAAAimD,SAGA,IAAAsF,GAAA,WAAAz9B,EAAA,cAEA69B,EAAAP,GAAA0G,EAAAvlC,EAAA8+B,EAAAuG,EAAArG,GAEA/qD,EAAAirC,EAAAzrC,EACAA,GAAAwR,MAAAxR,EAAAQ,SAEAmrD,GAAA,UAAAh+B,EAGA,IAAA03B,GAAArlD,EAAA6tB,OAAA,CACAvX,GAAA+6C,gBAAA,SAAA9V,GACAA,EAAAsQ,WAAAF,EAAAkB,EAAA,SAAAtR,EAAArkD,GACA,QAAA66D,GAAAh2B,GACA,kBACA/7B,EAAAiyC,SAAAlW,IAGA,OAAAtuC,GAAA,EAAAqN,EAAA5D,EAAAsI,KAAAxP,OAAiDvC,EAAAqN,EAAOrN,IAAA,CACxD,GAAAiuB,GAAAxkB,EAAAsI,KAAAkc,KAAAjuB,GACA2/C,EAAAgP,GAAA1gC,EAAA0xB,SACAiY,GAAA3pC,EAAAs2C,MAEA,IAAAz5D,GAAA2yD,GAAAxvC,EAAA0pC,WAAAhY,EAAAjgD,GACAuuB,EAAAyxB,YACApR,EAAA/7B,EAAAw7B,cAAAjjC,EAAA60C,EAAAptC,EACA+7B,GAAAvD,IAAA9c,EAAAs2C,MAEA,IAAA1M,GAAA9kD,EAAAu7B,EACA,oBAAAupB,GACA,MAAAtlD,GAAA07B,SAAA4pB,EAiBA,IAdAA,IACAC,IACAC,GACAxsB,EAAA7jC,KAAA4mC,GAIA/7B,EAAAs9B,aAAAt9B,EAAA0W,aACAs3C,GAAAz1D,EAAAyH,EAAAozC,EAAAmI,EACAwW,EAAAh2B,IAEAg2B,EAAAh2B,MAGAwpB,IAAA53B,EACA,UAIOu+B,GAAAlsD,EAAA07B,UAAA,WACP17B,EAAAgmD,YACAhmD,EAAA07B,SAAA,MACA1C,UACA2a,SAAA0R,MA9GA,GAFArlD,EAAA3I,EAAA2I,GAEAA,EAAAgmD,WAAA,CACA,GAAA74D,GAAAimD,EAAAuZ,MAAA,IAAA1f,GAGA,OAFAyf,IAAA5oD,YAAAsvC,EAAAuZ,MAAAx/D,EAAAimD,EAAApzC,GACA0sD,GAAA5L,OAAA1N,EAAAuZ,QAEAx1D,OAAA,WACAu1D,GAAA1oD,eAAAovC,EAAAuZ,MAAAx/D,KAKA,GAAA2gC,GAAA9tB,EAAA8tB,UAGA9tB,GAAA6tB,MAAA7tB,EAAA6tB,QAAAC,EAAA9tB,EAAA6tB,MAAA,CAEA,IAAAF,GAAA,SAAA3tB,KAAA2tB,OAAA,CACA,KAAAA,IACAA,EAAA,EAGA,IAAA63B,EAEAA,GADA,eAAAxlD,GACAA,EAAAmmD,cACK,cAAAnmD,KAELA,EAAAwlD,UAIA,IAAAxsB,MACAusB,EAAA,CAqFAsM,MAGAze,EAAAmV,OAAA,SAAAvxD,GAEAA,KAGAo8C,EAAAyU,eAAA,SAAAxwC,EAAAywC,EAAAC,EAAA/nD,EAAAhJ,GACA,GAAArG,GACA4qD,EAAAv7C,EAAAwkB,IACAtsB,EAAA6vD,EAAA7vD,OACA8Z,EAAA+1C,EAAAnO,aACA+R,EAAA,mFAEAK,GAAA,iBACAzQ,GAAAsQ,WAAAF,GAAAzzD,GAAA,SAAAqjD,EAAArkD,GAKA,GAAAwkB,GAAAxkB,EAAAsI,KAAAkc,KAAA,GACA9oB,EAAA8oB,EAAAu2C,QAAAjH,GAAAtvC,EAAAxpB,MACA04D,GAAAlvC,EAAAxpB,KAAA24D,EAEAl6D,GADAqP,EAAAu9B,OACA6Z,GAAAxkD,EAAAof,GAEAumC,GAAA3lD,GAEAoE,EAAA,KAAArG,MAIAyiD,EAAAsV,iBAAA,SAAArxC,EAAArgB,GACAsf,EAAA+6C,gBAAA,SAAA9V,GACA,GAAAoQ,GAAA,gCAAAyB,GAAA,eACA7R,GAAAsQ,WAAAF,GAAAt0C,GAAA,SAAAkkC,EAAArkD,GACA,GAAAA,EAAAsI,KAAAxP,OAES,CACT,GAAA4C,GAAAwpD,GAAAllD,EAAAsI,KAAAkc,KAAA,GAAA0xB,SACAp2C,GAAA,KAAApE,EAAA86C,cAHA12C,GAAAi0C,EAAA0Q,UASAvI,EAAAuV,cAAA,SAAAtxC,EAAA02B,EAAA/2C,GACA,MAAA+2C,GAAA/9C,WAGAsmB,GAAA2oC,YAAA,SAAA1D,GAGA,GAAAoQ,GAAA,gCAAAyB,GAAA,eACA7R,GAAAsQ,WAAAF,GAAAt0C,GAAA,SAAAkkC,EAAArkD,GACA,GAAAk2C,GAAAgP,GAAAllD,EAAAsI,KAAAkc,KAAA,GAAA0xB,SACAU,GAAAV,EAAAM,SAAA,SAAAU,EAAAP,EACAY,EAAAjqB,EAAAxkB,GACA,GAAA2S,GAAAk7B,EAAA,IAAAY,CACAV,GAAAh7C,QAAA4f,MAAA,IACA3S,EAAAzO,OAAA,YAIA,IAAAo6D,GAAA,UAAAyB,GAAA,4BACA7R,GAAAsQ,WAAAF,GAAArP,GAAAlP,GAAA/1B,MAGAm0C,GAAAzd,EAAA12B,EAAAkkC,IACK2Q,GAAAl1D,GAAA,WACLA,MAtBAA,KA0BAo8C,EAAAwV,UAAA,SAAAz7D,EAAA6J,GACAsf,EAAA+6C,gBAAA,SAAA9V,GACA,GAAAoQ,GAAA,yBAAA8C,GAAA,aACAlT,GAAAsQ,WAAAF,GAAAx+D,GAAA,SAAAouD,EAAA5qD,GACA,GAAAA,EAAA6O,KAAAxP,OAAA,CACA,GAAA0rB,GAAA/qB,EAAA6O,KAAAkc,KAAA,GACAnjB,EAAA2yD,GAAAxvC,EAAA1oB,KAAA7F,EAAAuuB,EAAA/I,IACA3b,GAAA,KAAAuB,OAEAvB,GAAAi0C,EAAA0Q,UAMAvI,EAAAyV,UAAA,SAAAtwD,EAAAyH,EAAAhJ,GAiBA,QAAAk7D,GAAA3W,GACA,GAAAoQ,GACA92C,CACAi0C,IACA6C,EAAA,UAAA8C,GAAA,0CAEA55C,GAAAimC,EAAA9nD,EAAA7F,EAAA27D,KAEA6C,EAAA,eAAA8C,GAAA,kCACA55C,GAAA1nB,EAAA2tD,EAAA9nD,IAEAuoD,EAAAsQ,WAAAF,EAAA92C,EAAA,SAAA0mC,EAAA5qD,GACAA,EAAAwhE,cACA33C,GAAiB7nB,IAAA,EAAAxF,KAAAwlB,IAAAmoC,GACjB96C,EAAAwkB,KACAxtB,EAAA,KAAAwjB,IAGAxjB,EAAAi0C,EAAA4P,MAEO,WAEP,MADA7jD,GAAAi0C,EAAA4P,MACA,IAtCA,kBAAA76C,KACAhJ,EAAAgJ,EACAA,YAEAzH,GAAAq6C,UACA,IAEAkI,GAFAgO,EAAAvwD,EAAAka,KACAtlB,EAAAoL,EAAAmZ,GAKAopC,GAHAgO,EAGAvwD,EAAAka,KAAA,MAAAnN,SAAAwjD,EAAA5rD,MAAA,eAFA3E,EAAAka,KAAA,KAIA,IAEA+H,GAFAxnB,EAAAi4D,GAAA1yD,EA6BAyH,GAAAwkB,IACA0tC,EAAAlyD,EAAAwkB,KAEAlO,EAAA2oC,YAAAiT,EAAAhG,GAAAl1D,GAAA,WACAwjB,GACAxjB,EAAA,KAAAwjB,MAMA44B,EAAA6V,aAAA,SAAA1wD,EAAAyH,EAAAhJ,GAOA,QAAAo7D,GAAA7W,GACA,GAAAoQ,GAAA,eAAA8C,GAAA,wBACA38B,GAAAv5B,EAAAmZ,IAAAnZ,EAAAka,KACA8oC,GAAAsQ,WAAAF,EAAA75B,EAAA,SAAAypB,EAAA5qD,GACA,MAAAA,GAAAwhE,cAGA33C,GAAe7nB,IAAA,EAAAxF,GAAAoL,EAAAmZ,IAAAiB,IAAA,YACf3S,EAAAwkB,KACAxtB,EAAA,KAAAwjB,KAJAxjB,EAAAi0C,EAAA0Q,OAXA,kBAAA37C,KACAhJ,EAAAgJ,EACAA,KAEA,IAAAwa,EAgBAxa,GAAAwkB,IACA4tC,EAAApyD,EAAAwkB,KAEAlO,EAAA2oC,YAAAmT,EAAAlG,GAAAl1D,GAAA,WACAwjB,GACAxjB,EAAA,KAAAwjB,MAMA44B,EAAA8V,SAAA,SAAAlpD,EAAAhJ,GACA01D,GAAAzoD,mBAAAmvC,EAAAuZ,OACAr2C,EAAA2oC,YAAA,SAAA1D,GACA,GAAAwD,IAAAqO,GAAAnB,GAAAD,GAAAmE,GACA1B,GAAA7C,GACA7M,GAAApgD,QAAA,SAAA0zD,GACA9W,EAAAsQ,WAAA,wBAAAwG,SAEKnG,GAAAl1D,GAAA,WACL+yC,YACAr2C,QAAA6nB,aAAA,oBAAA63B,EAAAuZ,aACAj5D,QAAA6nB,aAAA63B,EAAAuZ,QAEA31D,EAAA,MAAsBrE,IAAA,OAKtB,QAAA2/D,MACA,IAEA,MADAC,cAAA,kCACA,EACG,MAAAr/D,GACH,UAQA,QAAAs/D,MAcA,sBAAAnJ,YAAA,OAAAA,YACA,iBAAApzC,KAAAjb,UAAAu3B,WAEA,QAKA,IAAAkgC,GAAA1oB,IAGA2oB,EAAA,0BAAA13D,UAAAu3B,SACA,IAAAkgC,GAAAl3C,aAAAm3C,GACA,YAAAn3C,aAAAm3C,EAEA,IAAAC,GAAAL,IAIA,OAHAG,KACAl3C,aAAAm3C,GAAAC,EAAA,SAEAA,EAGA,QAAA1d,MACA,wBAAAsd,eAGAC,KAGA,QAAAI,IAAAh9D,EAAA+N,EAAAgqD,EAAAnnB,GAEA,MAAA+rB,cAAA38D,EAAA+N,EAAAgqD,EAAAnnB,GAGA,QAAAqsB,IAAA7yD,EAAAhJ,GACA,GAAA87D,GAAAvf,IACAma,OAAAkF,IACG5yD,EAEHmuD,IAAA9gE,KAAAP,KAAAgmE,EAAA97D,GAaA,QAAA+7D,MAUA,OATAC,MAEAn8D,EAAA,GAAAkwC,IAAA,SAAA1rC,EAAAtE,GACAi8D,EAAA33D,UACA23D,EAAAj8D,WAGAjJ,EAAA,GAAAsH,OAAArF,UAAAC,QAEAvC,EAAA,EAAiBA,EAAAK,EAAAkC,OAAiBvC,IAClCK,EAAAL,GAAAsC,UAAAtC,EAaA,OAVAulE,GAAAn8D,UAEAkwC,GAAA1rC,UAAAlL,KAAA,WACA,MAAAG,OAAAnC,MAAA,KAAAL,KACGqC,KAAA,SAAAkC,GACH2gE,EAAA33D,QAAAhJ,KACGuJ,MAAA,SAAAzI,GACH6/D,EAAAj8D,OAAA5D,KAGA6/D,EAGA,QAAAC,IAAAnjE,EAAAkH,GACA,GAAAg8D,GAAA3hC,EAAAh/B,EAEAvB,EAAA,GAAAoiE,SAEAC,GACAlhE,OAAAnC,EAAAmC,OACAvB,YAAA,UACAI,UA+DA,OA5DAhB,GAAAkD,OACAlC,EAAAsqB,IAAA,6BACAtqB,EAAAsqB,IAAA,eAAAtrB,EAAAgB,QAAA,iBACA,qBAGAhB,EAAAoC,MACApC,EAAAsjE,aACA,gBAAAtjE,GAAAoC,KACAihE,EAAAjhE,KAAAM,KAAAC,UAAA3C,EAAAoC,MACG,QAAApC,GACHqjE,EAAAjhE,KAAApC,EAAAoC,KAEAihE,EAAAjhE,KAAA,KAGAxE,OAAA6M,KAAAzK,EAAAgB,SAAA6N,QAAA,SAAAlG,GACA3I,EAAAgB,QAAAlD,eAAA6K,IACA3H,EAAAsqB,IAAA3iB,EAAA3I,EAAAgB,QAAA2H,MAIAu6D,EAAAD,GAAAjjE,EAAAgE,IAAAq/D,GAEArjE,EAAAqT,QAAA,IACAkuB,EAAA/1B,WAAA,WACA03D,EAAAj8D,OAAA,GAAAzD,OAAA,8BACAxD,EAAAgE,OACKhE,EAAAqT,UAGL6vD,EAAAn8D,QAAA1G,KAAA,SAAAkjE,GASA,MARAhhE,IACAihE,WAAAD,EAAA9hE,QAGAzB,EAAAqT,QAAA,GACAP,aAAAyuB,GAGAh/B,EAAAihE,YAAA,KAAAjhE,EAAAihE,WAAA,IACAxjE,EAAAytC,OAAA81B,EAAAzb,OAAAyb,EAAApgE,OAGAogE,EAAArgE,SACG7C,KAAA,SAAA+G,GACH7E,EAAAihE,YAAA,KAAAjhE,EAAAihE,WAAA,IACAt8D,EAAA,KAAA3E,EAAA6E,IAEAA,EAAA3F,OAAAc,EAAAihE,WACAt8D,EAAAE,MAEG0E,MAAA,SAAAzI,GACHA,IAEAA,EAAA,GAAAG,OAAA,aAEA0D,EAAA7D,MAGUogE,MAAAP,EAAAj8D,QAGV,QAAAy8D,IAAA1jE,EAAAkH,GAEA,GAAAy8D,GAAApiC,EACAqiC,GAAA,EAEAC,EAAA,WACAF,EAAAF,QACAK,KAGAC,EAAA,WACAH,GAAA,EACAD,EAAAF,QACAK,KAGAp5C,GAAa+4C,MAAAI,GAEbC,EAAA,WACAhxD,aAAAyuB,GACA7W,EAAA+4C,MAAA,aACAE,IACAA,EAAAK,WAAA7jE,OACAwjE,EAAAM,SACAN,EAAAM,OAAAD,WAAA7jE,QAEAwjE,EAAA1kD,mBAAA9e,OACAwjE,EAAAxjE,QAKAwjE,GADA3jE,EAAA2jE,IACA,GAAA3jE,GAAA2jE,IAEA,GAAAO,eAGA,KACAP,EAAAhK,KAAA35D,EAAAmC,OAAAnC,EAAAgE,KACG,MAAAu+B,GACH,MAAAr7B,GAAA,GAAA1D,OAAA++B,EAAAz8B,MAAA,mBAGA69D,EAAAQ,kBAAA,mBAAAnkE,KACAA,EAAAmkE,gBAEA,QAAAnkE,EAAAmC,aACAnC,GAAAgB,QAAA,gBACGhB,EAAAkD,OACHlD,EAAAgB,QAAAojE,OAAA,mBACApkE,EAAAgB,QAAA,gBAAAhB,EAAAgB,QAAA,iBACA,mBACAhB,EAAAoC,MACApC,EAAAsjE,aACA,gBAAAtjE,GAAAoC,OACApC,EAAAoC,KAAAM,KAAAC,UAAA3C,EAAAoC,QAIApC,EAAAytC,SACAk2B,EAAAU,aAAA,eAGA,QAAArkE,KACAA,EAAAoC,KAAA,KAGA,QAAAuG,KAAA3I,GAAAgB,QACAhB,EAAAgB,QAAAlD,eAAA6K,IACAg7D,EAAAW,iBAAA37D,EAAA3I,EAAAgB,QAAA2H,GA4DA,OAxDA3I,GAAAqT,QAAA,IACAkuB,EAAA/1B,WAAAu4D,EAAA/jE,EAAAqT,SACAswD,EAAAK,WAAA,WACAlxD,aAAAyuB,GACA,IAAAoiC,EAAAY,aACAhjC,EAAA/1B,WAAAu4D,EAAA/jE,EAAAqT,WAGA,mBAAAswD,GAAAM,SACAN,EAAAM,OAAAD,WAAAL,EAAAK,aAIAL,EAAA1kD,mBAAA,WACA,OAAA0kD,EAAAY,WAAA,CAIA,GAAAhiE,IACAihE,WAAAG,EAAAliE,OAGA,IAAAkiE,EAAAliE,QAAA,KAAAkiE,EAAAliE,OAAA,KACA,GAAAqB,EAEAA,GADA9C,EAAAytC,OACAiZ,IAAAid,EAAAphE,UAAA,KACA2f,KAAAyhD,EAAAa,kBAAA,kBAGAb,EAAAc,aAEAv9D,EAAA,KAAA3E,EAAAO,OACK,CACL,GAAAM,KACA,IAAAwgE,EACAxgE,EAAA,GAAAI,OAAA,aACAJ,EAAA+W,KAAA,gBACO,oBAAAwpD,GAAAphE,SACP,IACAa,EAAAV,KAAAopB,MAAA63C,EAAAphE,UACS,MAAA8B,IAETjB,EAAA3B,OAAAkiE,EAAAliE,OACAyF,EAAA9D,GAEA0gE,MAGA9jE,EAAAoC,MAAApC,EAAAoC,eAAA+sB,MACA84B,GAAAjoD,EAAAoC,KAAA,SAAA0mD,GACA6a,EAAAe,KAAA5b,KAGA6a,EAAAe,KAAA1kE,EAAAoC,MAGAsoB,EAGA,QAAAi6C,MACA,IAEA,MADA,IAAAT,iBACA,EACG,MAAA9gE,GACH,UAMA,QAAAwhE,IAAA5kE,EAAAkH,GACA,MAAA29D,KAAA7kE,EAAA2jE,IACAD,GAAA1jE,EAAAkH,GAEAi8D,GAAAnjE,EAAAkH,GAOA,QAAA49D,MACA,SAGA,QAAAC,IAAA/kE,EAAAkH,GAeA,QAAAqd,GAAA/lB,EAAA8B,EAAAoH,GACA,IAAA1H,EAAAytC,QAAAztC,EAAAkD,MAAA,gBAAA1E,GAEA,IACAA,EAAAkE,KAAAopB,MAAAttB,GACO,MAAA6F,GAEP,MAAAqD,GAAArD,GAGAiB,MAAAC,QAAA/G,KACAA,IAAAkM,IAAA,SAAAi5B,GACA,MAAAA,GAAAtgC,OAAAsgC,EAAAqhC,QACA3pB,EAAA1X,GAEAA,KAIA3jC,EAAAytC,QACAw3B,GAAAzmE,EAAA8B,GAEAoH,EAAA,KAAAlJ,EAAA8B,GAnCAN,EAAAuH,EAAAvH,EAEA,IAAAklE,IACA/iE,OAAA,MACAnB,WACAkC,MAAA,EACAogE,aAAA,EACAjwD,QAAA,IACA8xD,OAAA,EA+CA,OA5CAnlE,GAAAyjD,GAAAyhB,EAAAllE,GA2BAA,EAAAkD,OACAlD,EAAAytC,SACAztC,EAAAgB,QAAAojE,OAAA,oBAEApkE,EAAAgB,QAAA,gBAAAhB,EAAAgB,QAAA,iBACA,oBAGAhB,EAAAytC,SACAztC,EAAA+6D,SAAA,KACA/6D,EAAAkD,MAAA,GAGAlD,EAAAsjE,cACAtjE,EAAAkD,MAAA,GAGA0hE,GAAA5kE,EAAA,SAAAoD,EAAAb,EAAAH,GAEA,GAAAgB,EACA,MAAA8D,GAAAm0C,EAAAj4C,GAGA,IAAAC,GACAymD,EAAAvnD,EAAAvB,SAAAuB,EAAAvB,QAAA,gBACA8B,EAAAV,GAAA0iE,IAIA,KAAA9kE,EAAAytC,SAAAztC,EAAAkD,OAAAlD,EAAAsjE,cACA,gBAAAxgE,KACA,OAAAqjB,KAAA2jC,IACA,WAAmB3jC,KAAArjB,IAAA,WAAmBqjB,KAAArjB,IACtC,IACAA,EAAAJ,KAAAopB,MAAAhpB,EAAA8T,YACO,MAAAvS,IAGP9B,EAAAihE,YAAA,KAAAjhE,EAAAihE,WAAA,IACAj/C,EAAAzhB,EAAAP,EAAA2E,IAEA7D,EAAAg4C,EAAAv4C,GACAO,EAAA5B,OAAAc,EAAAihE,WACAt8D,EAAA7D,MAKA,QAAA+hE,IAAAl1D,EAAAhJ,GAKA,GAAAm+D,GAAAn6D,qBAAAu3B,UACAv3B,UAAAu3B,UAAAnc,cAAA,GAEAg/C,EAAAD,EAAApiE,QAAA,gBAAAoiE,EAAApiE,QAAA,eACAsiE,EAAAF,EAAApiE,QAAA,aACAuiE,EAAAH,EAAApiE,QAAA,aAIAwiE,EAAAH,IACAC,GAAAC,IAAA,QAAAt1D,EAAA/N,OAEAgjE,IAAA,SAAAj1D,OAAAi1D,MAEAO,EAAA,SAAAv/C,KAAAjW,EAAAlM,IAEA,KAAA0hE,IAAAD,IAAAN,GAAA,CACA,GAAAQ,GAAAz1D,EAAAlM,IAAAf,QAAA,SACAiN,GAAAlM,MAAA2hE,EAAA,mBAAApuD,KAAAquD,MAGA,MAAAb,IAAA70D,EAAAhJ,GAMA,QAAA2+D,IAAAC,EAAAjoC,GACA,UAAAoZ,IAAA,SAAA1rC,EAAAtE,GAOA,QAAA8+D,KACA5Q,IACA2Q,EAAA78D,OAAA5I,KAAAkkB,EAAAD,GAGA,QAAAs6C,OACAx5D,IAAAoB,EAEApD,EACA6D,EAAA7D,GAEAmI,IAGAy6D,IAIA,QAAAzhD,KACA4wC,IACAyJ,IAIA,QAAAt6C,GAAA2hD,GACA9Q,IACA/xD,KAAA6iE,EACArH,IAGA,QAAAoH,KACA,KAAA7Q,EAAAt3B,GAAA50B,EAAAzC,GACAu/D,IAtCA,GAIA3iE,GAJA+xD,EAAA,EACAlsD,EAAA,EACA7D,EAAA,EACAoB,EAAAs/D,EAAA5lE,MAuCA8lE,OAWA,QAAAE,IAAAr2D,GACA,GAAA6yC,GAAA7yC,EAAApH,KAAAoH,EAAApH,IAAAuzC,YACA0G,IAGA9kD,OAAA6M,KAAAi4C,GAAA7zC,QAAA,SAAAwiD,GACA,GAAAtV,GAAA2G,EAAA2O,EACAtV,GAAAj5C,KAAA0kD,GAAAzL,EAAAj5C,KAAAi5C,EAAA+N,gBAIA,QAAAqc,IAAA9oE,GACA,iBAAA8oB,KAAA9oB,GACA,WAAAsP,mBAAAtP,EAAAY,MAAA,IAEA,UAAAkoB,KAAA9oB,GACA,UAAAsP,mBAAAtP,EAAAY,MAAA,IAEA0O,mBAAAtP,GAGA,QAAA+oE,IAAA39D,GACA,MAAAA,GAAAuzC,cAAAp+C,OAAA6M,KAAAhC,EAAAuzC,cAIA/E,GAAA71C,IAAAxD,OAAA6M,KAAAhC,EAAAuzC,cAAAtxC,IAAA,SAAA/B,GACA,GAAAsvD,GAAAxvD,EAAAuzC,aAAArzC,EACA,IAAAsvD,EAAAn1D,MAAA,gBAAAm1D,GAAAn1D,KACA,UAAAm0C,IAAA,SAAA1rC,GACAg9C,GAAA0P,EAAAn1D,KAAAyI,KACOlL,KAAA,SAAAonD,GACPwQ,EAAAn1D,KAAA2kD,OATAxQ,GAAA1rC,UAeA,QAAA86D,IAAAn2D,GACA,IAAAA,EAAAsb,OACA,QAGA,IAAA86C,GAAA5pB,EAAAxsC,EAAAsb,QAAA86C,QAEA,gBAAAA,GAAA,UAAAA,EAKA,QAAAC,IAAAzgE,EAAAoK,GAGA,GAAAm2D,GAAAn2D,GAAA,CACA,GAAAmqC,GAAAnqC,EAAApK,KAAAykB,OAAAra,EAAAsb,OAAAtrB,OACA4F,GAAAoK,EAAAsb,OAAA7e,mBAAA0tC,GAIA,GAAAuC,GAAAF,EAAA52C,IAGA82C,EAAA4pB,MAAA5pB,EAAA6pB,YACA7pB,EAAA5nB,MAAgB0xC,SAAA9pB,EAAA4pB,KAAAC,SAAA7pB,EAAA6pB,UAKhB,IAAAt5D,GAAAyvC,EAAA78C,KAAAkE,QAAA,iBAAAmJ,MAAA,IAcA,OAVAwvC,GAAAp2B,GAAArZ,EAAAtG,MAEA+1C,EAAAp2B,GAAAvjB,QAAA,YACA25C,EAAAp2B,GAAA7Z,mBAAAiwC,EAAAp2B,KAKAo2B,EAAA78C,KAAAoN,EAAA6D,KAAA,KAEA4rC,EAIA,QAAA+pB,IAAAz2D,EAAAnQ,GACA,MAAA6mE,IAAA12D,IAAAsW,GAAA,IAAAzmB,GAIA,QAAA6mE,IAAA12D,EAAAnQ,GAGA,GAAA8mE,GAAA32D,EAAAnQ,KAAA,MAIA,OAAAmQ,GAAAo2D,SAAA,MAAAp2D,EAAA42D,MACA52D,EAAA62D,KAAA,IAAA72D,EAAA62D,KAAA,IACA,IAAA72D,EAAAnQ,KAAA8mE,EAAA9mE,EAGA,QAAAinE,IAAAhlC,GACA,UAAApkC,OAAA6M,KAAAu3B,GAAAt3B,IAAA,SAAA4H,GACA,MAAAA,GAAA,IAAA3F,mBAAAq1B,EAAA1vB,MACGtB,KAAA,KAIH,QAAAi2D,IAAA/2D,EAAAhJ,GAuBA,QAAAggE,GAAAC,EAAAnnE,EAAAkH,GACA,GAAAkgE,GAAAD,EAAA/B,SACAvN,EAAApU,GAAAl8C,EAAA8/D,GAAAD,EAAApnE,EAEA,OADAsnE,IAAAzP,EAAA11D,OAAA,IAAA01D,EAAA7zD,KACAs/C,EAAAikB,MAAA1P,EAAA3wD,GAGA,QAAAsgE,GAAAL,EAAAj3D,GACA,UAAA+mC,IAAA,SAAA1rC,EAAAtE,GACAigE,EAAAC,EAAAj3D,EAAA,SAAA9M,EAAAvC,GAEA,MAAAuC,GACA6D,EAAA7D,OAEAmI,GAAA1K,OAKA,QAAA4mE,GAAA3hE,EAAAM,GACA,MAAA8wC,GAAApxC,EAAAQ,GAAA,SAAAtI,GACA+iE,IAAA1gE,KAAA,WACA,MAAA+F,GAAA/H,MAAArB,KAAAgB,KACO8N,MAAA,SAAAzH,GACP,GAAA6C,GAAAlJ,EAAA6I,KACAK,GAAA7C,QAOA,QAAA08D,KAEA,GAAA7wD,EAAAw3D,WAAAx3D,EAAAy3D,WACA,MAAA1wB,IAAA1rC,SAMA,IAAAq8D,EACA,MAAAA,EAGA,IAAAC,IAAuB1lE,OAAA,MAAA6B,IAAA8jE,EAuBvB,OAtBAF,GAAAJ,KAAiCK,GAAA/7D,MAAA,SAAA1I,GACjC,MAAAA,MAAA3B,QAAA,MAAA2B,EAAA3B,QAEAw5C,EAAA,uDACAusB,MAAgCrlE,OAAA,MAAA6B,IAAA8jE,KAEhC7wB,GAAAhwC,OAAA7D,KAEK0I,MAAA,SAAA1I,GAIL,SAAAA,MAAA3B,QAAA,MAAA2B,EAAA3B,SAGAw1C,GAAAhwC,OAAA7D,KAGAwkE,EAAA97D,MAAA,WACA87D,EAAA,OAGAA,EAuSA,QAAAG,GAAAC,GACA,MAAAA,GAAA56D,MAAA,KAAA1C,IAAAiC,oBAAAqE,KAAA,KAhYA,GAAAsyC,GAAAtmD,KAEA8pE,EAAAP,GAAAr2D,EAAApK,KAAAoK,GACA43D,EAAAnB,GAAAG,EAAA,GAEA52D,GAAA3I,EAAA2I,EACA,IAAAm3D,GAAAn3D,EAAAk1D,QAEA,IAAAl1D,EAAA8kB,MAAA8xC,EAAA9xC,KAAA,CACA,GAAAizC,GAAA/3D,EAAA8kB,MAAA8xC,EAAA9xC,KACAjgB,EAAAkzD,EAAAvB,SAAA,IAAAuB,EAAAxB,SACAxlE,EAAAwnD,GAAAx+B,SAAAtd,mBAAAoI,IACAsyD,GAAArmE,QAAAqmE,EAAArmE,YACAqmE,EAAArmE,QAAAknE,cAAA,SAAAjnE,EAKAqiD,EAAAikB,MAAAnC,EAgCA,IAAAwC,EAyCA9gE,IAAA,WACAI,EAAA,KAAAo8C,KAGAA,EAAAphC,KAAA,WACA,cAGAohC,EAAAjmD,GAAAoqE,EAAA,cAAAvgE,GACAggE,MAAiB/kE,OAAA,MAAA6B,IAAA4iE,GAAAE,EAAA,KAAqC,SAAA1jE,EAAAgE,GACtD,GAAA+gE,GAAA/gE,KAAA+1C,KACA/1C,EAAA+1C,KAAA2pB,EAAAtgD,GAAAmgD,GAAAG,EAAA,GACA5/D,GAAA,KAAAihE,OAIA7kB,EAAApU,QAAAu4B,EAAA,mBAAAznE,EAAAkH,GACAlH,EAAAgE,IAAA2iE,GAAAG,EAAA9mE,EAAAgE,KACAkjE,KAAclnE,EAAAkH,KAKdo8C,EAAA8kB,QAAAX,EAAA,mBAAAv3D,EAAAhJ,GACA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAEAA,EAAA3I,EAAA2I,GACAg3D,EAAAh3D,GACAlM,IAAA2iE,GAAAG,EAAA,YACA3kE,OAAA,QACK,WACL,QAAAkmE,KACA/kB,EAAAriB,KAAA,SAAA79B,EAAAvC,GACAA,MAAAynE,gBACAphE,EAAA,MAA4BrE,IAAA,IAE5B2I,WAAA68D,EAAAn4D,EAAAmxB,UAAA,OAKAgnC,QAIA/kB,EAAA7K,QAAAvB,EAAA,mBAAAhnC,EAAAhJ,GAGA,QAAAqhE,GAAA7gE,GACA,GAAAs6B,KACA9xB,GAAA+tC,OACAjc,EAAAic,MAAA,GAEA/tC,EAAAs9B,cAEAxL,EAAAwL,aAAA,GAEAt9B,EAAAwxC,SACA1f,EAAA0f,QAAA,GAEAwlB,EAAAh3D,GACAlM,IAAA2iE,GAAAG,EAAA,YAAAE,GAAAhlC,IACA7/B,OAAA,OACAC,MAAegrB,KAAAld,EAAAkd,OACR1lB,GAGP,QAAA8gE,KAOA,QAAAC,GAAAC,GACA,gBAAAtlE,EAAAvC,GAEAqoC,EAAAw/B,GAAA7nE,EAAAqoC,UACA2P,IAAA8vB,GACAzhE,EAAA,MAA4BgiC,QAAA7gC,EAAA6gC,MAK5B,OAfAgqB,GAAA0V,GACAD,EAAAn/D,KAAAg9B,KAAAt2B,EAAAkd,KAAAltB,OAAAgzD,GACAra,EAAA,EACA3P,EAAA,GAAA5jC,OAAAqjE,GAYAhrE,EAAA,EAAqBA,EAAAgrE,EAAgBhrE,IAAA,CACrC,GAAA6lD,GAAAp6C,EAAA8G,GAAA,+BACAszC,GAAA4hB,KAAAiC,EACA7jB,EAAAp2B,KAAAld,EAAAkd,KAAAnvB,MAAAN,EAAAu1D,EACA1pD,KAAAC,IAAAyG,EAAAkd,KAAAltB,QAAAvC,EAAA,GAAAu1D,IACAza,EAAAz5C,EAAAwkD,EAAAilB,EAAA9qE,KA3CA,GAAAqB,GAAAhC,KAgDA8qE,EAAAlB,GAAAE,EAAA,IACA+B,EAAAC,GAAAhB,EAEA,kBAAAe,GAEAN,EAAA,SAAAnlE,EAAAvC,GAEAuC,GACA0lE,GAAAhB,IAAA,EACA7sB,EACA73C,EAAA3B,OACA,uEAGA+mE,MAEAM,GAAAhB,IAAA,EACA5gE,EAAA,KAAArG,MAGKgoE,EAELN,EAAArhE,GAEAshE,MAOAllB,EAAA6U,MAAA,SAAAjxD,GACA65D,IAAA1gE,KAAA,WACA6mE,MACA/kE,OAAA,MACA6B,IAAA2iE,GAAAG,EAAA,KACO,SAAA1jE,EAAAvC,GAEP,MAAAuC,GACA8D,EAAA9D,IAEAvC,EAAAimE,KAAAH,GAAAG,EAAA,QACA5/D,GAAA,KAAArG,QAEKiL,MAAA5E,IAMLo8C,EAAAtgD,IAAAykE,EAAA,eAAApqE,EAAA6S,EAAAhJ,GA8CA,QAAA6hE,GAAAtgE,GAUA,QAAAjI,GAAA6wD,GACA,GAAAtV,GAAA2G,EAAA2O,GACAtxD,EAAAomE,GAAA19D,EAAAmZ,KAAA,IAAAmmD,EAAA1W,GACA,QAAA5oD,EAAAka,IACA,OAAA6kD,GAAAt3D,GACA/N,OAAA,MACA6B,IAAA2iE,GAAAG,EAAA/mE,GACA0tC,QAAA,IACSptC,KAAA,SAAAuoD,GACT,MAAA14C,GAAAu9B,OACAmb,EAEA,GAAA3R,IAAA,SAAA1rC,GACAg9C,GAAAK,EAAAr9C,OAESlL,KAAA,SAAAyC,SACTi5C,GAAAE,WACAF,GAAA77C,OACA67C,EAAAj5C,SA3BA,GAAA4/C,GAAAj6C,EAAAuzC,aACAgtB,EAAAtmB,GAAA9kD,OAAA6M,KAAAi4C,EACA,IAAAA,GAAAsmB,EAAA9oE,OAAA,CA6BA,GAAA4lE,GAAAkD,EAAAt+D,IAAA,SAAA2mD,GACA,kBACA,MAAA7wD,GAAA6wD,KAMA,OAAAwU,IAAAC,EAAA,IAGA,QAAAmD,GAAAC,GACA,MAAA5jE,OAAAC,QAAA2jE,GACAjyB,GAAA71C,IAAA8nE,EAAAx+D,IAAA,SAAAjC,GACA,GAAAA,EAAA5F,GACA,MAAAkmE,GAAAtgE,EAAA5F,OAIAkmE,EAAAG,GA/FA,kBAAAh5D,KACAhJ,EAAAgJ,EACAA,MAEAA,EAAA3I,EAAA2I,EAGA,IAAA8xB,KAEA9xB,GAAA+tC,OACAjc,EAAAic,MAAA,GAGA/tC,EAAAi5D,YACAnnC,EAAAmnC,WAAA,GAGAj5D,EAAAwxC,SACA1f,EAAA0f,QAAA,GAGAxxC,EAAAypC,YACA,QAAAzpC,EAAAypC,YACAzpC,EAAAypC,UAAAj3C,KAAAC,UAAAuN,EAAAypC,YAEA3X,EAAA2X,UAAAzpC,EAAAypC,WAGAzpC,EAAA2S,MACAmf,EAAAnf,IAAA3S,EAAA2S,KAGA3S,EAAA67B,YACA/J,EAAA+J,UAAA77B,EAAA67B,WAGA1uC,EAAA8oE,GAAA9oE,EAGA,IAAA2C,IACAmC,OAAA,MACA6B,IAAA2iE,GAAAG,EAAAzpE,EAAA2pE,GAAAhlC,IAyDAwlC,GAAAt3D,EAAAlQ,GAAAK,KAAA,SAAAQ,GACA,MAAAo2C,IAAA1rC,UAAAlL,KAAA,WACA,GAAA6P,EAAAs9B,YACA,MAAAy7B,GAAApoE,KAEOR,KAAA,WACP6G,EAAA,KAAArG,OAEKiL,MAAA5E,KAILo8C,EAAA8lB,OAAA3B,EAAA,SACA,SAAA4B,EAAAC,EAAAp5D,EAAAhJ,GACA,GAAAuB,EACA,iBAAA6gE,IAEA7gE,GACAmZ,IAAAynD,EACA1mD,KAAA2mD,GAEA,kBAAAp5D,KACAhJ,EAAAgJ,EACAA,QAIAzH,EAAA4gE,EACA,kBAAAC,IACApiE,EAAAoiE,EACAp5D,OAEAhJ,EAAAgJ,EACAA,EAAAo5D,GAIA,IAAAzmD,GAAApa,EAAAka,MAAAzS,EAAA2S,GAGAqkD,GAAAh3D,GACA/N,OAAA,SACA6B,IAAA2iE,GAAAG,EAAAX,GAAA19D,EAAAmZ,MAAA,QAAAiB,GACK3b,KAQLo8C,EAAAimB,cACA9B,EAAA,yBAAAlgD,EAAAygD,EAAA93D,EACAhJ,GACA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,KAEA,IAAA8xB,GAAA9xB,EAAA2S,IAAA,QAAA3S,EAAA2S,IAAA,GACA7e,EAAA2iE,GAAAG,EAAAX,GAAA5+C,IAAA,IACAwgD,EAAAC,GAAAhmC,CACAklC,GAAAh3D,GACA/N,OAAA,MACA6B,MACAypC,QAAA,GACKvmC,KAILo8C,EAAAkmB,iBACA/B,EAAA,4BAAAlgD,EAAAygD,EAAAnlD,EACA3b,GAEA,GAAAlD,GAAA2iE,GAAAG,EAAAX,GAAA5+C,GAAA,IACAwgD,EAAAC,IAAA,QAAAnlD,CAEAqkD,OACA/kE,OAAA,SACA6B,OACKkD,KAMLo8C,EAAAmmB,cACAhC,EAAA,yBAAAlgD,EAAAygD,EAAAnlD,EAAA+lC,EACA1mC,EAAAhb,GACA,kBAAAgb,KACAhb,EAAAgb,EACAA,EAAA0mC,EACAA,EAAA/lC,EACAA,EAAA,KAEA,IAAAxlB,GAAA8oE,GAAA5+C,GAAA,IAAAwgD,EAAAC,GACAhkE,EAAA2iE,GAAAG,EAAAzpE,EAKA,IAJAwlB,IACA7e,GAAA,QAAA6e,GAGA,gBAAA+lC,GAAA,CAEA,GAAAnb,EACA,KACAA,EAAAia,GAAAkB,GACO,MAAAxlD,GACP,MAAA8D,GAAAi0C,EAAAuO,GACA,4CAEAd,EAAAnb,EAAA6Z,GAAA7Z,EAAAvrB,GAAA,GAGA,GAAAhS,IACAlP,SAAgBya,eAAAyG,GAChB/f,OAAA,MACA6B,MACAs/D,aAAA,EACAlhE,KAAAwmD,EACAv1C,QAAAg0D,EAAAh0D,SAAA,IAGA6zD,MAAch3D,EAAAhJ,KAKdo8C,EAAAsU,UAAA,SAAApc,EAAAtrC,EAAAhJ,GAIAs0C,EAAAyQ,UAAA/7C,EAAA+7C,UAEA8U,IAAA1gE,KAAA,WACA,MAAA42C,IAAA71C,IAAAo6C,EAAApuB,KAAA1iB,IAAA07D,OACK/lE,KAAA,WAEL6mE,EAAAh3D,GACA/N,OAAA,OACA6B,IAAA2iE,GAAAG,EAAA,cACAzzD,QAAAnD,EAAAmD,QACAjR,KAAAo5C,GACO,SAAAp4C,EAAA8lC,GACP,MAAA9lC,GACA8D,EAAA9D,IAEA8lC,EAAAr6B,QAAA,SAAAzH,GACAA,EAAAvE,IAAA,QAEAqE,GAAA,KAAAgiC,QAEKp9B,MAAA5E,IAKLo8C,EAAAomB,KAAA,SAAAjhE,EAAAyH,EAAAhJ,GACA65D,IAAA1gE,KAAA,WACA,MAAA+lE,IAAA39D,KACKpI,KAAA,WAEL6mE,EAAAh3D,GACA/N,OAAA,MACA6B,IAAA2iE,GAAAG,EAAAX,GAAA19D,EAAAmZ,MACAxf,KAAAqG,GACO,SAAArF,EAAAgE,GACP,MAAAhE,GACA8D,EAAA9D,OAEA8D,GAAA,KAAAE,OAEK0E,MAAA5E,IAMLo8C,EAAA38B,QAAA8gD,EAAA,mBAAAv3D,EAAAhJ,GACA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAEAA,EAAA3I,EAAA2I,EAGA,IACA9N,GADA4/B,KAEA7/B,EAAA,KAEA+N,GAAA67B,YACA/J,EAAA+J,WAAA,GAGA77B,EAAA8tB,aACAgE,EAAAhE,YAAA,GAGA9tB,EAAA0W,eACAob,EAAApb,cAAA,GAIA1W,EAAAs9B,cACAxL,EAAAwL,aAAA,GAGAt9B,EAAAvH,MACAq5B,EAAAr5B,IAAAjG,KAAAC,UAAAuN,EAAAvH,MAGAuH,EAAAy5D,YACAz5D,EAAAE,SAAAF,EAAAy5D,WAGAz5D,EAAAE,WACA4xB,EAAA5xB,SAAA1N,KAAAC,UAAAuN,EAAAE,WAGAF,EAAA05D,UACA15D,EAAAG,OAAAH,EAAA05D,SAGA15D,EAAAG,SACA2xB,EAAA3xB,OAAA3N,KAAAC,UAAAuN,EAAAG,SAGA,mBAAAH,GAAAK,gBACAyxB,EAAAzxB,gBAAAL,EAAAK,eAGA,mBAAAL,GAAA2tB,QACAmE,EAAAnE,MAAA3tB,EAAA2tB,OAGA,mBAAA3tB,GAAA4tB,OACAkE,EAAAlE,KAAA5tB,EAAA4tB,KAGA,IAAA+rC,GAAA7C,GAAAhlC,EAEA,oBAAA9xB,GAAAzF,OACAtI,EAAA,OACAC,GAAcqI,KAAAyF,EAAAzF,OAId+8D,EAAAt3D,GACA/N,SACA6B,IAAA2iE,GAAAG,EAAA,YAAA+C,GACAznE,SACK/B,KAAA,SAAAQ,GACLqP,EAAA0W,cAAA1W,EAAAs9B,aAAAt9B,EAAAu9B,QACA5sC,EAAA6O,KAAAb,QAAAq3D,IAEAh/D,EAAA,KAAArG,KACKiL,MAAA5E,KAMLo8C,EAAAkV,SAAA,SAAAtoD,GAMA,GAAAgjD,GAAA,cAAAhjD,KAAA45D,WAAA99B,EAEA97B,GAAA3I,EAAA2I,GACAA,EAAAmD,QAAA,WAAAnD,KAAAmD,QACA,WAAAg0D,KAAAh0D,QACA,GAIA,IAEAqiD,GAFA1zB,EAAA9xB,EAAAmD,SAAiCA,QAAAnD,EAAAmD,QAAA,QACjCwqB,EAAA,mBAAA3tB,GAAA2tB,OAAA3tB,EAAA2tB,KAGA63B,GADA,eAAAxlD,GACAA,EAAAmmD,cACK,cAAAnmD,KAELA,EAAAwlD,UAKA,IAAAqU,GAAAlsC,CA+CA,IA7CA3tB,EAAA4qB,QACAkH,EAAAlH,MAAA5qB,EAAA4qB,QAGA5qB,EAAA0W,cAAA1W,EAAAQ,QAAA,kBAAAR,GAAAQ,UACAsxB,EAAApb,cAAA,GAGA1W,EAAAs9B,cACAxL,EAAAwL,aAAA,GAGAt9B,EAAAgmD,aACAl0B,EAAAgoC,KAAA,YAGA95D,EAAA67B,YACA/J,EAAA+J,WAAA,GAGA77B,EAAA8tB,aACAgE,EAAAhE,YAAA,GAGA,aAAA9tB,GAEAA,EAAA+5D,YACAjoC,EAAAioC,UAAA/5D,EAAA+5D,WAEK/5D,EAAAgmD,aAELl0B,EAAAioC,UAAA,KAGA/5D,EAAAQ,QAAA,gBAAAR,GAAAQ,SACAsxB,EAAAtxB,OAAAR,EAAAQ,QAGAR,EAAAwR,MAAA,gBAAAxR,GAAAwR,OACAsgB,EAAAtxB,OAAA,QACAsxB,EAAAtgB,KAAAxR,EAAAwR,MAKAxR,EAAA2rC,cAAA,gBAAA3rC,GAAA2rC,aACA,OAAAquB,KAAAh6D,GAAA2rC,aAEA3rC,EAAA2rC,aAAA/9C,eAAAosE,KACAloC,EAAAkoC,GAAAh6D,EAAA2rC,aAAAquB,GAKA,IACA9nE,GADAD,EAAA,KAGA+N,GAAAimD,UAGAn0B,EAAAtxB,OAAA,WACAvO,EAAA,OACAC,GAAc+zD,QAAAjmD,EAAAimD,SAGd,IAAAwN,GACAwG,EAIA3pE,EAAA,SAAAu9B,EAAA72B,GACA,IAAAgJ,EAAAk6D,QAAA,CAGApoC,EAAAjE,QAGA,gBAAAiE,GAAAjE,QACAiE,EAAAjE,MAAAr7B,KAAAC,UAAAq/B,EAAAjE,QAGA7tB,EAAA8tB,WACAH,IACAmE,EAAAnE,MAAAksC,GAGA/nC,EAAAnE,UAAAksC,EAAA7W,EACAA,EAAA6W,CAIA,IAAAM,IACAloE,SACA6B,IAAA2iE,GAAAG,EAAA,WAAAE,GAAAhlC,IACA3uB,QAAAnD,EAAAmD,QACAjR,OAEA+nE,GAAApsC,EAGA7tB,EAAAk6D,SAKArJ,IAAA1gE,KAAA,WACAsjE,EAAAuD,EAAAh3D,EAAAm6D,EAAAnjE,KACO4E,MAAA5E,KAMPgiC,GAAmBA,YAEnBohC,EAAA,SAAAlnE,EAAAvC,GACA,IAAAqP,EAAAk6D,QAAA,CAGA,GAAAG,GAAA,CAEA,IAAA1pE,KAAAqoC,QAAA,CACAqhC,EAAA1pE,EAAAqoC,QAAAhpC,OACAgpC,EAAA2a,SAAAhjD,EAAAgjD,QAEA,IAAArI,KACAA,GAAA/uC,MAAAyD,EAAA2rC,aACAh7C,EAAAqoC,QAAAroC,EAAAqoC,QAAAx4B,OAAA,SAAAjT,GACAssE,GACA,IAAAr/C,GAAAixB,EAAAzrC,GAAAzS,EAUA,OATAitB,KACAxa,EAAA0W,cAAA1W,EAAAs9B,aAAAt9B,EAAAu9B,QACAy4B,GAAAzoE,GAEAi4D,GACAxsB,UAAA7jC,KAAA5H,GAEAyS,EAAAiyC,SAAA1kD,IAEAitB,QAEO,IAAAtnB,EAKP,MAFA8M,GAAAk6D,SAAA,MACAl6D,GAAA07B,SAAAxoC,EAMAvC,MAAAgjD,WACAsmB,EAAAtpE,EAAAgjD,SAGA,IAAA2mB,GAAA3sC,GAAAksC,GAAA,GACAlpE,GAAA0pE,EAAArX,GACAhjD,EAAA,aAEAA,EAAAgmD,YAAAr4B,GAAAksC,GAAA,IAAAS,EAKAt6D,EAAA07B,SAAA,KAAA1C,GAHApiC,GAAA,WAA8BtG,EAAA2pE,EAAAG,MAU9B,OAHA9pE,GAAA0P,EAAA6tB,OAAA,EAAAusC,IAIAjjE,OAAA,WACA6I,EAAAk6D,SAAA,EACAzG,GACAA,EAAAF,WASAngB,EAAAmnB,SAAAhD,EAAA,oBAAAjsB,EAAAtrC,EAAAhJ,GAEA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAIAg3D,EAAAh3D,GACA/N,OAAA,OACA6B,IAAA2iE,GAAAG,EAAA,cACA1kE,KAAAo5C,GACKt0C,KAGLo8C,EAAAmV,OAAA,SAAAvxD,GACAA,KAGAo8C,EAAA8V,SAAA,SAAAp5D,EAAAkH,GACAggE,EAAAlnE,GACAgE,IAAA2iE,GAAAG,EAAA,IACA3kE,OAAA,UACK,SAAAiB,EAAA9C,GACL,MAAA8C,MAAA3B,QAAA,MAAA2B,EAAA3B,OACAyF,EAAA9D,OAEA8D,GAAA,KAAA5G,MAeA,QAAAomC,IAAA3xB,EAAA4xB,EAAAC,GAIA,IAHA,GAAAC,GAAA,GACAC,EAAAF,EAAA7xB,EAAA7U,OAEA2mC,EAAA3mC,OAAA4mC,GACAD,GAAAF,CAEA,OAAAE,GAGA,QAAAlwB,IAAA5B,EAAA4xB,EAAAC,GACA,GAAAC,GAAAH,GAAA3xB,EAAA4xB,EAAAC,EACA,OAAAC,GAAA9xB,EAOA,QAAA/E,IAAA7R,EAAAC,GAEA,GAAAD,IAAAC,EACA,QAGAD,GAAA8Y,GAAA9Y,GACAC,EAAA6Y,GAAA7Y,EAEA,IAAA8Y,GAAAd,GAAAjY,GACAgZ,EAAAf,GAAAhY,EACA,IAAA8Y,EAAAC,IAAA,EACA,MAAAD,GAAAC,CAEA,cAAAhZ,IACA,aACA,MAAAA,GAAAC,CACA,eACA,MAAAD,GAAAC,GAAA,GACA,cACA,MAAA4X,IAAA7X,EAAAC,GAEA,MAAAkH,OAAAC,QAAApH,GAAA4X,GAAA5X,EAAAC,GAAA6X,GAAA9X,EAAAC,GAKA,QAAA6Y,IAAAtO,GACA,aAAAA,IACA,gBACA,WACA,cACA,MAAAA,KAAAyO,KAAAzO,MAAAyO,MAAAC,MAAA1O,GACA,KAEAA,CACA,cACA,GAAA2O,GAAA3O,CACA,IAAArD,MAAAC,QAAAoD,GAAA,CACA,GAAAnC,GAAAmC,EAAAzI,MACAyI,GAAA,GAAArD,OAAAkB,EACA,QAAA7I,GAAA,EAAuBA,EAAA6I,EAAS7I,IAChCgL,EAAAhL,GAAAsZ,GAAAK,EAAA3Z,QAGO,IAAAgL,YAAA4O,MACP,MAAA5O,GAAA6O,QACO,WAAA7O,EAAA,CACPA,IACA,QAAA2J,KAAAgF,GACA,GAAAA,EAAAxZ,eAAAwU,GAAA,CACA,GAAAmF,GAAAH,EAAAhF,EACA,oBAAAmF,KACA9O,EAAA2J,GAAA2E,GAAAQ,OAMA,MAAA9O,GAGA,QAAA+L,IAAA/L,GACA,UAAAA,EACA,aAAAA,IACA,cACA,MAAAA,GAAA,GACA,cACA,MAAAgM,IAAAhM,EACA,cAMA,MAAAA,GACA1E,QAAA,gBACAA,QAAA,gBACAA,QAAA,eACA,cACA,GAAAsB,GAAAD,MAAAC,QAAAoD,GACAjE,EAAAa,EAAAoD,EAAA/K,OAAA6M,KAAA9B,GACAhL,GAAA,EACA6I,EAAA9B,EAAAxE,OACAkH,EAAA,EACA,IAAA7B,EACA,OAAA5H,EAAA6I,GACAY,GAAAwN,GAAAlQ,EAAA/G,QAGA,QAAAA,EAAA6I,GAAA,CACA,GAAAqO,GAAAnQ,EAAA/G,EACAyJ,IAAAwN,GAAAC,GACAD,GAAAjM,EAAAkM,IAGA,MAAAzN,GAGA,SAMA,QAAAwN,IAAAjM,GACA,GAAAuM,GAAA,IAEA,OADAvM,GAAAsO,GAAAtO,GACAyN,GAAAzN,GAAAkO,GAAAnC,GAAA/L,GAAAuM,EAGA,QAAAJ,IAAAC,EAAApX,GACA,GACAqX,GADAC,EAAAtX,EAEAuX,EAAA,MAAAH,EAAApX,EACA,IAAAuX,EACAF,EAAA,EACArX,QACG,CACH,GAAAwX,GAAA,MAAAJ,EAAApX,EACAA,IACA,IAAAyX,GAAA,GACAC,EAAAN,EAAA5L,UAAAxL,IAAA2X,IACAC,EAAAC,SAAAH,EAAA,IAAAI,EAMA,KAJAN,IACAI,MAEA5X,GAAA2X,KACA,CACA,GAAApM,GAAA6L,EAAApX,EACA,WAAAuL,EACA,KAEAkM,IAAAlM,EAEAvL,IAEAyX,IAAAhI,MAAA,KAEA4H,EADA,IAAAI,EAAAlV,OACAsV,SAAAJ,EAAA,IAGAM,WAAAN,EAAA,OAAAA,EAAA,IAGAD,IACAH,GAAA,IAGA,IAAAO,IAIAP,EAAAU,WAAAV,EAAA,IAAAO,IAGA,OAAUP,MAAA9U,OAAAvC,EAAAsX,GAKV,QAAApO,IAAA8O,EAAAC,GACA,GAAApX,GAAAmX,EAAA9O,KAEA,IAAA+O,EAAA1V,OAAA,CACA,GAAA2V,GAAAD,IAAA1V,OAAA,EACA1B,KAAAqX,EAAA1L,UAEAyL,EAAA/O,MACAgP,EAAAD,IAAA1V,OAAA,GAEA,IAAAiK,GAAA0L,EAAA1L,QACA2L,EAAAD,EAAAtG,KACA,IAAAjK,MAAAC,QAAA4E,GACAA,EAAA9E,KAAA7G,OACK,IAAAsX,IAAAH,EAAAzV,OAAA,GACL,GAAAyI,GAAAgN,EAAA9O,KACAsD,GAAAxB,GAAAnK,MAEAmX,GAAAtQ,KAAA7G,IAKA,QAAAkZ,IAAA3C,GAMA,IALA,GAAAY,MACAC,KACAjY,EAAA,IAGA,CACA,GAAAyY,GAAArB,EAAApX,IACA,WAAAyY,EAQA,OAAAA,GACA,QACAT,EAAAtQ,KAAA,KACA,MACA,SACAsQ,EAAAtQ,KAAA,MAAA0P,EAAApX,IACAA,GACA,MACA,SACA,GAAAga,GAAA7C,GAAAC,EAAApX,EACAgY,GAAAtQ,KAAAsS,EAAA3C,KACArX,GAAAga,EAAAzX,MACA,MACA,SAGA,IAFA,GAAA0X,GAAA,KAEA,CACA,GAAA1O,GAAA6L,EAAApX,EACA,WAAAuL,EACA,KAEA0O,IAAA1O,EACAvL,IAIAia,IAAA3T,QAAA,sBACAA,QAAA,qBACAA,QAAA,qBACA0R,EAAAtQ,KAAAuS,EACA,MACA,SACA,GAAAC,IAA4B1N,WAAAoF,MAAAoG,EAAAzV,OAC5ByV,GAAAtQ,KAAAwS,EAAA1N,SACAyL,EAAAvQ,KAAAwS,EACA,MACA,SACA,GAAAC,IAA0B3N,WAAYoF,MAAAoG,EAAAzV,OACtCyV,GAAAtQ,KAAAyS,EAAA3N,SACAyL,EAAAvQ,KAAAyS,EACA,MAEA,SACA,SAAAtU,OACA,4DACA4S,OArDA,CACA,OAAAT,EAAAzV,OACA,MAAAyV,GAAA9O,KAEAA,IAAA8O,EAAAC,KAsDA,QAAAG,IAAA5X,EAAAC,GAEA,OADAoI,GAAAgD,KAAAC,IAAAtL,EAAA+B,OAAA9B,EAAA8B,QACAvC,EAAA,EAAiBA,EAAA6I,EAAS7I,IAAA,CAC1B,GAAAgQ,GAAAqC,GAAA7R,EAAAR,GAAAS,EAAAT,GACA,QAAAgQ,EACA,MAAAA,GAGA,MAAAxP,GAAA+B,SAAA9B,EAAA8B,OAAA,EACA/B,EAAA+B,OAAA9B,EAAA8B,OAAA,KAEA,QAAA8V,IAAA7X,EAAAC,GAIA,MAAAD,KAAAC,EAAA,EAAAD,EAAAC,EAAA,KAEA,QAAA6X,IAAA9X,EAAAC,GAGA,OAFA8X,GAAAtY,OAAA6M,KAAAtM,GAAAgY,EAAAvY,OAAA6M,KAAArM,GACAoI,EAAAgD,KAAAC,IAAAyM,EAAAhW,OAAAiW,EAAAjW,QACAvC,EAAA,EAAiBA,EAAA6I,EAAS7I,IAAA,CAE1B,GAAAgQ,GAAAqC,GAAAkG,EAAAvY,GAAAwY,EAAAxY,GACA,QAAAgQ,EACA,MAAAA,EAIA,IADAA,EAAAqC,GAAA7R,EAAA+X,EAAAvY,IAAAS,EAAA+X,EAAAxY,KACA,IAAAgQ,EACA,MAAAA,GAIA,MAAAuI,GAAAhW,SAAAiW,EAAAjW,OAAA,EACAgW,EAAAhW,OAAAiW,EAAAjW,OAAA,KAMA,QAAAkW,IAAAC,GACA,GAAAhZ,IAAA,sCACAiZ,EAAAjZ,EAAA4F,cAAAoT,GAEA,QAAAC,EACA,OAAAD,EACA,EAEA/Q,MAAAC,QAAA8Q,GACA,EAEAC,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAGAhR,MAAAC,QAAA8Q,GACA,EADA,OAUA,QAAA1B,IAAAK,GAEA,OAAAA,EACA,SAKA,IAAAuB,GAAAvB,EAAAwB,gBAAApJ,MAAA,QACAmI,EAAAC,SAAAe,EAAA,OAEApB,EAAAH,EAAA,EAEA5N,EAAA+N,EAAA,QAIAsB,GAAAtB,GAAAI,KAAAE,GACAiB,EAAAC,GAAA,EAAAC,WAAA,IAAAtB,GAEAlO,IAAAyP,GAAAH,CAGA,IAAAI,GAAAtN,KAAAuG,IAAA2F,WAAAa,EAAA,IAEApB,KACA2B,EAAA,GAAAA,EAGA,IAAAC,GAAAD,EAAAE,QAAA,GAOA,OAJAD,KAAA9S,QAAA,aAEAmD,GAAAyP,GAAAE,EAUA,QAAA2zD,MACA1tE,KAAA+J,QAAA,GAAAkwC,IAAA,SAAAjwC,GAAwDA,MAcxD,QAAA6nC,IAAA3+B,GACA,GAUAy6D,GAVAljC,EAAAv3B,EAAAsW,GACA/E,EAAAvR,EAAAuR,SACAimB,EAAAx3B,EAAAxF,IACAi9B,EAAAz3B,EAAA4gB,OACA8W,EAAA13B,EAAA03B,UAGAE,EAAAJ,EAAA9wB,YAAA+wB,KAAA/wB,YACA,WAGA,KAAAgxB,IAEA+iC,EAAAljC,EAAAM,aAAAN,EAAAM,iBACA4iC,EAAA7iC,IACA,MAAA6iC,GAAA7iC,EAIA,IAAA8iC,GAAAnjC,EAAAxG,OAAA5gC,KAAA,SAAA4gC,GAOA,QAAAgH,GAAAx/B,GACAA,EAAAkZ,MAAAlZ,EAAAkZ,SACA,IAAAumB,GAAAzmB,CACAymB,GAAAjlC,QAAA,YACAilC,EAAAzmB,EAAA,IAAAA,EAEA,IAAA0mB,GAAA1/B,EAAAkZ,MAAAumB,GAAAz/B,EAAAkZ,MAAAumB,MAEA,KAAAC,EAAAC,GAIA,MADAD,GAAAC,IAAA,EACA3/B,EAjBA,GAAA2/B,GAAAnH,EAAAoH,QAAA,YACAT,EAAA,OAAA4hB,GAAA1hB,GAkBA,OAAAvhB,GAAAkhB,EAAA,iBAAAQ,GAAA5nC,KAAA,WACA,MAAAonC,GAAAa,0BAAAF,GAAA/nC,KAAA,SAAAQ,GACA,GAAA2lB,GAAA3lB,EAAA2lB,EACAA,GAAA+hB,iBAAA,CACA,IAAA7mB,IACA5b,KAAAsiC,EACA5hB,KACAihB,WACAe,QAAAf,EAAAe,QACAd,SACAC,YAEA,OAAAjmB,GAAA8E,GAAAxjB,IAAA,kBAAA8I,MAAA,SAAA1I,GAEA,SAAAA,EAAA3B,OACA,KAAA2B,KAES/C,KAAA,SAAAooC,GAOT,MANA/mB,GAAAgnB,IAAAD,IAAAC,IAAA,EACAiiC,GACAjpD,EAAA8E,GAAArgB,KAAA,6BACAwkE,GAAA7iC,KAGApmB,SASA,OAHAipD,KACAA,EAAA7iC,GAAA8iC,GAEAA,EAGA,QAAAjiC,IAAA5iC,GACA/I,KAAAyE,OAAA,IACAzE,KAAA8I,KAAA,oBACA9I,KAAA+I,UACA/I,KAAAqG,OAAA,CACA,KACAG,MAAAqC,kBAAA7I,KAAA2rC,IACG,MAAAtkC,KAKH,QAAAukC,IAAA7iC,GACA/I,KAAAyE,OAAA,IACAzE,KAAA8I,KAAA,YACA9I,KAAA+I,UACA/I,KAAAqG,OAAA,CACA,KACAG,MAAAqC,kBAAA7I,KAAA4rC,IACG,MAAAvkC,KAKH,QAAAwmE,IAAA9kE,GACA/I,KAAAyE,OAAA,IACAzE,KAAA8I,KAAA,gBACA9I,KAAA+I,UACA/I,KAAAqG,OAAA,CACA,KACAG,MAAAqC,kBAAA7I,KAAA6tE,IACG,MAAAxmE,KAKH,QAAAymE,IAAAhlE,GACA,GAAAC,GAAA,WAAAD,EACA,8DAEA,WAAA+kE,IAAA9kE,GAGA,QAAAglE,IAAAhmD,GAEA,OADA3d,GAAA,EACAzJ,EAAA,EAAA6I,EAAAue,EAAA7kB,OAAsCvC,EAAA6I,EAAS7I,IAAA,CAC/C,GAAAqX,GAAA+P,EAAApnB,EACA,oBAAAqX,GAAA,CACA,IAAA1P,MAAAC,QAAAyP,GAcA,KAAA81D,IAAA,OAZA1jE,GAAA,gBAAAA,QACA,QAAAuZ,GAAA,EAAAC,EAAA5L,EAAA9U,OAA0CygB,EAAAC,EAAUD,IAAA,CACpD,GAAAqqD,GAAAh2D,EAAA2L,EACA,oBAAAqqD,GACA,KAAAF,IAAA,OACW,oBAAA1jE,GAAAuZ,GACXvZ,EAAA/B,KAAA2lE,GAEA5jE,EAAAuZ,IAAAqqD,OAMK,gBAAA5jE,GACLA,GAAA4N,EAEA5N,EAAA,IAAA4N,EAGA,MAAA5N,GAOA,QAAA6jE,IAAAvkE,EAAA0N,GACA,MAAA0tC,IACA,WAAAp7C,EAAAzC,QAAA,QAAgC,UAEhCmQ,OACA22D,OACApgE,IAAAugE,GACA3lE,WACAiS,YAKA,QAAA7P,IAAAZ,EAAAG,GAYA,MAXAA,IACAH,EAAA1G,KAAA,SAAAQ,GACAiG,GAAA,WACAI,EAAA,KAAArG,MAEK,SAAA6E,GACLoB,GAAA,WACAI,EAAAxB,OAIAqB,EAGA,QAAAU,IAAArB,GACA,MAAAE,IAAA,SAAAtI,GACA,GAAA0J,GAAA1J,EAAA6I,MACAE,EAAAX,EAAA/H,MAAArB,KAAAgB,EAIA,OAHA,kBAAA0J,IACAC,GAAAZ,EAAAW,GAEAX,IAKA,QAAAiZ,IAAAjZ,EAAAokE,GACA,MAAApkE,GAAA1G,KAAA,SAAAQ,GACA,MAAAsqE,KAAA9qE,KAAA,WACA,MAAAQ,MAEG,SAAA6E,GACH,MAAAylE,KAAA9qE,KAAA,WACA,KAAAqF,OAKA,QAAAwa,IAAAhN,EAAAiN,GACA,kBACA,GAAAniB,GAAAiC,UACAmgB,EAAApjB,IACA,OAAAkW,GAAAmN,IAAA,WACA,MAAAF,GAAA9hB,MAAA+hB,EAAApiB,MAOA,QAAAwM,IAAA9F,GACA,GAAA0mE,GAAA,GAAAhV,IAAA1xD,GACA0C,EAAA,GAAA9B,OAAA8lE,EAAA10B,MACAnnC,GAAA,CAIA,OAHA67D,GAAAv8D,QAAA,SAAAtP,GACA6H,IAAAmI,GAAAhQ,IAEA6H,EAGA,QAAAikE,IAAA3gE,GACA,GAAAtD,GAAA,GAAA9B,OAAAoF,EAAAgsC,MACAnnC,GAAA,CAIA,OAHA7E,GAAAmE,QAAA,SAAAtP,EAAAoJ,GACAvB,IAAAmI,GAAA5G,IAEAvB,EAOA,QAAAyhC,IAAA/iC,GAGA,MAAAA,GAAA7C,QAAA,WAAA6C,OAAAsH,MAAA,KAGA,QAAA07B,IAAAva,GAGA,WAAAA,EAAAruB,QAAA,MAAAimB,KAAAoI,EAAA,GAAA1L,KAGA,QAAAumB,IAAA5iB,EAAAniB,GACA,IACAmiB,EAAApS,KAAA,QAAA/P,GACG,MAAAjB,GACHu3C,EAAA,QACA,qMAIAA,EAAA,QAAAt2C,IAGA,QAAAinE,IAAA9kD,EAAApgB,EAAAqC,GAGA,IACArC,EAAAqC,GACG,MAAApE,GACH+kC,GAAA5iB,EAAAniB,IAIA,QAAAknE,IAAA/kD,EAAApgB,EAAAqE,EAAAsa,EAAAymD,GAKA,IACA,OAAYjrD,OAAAna,EAAAqE,EAAAsa,EAAAymD,IACT,MAAAnnE,GAEH,MADA+kC,IAAA5iB,EAAAniB,IACYhB,MAAAgB,IAIZ,QAAA0kC,IAAA1yB,EAAAwT,GACA,GAAAmf,GAAAh5B,GAAAqG,EAAA1N,IAAAkhB,EAAAlhB,IACA,YAAAqgC,IAAAh5B,GAAAqG,EAAA9W,MAAAsqB,EAAAtqB,OAGA,QAAA0pC,IAAAC,EAAArL,EAAAC,GAEA,MADAA,MAAA,EACA,gBAAAD,GACAqL,EAAAjrC,MAAA6/B,EAAAD,EAAAC,GACGA,EAAA,EACHoL,EAAAjrC,MAAA6/B,GAEAoL,EAGA,QAAAC,IAAAt5B,GACA,GAAA4H,GAAA5H,EAAAtQ,MAGAgoB,EAAA9P,GAAA,gBAAAA,MAAAmK,KAAA/R,EAAAxS,EACA,OAAAkqB,GAGA,QAAAkkD,IAAA5qE,GACAA,EAAA6O,KAAAb,QAAA,SAAAgB,GACA,GAAA6yC,GAAA7yC,EAAApH,KAAAoH,EAAApH,IAAAuzC,YACA0G,IAGA9kD,OAAA6M,KAAAi4C,GAAA7zC,QAAA,SAAAwiD,GACA,GAAAtV,GAAA2G,EAAA2O,EACA3O,GAAA2O,GAAAvuD,KAAA0kD,GAAAzL,EAAAj5C,KAAAi5C,EAAA+N,kBAKA,QAAA4hB,IAAAx7D,GACA,gBAAArP,GAIA,MAHAqP,GAAA0W,cAAA1W,EAAAs9B,aAAAt9B,EAAAu9B,QACAg+B,GAAA5qE,GAEAA,GAkCA,QAAA8qE,IAAAC,EAAA17D,EAAA8xB,EAAA6pC,GAEA,GAAAp0D,GAAAvH,EAAA07D,EACA,oBAAAn0D,KACAo0D,IACAp0D,EAAA9K,mBAAAjK,KAAAC,UAAA8U,KAEAuqB,EAAA38B,KAAAumE,EAAA,IAAAn0D,IAIA,QAAAq0D,IAAAC,GACA,sBAAAA,GAAA,CACA,GAAAC,GAAA16D,OAAAy6D,EAEA,OAAA10D,OAAA20D,QAAAx2D,SAAAu2D,EAAA,IAGAA,EAFAC,GAOA,QAAAC,IAAA/7D,GAIA,MAHAA,GAAAw5B,YAAAoiC,GAAA57D,EAAAw5B,aACAx5B,EAAA2tB,MAAAiuC,GAAA57D,EAAA2tB,OACA3tB,EAAA4tB,KAAAguC,GAAA57D,EAAA4tB,MACA5tB,EAGA,QAAAg8D,IAAAC,GACA,GAAAA,EAAA,CACA,mBAAAA,GACA,UAAAxjC,IAAA,+BACAwjC,EAAA,IAEA,IAAAA,EAAA,EACA,UAAAxjC,IAAA,wCACAwjC,EAAA,MAKA,QAAA7iC,IAAAtpC,EAAAoG,GACA,GAAAmjC,GAAAvpC,EAAAg+B,WAAA,oBACAwL,EAAAxpC,EAAAg+B,WAAA,mBAEA,uBAAAh+B,GAAAupC,IACA,mBAAAvpC,GAAAwpC,IACAx5B,GAAAhQ,EAAAupC,GAAAvpC,EAAAwpC,IAAA,EACA,SAAAb,IAAA,kGAEG,IAAAviC,EAAA0qB,QAAA9wB,EAAA8wB,UAAA,GACH,GAAA9wB,EAAA4mB,aACA,SAAA+hB,IAAA,4CACK,IAAA3oC,EAAAyK,MAAAzK,EAAAyK,KAAAvK,OAAA,IACLF,EAAAypC,QAAAzpC,EAAA0pC,YACA,SAAAf,IAAA,8DAIA,8BAAA95B,QAAA,SAAAu9D,GACA,GAAA/oE,GAAA6oE,GAAAlsE,EAAAosE,GACA,IAAA/oE,EACA,KAAAA,KAKA,QAAAgpE,IAAA7lD,EAAApgB,EAAA8J,GAEA,GACA9N,GADA4/B,KAEA7/B,EAAA,KA6BA,IAvBAwpE,GAAA,SAAAz7D,EAAA8xB,GACA2pC,GAAA,eAAAz7D,EAAA8xB,GACA2pC,GAAA,cAAAz7D,EAAA8xB,GACA2pC,GAAA,QAAAz7D,EAAA8xB,GACA2pC,GAAA,aAAAz7D,EAAA8xB,GACA2pC,GAAA,QAAAz7D,EAAA8xB,GACA2pC,GAAA,cAAAz7D,EAAA8xB,GACA2pC,GAAA,OAAAz7D,EAAA8xB,GACA2pC,GAAA,QAAAz7D,EAAA8xB,GACA2pC,GAAA,YAAAz7D,EAAA8xB,GACA2pC,GAAA,WAAAz7D,EAAA8xB,GAAA,GACA2pC,GAAA,YAAAz7D,EAAA8xB,GAAA,GACA2pC,GAAA,SAAAz7D,EAAA8xB,GAAA,GACA2pC,GAAA,UAAAz7D,EAAA8xB,GAAA,GACA2pC,GAAA,gBAAAz7D,EAAA8xB,GACA2pC,GAAA,MAAAz7D,EAAA8xB,GAAA,GAGAA,IAAAhxB,KAAA,KACAgxB,EAAA,KAAAA,EAAA,OAAAA,EAIA,mBAAA9xB,GAAAzF,KAAA,CACA,GAAA6hE,GAAA,IAIAC,EACA,QAAA5/D,mBAAAjK,KAAAC,UAAAuN,EAAAzF,MACA8hE,GAAArsE,OAAA8hC,EAAA9hC,OAAA,GAAAosE,EAGAtqC,IAAA,MAAAA,EAAA,YAAAuqC,GAEApqE,EAAA,OACA,gBAAAiE,GACAhE,GAAgBqI,KAAAyF,EAAAzF,MAEhBrE,EAAAqE,KAAAyF,EAAAzF,MAMA,mBAAArE,GAAA,CACA,GAAA+G,GAAA07B,GAAAziC,EACA,OAAAogB,GAAA0oB,SACA/sC,SACA6B,IAAA,WAAAmJ,EAAA,aAAAA,EAAA,GAAA60B,EACA5/B,SACK/B,KAAAqrE,GAAAx7D,IAYL,MARA9N,SACAxE,OAAA6M,KAAArE,GAAAyI,QAAA,SAAAlG,GACArD,MAAAC,QAAAa,EAAAuC,IACAvG,EAAAuG,GAAAvC,EAAAuC,GAEAvG,EAAAuG,GAAAvC,EAAAuC,GAAAiO,aAGA4P,EAAA0oB,SACA/sC,OAAA,OACA6B,IAAA,aAAAg+B,EACA5/B,SACG/B,KAAAqrE,GAAAx7D,IAMH,QAAAs8D,IAAAhmD,EAAApgB,EAAA8J,GACA,UAAA+mC,IAAA,SAAA1rC,EAAAtE,GACAuf,EAAAimD,OAAArmE,EAAA8J,EAAA,SAAA9M,EAAAvC,GACA,MAAAuC,GACA6D,EAAA7D,OAEAmI,GAAA1K,OAQA,QAAA6rE,IAAAlmD,GACA,UAAAywB,IAAA,SAAA1rC,EAAAtE,GACAuf,EAAAmmD,aAAA,SAAAvpE,EAAAvC,GACA,MAAAuC,GACA6D,EAAA7D,OAEAmI,GAAA1K,OAKA,QAAA8oC,IAAApqC,GACA,gBAAAmG,GAEA,SAAAA,EAAAjE,OACA,MAAAlC,EAEA,MAAAmG,IAQA,QAAAmkC,IAAAtiB,EAAA7F,EAAAooB,GAOA,QAAAC,KACA,MAAAjB,IAAAva,GAGA0oB,GAAA1rC,QAAAy+B,GAEAtoB,EAAA8E,GAAAxjB,IAAAinC,GAAAn+B,MAAA69B,GAAAK,IAGA,QAAAE,GAAAC,GACA,MAAAA,GAAA1/B,KAAAvK,OAIAwhB,EAAA8E,GAAAG;AACAlc,KAAA0/B,EAAA1/B,KACAmc,cAAA,IAJAqwB,GAAA1rC,SAAqCmE,UAQrC,QAAAk9D,GAAAziC,EAAAE,GAIA,OAHAC,MACAuiC,EAAA,GAAAzW,IAEAz4D,EAAA,EAAA6I,EAAA6jC,EAAA36B,KAAAxP,OAAgDvC,EAAA6I,EAAS7I,IAAA,CACzD,GAAAkS,GAAAw6B,EAAA36B,KAAA/R,GACA8K,EAAAoH,EAAApH,GACA,IAAAA,IAGA6hC,EAAAjlC,KAAAoD,GACAokE,EAAAxsD,IAAA5X,EAAAmZ,KACAnZ,EAAA+hC,UAAAC,EAAA5R,IAAApwB,EAAAmZ,MACAnZ,EAAA+hC,UAAA,CACA,GAAAE,GAAAD,EAAAznC,IAAAyF,EAAAmZ,IACA,UAAA8oB,KACAjiC,EAAAlJ,MAAAmrC,EAAAnrC,QAIA,GAAAorC,GAAA0gC,GAAA5gC,EAiBA,OAhBAE,GAAA97B,QAAA,SAAAlG,GACA,IAAAkkE,EAAAh0C,IAAAlwB,GAAA,CAEA,GAAAiiC,IACAhpB,IAAAjZ,GAEA+hC,EAAAD,EAAAznC,IAAA2F,EACA,UAAA+hC,KACAE,EAAArrC,MAAAmrC,EAAAnrC,OAEA+qC,EAAAjlC,KAAAulC,MAGAT,EAAA1/B,KAAAD,GAAAmgC,EAAArsC,OAAA6rC,EAAA1/B,OACA6/B,EAAAjlC,KAAA8kC,GAEAG,EA/DA,GAAAL,GAAA,cAAA1iB,EACAyiB,GAAwBpoB,IAAAqoB,EAAAx/B,SACxBogC,EAAAf,EAAA9mC,IAAAukB,GACAkjB,EAAAI,EAAA,GACAtc,EAAAsc,EAAA,EA8DA,OAAAd,KAAA1pC,KAAA,SAAA8pC,GACA,MAAAD,GAAAC,GAAA9pC,KAAA,SAAAgqC,GACA,MAAAuiC,GAAAziC,EAAAE,OAOA,QAAAS,IAAAppB,EAAAooB,EAAApB,GACA,GAAAqC,GAAA,gBACA,OAAArpB,GAAA8E,GAAAxjB,IAAA+nC,GACAj/B,MAAA69B,IAAqB/nB,IAAAmpB,EAAArC,IAAA,KACrBroC,KAAA,SAAAooC,GACA,GAAAuC,GAAAqgC,GAAAvhC,EACA,OAAAmN,IAAA71C,IAAA4pC,EAAAtgC,IAAA,SAAA6c,GACA,MAAAsiB,IAAAtiB,EAAA7F,EAAAooB,MACKzpC,KAAA,SAAA4qC,GACL,GAAAC,GAAA7iC,EAAA4iC,EAIA,OAHAxC,GAAAC,MACAwC,EAAA7lC,KAAAojC,GAEA/mB,EAAA8E,GAAA2kB,UAA+B/d,KAAA8d,QAK/B,QAAAE,IAAA1pB,GACA,GAAAD,GAAA,gBAAAC,OAAA5b,KACAoN,EAAAm4B,GAAA5pB,EAIA,OAHAvO,KACAA,EAAAm4B,GAAA5pB,GAAA,GAAAipD,KAEAx3D,EAGA,QAAAq4B,IAAA7pB,GACA,MAAAxB,IAAAkrB,GAAA1pB,GAAA,WACA,MAAA8pB,IAAA9pB,OAIA,QAAA8pB,IAAA9pB,GAKA,QAAAtN,GAAAzL,EAAApJ,GACA,GAAAghB,IAAkBljB,GAAAoL,EAAAmZ,IAAAjZ,IAAAsO,GAAAtO,GAGlB,oBAAApJ,IAAA,OAAAA,IACAghB,EAAAhhB,MAAA0X,GAAA1X,IAEAksC,EAAApmC,KAAAkb,GAgBA,QAAAmrB,GAAA5B,EAAApB,GACA,kBACA,MAAAoC,IAAAppB,EAAAooB,EAAApB,IAMA,QAAAoD,KACA,MAAApqB,GAAA+lB,SAAAlZ,SACAwd,WAAA,EACAnlB,cAAA,EACAkU,MAAA,WACAiD,MAAA4N,EACA9N,MAAAivC,KACKzsE,KAAAi5C,GAGL,QAAAA,GAAA/2C,GACA,GAAA2mC,GAAA3mC,EAAA2mC,OACA,IAAAA,EAAAhpC,OAAA,CAGA,GAAA4pC,GAAAijC,EAAA7jC,EAEA,IADAh2B,EAAAmN,IAAAqrB,EAAA5B,EAAA6B,MACAzC,EAAAhpC,OAAA4sE,IAGA,MAAAhhC,MAGA,QAAAihC,GAAA7jC,GAEA,OADAY,GAAA,GAAAiQ,IACAp8C,EAAA,EAAA6I,EAAA0iC,EAAAhpC,OAAyCvC,EAAA6I,EAAS7I,IAAA,CAClD,GAAAsuC,GAAA/C,EAAAvrC,EACA,UAAAsuC,EAAAxjC,IAAAmZ,IAAA,IACA6pB,KACAhjC,EAAAwjC,EAAAxjC,IAEAA,EAAA+hC,UACA8gC,GAAA5pD,EAAA+lB,SAAAC,EAAAj/B,GAEAgjC,EAAA99B,KAAAo7B,GAEA,IAAA0B,GAAAuiC,EAAAvhC,EACA3B,GAAAxe,IAAA2gB,EAAAxjC,IAAAmZ,KACA6oB,EACAwB,EAAA1d,UAGAod,EAAAM,EAAAvD,IAEA,MAAAoB,GAGA,QAAAkjC,GAAAvhC,GAGA,OADAS,GADAzB,EAAA,GAAAsP,IAEAp8C,EAAA,EAAA6I,EAAAilC,EAAAvrC,OAA4CvC,EAAA6I,EAAS7I,IAAA,CACrD,GAAAsvE,GAAAxhC,EAAA9tC,GACAyuC,GAAA6gC,EAAAtkE,IAAAskE,EAAA5vE,GACAM,GAAA,OAAAqS,GAAAi9D,EAAAtkE,IAAAujC,IACAE,EAAA/mC,KAAA1H,GAEA8sC,EAAAnf,IAAA1W,GAAAw3B,GAAA6gC,GACA/gC,EAAA+gC,EAAAtkE,IAEA,MAAA8hC,GA7FA,GAAAgB,GACAhjC,EAYAi/B,CAEA,sBAAAhmB,GAAAgmB,QAAA,IAAAhmB,EAAAgmB,OAAAxnC,OAAA,CACA,GAAAgtE,GAAAxrD,EAAAgmB,MACAA,GAAA,SAAAj/B,GACA,MAAAykE,GAAAzkE,EAAA2L,QAGAszB,GAAAujC,GAAAvpD,EAAAgmB,OAAA9wB,WAAAxC,EAGA,IAAAu3B,GAAAjqB,EAAAgnB,KAAA,EAQAx1B,EAAA,GAAAw3D,GAgEA,OAAA5+B,KAAAzrC,KAAA,WACA,MAAA6S,GAAA24B,WACGxrC,KAAA,WACHqhB,EAAAgnB,IAAAiD,IAIA,QAAAW,IAAA5qB,EAAAwnB,EAAAlpC,GACA,IAAAA,EAAA0pC,mBACA1pC,GAAA0pC,WAGA,IAEA/B,GAFA4E,EAAAvsC,EAAAypC,OAAAzpC,EAAA0pC,WAIA/B,GADAwlC,GAAAzrD,EAAAimB,WACAwlC,GAAAzrD,EAAAimB,WAEAsjC,GAAAvpD,EAAAimB,UAAA/wB,WAGA,IAAA41B,MACAC,EAAAp1B,MAAArX,EAAA0pC,aAAAp4B,OAAA87D,kBACAptE,EAAA0pC,WACAR,GAAAr6B,QAAA,SAAAxK,GACA,GAAAqoC,GAAAF,IAAAtsC,OAAA,GACAmtE,EAAA9gC,EAAAloC,EAAAsE,IAAA,IAOA,OAJA4jC,IAAAjnC,MAAAC,QAAA8nE,KACAA,IAAApvE,MAAA,EAAAwuC,IAGAC,GAAA,IAAA18B,GAAA08B,EAAA2gC,aACA3gC,EAAAjiC,KAAApF,MAAAhB,EAAAsE,IAAAtE,EAAAhH,SACAqvC,GAAA3nB,OAAA1f,KAAAhB,EAAA9E,YAGAitC,GAAAnnC,MACAoF,OAAApG,EAAAsE,IAAAtE,EAAAhH,KACA0nB,QAAA1gB,EAAA9E,OACA8tE,eAGAnkC,IACA,QAAAvrC,GAAA,EAAA6I,EAAAgmC,EAAAtsC,OAAsCvC,EAAA6I,EAAS7I,IAAA,CAC/C,GAAA0G,GAAAmoC,EAAA7uC,GACAgvC,EAAA4+B,GAAA7pD,EAAA+lB,SAAAE,EAAAtjC,EAAAoG,KAAApG,EAAA0gB,QAAA,EACA,IAAA4nB,EAAAtpC,OAAAspC,EAAAtpC,gBAAAwnE,IAEA,KAAAl+B,GAAAtpC,KAEA6lC,GAAA7jC,MAEA9F,MAAAotC,EAAAtpC,MAAA,KAAAspC,EAAApsB,OACA5X,IAAAtE,EAAAgpE,WAIA,OAAU39D,KAAAu5B,GAAAC,EAAAlpC,EAAA69B,MAAA79B,EAAA89B,OAGV,QAAA8O,IAAAlrB,EAAAxR,GACA,MAAAgQ,IAAAkrB,GAAA1pB,GAAA,WACA,MAAAmrB,IAAAnrB,EAAAxR,OAIA,QAAA28B,IAAAnrB,EAAAxR,GAUA,QAAA48B,GAAAC,GAEA,MADAA,GAAAnmB,cAAA,EACAlF,EAAA8E,GAAAG,QAAAomB,GAAA1sC,KAAA,SAAAQ,GAEA,MADAmsC,GAAAnsC,EAAAomB,WACApmB,EAAA6O,KAAAhF,IAAA,SAAAtD,GAMA,YAAAA,GAAAqB,KAAA,gBAAArB,GAAAqB,IAAAlJ,OACA,OAAA6H,EAAAqB,IAAAlJ,MAAA,CACA,GAAAkL,GAAA7M,OAAA6M,KAAArD,EAAAqB,IAAAlJ,OAAAoO,OAGAs/B,GAAA,mBACA,MAAAxiC,EAAAwiC,GAAAxiC,EAAAwiC,GACA,MAAA7lC,GAAAqB,IAAAlJ,MAIA,GAAA2tC,GAAAx1B,GAAAtQ,EAAAqB,IAAAmZ,IACA,QACAjZ,IAAAukC,EAAA,GACA7vC,GAAA6vC,EAAA,GACA3tC,MAAA,SAAA6H,GAAAqB,IAAArB,EAAAqB,IAAAlJ,MAAA,UAMA,QAAA6tC,GAAA19B,GACA,GAAA29B,EAUA,IARAA,EADAC,EACAhB,GAAA5qB,EAAAhS,EAAAQ,IAGA+W,WAAA+lB,EACAO,OAAAzP,EACApuB,QAGAQ,EAAA0W,aAAA,CACA,GAAAokB,GAAAxgC,GAAAkF,EAAAhF,IAAAy+B,IAEA,OAAAznB,GAAA+lB,SAAA9gB,SACAlc,KAAAugC,EACApkB,cAAA,EACAmlB,UAAA77B,EAAA67B,UACAyB,YAAAt9B,EAAAs9B,YACAC,OAAAv9B,EAAAu9B,SACOptC,KAAA,SAAAwmB,GACP,GAAA6mB,GAAA,GAAAqM,GAWA,OAVAlzB,GAAAnX,KAAAb,QAAA,SAAAgB,GACA69B,EAAApiB,IAAAzb,EAAAxS,GAAAwS,EAAApH,OAEAiH,EAAAb,QAAA,SAAAgB,GACA,GAAA0X,GAAA4hB,GAAAt5B,GACApH,EAAAilC,EAAA1qC,IAAAukB,EACA9e,KACAoH,EAAApH,SAGA4kC,IAGA,MAAAA,GA3EA,GAAAL,GACAM,EAAA5rB,EAAAimB,WAAAz3B,EAAA4gB,UAAA,EACAgN,EAAA5tB,EAAA4tB,MAAA,CA6EA,IA5EA,mBAAA5tB,GAAAzF,MAAAyF,EAAAzF,KAAAvK,SAEAgQ,EAAA2tB,MAAA,QACA3tB,GAAAzF,MAyEA,mBAAAyF,GAAAzF,KAAA,CACA,GAAAA,GAAAyF,EAAAzF,KACAmjC,EAAAnjC,EAAAC,IAAA,SAAA/B,GACA,GAAAokC,IACA38B,SAAAwE,IAAAjM,IACA0H,OAAAuE,IAAAjM,OAEA,OAAAmkC,GAAAC,IAEA,OAAAkK,IAAA71C,IAAAwsC,GAAAvtC,KAAAgI,GAAAhI,KAAA+sC,GAEA,GAAAL,IACA/O,WAAA9tB,EAAA8tB,WAaA,IAXA9tB,EAAAy5D,YACAz5D,EAAAE,SAAAF,EAAAy5D,WAEAz5D,EAAA05D,UACA15D,EAAAG,OAAAH,EAAA05D,SAEA,mBAAA15D,GAAAE,WACA28B,EAAA38B,SACAwE,GADA1E,EAAA8tB,YACA9tB,EAAAE,cACAF,EAAAE,YAEA,mBAAAF,GAAAG,OAAA,CACA,GAAA4uB,GAAA/uB,EAAAK,iBAAA,CACAL,GAAA8tB,aACAiB,MAGA8N,EAAA18B,OAAAuE,GACAqqB,GAAA/uB,EAAAG,YAAuCH,EAAAG,SAEvC,sBAAAH,GAAAvH,IAAA,CACA,GAAAklC,GAAAj5B,IAAA1E,EAAAvH,MACAmlC,EAAAl5B,IAAA1E,EAAAvH,QACAokC,GAAA/O,YACA+O,EAAA18B,OAAAw9B,EACAd,EAAA38B,SAAA09B,IAEAf,EAAA38B,SAAAy9B,EACAd,EAAA18B,OAAAy9B,GASA,MANAR,KACA,gBAAAp9B,GAAA2tB,QACAkP,EAAAlP,MAAA3tB,EAAA2tB,OAEAkP,EAAAjP,QAEAgP,EAAAC,GAAA1sC,KAAA+sC,GAIA,QAAAkgC,IAAA9mD,GACA,MAAAA,GAAA0oB,SACA/sC,OAAA,OACA6B,IAAA,kBAIA,QAAA+pC,IAAAvnB,GACA,MAAAA,GAAAxjB,IAAA,kBAAA3C,KAAA,SAAA8pC,GACA,GAAA6D,GAAA,GAAA+L,GACAn8C,QAAA6M,KAAA0/B,EAAAxoB,OAAA9S,QAAA,SAAAq5B,GACA,GAAA/6B,GAAA07B,GAAAX,GACA+F,EAAA,WAAA9gC,EAAA,GACAsU,EAAAtU,EAAA,GACAwU,EAAAqsB,EAAAhrC,IAAAirC,EACAtsB,KACAA,EAAA,GAAAy0C,IACApoB,EAAA1iB,IAAA2iB,EAAAtsB,IAEAA,EAAAtB,IAAAoB,IAEA,IAAAvR,IACAzF,KAAA4gE,GAAAr9B,GACApnB,cAAA,EAEA,OAAAJ,GAAAG,QAAAzW,GAAA7P,KAAA,SAAAQ,GACA,GAAAqtC,KACArtC,GAAA6O,KAAAb,QAAA,SAAAgB,GACA,GAAAs+B,GAAAt+B,EAAAlH,IAAAQ,UAAA,EACA6kC,GAAAhrC,IAAA6M,EAAAlH,KAAAkG,QAAA,SAAA4S,GACA,GAAAymB,GAAAiG,EAAA,IAAA1sB,CAEA0oB,GAAAxoB,MAAAumB,KAGAA,EAAAzmB,EAEA,IAAA2sB,GAAAxwC,OAAA6M,KAAA0/B,EAAAxoB,MAAAumB,IAEAmG,EAAAx+B,EAAApH,KAAAoH,EAAApH,IAAAkZ,OACA9R,EAAApH,IAAAkZ,MAAAF,EACA2sB,GAAAv/B,QAAA,SAAAy/B,GACAJ,EAAAI,GACAJ,EAAAI,IAAAD,OAIA,IAAAE,GAAA3wC,OAAA6M,KAAAyjC,GAAAx9B,OACA,SAAA49B,GAA+B,OAAAJ,EAAAI,KAC/BE,EAAAD,EAAA7jC,IAAA,SAAA4jC,GACA,MAAApuB,IAAAkrB,GAAAkD,GAAA,WACA,UAAA9nB,GAAAlnB,YAAAgvC,EAAA9nB,EAAAioB,QAAA5jB,eAGA,OAAAosB,IAAA71C,IAAAotC,GAAAnuC,KAAA,WACA,OAAgBwC,IAAA,QAGb8mC,IAAc9mC,IAAA,KAejB,QAAA6rC,IAAAloB,EAAApgB,EAAA8J,GACA,YAAAsW,EAAAtE,OACA,MAAAmqD,IAAA7lD,EAAApgB,EAAA8J,EAIA,sBAAAsW,GAAAimD,OACA,MAAAD,IAAAhmD,EAAApgB,EAAA8J,EAGA,oBAAA9J,GAAA,CAEAkjC,GAAAp5B,EAAA9J,EAEA,IAAAuoC,IACAnoB,KACA/E,SAAA,sBACA/W,IAAAtE,EAAAsE,IACAomB,OAAA1qB,EAAA0qB,OACA8W,WAAA,EAYA,OAVAgH,IAAAvuB,IAAA,WACA,MAAAwuB,IAAAF,GAAAtuC,KAAA,SAAAqhB,GACA,QAAAotB,KACA,MAAAptB,GAAA8E,GAAAqE,UAEA,MAAA7K,IAAAurB,GAAA7pB,GAAArhB,KAAA,WACA,MAAAusC,IAAAlrB,EAAAxR,KACS4+B,OAGTF,GAAA/C,SAGA,GAAA3D,GAAA9hC,EACA+G,EAAA07B,GAAAX,GACA+F,EAAA9gC,EAAA,GACAsU,EAAAtU,EAAA,EACA,OAAAqZ,GAAAxjB,IAAA,WAAAirC,GAAA5tC,KAAA,SAAAoI,GACA,GAAArC,GAAAqC,EAAAkZ,OAAAlZ,EAAAkZ,MAAAF,EAEA,KAAArb,GAAA,gBAAAA,GAAAsE,IACA,SAAAk+B,IAAA,QAAAqF,EACA,sBAAAxsB,EAEA6nB,IAAAp5B,EAAA9J,EAEA,IAAAuoC,IACAnoB,KACA/E,SAAAymB,EACAx9B,IAAAtE,EAAAsE,IACAomB,OAAA1qB,EAAA0qB,OAEA,OAAA+d,IAAAF,GAAAtuC,KAAA,SAAAqhB,GACA,aAAAxR,EAAA6+B,OAAA,iBAAA7+B,EAAA6+B,OACA,iBAAA7+B,EAAA6+B,OACAjoC,GAAA,WACAykC,GAAA7pB,KAGAkrB,GAAAlrB,EAAAxR,IAEAq7B,GAAA7pB,GAAArhB,KAAA,WACA,MAAAusC,IAAAlrB,EAAAxR,SAiCA,QAAAq9D,IAAA1qD,GACA,YAAAsD,KAAAtD,GAGA,QAAA2qD,IAAAC,EAAAC,EAAArc,GACA,OAAAoc,EAAAzxB,eACAyxB,EAAAzxB,aAAAqV,IACAoc,EAAAzxB,aAAAqV,GAAAjpD,SAAAslE,EAAA1xB,aAAAqV,GAAAjpD,OAGA,QAAAulE,IAAAnnD,EAAA/d,GACA,GAAAugE,GAAAprE,OAAA6M,KAAAhC,EAAAuzC,aACA,OAAA/E,IAAA71C,IAAA4nE,EAAAt+D,IAAA,SAAA2mD,GACA,MAAA7qC,GAAA+iD,cAAA9gE,EAAAmZ,IAAAyvC,GAAgDxuC,IAAApa,EAAAka,UAIhD,QAAAirD,IAAArxD,EAAAsJ,EAAApd,GACA,GAAAolE,GAAA,SAAAhoD,EAAA3D,QAAA,SAAA3F,EAAA2F,OACA8mD,EAAAprE,OAAA6M,KAAAhC,EAAAuzC,aAEA,OAAA6xB,GAIAtxD,EAAAvZ,IAAAyF,EAAAmZ,KAAAvhB,KAAA,SAAAotE,GACA,MAAAx2B,IAAA71C,IAAA4nE,EAAAt+D,IAAA,SAAA2mD,GACA,MAAAmc,IAAAC,EAAAhlE,EAAA4oD,GACAxrC,EAAA0jD,cAAA9gE,EAAAmZ,IAAAyvC,GAGA90C,EAAAgtD,cAAAkE,EAAA7rD,IAAAyvC,QAEGvlD,MAAA,SAAAzI,GAEH,SAAAA,EAAA5B,OACA,KAAA4B,EAGA,OAAAsqE,IAAA9nD,EAAApd,KAjBAklE,GAAA9nD,EAAApd,GAqBA,QAAAqlE,IAAAC,GACA,GAAAj0B,KAWA,OAVAl8C,QAAA6M,KAAAsjE,GAAAl/D,QAAA,SAAAxR,GACA,GAAA2wE,GAAAD,EAAA1wE,GAAA2nE,OACAgJ,GAAAn/D,QAAA,SAAAo/D,GACAn0B,EAAAz0C,MACAhI,KACAwlB,IAAAorD,SAMA7gD,KAAA0sB,EACAmE,MAAA,EACAyD,QAAA,GAUA,QAAAwsB,IAAAroD,EAAAtJ,EAAAwxD,EAAAz0D,GAMA,QAAA60D,KAEA,GAAAC,GAAAN,GAAAC,EAEA,IAAAK,EAAAhhD,KAAAltB,OAIA,MAAA2lB,GAAA4yB,QAAA21B,GAAA/tE,KAAA,SAAAguE,GAEA,GAAA/0D,EAAAg1D,UACA,SAAA9qE,OAAA,YAEA,OAAAyzC,IAAA71C,IAAAitE,EAAAnlC,QAAAx+B,IAAA,SAAA6jE,GACA,MAAAt3B,IAAA71C,IAAAmtE,EAAAnhD,KAAA1iB,IAAA,SAAAjC,GACA,GAAAilE,GAAAjlE,EAAA5F,EAQA,OANA4F,GAAApF,QAGAR,GAAA,GAGA6qE,KAAA1xB,aAIA4xB,GAAArxD,EAAAsJ,EAAA6nD,GAAArtE,KAAA,SAAAmtC,GACA,GAAAw7B,GAAAprE,OAAA6M,KAAAijE,EAAA1xB,aAQA,OAPAxO,GAAA3+B,QAAA,SAAAopD,EAAAt6D,GACA,GAAAo+C,GAAA2xB,EAAA1xB,aAAAgtB,EAAArrE,UACAo+C,GAAAE,WACAF,GAAA77C,OACA67C,EAAAj5C,KAAAm1D,IAGAyV,IAZAA,QAiBArtE,KAAA,SAAA6oC,GACAslC,IAAAlwE,OAAA+J,EAAA6gC,GAAAx4B,OAAA+9D,cAKA,QAAAjd,GAAA/oD,GACA,MAAAA,GAAAuzC,cAAAp+C,OAAA6M,KAAAhC,EAAAuzC,cAAA97C,OAAA,EAGA,QAAAwuE,GAAAjmE,GACA,MAAAA,GAAA85C,YAAA95C,EAAA85C,WAAAriD,OAAA,EAGA,QAAAyuE,GAAAxhD,GAGA,MAAAtH,GAAAc,SACAlc,KAAA0iB,EACAvG,cAAA,EACAmlB,WAAA,IACK1rC,KAAA,SAAAQ,GACL,GAAAyY,EAAAg1D,UACA,SAAA9qE,OAAA,YAEA3C,GAAA6O,KAAAb,QAAA,SAAAgB,GACAA,EAAAsc,UAAAtc,EAAApH,MAAA8kE,GAAA19D,EAAAtQ,MAAAsjB,MACA2uC,EAAA3hD,EAAApH,MAAAimE,EAAA7+D,EAAApH,OAOAoH,EAAApH,IAAA85C,kBACA1yC,GAAApH,IAAA85C,WAIAisB,EAAAnpE,KAAAwK,EAAApH,WACAslE,GAAAl+D,EAAAxS,SAKA,QAAAuxE,KAGA,GAAAzhD,GAAAvvB,OAAA6M,KAAAsjE,GAAAr9D,OAAA,SAAArT,GACA,GAAA2nE,GAAA+I,EAAA1wE,GAAA2nE,OACA,YAAAA,EAAA9kE,QAAAqtE,GAAAvI,EAAA,KAEA,IAAA73C,EAAAjtB,OAAA,EACA,MAAAyuE,GAAAxhD,GAIA,QAAA0hD,KACA,OAAYhsE,KAAAuqB,KAAAohD,GAxGZT,EAAAxmE,EAAAwmE,EAEA,IAAAS,MACA3rE,GAAA,CAwGA,OAAAo0C,IAAA1rC,UACAlL,KAAAuuE,GACAvuE,KAAA8tE,GACA9tE,KAAAwuE,GAeA,QAAAC,IAAAtoD,EAAAnpB,EAAA0xE,EAAAC,EAAA9qD,GACA,MAAAsC,GAAAxjB,IAAA3F,GAAAyO,MAAA,SAAA1I,GACA,SAAAA,EAAA3B,OAMA,MALA,SAAA+kB,EAAAtE,QACA+4B,EACA,gEAIAg0B,WAAAD,EACAptD,IAAAvkB,EACAwhD,WACAqwB,WAAAC,GACAt7D,QAAAu7D,GAGA,MAAAhsE,KACG/C,KAAA,SAAAoI,GACH,IAAAyb,EAAAoqD,WAKA7lE,EAAAo7C,WAAAkrB,EA0BA,MArBAtmE,GAAAo2C,SAAAp2C,EAAAo2C,aAAAnuC,OAAA,SAAAkb,GACA,MAAAA,GAAAqjD,aAAAD,IAIAvmE,EAAAo2C,QAAAxa,SACAwf,SAAAkrB,EACAE,WAAAD,IAMAvmE,EAAAo2C,QAAAp2C,EAAAo2C,QAAA5gD,MAAA,EAAAoxE,IAEA5mE,EAAAoL,QAAAu7D,GACA3mE,EAAAymE,WAAAC,GAEA1mE,EAAAwmE,WAAAD,EACAvmE,EAAAo7C,SAAAkrB,EAEAvoD,EAAAoB,IAAAnf,GAAAqD,MAAA,SAAA1I,GACA,SAAAA,EAAA3B,OAEA,MAAAqtE,IAAAtoD,EAAAnpB,EAAA0xE,EAAAC,EAAA9qD,EAEA,MAAA9gB,OAKA,QAAAksE,IAAAzpD,EAAAtJ,EAAAlf,EAAA6mB,GACAlnB,KAAA6oB,MACA7oB,KAAAuf,SACAvf,KAAAK,KACAL,KAAAknB,cAsGA,QAAAqrD,IAAAC,EAAAC,GACA,MAAAD,GAAAP,aAAAQ,EAAAR,YAEAprB,SAAA2rB,EAAA3rB,SACAhF,QAAA2wB,EAAA3wB,SAIA6wB,GAAAF,EAAA3wB,QAAA4wB,EAAA5wB,SAGA,QAAA6wB,IAAAC,EAAAC,GAGA,GAAAC,GAAAF,EAAA,GACAG,EAAAH,EAAA1xE,MAAA,GACA8xE,EAAAH,EAAA,GACAI,EAAAJ,EAAA3xE,MAAA,EAEA,KAAA4xE,GAAA,IAAAD,EAAA1vE,OACA,OACA2jD,SAAAosB,GACApxB,WAIA,IAAAqxB,GAAAL,EAAAZ,UAEA,IAAAkB,GAAAD,EAAAN,GACA,OACA/rB,SAAAgsB,EAAAhsB,SACAhF,QAAA8wB,EAIA,IAAAruB,GAAAyuB,EAAAd,UACA,OAAAkB,IAAA7uB,EAAAwuB,IAEAjsB,SAAAksB,EAAAlsB,SACAhF,QAAAmxB,GAIAN,GAAAI,EAAAE,GAGA,QAAAG,IAAAC,EAAAvxB,GACA,GAAAriC,GAAAqiC,EAAA,GACAwxB,EAAAxxB,EAAA5gD,MAAA,EAEA,UAAAmyE,GAAA,IAAAvxB,EAAA3+C,UAIAkwE,IAAA5zD,EAAAyyD,YAIAkB,GAAAC,EAAAC,IAGA,QAAAC,IAAAltE,GACA,sBAAAA,GAAA3B,QAAA,IAAA+H,KAAAwS,MAAA5Y,EAAA3B,OAAA,KAKA,QAAA8uE,IAAArgE,EAAAgU,EAAA7gB,EAAA6D,GACA,GAAAgJ,EAAArO,SAAA,EAGA,MAFAqiB,GAAA9P,KAAA,QAAA/Q,OACA6gB,GAAA/P,oBAOA,IAJA,kBAAAjE,GAAAsgE,oBACAtgE,EAAAsgE,kBAAAx1B,GAEA92B,EAAA9P,KAAA,eAAA/Q,GACA,WAAA6gB,EAAA5K,OAAA,YAAA4K,EAAA5K,MAAA,CACA4K,EAAA9P,KAAA,SAAA/Q,GACA6gB,EAAA5K,MAAA,SACA,IAAAm3D,GAAA,WACAvgE,EAAAwgE,iBAAAC,IAEAC,EAAA,WACA1sD,EAAAhQ,eAAA,SAAAu8D,GAEAvsD,GAAA/d,KAAA,SAAAyqE,GACA1sD,EAAA/d,KAAA,SAAAsqE,GAGAvgE,EAAAwgE,iBAAAxgE,EAAAwgE,kBAAAC,GACAzgE,EAAAwgE,iBAAAxgE,EAAAsgE,kBAAAtgE,EAAAwgE,kBACAllE,WAAAtE,EAAAgJ,EAAAwgE,kBAGA,QAAAG,IAAAC,GACA,MAAAlzE,QAAA6M,KAAAqmE,GAAAnjE,KAAAqC,IAAA8gB,OAAA,SAAA1pB,EAAAuB,GAEA,MADAvB,GAAAuB,GAAAmoE,EAAAnoE,GACAvB,OAMA,QAAA2pE,IAAAlrD,EAAAtJ,EAAArM,GACA,GAAA86B,GAAA96B,EAAAimD,QAAAjmD,EAAAimD,QAAAxoD,KAAAqC,IAAA,GACAghE,EAAA9gE,EAAAQ,OAAAR,EAAAQ,OAAAkG,WAAA,GACAk6D,EAAA,GACAG,EAAA,EAUA,OARA/gE,GAAAQ,QAAAR,EAAA2rC,eACAi1B,EAAApuE,KAAAC,UAAAkuE,GAAA3gE,EAAA2rC,gBAGA3rC,EAAAQ,QAAA,UAAAR,EAAAQ,SACAugE,EAAA/gE,EAAAwR,KAAA9K,YAGAqgC,GAAA71C,KAAAykB,EAAAxoB,KAAAkf,EAAAlf,OAAAgD,KAAA,SAAAQ,GACA,GAAAqwE,GAAArwE,EAAA,GAAAA,EAAA,GAAAmwE,EAAAC,EACAH,EAAA9lC,CACA,WAAAiM,IAAA,SAAA1rC,GACAy9C,GAAAkoB,EAAA3lE,OAEGlL,KAAA,SAAA8wE,GAKH,MADAA,KAAAltE,QAAA,WAAAA,QAAA,WACA,UAAAktE,IAIA,QAAAnwC,IAAAnb,EAAAtJ,EAAArM,EAAAgU,EAAA9c,GAmCA,QAAAgqE,KACA,MAAAC,GACAp6B,GAAA1rC,UAEAwlE,GAAAlrD,EAAAtJ,EAAArM,GAAA7P,KAAA,SAAAQ,GACAywE,EAAAzwE,EACAwwE,EAAA,GAAA/B,IAAAzpD,EAAAtJ,EAAA+0D,EAAAptD,KAIA,QAAAqtD,KAGA,GAFAC,KAEA,IAAAC,EAAArkD,KAAAltB,OAAA,CAGA,GAAAktB,GAAAqkD,EAAArkD,KACAskD,GAAoBr+D,QAAAnD,EAAAmD,QACpB,OAAAkJ,GAAA4uB,UAA4B/d,OAAA6+B,WAAA,GAA6BylB,GAAArxE,KAAA,SAAAQ,GAEzD,GAAAqjB,EAAAoqD,UAEA,KADAqD,KACA,GAAAnuE,OAAA,YAKA,IAAAouE,GAAAh0E,OAAAyB,OAAA,KACAwB,GAAAgO,QAAA,SAAAhO,GACAA,EAAAwC,QACAuuE,EAAA/wE,EAAAxD,IAAAwD,IAIA,IAAAgxE,GAAAj0E,OAAA6M,KAAAmnE,GAAA1xE,MACAkH,GAAA0qE,oBAAAD,EACAzqE,EAAA2qE,cAAA3kD,EAAAltB,OAAA2xE,EAEAzkD,EAAAve,QAAA,SAAApG,GACA,GAAApF,GAAAuuE,EAAAnpE,EAAAmZ,IACA,IAAAve,EAAA,CAEA,GADA+D,EAAAopB,OAAAnrB,KAAAhC,GACA,iBAAAA,EAAAyC,MAAA,cAAAzC,EAAAyC,KAGA,KAAAzC,EAFA6gB,GAAA9P,KAAA,SAAA7M,EAAAlE,QAKAmuE,GAAAnsE,KAAAoD,MAIK,SAAArF,GAEL,KADAgE,GAAA0qE,oBAAA1kD,EAAAltB,OACAkD,KAIA,QAAA4uE,KACA,GAAAP,EAAApuE,MACA,SAAAG,OAAA,oCAEA4D,GAAAy8C,WAAA4tB,EAAA/oC,GACA,IAAAupC,GAAA1qE,EAAAH,EAMA,OALAoqE,GAAAtxE,SACA+xE,EAAA7kD,KAAAokD,EACAttD,EAAA9P,KAAA,SAAA69D,IAEAC,GAAA,EACAb,EAAAc,gBAAAV,EAAA/oC,IACAsmC,GAAA3uE,KAAA,WAGA,GAFA6xE,GAAA,EAEAhuD,EAAAoqD,UAEA,KADAqD,KACA,GAAAnuE,OAAA,YAEAiuE,GAAAtxE,OACAiyE,MACKtmE,MAAA,SAAA1I,GAEL,KADAivE,GAAAjvE,GACAA,IAIA,QAAAkvE,KACA,GAAAvvC,KAWA,OAVA0uC,GAAAljD,QAAA1f,QAAA,SAAAo9B,GAGA,WAAAA,EAAA5uC,KAGA0lC,EAAAkJ,EAAA5uC,IAAA4uC,EAAA1d,QAAA7jB,IAAA,SAAA2L,GACA,MAAAA,GAAAwM,SAGAtG,EAAAkuD,SAAA1nC,GAAA1iC,KAAA,SAAA0tE,GAEA,GAAA7pD,EAAAoqD,UAEA,KADAqD,KACA,GAAAnuE,OAAA,YAGAiuE,GAAA1D,UAIA,QAAAwE,KACA,MAAArE,IAAAroD,EAAAtJ,EAAAk1D,EAAA1D,MAAA7pD,GAAA7jB,KAAA,SAAAmyE,GACAf,EAAApuE,OAAAmvE,EAAA3vE,GACA2vE,EAAAplD,KAAAve,QAAA,SAAApG,SACAgpE,GAAA1D,MAAAtlE,EAAAmZ,KACAxa,EAAAqrE,YACAhB,EAAArkD,KAAA/nB,KAAAoD,OAKA,QAAAiqE,KACA,IAAAxuD,EAAAoqD,YAAAmD,EAAA,CAGA,OAAAkB,EAAAzyE,OAEA,WADA0yE,IAAA,EAGAnB,GAAAkB,EAAA5uB,QACAuuB,IACAjyE,KAAAkyE,GACAlyE,KAAAkxE,GACAlxE,KAAA2xE,GACA3xE,KAAAqyE,GACA5mE,MAAA,SAAA1I,GACAyvE,EAAA,yCAAAzvE,MAKA,QAAAwvE,GAAA10D,GACA,WAAA40D,EAAAvkD,QAAAruB,YACA,IAAAyyE,EAAAzyE,QAAAuxE,KACAvb,GAAA6c,EAAAjyC,MAAAkyC,KACA9uD,EAAA5K,MAAA,UACA4K,EAAA9P,KAAA,WAEA4+D,GACArB,YAMAzzD,GACA80D,GACAF,EAAAvkD,QAAAruB,QAAA4pE,KAEA6I,EAAAttE,KAAAytE,GACAA,GACApqC,IAAA,EACAna,WACAnB,SAEA,YAAAlJ,EAAA5K,OAAA,YAAA4K,EAAA5K,QACA4K,EAAA5K,MAAA,SACA4K,EAAA9P,KAAA,WAEAs+D,MAKA,QAAAG,GAAAntE,EAAAtC,GACA6vE,IAGA7vE,EAAA2C,UACA3C,EAAA2C,QAAAL,GAEA0B,EAAAvE,IAAA,EACAuE,EAAA3F,OAAA,WACAkxE,KACAG,GACApqC,IAAA,EACAna,WACAnB,SAEAukD,EAAAvuE,IAIA,QAAAuuE,GAAAuB,GACAD,GAIA/uD,EAAAoqD,YACAlnE,EAAA3F,OAAA,YACAywE,KAIA9qE,EAAA3F,OAAA2F,EAAA3F,QAAA,WACA2F,EAAA+rE,SAAA,GAAA57D,MACAnQ,EAAAy8C,WACAovB,GAAA,EAEAC,GACAA,EAAA9rE,SAEA,iBAAA8rE,EAAAptE,MAAA,cAAAotE,EAAAptE,MACAoe,EAAA9P,KAAA,QAAA8+D,GACAhvD,EAAA/P,sBAEAo8D,GAAArgE,EAAAgU,EAAAgvD,EAAA,WACAlyC,GAAAnb,EAAAtJ,EAAArM,EAAAgU,OAIAA,EAAA9P,KAAA,WAAAhN,GACA8c,EAAA/P,uBAKA,QAAAguC,GAAAlW,GAEA,GAAA/nB,EAAAoqD,UACA,MAAAqD,IAEA,IAAAjhE,GAAAirC,EAAAzrC,GAAA+7B,EACAv7B,KAGAoiE,EAAApqC,IAAAuD,EAAAvD,IACAoqC,EAAAvkD,QAAAlpB,KAAA4mC,GACA2mC,EAAA,IAAAD,EAAAzyE,QAAA6yE,EAAAjyC,OAIA,QAAAsyC,GAAA7kD,GAGA,GAFA8kD,GAAA,EAEAnvD,EAAAoqD,UACA,MAAAqD,IAKA,IAAApjD,EAAA2a,QAAAhpC,OAAA,EACA6yE,EAAAh1C,MAAAxP,EAAAs1B,SACAuuB,IACAQ,GAAA,OACK,CAEL,GAAAhnC,GAAA,WACAsqB,GACA6c,EAAAjyC,MAAA,EACAsxC,KAEAY,GAAA,EAEAJ,GAAA,GAIAnB,IAAA,IAAAljD,EAAA2a,QAAAhpC,OAUA0rC,KATAsmC,GAAA,EACAb,EAAAc,gBAAA5jD,EAAAs1B,SACAmrB,GAAA3uE,KAAA,WACA6xE,GAAA,EACA9qE,EAAAy8C,WAAAt1B,EAAAs1B,SACAjY,MAEA9/B,MAAAumE,KAQA,QAAAiB,GAAAlwE,GAGA,MAFAiwE,IAAA,EAEAnvD,EAAAoqD,UACAqD,QAEAkB,GAAA,mBAAAzvE,GAIA,QAAAgvE,KASA,QAAAmB,KACAhlD,EAAAlnB,SAEA,QAAA6M,KACAgQ,EAAAhQ,eAAA,SAAAq/D,GAZA,IACAF,IACAL,GACAL,EAAAzyE,OAAAszE,EAHA,CAOAH,GAAA,EAQAnvD,EAAAs0C,WACAt0C,EAAAhQ,eAAA,SAAAgQ,EAAAuvD,eACAvvD,EAAAs0C,SAAAnxD,UAEA6c,EAAA/d,KAAA,SAAAotE,EAEA,IAAAhlD,GAAA1I,EAAA0I,QAAAwkD,GACAh/D,GAAA,SAAAouC,EACA5zB,GAAAluB,KAAA6T,KACAqa,EAAAluB,KAAA+yE,GACAtnE,MAAAwnE,GAEApjE,EAAArO,QAEAqiB,EAAAs0C,SAAAjqC,EACArK,EAAAuvD,cAAAF,IAKA,QAAAG,KACAtC,IAAA/wE,KAAA,WAEA,MAAA6jB,GAAAoqD,cACAqD,KAGAN,EAAAsC,gBAAAtzE,KAAA,SAAA0uE,GACAlrB,EAAAkrB,EACAgE,GACAh1C,MAAA8lB,EACAhmB,MAAAisC,EACAA,aACAhvC,MAAA,WACAq7B,UACAE,aAAA,GAEAnmD,EAAAQ,SACA,gBAAAR,GAAAQ,OAEAqiE,EAAAnsD,cAAA,EAEAmsD,EAAAriE,OAAAR,EAAAQ,QAGA,aAAAR,KACA6iE,EAAA9I,UAAA/5D,EAAA+5D,WAEA,WAAA/5D,KACA6iE,EAAA1/D,QAAAnD,EAAAmD,SAEAnD,EAAA2rC,eACAk3B,EAAAl3B,aAAA3rC,EAAA2rC,cAEA3rC,EAAAwR,OACAqxD,EAAArxD,KAAAxR,EAAAwR,MAEA0wD,QAEKtmE,MAAA,SAAA1I,GACLyvE,EAAA,+BAAAzvE,KAKA,QAAAivE,GAAAjvE,GACA8uE,GAAA,EACAW,EAAA,uCAAAzvE,GAzZA,GACAquE,GAeAH,EACAD,EAjBAsB,KAEAG,GACApqC,IAAA,EACAna,WACAnB,SAEA8kD,GAAA,EACAc,GAAA,EACAC,GAAA,EACApvB,EAAA,EACAqS,EAAAhmD,EAAAgmD,YAAAhmD,EAAA4wB,OAAA,EACAgpC,EAAA55D,EAAA45D,YAAA,IACA0J,EAAAtjE,EAAAsjE,eAAA,GACAH,GAAA,EACAld,EAAAjmD,EAAAimD,QAGAqb,KAEAxC,EAAA7xB,GAEA/1C,OACAvE,IAAA,EACA+wE,WAAA,GAAAr8D,MACAk7D,UAAA,EACAV,aAAA,EACAD,mBAAA,EACAthD,UAGA,IAAAuiD,KA8XA,OA7XA7uD,GAAAmhC,MAAAx/B,EAAAtJ,GA6XA2H,EAAAoqD,cACAqD,MAIAztD,EAAA2vD,kBACA3vD,EAAA/d,KAAA,SAAAwrE,GAEA,kBAAAzhE,GAAA07B,WACA1nB,EAAA/d,KAAA,QAAA+J,EAAA07B,UACA1nB,EAAA/d,KAAA,oBAAAiB,GACA8I,EAAA07B,SAAA,KAAAxkC,MAGA8c,EAAA2vD,iBAAA,QAGA,mBAAA3jE,GAAA6tB,MACA21C,IAEAtC,IAAA/wE,KAAA,WAEA,MADA6xE,IAAA,EACAb,EAAAc,gBAAAjiE,EAAA6tB,MAAAixC,KACK3uE,KAAA,WAGL,MAFA6xE,IAAA,EAEAhuD,EAAAoqD,cACAqD,MAGA9tB,EAAA3zC,EAAA6tB,UACA21C,QACK5nE,MAAAumE,KAOL,QAAAyB,MACAr5B,GAAA5V,aAAAtnC,KAAAP,MACAA,KAAAsxE,WAAA,EACAtxE,KAAAsc,MAAA,SACA,IAAAta,GAAAhC,KACA+J,EAAA,GAAAkwC,IAAA,SAAAjwC,EAAAC,GACAjI,EAAAmH,KAAA,WAAAa,GACAhI,EAAAmH,KAAA,QAAAc,IAEAjI,GAAAqB,KAAA,SAAAkL,EAAAtE,GACA,MAAAF,GAAA1G,KAAAkL,EAAAtE,IAEAjI,EAAA8M,MAAA,SAAA7E,GACA,MAAAF,GAAA+E,MAAA7E,IAIAjI,EAAA8M,MAAA,cA4BA,QAAAioE,IAAAvtD,EAAAtW,GACA,GAAA8jE,GAAA9jE,EAAA8jE,gBACA,uBAAAxtD,GACA,GAAAwtD,GAAAxtD,EAAAtW,GAEAsW,EAIA,QAAAytD,IAAApuD,EAAAtJ,EAAArM,EAAAhJ,GAUA,GARA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAEA,mBAAAA,KACAA,MAGAA,EAAAimD,UAAA7wD,MAAAC,QAAA2K,EAAAimD,SACA,KAAAhb,GAAAO,GACA,4CAGAxrC,GAAA07B,SAAA1kC,EACAgJ,EAAA3I,EAAA2I,GACAA,EAAAgmD,WAAAhmD,EAAAgmD,YAAAhmD,EAAA4wB,KACA5wB,EAAArO,MAAA,SAAAqO,MAAArO,MAEAqO,EAAA8jE,iBAAA9jE,EAAA8jE,kBAAAh3E,IACA,IAAAk3E,GAAA,GAAAJ,IAAA5jE,GACAikE,EAAAJ,GAAAluD,EAAA3V,GACAkkE,EAAAL,GAAAx3D,EAAArM,EAEA,OADA8wB,IAAAmzC,EAAAC,EAAAlkE,EAAAgkE,GACAA,EAIA,QAAAG,IAAAxuD,EAAAtJ,EAAArM,EAAAhJ,GAaA,MAZA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAEA,mBAAAA,KACAA,MAEAA,EAAA3I,EAAA2I,GAEAA,EAAA8jE,iBAAA9jE,EAAA8jE,kBAAAh3E,KACA6oB,EAAAkuD,GAAAluD,EAAA3V,GACAqM,EAAAw3D,GAAAx3D,EAAArM,GACA,GAAAokE,IAAAzuD,EAAAtJ,EAAArM,EAAAhJ,GAGA,QAAAotE,IAAAzuD,EAAAtJ,EAAArM,EAAAhJ,GAaA,QAAAqtE,GAAAtoC,GACAjtC,EAAAoV,KAAA,UACAogE,UAAA,OACAvoC,WAGA,QAAAwoC,GAAAxoC,GACAjtC,EAAAoV,KAAA,UACAogE,UAAA,OACAvoC,WAGA,QAAAyoC,GAAAjsE,GACAzJ,EAAAoV,KAAA,UACAogE,UAAA,OACA/rE,QAGA,QAAAksE,GAAAlsE,GACAzJ,EAAAoV,KAAA,UACAogE,UAAA,OACA/rE,QAGA,QAAAmsE,KACA51E,EAAA41E,YAAA,EAEA51E,EAAA61E,YACA71E,EAAAoV,KAAA,UAGA,QAAAygE,KACA71E,EAAA61E,YAAA,EAEA71E,EAAA41E,YACA51E,EAAAoV,KAAA,UAGA,QAAA0gE,KACA91E,EAAA41E,YAAA,EAEA51E,EAAA61E,YACA71E,EAAAoV,KAAA,UACAogE,UAAA,SAIA,QAAAO,KACA/1E,EAAA61E,YAAA,EAEA71E,EAAA41E,YACA51E,EAAAoV,KAAA,UACAogE,UAAA,SAOA,QAAAQ,GAAA9yD,GACA,gBAAA/P,EAAAzL,GACA,GAAAuuE,GAAA,WAAA9iE,IACAzL,IAAA6tE,GAAA7tE,IAAA+tE,GACAS,EAAA,WAAA/iE,IACAzL,IAAAiuE,GAAAjuE,IAAAguE,GACAS,EAAA,WAAAhjE,IACAzL,IAAAmuE,GAAAnuE,IAAAkuE,GACAQ,EAAA,WAAAjjE,IACAzL,IAAAquE,GAAAruE,IAAAouE,IAEAG,GAAAC,GAAAC,GAAAC,KACAjjE,IAAAkjE,KACAA,EAAAljE,OAEAkjE,EAAAljE,GAAA+P,IAAA,EACA,IAAAtkB,OAAA6M,KAAA4qE,EAAAljE,IAAAjS,QAEAlB,EAAAmV,mBAAAhC,KAWA,QAAAmjE,GAAAh5B,EAAAnqC,EAAAszB,GACA6W,EAAA9W,UAAArzB,GAAAlP,QAAAwiC,KAAA,GACA6W,EAAAvoC,GAAA5B,EAAAszB,GAtGA,GAAAzmC,GAAAhC,IACAA,MAAAu4E,UAAA,CAEA,IAAAC,GAAAtlE,EAAA7K,KAAAo+C,MAAwCvzC,IAAA7K,MAAA6K,EACxCulE,EAAAvlE,EAAAwlE,KAAAjyB,MAAwCvzC,IAAAwlE,MAAAxlE,CAExClT,MAAAqI,KAAA4uE,GAAApuD,EAAAtJ,EAAAi5D,GACAx4E,KAAA04E,KAAAzB,GAAA13D,EAAAsJ,EAAA4vD,GAEAz4E,KAAA43E,YAAA,EACA53E,KAAA63E,YAAA,CA2DA,IAAAQ,KA0BAnlE,GAAA4wB,OACA9jC,KAAAqI,KAAA0O,GAAA,WAAA/U,EAAA02E,KAAAruE,OAAAo9B,KAAAzlC,EAAA02E,OACA14E,KAAA04E,KAAA3hE,GAAA,WAAA/U,EAAAqG,KAAAgC,OAAAo9B,KAAAzlC,EAAAqG,QASArI,KAAA+W,GAAA,uBAAA5B,GACA,WAAAA,GACAmjE,EAAAt2E,EAAA02E,KAAA,SAAAnB,GACAe,EAAAt2E,EAAAqG,KAAA,SAAAovE,IACK,WAAAtiE,GACLmjE,EAAAt2E,EAAA02E,KAAA,SAAAf,GACAW,EAAAt2E,EAAAqG,KAAA,SAAAqvE,IACK,WAAAviE,GACLmjE,EAAAt2E,EAAA02E,KAAA,SAAAX,GACAO,EAAAt2E,EAAAqG,KAAA,SAAAyvE,IACK,WAAA3iE,IACLmjE,EAAAt2E,EAAA02E,KAAA,SAAAb,GACAS,EAAAt2E,EAAAqG,KAAA,SAAAuvE,MAIA53E,KAAA+W,GAAA,0BAAA5B,GACA,WAAAA,GACAnT,EAAA02E,KAAAxhE,eAAA,SAAAqgE,GACAv1E,EAAAqG,KAAA6O,eAAA,SAAAugE,IACK,WAAAtiE,GACLnT,EAAA02E,KAAAxhE,eAAA,SAAAygE,GACA31E,EAAAqG,KAAA6O,eAAA,SAAAwgE,IACK,WAAAviE,GACLnT,EAAA02E,KAAAxhE,eAAA,SAAA6gE,GACA/1E,EAAAqG,KAAA6O,eAAA,SAAA4gE,IACK,WAAA3iE,IACLnT,EAAA02E,KAAAxhE,eAAA,SAAA2gE,GACA71E,EAAAqG,KAAA6O,eAAA,SAAA0gE,MAIA53E,KAAA04E,KAAA3hE,GAAA,iBAAAihE,EAAA,SACAh4E,KAAAqI,KAAA0O,GAAA,iBAAAihE,EAAA,QAEA,IAAAjuE,GAAAkwC,GAAA71C,KACApE,KAAAqI,KACArI,KAAA04E,OACAr1E,KAAA,SAAAC,GACA,GAAAokB,IACArf,KAAA/E,EAAA,GACAo1E,KAAAp1E,EAAA,GAOA,OALAtB,GAAAoV,KAAA,WAAAsQ,GACAxd,GACAA,EAAA,KAAAwd,GAEA1lB,EAAAmV,qBACAuQ,GACG,SAAAthB,GAaH,GAZApE,EAAAqI,SACAH,EAGAA,EAAA9D,GAKApE,EAAAoV,KAAA,QAAAhR,GAEApE,EAAAmV,qBACAjN,EAEA,KAAA9D,IAIApG,MAAAqD,KAAA,SAAAs1E,EAAAvyE,GACA,MAAA2D,GAAA1G,KAAAs1E,EAAAvyE,IAGApG,KAAA8O,MAAA,SAAA1I,GACA,MAAA2D,GAAA+E,MAAA1I,IAYA,QAAAk9B,IAAAvY,GACAA,EAAAiZ,UAAAizC,GACAlsD,EAAA6tD,KAAAvB,GAEAz2E,OAAA4G,eAAAujB,EAAAlqB,UAAA,aACAmF,IAAA,WACA,GAAAhE,GAAAhC,IACA,QACAy/B,KAAA,SAAAo5C,EAAA3lE,EAAAhJ,GACA,MAAAlI,GAAAM,YAAA0hC,UAAA60C,EAAA72E,EAAAkR,EAAAhJ,IAEAw1B,GAAA,SAAAm5C,EAAA3lE,EAAAhJ,GACA,MAAAlI,GAAAM,YAAA0hC,UAAAhiC,EAAA62E,EAAA3lE,EAAAhJ,QAMA6gB,EAAAlqB,UAAA+3E,KAAA,SAAAv7B,EAAAnqC,EAAAhJ,GACA,MAAAlK,MAAAsC,YAAAs2E,KAAA54E,KAAAq9C,EAAAnqC,EAAAhJ,IAnjWA,GAAAkgB,IAAAF,EAAAhqB,EAAA,KACAoJ,GAAA4gB,EAAAhqB,EAAA,KACAkmC,GAAAlc,EAAAhqB,EAAA,KACAu9C,GAAAv9C,EAAA,IACAoK,GAAA4f,EAAAhqB,EAAA,KACA4J,GAAAogB,EAAAhqB,EAAA,IACA4kD,GAAA56B,EAAAhqB,EAAA,KACA2K,GAAAqf,EAAAhqB,EAAA,KACAqvD,GAAArlC,EAAAhqB,EAAA,KAGA+5C,GAAA,kBAAA91C,iBAAAimB,GAqCAyvB,GAAA3T,SAAArlC,UAAA+Y,SACAkgC,GAAAD,GAAAt5C,KAAAK,QA8GA+M,GAAAy4B,GAAA,cAsEA2U,GAAAl6C,UAAAmF,IAAA,SAAA2F,GACA,GAAAmtE,GAAAj+B,EAAAlvC,EACA,OAAA3L,MAAAg7C,OAAA89B,IAEA/9B,EAAAl6C,UAAAytB,IAAA,SAAA3iB,EAAApJ,GACA,GAAAu2E,GAAAj+B,EAAAlvC,EAEA,OADA3L,MAAAg7C,OAAA89B,GAAAv2E,GACA,GAEAw4C,EAAAl6C,UAAAg7B,IAAA,SAAAlwB,GACA,GAAAmtE,GAAAj+B,EAAAlvC,EACA,OAAAmtE,KAAA94E,MAAAg7C,QAEAD,EAAAl6C,UAAAyd,OAAA,SAAA3S,GACA,GAAAmtE,GAAAj+B,EAAAlvC,GACA9H,EAAAi1E,IAAA94E,MAAAg7C,MAEA,cADAh7C,MAAAg7C,OAAA89B,GACAj1E,GAEAk3C,EAAAl6C,UAAAgR,QAAA,SAAAnH,GAEA,OADA+C,GAAA7M,OAAA6M,KAAAzN,KAAAg7C,QACAr6C,EAAA,EAAA6I,EAAAiE,EAAAvK,OAAoCvC,EAAA6I,EAAS7I,IAAA,CAC7C,GAAAgL,GAAA8B,EAAA9M,GACA4B,EAAAvC,KAAAg7C,OAAArvC,EACAA,GAAAmvC,EAAAnvC,GACAjB,EAAAnI,EAAAoJ,KAGA/K,OAAA4G,eAAAuzC,EAAAl6C,UAAA,QACAmF,IAAA,WACA,MAAApF,QAAA6M,KAAAzN,KAAAg7C,QAAA93C,UAcA+3C,EAAAp6C,UAAAwiB,IAAA,SAAA1X,GACA,MAAA3L,MAAAg7C,OAAA1sB,IAAA3iB,GAAA,IAEAsvC,EAAAp6C,UAAAg7B,IAAA,SAAAlwB,GACA,MAAA3L,MAAAg7C,OAAAnf,IAAAlwB,IAEAsvC,EAAAp6C,UAAAgR,QAAA,SAAAnH,GACA1K,KAAAg7C,OAAAnpC,QAAA,SAAAtP,EAAAoJ,GACAjB,EAAAiB,MAGA/K,OAAA4G,eAAAyzC,EAAAp6C,UAAA,QACAmF,IAAA,WACA,MAAAhG,MAAAg7C,OAAAtB,OAmBA,IAAA0f,IACArc,EAGA7B,MACAke,GAAAhe,IACA2B,GAAA5B,MAEAie,GAAAne,EACA8B,GAAAhC,EAOA,IAsIAmC,IAtIAd,GAAA,CAwIA,IAAAY,IACAE,IAAA,MAEA,KACAzuB,aAAAC,QAAA,+BACAwuB,KAAAzuB,aAAAI,QAAA,6BACG,MAAAxnB,GACH61C,IAAA,EAQA5yC,GAAAkzC,EAAAC,GAAA5V,cA+BA2V,EAAA38C,UAAAmW,YAAA,SAAAqmC,EAAAh9C,EAAAmpB,EAAAtW,GAOA,QAAA6lE,KAgBA,QAAAzxD,KACA0xD,GAAA,EAfA,GAAAh3E,EAAA07C,WAAAr9C,GAAA,CAGA,GAAA24E,EAEA,YADAA,EAAA,UAGAA,IAAA,CACA,IAAAjD,GAAA3pE,EAAA8G,GACA,0DACA,kDAQAsW,GAAA+H,QAAAwkD,GAAAh/D,GAAA,kBAAAtW,GACAA,EAAAirC,IAAAx4B,EAAA6tB,QAAA7tB,EAAAo+D,YACAp+D,EAAA6tB,MAAAtgC,EAAAirC,IACAx4B,EAAAiyC,SAAA1kD,MAEKsW,GAAA,sBACL,YAAAiiE,GACAlvE,GAAAivE,GAEAC,GAAA,IACKjiE,GAAA,QAAAuQ,IAnCL,IAAAtnB,KAAA09C,WAAAr9C,GAAA,CAGA,GAAA2B,GAAAhC,KACAg5E,GAAA,CAiCAh5E,MAAA09C,WAAAr9C,GAAA04E,EACA/4E,KAAA+W,GAAAsmC,EAAA07B,KAGAv7B,EAAA38C,UAAAqW,eAAA,SAAAmmC,EAAAh9C,GAEAA,IAAAL,MAAA09C,aAGAD,GAAA5V,aAAAhnC,UAAAqW,eAAA3W,KAAAP,KAAAq9C,EACAr9C,KAAA09C,WAAAr9C,UACAL,MAAA09C,WAAAr9C,KAKAm9C,EAAA38C,UAAAo4E,mBAAA,SAAA57B,GAGAL,IACAzW,OAAAjpB,QAAAkpB,MAAAlY,KAA8B+uB,WAC3BJ,MACHxuB,aAAA4uB,GAAA,MAAA5uB,aAAA4uB,GAAA,UAIAG,EAAA38C,UAAAmzD,OAAA,SAAA3W,GACAr9C,KAAAoX,KAAAimC,GACAr9C,KAAAi5E,mBAAA57B,GA6CA,IAAA7+B,GAGAA,IADA,kBAAA5d,QAAA4d,OACA5d,OAAA4d,OAIA,SAAAe,GAGA,OAFAmgB,GAAA9+B,OAAA2e,GAEAhN,EAAA,EAAyBA,EAAAtP,UAAAC,OAA0BqP,IAAA,CACnD,GAAA2mE,GAAAj2E,UAAAsP,EAEA,UAAA2mE,EACA,OAAAC,KAAAD,GAEAt4E,OAAAC,UAAAC,eAAAP,KAAA24E,EAAAC,KACAz5C,EAAAy5C,GAAAD,EAAAC,IAKA,MAAAz5C,GAKA,IAAA+mB,IAAAjoC,EAEAlU,IAAA4zC,EAAA13C,OAUA03C,EAAAr9C,UAAA+Y,SAAA,WACA,MAAAlU,MAAAC,WACAlB,OAAAzE,KAAAyE,OACAqE,KAAA9I,KAAA8I,KACAC,QAAA/I,KAAA+I,QACAL,OAAA1I,KAAA0I,SAIA,IAoIA7E,IAnIAu1E,IADA,GAAAl7B,GAAA,qDACA,GAAAA,GAAA,kDACA2Q,GAAA,GAAA3Q,GAAA,2BACA6P,GAAA,GAAA7P,GAAA,2CACAiB,GAAA,GAAAjB,GAAA,qDACAmB,GAAA,GAAAnB,GAAA,6CACAkB,GAAA,GAAAlB,GAAA,2EAEAI,IADA,GAAAJ,GAAA,+CACA,GAAAA,GAAA,8DACAwO,GAAA,GAAAxO,GAAA,+CAEAm7B,IADA,GAAAn7B,GAAA,6CACA,GAAAA,GAAA,4DACAsL,GAAA,GAAAtL,GAAA,oDACAQ,GAAA,GAAAR,GAAA,sDACAo7B,GAAA,GAAAp7B,GAAA,oDAEAyR,IADA,GAAAzR,GAAA,sCACA,GAAAA,GAAA,sCACAshB,GAAA,GAAAthB,GAAA,kCAGA0K,IAFA,GAAA1K,GAAA,uCACA,GAAAA,GAAA,wEACA,GAAAA,GAAA,yCAEAiW,IADA,GAAAjW,GAAA,iFACA,GAAAA,GAAA,mEA6GAq7B,IA5GA,GAAAr7B,GAAA,6CA4GAhnB,EAAApuB,KAMAjF,IADA01E,GACA,SAAAnwE,GACA,MAAAA,GAAAN,MAGA,SAAAM,GACA,MAAAA,GAAAwQ,WAAAwS,MAAA,gCA8DA,IAAA3e,KAAA,6DACA,qEACAqyC,GAAA,WACAC,GAAA,4BAIAJ,GAAA,mMA4GAS,GAAA,iEAGAhwC,MAAA,GA0fA9F,IAAA26C,GAAAxH,GAAA5V,cAiFAod,GAAApkD,UAAAwJ,OAAA,WACArK,KAAAolD,aAAA,EACAplD,KAAAwpB,GAAAixB,UAAAC,SACA16C,KAAAoX,KAAA,WA2BA6tC,GAAApkD,UAAAwkD,UAAA,SAAAnyC,GACA,GAAAlR,GAAAhC,KACAkK,EAAAgJ,EAAA07B,QAcA,IAZA17B,EAAA3I,EAAA2I,GACA,QAAAA,MAAA,cAAAA,MACAA,EAAAgmD,WAAAhmD,EAAA4wB,MAEA5wB,EAAAw7B,iBAEA,WAAAx7B,EAAA6tB,QACA7tB,EAAA6tB,MAAA,OAEA7tB,EAAA6tB,QACA7tB,EAAA6tB,MAAA,GAEA,QAAA7tB,EAAA6tB,MAUA,WATA/gC,MAAAwpB,GAAAya,OAAA5gC,KAAA,SAAA4gC,GAEA,MAAAjiC,GAAAojD,gBACAl7C,GAAA,MAAwBzF,OAAA,eAGxByO,EAAA6tB,MAAAkD,EAAAq3B,eACAt5D,GAAAqjD,UAAAnyC,KACKhJ,EASL,IAJAgJ,EAAAwR,OAAAxR,EAAAQ,SACAR,EAAAQ,OAAA,SAGAR,EAAAQ,QAAA,gBAAAR,GAAAQ,SACA,UAAAR,EAAAQ,OACAR,EAAAwR,KAAA86B,EAAAtsC,EAAAwR,MAEAxR,EAAAQ,OAAA8rC,EAAAtsC,EAAAQ,QAGA,SAAA1T,KAAAwpB,GAAAtE,SAAAhS,EAAAimD,SACA,MAAAn5D,MAAAw5E,cAAAtmE,EAIA,eAAAA,KACAA,EAAA8tB,YAAA,GAIA9tB,EAAA2tB,MAAA,IAAA3tB,EAAA2tB,MAAA,EAAA3tB,EAAA2tB,MACA3tB,EAAA07B,SAAA1kC,CACA,IAAAuvE,GAAAz5E,KAAAwpB,GAAAgyC,SAAAtoD,EAEA,IAAAumE,GAAA,kBAAAA,GAAApvE,OAAA,CACA,GAAAA,GAAArI,EAAAqI,MACArI,GAAAqI,OAAAf,GAAA,SAAAtI,GACAy4E,EAAApvE,SACAA,EAAAhJ,MAAArB,KAAAgB,OAKAikD,GAAApkD,UAAA24E,cAAA,SAAAtmE,GACA,GAAAlR,GAAAhC,KACAkK,EAAAgJ,EAAA07B,QACA,cAAA17B,EAAAQ,OAAA,CACA,IAAAR,EAAAwR,MAAA,gBAAAxR,GAAAwR,KAAA,CACA,GAAAte,GAAA+3C,EAAAO,GACA,gDACA,OAAAx0C,GAAA9D,GAGA,GAAAqe,GAAA86B,EAAArsC,EAAAwR,KACA1kB,MAAAwpB,GAAAxjB,IAAA,WAAAye,EAAA,YAAAre,EAAAoe,GAEA,GAAAxiB,EAAAojD,YACA,MAAAl7C,GAAA,MAA+BzF,OAAA,aAG/B,IAAA2B,EACA,MAAA8D,GAAAm0C,EAAAj4C,GAEA,IAAAskC,GAAAlmB,KAAAG,OAAAH,EAAAG,MAAAF,EAAA,KACAD,EAAAG,MAAAF,EAAA,IAAA/W,GACA,OAAAg9B,IAKAx3B,EAAAQ,OAAAqxC,GAAAra,OACA1oC,GAAAqjD,UAAAnyC,IALAhJ,EAAAi0C,EAAA0Q,GACArqC,EAAAG,MAAA,qBAAAF,EAAA,GACA,kCAKG,CAEH,GAAAi1D,GAAAn6B,EAAArsC,EAAAQ,OACA,KAAAgmE,EACA,MAAA13E,GAAAqjD,UAAAnyC,EAEAlT,MAAAwpB,GAAAxjB,IAAA,WAAA0zE,EAAA,YAAAtzE,EAAAoe,GAEA,GAAAxiB,EAAAojD,YACA,MAAAl7C,GAAA,MAA+BzF,OAAA,aAG/B,IAAA2B,EACA,MAAA8D,GAAAm0C,EAAAj4C,GAEA,IAAA4tE,GAAAxvD,KAAAid,SAAAjd,EAAAid,QAAAi4C,EAAA,GACA,OAAA1F,IAKA9gE,EAAAQ,OAAAmxC,GAAAmvB,OACAhyE,GAAAqjD,UAAAnyC,IALAhJ,EAAAi0C,EAAA0Q,GACArqC,KAAAid,QAAA,qBAAAi4C,EAAA,GACA,kCA2JApvE,GAAA28C,GAAAxJ,GAAA5V,cAMAof,GAAApmD,UAAA84E,KACAz/B,EAAA,gBAAAzuC,EAAAyH,EAAAhJ,GAKA,MAJA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAEA,gBAAAzH,IAAAnD,MAAAC,QAAAkD,GACAvB,EAAAi0C,EAAAm7B,SAEAt5E,MAAAmuC,UAAiB/d,MAAA3kB,IAAYyH,EAAAsyC,GAAAt7C,MAG7B+8C,GAAApmD,UAAA+pB,IAAAsvB,EAAA,eAAAzuC,EAAAyH,EAAAxI,GAKA,MAJA,kBAAAwI,KACAxI,EAAAwI,EACAA,MAEA,gBAAAzH,IAAAnD,MAAAC,QAAAkD,GACAf,EAAAyzC,EAAAm7B,MAEAp6B,EAAAzzC,EAAAmZ,KACA6/B,GAAAh5C,EAAAmZ,MAAA,kBAAA5kB,MAAA+7D,UACAtwD,EAAA+hC,SACAxtC,KAAAm8D,aAAA1wD,EAAAf,GAEA1K,KAAA+7D,UAAAtwD,EAAAf,QAGA,kBAAA1K,MAAA0sE,MAAAx5D,EAAA+7C,aAAA,EACAjvD,KAAA0sE,KAAAjhE,EAAAyH,EAAAxI,GAEA1K,KAAAmuC,UAAmB/d,MAAA3kB,IAAYyH,EAAAsyC,GAAA96C,QAI/Bu8C,GAAApmD,UAAA4rE,cACAvyB,EAAA,yBAAA3vB,EAAAygD,EAAAnlD,EACAilC,EAAA5lC,GAkBA,QAAA00D,GAAAnuE,GACA,GAAAouE,GAAA,QAAApuE,GAAA+M,SAAA/M,EAAAka,KAAA,KAOA,OANAla,GAAAuzC,aAAAvzC,EAAAuzC,iBACAvzC,EAAAuzC,aAAAgsB,IACAle,aAAA5nC,EACApf,KAAAglD,EACA2K,SAAAokB,GAEAvzB,EAAA17B,IAAAnf,GAzBA,GAAA66C,GAAAtmD,IA4BA,OA3BA,kBAAAklB,KACAA,EAAA4lC,EACAA,EAAAjlC,EACAA,EAAA,MAIA,mBAAAX,KACAA,EAAA4lC,EACAA,EAAAjlC,EACAA,EAAA,MAEAX,GACAy4B,EAAA,oBAAAqtB,EAAA,cAAAzgD,EAAA,2BAcA+7B,EAAAtgD,IAAAukB,GAAAlnB,KAAA,SAAAoI,GACA,GAAAA,EAAAka,OAAAE,EACA,KAAAs4B,GAAA4P,GAGA,OAAA6rB,GAAAnuE,IACG,SAAArF,GAGH,GAAAA,EAAAsC,SAAAmmD,GAAA9lD,QACA,MAAA6wE,IAA+Bh1D,IAAA2F,GAE/B,MAAAnkB,OAKA6gD,GAAApmD,UAAA2rE,iBACAtyB,EAAA,4BAAA3vB,EAAAygD,EAAAnlD,EACA3b,GACA,GAAAlI,GAAAhC,IACAgC,GAAAgE,IAAAukB,EAAA,SAAAnkB,EAAA5E,GAEA,MAAA4E,OACA8D,GAAA9D,GAGA5E,EAAAmkB,OAAAE,MACA3b,GAAAi0C,EAAA4P,KAIAvsD,EAAAw9C,oBAGAx9C,GAAAw9C,aAAAgsB,GACA,IAAApqE,OAAA6M,KAAAjM,EAAAw9C,cAAA97C,cACA1B,GAAAw9C,iBAEAh9C,GAAA4oB,IAAAppB,EAAA0I,IANAA,QAUA+8C,GAAApmD,UAAAurE,OACAlyB,EAAA,kBAAAmyB,EAAAC,EAAAp5D,EAAAhJ,GACA,GAAAuB,EACA,iBAAA6gE,IAEA7gE,GACAmZ,IAAAynD,EACA1mD,KAAA2mD,GAEA,kBAAAp5D,KACAhJ,EAAAgJ,EACAA,QAIAzH,EAAA4gE,EACA,kBAAAC,IACApiE,EAAAoiE,EACAp5D,OAEAhJ,EAAAgJ,EACAA,EAAAo5D,IAGAp5D,QACAA,EAAA4mE,YAAA,CACA,IAAArvD,IAAgB7F,IAAAnZ,EAAAmZ,IAAAe,KAAAla,EAAAka,MAAAzS,EAAA2S,IAEhB,OADA4E,GAAA+iB,UAAA,EACAiX,GAAAh6B,EAAA7F,MAAA,kBAAA5kB,MAAAm8D,aACAn8D,KAAAm8D,aAAA1wD,EAAAvB,OAEAlK,MAAAmuC,UAAiB/d,MAAA3F,IAAevX,EAAAsyC,GAAAt7C,MAGhC+8C,GAAApmD,UAAA4sE,SACAvzB,EAAA,oBAAAsE,EAAAtrC,EAAAhJ,GAcA,QAAA6vE,GAAA15E,EAAA25E,GACAhS,EAAAnsC,IAAAx7B,IACA2nE,EAAA15C,IAAAjuB,GAAuB2nE,aAEvBA,EAAAhiE,IAAA3F,GAAA2nE,QAAA3/D,KAAA2xE,GAGA,QAAAC,GAAA55E,EAAAugD,GAEA,GAAAs5B,GAAA17B,EAAAn+C,GAAAY,MAAA,EACA+/C,GAAAJ,EAAA,SAAAU,EAAAP,EAAAY,EAAAjqB,EACAxkB,GACA,GAAA2S,GAAAk7B,EAAA,IAAAY,EACAroC,EAAA4gE,EAAAj0E,QAAA4f,EACAvM,MAAA,IAIA4gE,EAAAptE,OAAAwM,EAAA,GAEA,cAAApG,EAAAzO,QACAs1E,EAAA15E,EAAAwlB,MAMAq0D,EAAAroE,QAAA,SAAAgU,GACAk0D,EAAA15E,EAAAwlB,KAzCA,kBAAA3S,KACAhJ,EAAAgJ,EACAA,KAEA,IAAAid,GAAAvvB,OAAA6M,KAAA+wC,EAEA,KAAAruB,EAAAjtB,OACA,MAAAgH,GAAA,QAGA,IAAAuE,GAAA,EACAu5D,EAAA,GAAAjrB,GAkCA5sB,GAAAziB,IAAA,SAAArN,GACAL,KAAA47D,iBAAAv7D,EAAA,SAAA+F,EAAAw6C,GACA,GAAAx6C,GAAA,MAAAA,EAAA3B,QAAA,YAAA2B,EAAA2C,QACAi/D,EAAA15C,IAAAjuB,GAAyB2nE,QAAAxpB,EAAAn+C,SAClB,IAAA+F,EAEP,MAAA8D,GAAA9D,EAEA6zE,GAAA55E,EAAAugD,GAGA,KAAAnyC,IAAA0hB,EAAAjtB,OAAA,CAEA,GAAAi3E,KAIA,OAHAnS,GAAAn2D,QAAA,SAAAtP,EAAAoJ,GACAwuE,EAAAxuE,GAAApJ,IAEA2H,EAAA,KAAAiwE,OAGGn6E,QAUHinD,GAAApmD,UAAA46C,QACAvB,EAAA,mBAAAhnC,EAAAhJ,GACAuxC,EAAAz7C,KAAAkT,EAAAhJ,KAMA+8C,GAAApmD,UAAAu5E,gBACAlgC,EAAA,2BAAA3vB,EAAAwU,EAAA70B,GACA,GAAAlI,GAAAhC,IACAA,MAAA47D,iBAAArxC,EAAA,SAAAnkB,EAAAi0E,GAEA,GAAAj0E,EACA,MAAA8D,GAAA9D,EAEA,IAAA6/C,GAAAD,GAAAq0B,GACAC,KACAr5B,IACArgD,QAAA6M,KAAAw4C,GAAAp0C,QAAA,SAAAgU,GACAogC,EAAApgC,GAAAkZ,GACAu7C,EAAAjyE,KAAAwd,KAIAm7B,EAAAq5B,EAAA,SAAA/4B,EAAAP,EAAAY,EAAAjqB,EAAAxkB,GACA,GAAA2S,GAAAk7B,EAAA,IAAAY,CACA,eAAAzuC,EAAAzO,QAAA61E,EAAAr0E,QAAA4f,MAAA,GACAo7B,EAAA54C,KAAAwd,KAGA7jB,EAAA65D,cAAAtxC,EAAA02B,EAAA/2C,OAMA+8C,GAAApmD,UAAAuqE,QACAlxB,EAAA,mBAAAhnC,EAAAhJ,GACA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,KAGA,IAAAlR,GAAAhC,IACAkT,SAEAlR,EAAA4kD,iBAAA5kD,EAAA4kD,qBACA5kD,EAAA4kD,iBAAAv+C,MAA8B6K,OAAAhJ,aAC9B,IAAAlI,EAAA4kD,iBAAA1jD,QACAyjD,GAAA3kD,KAGAilD,GAAApmD,UAAAimD,SAAA,SAAA5zC,EAAAhJ,GAQA,QAAAi7C,GAAAtyC,GACA0nE,EAAAlyE,KAAArG,EAAAo4E,gBAAAvnE,EAAAxS,GAAA,IAEA,QAAA6jC,GAAA5gC,GACA,GAAAi1D,GAAAj1D,EAAAujD,QACA5M,IAAA71C,IAAAm2E,GAAAl3E,KAAA,WACA,MAAAkmB,GAAAvnB,EAAA,6BAAAyJ,GACA,QAAAA,EAAAo7C,UAAAp7C,EAAAo7C,SAAA0R,KACA9sD,EAAAo7C,SAAA0R,EACA9sD,OAIKpI,KAAA,WACL6G,EAAA,MAAsBrE,IAAA,MACjBiJ,MAAA5E,GAtBL,GAAAlI,GAAAhC,KACA+1E,GACA1c,aAAA,EACAxS,SAAA3zC,EAAA2zC,UAAA,GAEA0zB,IAmBAv4E,GAAAuvB,QAAAwkD,GACAh/D,GAAA,SAAAouC,GACApuC,GAAA,WAAAmtB,GACAntB,GAAA,QAAA7M,IAKA+8C,GAAApmD,UAAAmF,IAAAk0C,EAAA,eAAA75C,EAAA6S,EAAAxI,GAaA,QAAA8vE,KACA,GAAApwE,MACAqE,EAAA4yC,EAAAn+C,MAEA,OAAAuL,OAKA4yC,GAAAxvC,QAAA,SAAA4vC,GACAz/C,EAAAgE,IAAA3F,GACAwlB,IAAA47B,EACAR,KAAA/tC,EAAA+tC,KACAyD,OAAAxxC,EAAAwxC,OACAlU,YAAAt9B,EAAAs9B,aACO,SAAApqC,EAAAqF,GACP,GAAArF,EAaAgE,EAAA/B,MAAuB2/D,QAAAvmB,QAbvB,CAGA,OADAg5B,GACA95E,EAAA,EAAAqN,EAAA5D,EAAAlH,OAA4CvC,EAAAqN,EAAOrN,IACnD,GAAAyJ,EAAAzJ,GAAAkF,IAAAuE,EAAAzJ,GAAAkF,GAAA8f,OAAAla,EAAAka,KAAA,CACA80D,GAAA,CACA,OAGAA,GACArwE,EAAA/B,MAAyBxC,GAAA4F,IAKzBgD,IACAA,GACA/D,EAAA,KAAAN,OA5BAM,EAAA,KAAAN,GAbA,GAJA,kBAAA8I,KACAxI,EAAAwI,EACAA,MAEA,gBAAA7S,GACA,MAAAqK,GAAAyzC,EAAAgB,IAEA,IAAAsF,GAAApkD,IAAA,kBAAAL,MAAA87D,UACA,MAAA97D,MAAA87D,UAAAz7D,EAAAqK,EAEA,IAAA22C,MAAAr/C,EAAAhC,IAyCA,KAAAkT,EAAAypC,UA6BA,MAAA38C,MAAA86D,KAAAz6D,EAAA6S,EAAA,SAAA9M,EAAAgE,GACA,GAAAhE,EACA,MAAAsE,GAAAtE,EAGA,IAAAqF,GAAArB,EAAAqB,IACA60C,EAAAl2C,EAAAk2C,SACA5oB,EAAAttB,EAAAstB,GAEA,IAAAxkB,EAAA67B,UAAA,CACA,GAAAA,GAAAwS,EAAAjB,EACAvR,GAAA7rC,SACAuI,EAAA85C,WAAAxW,GAQA,GAJAyV,GAAAlE,EAAA70C,EAAAka,QACAla,EAAA+hC,UAAA,GAGAt6B,EAAA+tC,MAAA/tC,EAAAi5D,UAAA,CAQA,OAPAuO,GAAAjvE,EAAAka,KAAAvV,MAAA,KACAuqE,EAAAniE,SAAAkiE,EAAA,OACA/4B,EAAA+4B,EAAA,GAEAnkD,EAAAqrB,EAAAtB,EAAAM,UACA79C,EAAA,KAEApC,EAAA,EAAqBA,EAAA41B,EAAArzB,OAAkBvC,IAAA,CACvC,GAAAi6E,GAAArkD,EAAA51B,GACAk6E,EAAAD,EAAAzqD,IAAAziB,IAAA,SAAA2L,GAA0D,MAAAA,GAAAhZ,KAC1D4F,QAAA07C,GACAm5B,EAAAD,IAAAF,EAAA,GAEAG,IAAA/3E,GAAA83E,KAAA,KACA93E,EAAA63E,GAIA,GAAAG,GAAAh4E,EAAAotB,IAAAziB,IAAA,SAAA2L,GAAkD,MAAAA,GAAAhZ,KAClD4F,QAAAwF,EAAAka,KAAAvV,MAAA,WACA4qE,EAAAj4E,EAAAotB,IAAAjtB,OAAA63E,CAYA,IAXAh4E,EAAAotB,IAAArjB,OAAAiuE,EAAAC,GACAj4E,EAAAotB,IAAAqjB,UAEAtgC,EAAA+tC,OACAx1C,EAAAq6C,YACA1nB,MAAAr7B,EAAAg+C,IAAAh+C,EAAAotB,IAAAjtB,OAAA,EACAitB,IAAAptB,EAAAotB,IAAAziB,IAAA,SAAAmY,GACA,MAAAA,GAAAxlB,OAIA6S,EAAAi5D,UAAA,CACA,GAAAprB,GAAAh+C,EAAAg+C,IAAAh+C,EAAAotB,IAAAjtB,MACAuI,GAAAwvE,WAAAl4E,EAAAotB,IAAAziB,IAAA,SAAAmY,GAEA,MADAk7B,MAEAl7B,IAAAk7B,EAAA,IAAAl7B,EAAAxlB,GACAoE,OAAAohB,EAAA3S,KAAAzO,WAMA,GAAAyO,EAAAs9B,aAAA/kC,EAAAuzC,aAAA,CACA,GAAAxO,GAAA/kC,EAAAuzC,aACAvwC,EAAA7N,OAAA6M,KAAA+iC,GAAAttC,MACA,QAAAuL,EACA,MAAA/D,GAAA,KAAAe,EAEA7K,QAAA6M,KAAA+iC,GAAA3+B,QAAA,SAAAlG,GACA3L,KAAA+6D,eAAAtvD,EAAAmZ,IAAAjZ,EAAA6kC,EAAA7kC,IAIAka,IAAApa,EAAAka,KACA8qB,OAAAv9B,EAAAu9B,OACA/Y,OACS,SAAAtxB,EAAAN,GACT,GAAAi5C,GAAAtzC,EAAAuzC,aAAArzC,EACAozC,GAAAj5C,aACAi5C,GAAAE,WACAF,GAAA77C,SACAuL,GACA/D,EAAA,KAAAe,MAGOzJ,OACF,CACL,GAAAyJ,EAAAuzC,aACA,OAAArzC,KAAAF,GAAAuzC,aAEAvzC,EAAAuzC,aAAAl+C,eAAA6K,KACAF,EAAAuzC,aAAArzC,GAAAszC,MAAA,EAIAv0C,GAAA,KAAAe,KA9HA,YAAAyH,EAAAypC,UACA38C,KAAA47D,iBAAAv7D,EAAA,SAAA+F,EAAAw6C,GACA,MAAAx6C,GACAsE,EAAAtE,IAEAi7C,EAAAD,EAAAR,GAAAlzC,IAAA,SAAA+zC,GACA,MAAAA,GAAA57B,UAEA20D,YAEK,CACL,IAAAlyE,MAAAC,QAAA2K,EAAAypC,WAWA,MAAAjyC,GAAAyzC,EAAAG,GAAA,mBAVA+C,GAAAnuC,EAAAypC,SACA,QAAAh8C,GAAA,EAAuBA,EAAA0gD,EAAAn+C,OAAmBvC,IAAA,CAC1C,GAAAqN,GAAAqzC,EAAA1gD,EAEA,iCAAAwoB,KAAAnb,GACA,MAAAtD,GAAAyzC,EAAAyK,KAGA4xB,OAkHAvzB,GAAApmD,UAAA0rE,cACAryB,EAAA,yBAAA3vB,EAAAygD,EAAA93D,EAAAhJ,GACA,GAAAlI,GAAAhC,IACAkT,aAAAgzB,YACAh8B,EAAAgJ,EACAA,MAEAlT,KAAA86D,KAAAvwC,EAAArX,EAAA,SAAA9M,EAAAvC,GACA,MAAAuC,GACA8D,EAAA9D,GAEAvC,EAAA4H,IAAAuzC,cAAAn7C,EAAA4H,IAAAuzC,aAAAgsB,IACA93D,EAAAwkB,IAAA7zB,EAAA6zB,IACAxkB,EAAAu9B,QAAA,EACAzuC,EAAA+4D,eAAAxwC,EAAAygD,EACAnnE,EAAA4H,IAAAuzC,aAAAgsB,GAAA93D,EAAAhJ,GAHAgJ,QAKAhJ,EAAAi0C,EAAA0Q,SAKA5H,GAAApmD,UAAA8oB,QACAuwB,EAAA,mBAAAhnC,EAAAhJ,GAYA,GAXA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAEAA,EAAA4tB,KAAA,mBAAA5tB,GAAA4tB,KAAA5tB,EAAA4tB,KAAA,EACA5tB,EAAAy5D,YACAz5D,EAAAE,SAAAF,EAAAy5D,WAEAz5D,EAAA05D,UACA15D,EAAAG,OAAAH,EAAA05D,SAEA,QAAA15D,GAAA,CACA,IAAA5K,MAAAC,QAAA2K,EAAAzF,MACA,MAAAvD,GAAA,GAAApI,WAAA,iCAEA,IAAAo5E,IACA,2BAAAxnE,OAAA,SAAAwnE,GACA,MAAAA,KAAAhoE,KACK,EACL,IAAAgoE,EAKA,WAJAhxE,GAAAi0C,EAAAk7B,GACA,oBAAA6B,EACA,sCAIA,aAAAl7E,KAAAklB,OACA,MAAAmhC,IAAArmD,KAAAkT,EAAAhJ,GAIA,MAAAlK,MAAAumD,SAAArzC,EAAAhJ,KAGA+8C,GAAApmD,UAAA0wB,QAAA,SAAAre,EAAAhJ,GAKA,MAJA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAEA,GAAA+xC,IAAAjlD,KAAAkT,EAAAhJ,IAGA+8C,GAAApmD,UAAA66D,MAAAxhB,EAAA,iBAAAhwC,GAGA,MAFAlK,MAAAu6C,SAAA,EACAv6C,KAAAoX,KAAA,UACApX,KAAAy7D,OAAAvxD,KAGA+8C,GAAApmD,UAAAojC,KAAAiW,EAAA,gBAAAhwC,GACA,GAAAlI,GAAAhC,IACAA,MAAAm7D,MAAA,SAAA/0D,EAAA69B,GACA,MAAA79B,GACA8D,EAAA9D,IAGA69B,EAAAoH,QAAApH,EAAAoH,SAAArpC,EAAA8G,KACAm7B,EAAAsH,mBAAAvpC,EAAAupC,iBAAA,SAAAvpC,EAAAkjB,QACA+e,EAAAuH,QAAAxpC,EAAAkjB,WACAhb,GAAA,KAAA+5B,QAIAgjB,GAAApmD,UAAAR,GAAA65C,EAAA,cAAAhwC,GACA,MAAAlK,MAAA4kB,IAAA1a,KAIA+8C,GAAApmD,UAAAqkB,KAAA,WACA,wBAAAllB,MAAA0lB,MAAA1lB,KAAA0lB,QAAA1lB,KAAAwrC,SAGAyb,GAAApmD,UAAAstC,SACA+L,EAAA,oBAAAsE,EAAAtrC,EAAAhJ,GAcA,GAbA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAGAA,QAEA5K,MAAAC,QAAAi2C,KACAA,GACApuB,KAAAouB,KAIAA,MAAApuB,OAAA9nB,MAAAC,QAAAi2C,EAAApuB,MACA,MAAAlmB,GAAAi0C,EAAAi7B,IAGA,QAAAz4E,GAAA,EAAiBA,EAAA69C,EAAApuB,KAAAltB,SAAqBvC,EACtC,mBAAA69C,GAAApuB,KAAAzvB,IAAA2H,MAAAC,QAAAi2C,EAAApuB,KAAAzvB,IACA,MAAAuJ,GAAAi0C,EAAAm7B,IAIA,IAAA6B,EAYA,IAXA38B,EAAApuB,KAAAve,QAAA,SAAApG,GACAA,EAAAuzC,cACAp+C,OAAA6M,KAAAhC,EAAAuzC,cAAAntC,QAAA,SAAA/I,GACAqyE,KAAAn0B,GAAAl+C,GACA2C,EAAAuzC,aAAAl2C,GAAAgkD,cACAnP,EAAA,oBAAA70C,EAAA,cAAA2C,EAAAmZ,IAAA,+BAMAu2D,EACA,MAAAjxE,GAAAi0C,EAAAO,GAAAy8B,GAGA,cAAAjoE,KACA,aAAAsrC,GACAtrC,EAAA+7C,UAAAzQ,EAAAyQ,UAEA/7C,EAAA+7C,WAAA,EAIA,IAAAzjB,GAAAxrC,IACAkT,GAAA+7C,WAAA,SAAAzjB,EAAAtmB,QAGAs5B,EAAApuB,KAAAzf,KAAAg1C,IAGAF,GAAAjH,EAAApuB,KAKA,IAAAD,GAAAquB,EAAApuB,KAAA1iB,IAAA,SAAAjC,GACA,MAAAA,GAAAmZ,KAGA,OAAA5kB,MAAA46D,UAAApc,EAAAtrC,EAAA,SAAA9M,EAAAvC,GACA,GAAAuC,EACA,MAAA8D,GAAA9D,EASA,IAPA8M,EAAA+7C,YAEAprD,IAAA6P,OAAA,SAAA2F,GACA,MAAAA,GAAAhT,SAIA,SAAAmlC,EAAAtmB,OACA,OAAAvkB,GAAA,EAAAqN,EAAAnK,EAAAX,OAAqCvC,EAAAqN,EAAOrN,IAC5CkD,EAAAlD,GAAAN,GAAAwD,EAAAlD,GAAAN,IAAA8vB,EAAAxvB,EAIAuJ,GAAA,KAAArG,OAIAojD,GAAApmD,UAAAyqC,0BACA4O,EAAA,qCAAAkhC,EACAlxE,GAGA,QAAAuf,GAAAhe,GAEA,MADAA,GAAA4vE,aAAA5vE,EAAA4vE,kBACA5vE,EAAA4vE,aAAAD,KAGA3vE,EAAA4vE,aAAAD,IAAA,EACA3vE,GARA,GAAA6vE,GAAA,GAAAt7E,MAAAsC,YAAA84E,EAAAp7E,KAAAyxC,OAUAloB,GAAAvpB,KAAA,6BAAAypB,GACApmB,KAAA,WACA6G,EAAA,MAAsBsf,GAAA8xD,MACjBxsE,MAAA5E,KAGL+8C,GAAApmD,UAAAgtB,QACAqsB,EAAA,mBAAAhnC,EAAAhJ,GAUA,QAAAqxE,KAEAv5E,EAAAo6D,SAAAlpD,EAAA,SAAA9M,EAAA9C,GACA,MAAA8C,GACA8D,EAAA9D,IAEApE,EAAAw4C,YAAA,EACAx4C,EAAAoV,KAAA,iBACAlN,GAAA,KAAA5G,IAA8BuC,IAAA,OAhB9B,kBAAAqN,KACAhJ,EAAAgJ,EACAA,KAGA,IAAAlR,GAAAhC,KACAwnD,IAAA,cAAAxlD,OAAAylD,UAcA,gBAAAzlD,EAAAkjB,OAEAq2D,QAGAv5E,GAAAgE,IAAA,sCAAAI,EAAAqqE,GACA,GAAArqE,EAEA,aAAAA,EAAA3B,OACAyF,EAAA9D,GAEAm1E,GAGA,IAAAF,GAAA5K,EAAA4K,aACAtwD,EAAA/oB,EAAAM,YACAk5E,EAAA56E,OAAA6M,KAAA4tE,GAAA3tE,IAAA,SAAA5E;AAGA,GAAA2yE,GAAAj0B,EACA1+C,EAAA7B,QAAA,GAAAy+B,QAAA,IAAA3a,EAAAyD,QAAA,IAAA1lB,CACA,WAAAiiB,GAAA0wD,EAAAz5E,EAAAyvC,QAAA5jB,WAEAosB,IAAA71C,IAAAo3E,GAAAn4E,KAAAk4E,EAAArxE,OAUAg9C,GAAArmD,UAAA66E,QAAA,WACA,GAAAtyE,EACA,IAAApJ,KAAA46C,OACA,KAAAxxC,EAAApJ,KAAAkW,MAAA6wC,SACA39C,EAAApJ,KAAA46C,YAGA,MAAAxxC,EAAApJ,KAAAkW,MAAA6wC,SACA39C,KAKA89C,GAAArmD,UAAAunD,KAAA,SAAAhiD,GACApG,KAAA46C,OAAAx0C,EACApG,KAAA07E,WAGAx0B,GAAArmD,UAAAwnD,MAAA,SAAA7+B,GACAxpB,KAAA06C,SAAA,EACA16C,KAAAwpB,KACAxpB,KAAA07E,WAGAx0B,GAAArmD,UAAA85C,QAAA,SAAAvxC,GACApJ,KAAAkW,MAAA7N,KAAAe,GACApJ,KAAA46C,QACA56C,KAAA07E,WAuFApxE,GAAA+8C,GAAAJ,IA2DAI,GAAAjhB,SAEAihB,GAAAD,YACAC,GAAAC,qBAEAD,GAAA74B,OAAA,SAEA,IAAAg6B,IAAA,GAAA/K,IAAA5V,YAoBAygB,IAAAjB,IAEAA,GAAA7b,QAAA,SAAAnrC,EAAAmB,EAAAm6E,GAEAn6E,EAAA2mD,UACAd,GAAAD,SAAA/mD,GAAAmB,EACAm6E,GACAt0B,GAAAC,kBAAAj/C,KAAAhI,KAKAgnD,GAAAr8B,OAAA,SAAAxpB,GACA,qBAAAA,GACAA,EAAA6lD,QACG,oBAAA7lD,IAAA,IAAAZ,OAAA6M,KAAAjM,GAAA0B,OACH,SAAAsD,OAAA,wBAAAhF,EAAA,sCAEAZ,QAAA6M,KAAAjM,GAAAqQ,QAAA,SAAAxR,GACAgnD,GAAAxmD,UAAAR,GAAAmB,EAAAnB,KAGA,MAAAgnD,KAGAA,GAAAu0B,SAAA,SAAAC,GACA,QAAAC,GAAAhzE,EAAAoK,GACA,MAAAlT,gBAAA87E,IAIA5oE,QAEApK,GAAA,gBAAAA,KACAoK,EAAApK,EACAA,EAAAoK,EAAApK,WACAoK,GAAApK,MAGAoK,EAAAuzC,MAAsBq1B,EAAAC,WAAA7oE,OACtBm0C,IAAA9mD,KAAAP,KAAA8I,EAAAoK,IAZA,GAAA4oE,GAAAhzE,EAAAoK,GA4BA,MAbA5I,IAAAwxE,EAAAz0B,IAEAy0B,EAAAx0B,kBAAAD,GAAAC,kBAAArmD,QACAL,OAAA6M,KAAA45C,IAAAx1C,QAAA,SAAAlG,GACAA,IAAAmwE,KACAA,EAAAnwE,GAAA07C,GAAA17C,MAMAmwE,EAAAC,WAAAt1B,MAAmCzmD,KAAA+7E,WAAAF,GAEnCC,EAIA,IAAAjlE,IAAA,OAEAwwC,IAAAxwC,UASA,IAuvDA0mD,IAvvDAhU,GAAAb,IACA,MACA,OACA,eACA,WACA,aACA,aACA,aACA,qBACA,aACA,YAEA,kBACA,qBACA,0BACA,4BACA,qBAEA,aAIAe,GAAAf,IACA,eAEA,kBACA,qBACA,0BACA,4BACA,uBA6GAgC,GAAA,SAAA3yC,GACA,MAAAikE,MAAAjkE,IAGA0zC,GAAA,SAAA1zC,GACA,MAAAkH,MAAAlH,IAoHAk0C,GAAAjrC,EAAAa,cAAAb,EAAAxS,WACA+9C,GAAA,MAwVAqQ,GAAA,EAKArK,GAAA,iBAGAhB,GAAA,cAEAb,GAAA,eAGAc,GAAA,mBAIAiB,GAAA,aAEAD,GAAA,cAEAsF,GAAA,sBA0OA/D,GAAA,GAAAvW,GA2rBA2a,IAAA,EACAjiD,MA+NAylD,GAAA,GAAA5e,IAEAuf,GAAA,GAAAvf,GAyuBAwc,IAAApR,MAAA,WAIA,GAAAmgB,GAAA,mBAAA7C,eACA,4BAAAt8C,KAAAjb,UAAAu3B,aACA,SAAAtc,KAAAjb,UAAAu3B,aACA,aAAAtc,KAAAjb,UAAA+tE,SAIA,QAAA3T,GAAA,mBAAA/L,YACA,mBAAApL,aAcA,IAAA+qB,IAAA,SAAAnxD,GACAA,EAAAygB,QAAA,MAAA+tB,IAAA,IAuEAkK,GAAA,EAIAnD,GAAAtC,GAAA,kBAGAmB,GAAAnB,GAAA,eAEAkB,GAAAlB,GAAA,gBACA2D,GAAA3D,GAAA,eACAqF,GAAArF,GAAA,kBAGAc,GAAAd,GAAA,oBAydAiD,GAAA,GAAAlkB,IA4BA6iB,GAAA,GAAApiB,GAqCA6mB,GAAA,EAGA5C,GACA,sDACAtC,GAAA,kBACA8C,GACA,4DACA9C,GAAA,iBACAqC,GACA,sDACAlB,GAAA,gBACAsC,GACA,sDACA9D,GAAA,SACA6D,GACA,gEACA7D,GAAA,iBAEAuD,GAAAlD,GACA,UAAAmB,GAAA,cAEA8B,GAAAjD,GAAA,gBACAA,GAAA,wBACAA,GAAA,kBACAA,GAAA,gBACAmB,GAAA,mBAggCAyF,IAAA5d,SAEA4d,GAAAte,YAAA,CAEA,IAAA00B,IAAA,SAAApxD,GACAA,EAAAygB,QAAA,SAAAu6B,IAAA,IAuPA8B,GAAAF,KAWAM,GAAA,aA8KAj5B,GAAA,GACA48B,GAAA,GAEAE,MAEAxB,GAAAlkC,GAAA,eA87BA6jC,IAAA9hB,MAAA,WACA,SAGA,IAAAi0B,IAAA,SAAArxD,GACAA,EAAAygB,QAAA,OAAAy+B,IAAA,GACAl/C,EAAAygB,QAAA,QAAAy+B,IAAA,IAkBAxxD,IAAA,IACAH,GAAA,EACAuB,GAAA,EA4WA6zD,IAAA7sE,UAAAwiB,IAAA,SAAAF,GAMA,MALAnjB,MAAA+J,QAAA/J,KAAA+J,QAAA+E,MAAA,cAEGzL,KAAA,WACH,MAAA8f,OAEAnjB,KAAA+J,SAEA2jE,GAAA7sE,UAAAguC,OAAA,WACA,MAAA7uC,MAAA+J,SA0FAO,GAAAqhC,GAAAnlC,OAYA8D,GAAAshC,GAAAplC,OAYA8D,GAAAujE,GAAArnE,MAuCA,IAAA0nE,IAAAvwB,EAAAlW,KAAA,YACAl/B,GAAAD,MAAAC,QACAiS,GAAA9U,KAAAopB,MAqFAuf,MACAuD,GAAA,GAAA87B,IACAoC,GAAA,GA8FAK,IACAkM,KAAA,SAAA5uE,EAAAsa,GACA,MAAAgmD,IAAAhmD,IAGAu0D,OAAA,SAAA7uE,EAAAsa,GACA,MAAAA,GAAA7kB,QAGAq5E,OAAA,SAAA9uE,EAAAsa,GAGA,QAAAy0D,GAAAz0D,GAEA,OADA00D,GAAA,EACA97E,EAAA,EAAA6I,EAAAue,EAAA7kB,OAA0CvC,EAAA6I,EAAS7I,IAAA,CACnD,GAAAqX,GAAA+P,EAAApnB,EACA87E,IAAAzkE,IAEA,MAAAykE,GAEA,OACA1O,OAAAhmD,GACAtb,IAAAD,KAAAC,IAAApL,MAAA,KAAA0mB,GACA9a,IAAAT,KAAAS,IAAA5L,MAAA,KAAA0mB,GACAtZ,MAAAsZ,EAAA7kB,OACAs5E,SAAAz0D,MA2pBAiqB,GAAAvnC,GAAA,WACA,GAAA+e,GAAAxpB,IACA,gBAAAwpB,EAAAtE,OACAorD,GAAA9mD,GAGA,kBAAAA,GAAAmmD,aACAD,GAAAlmD,GAEAunB,GAAAvnB,KA0EA/Z,GAAA,SAAArG,EAAA8J,EAAAhJ,GACA,kBAAAgJ,KACAhJ,EAAAgJ,EACAA,MAEAA,IAAA+7D,GAAA/7D,MAEA,kBAAA9J,KACAA,GAAWsE,IAAAtE,GAGX,IAAAogB,GAAAxpB,KACA+J,EAAAkwC,GAAA1rC,UAAAlL,KAAA,WACA,MAAAquC,IAAAloB,EAAApgB,EAAA8J,IAGA,OADAvI,IAAAZ,EAAAG,GACAH,GAIA2yE,IACAjtE,SACAuiC,gBAyLAogC,GAAA,EACAD,GAAA,UAQAE,GAAA,EACAY,GAAA,CAoEAX,IAAAzxE,UAAAs0E,gBAAA,SAAApD,EAAAC,GACA,GAAAhwE,GAAAhC,IACA,OAAAA,MAAA28E,aAAA5K,EAAAC,GAAA3uE,KAAA,WACA,MAAArB,GAAA46E,aAAA7K,EAAAC,MAIAM,GAAAzxE,UAAA87E,aAAA,SAAA5K,EAAAC,GACA,MAAAF,IAAA9xE,KAAAuf,OAAAvf,KAAAK,GAAA0xE,EACAC,EAAAhyE,KAAAknB,cAGAorD,GAAAzxE,UAAA+7E,aAAA,SAAA7K,EAAAC,GACA,GAAAhwE,GAAAhC,IACA,OAAAA,MAAA68E,eACA5iC,GAAA1rC,SAAA,GAEAujE,GAAA9xE,KAAA6oB,IAAA7oB,KAAAK,GAAA0xE,EACAC,EAAAhyE,KAAAknB,aACApY,MAAA,SAAA1I,GACA,GAAAktE,GAAAltE,GAEA,MADApE,GAAA66E,gBAAA,GACA,CAEA,MAAAz2E,KAIA,IAAA02E,KACA35E,UAAA,SAAA45E,EAAAC,GAEA,WAAAhqE,GAAA+pE,EAAAl2B,SAAAm2B,EAAAn2B,UACAm2B,EAAAn2B,SAGA,GAEAo2B,EAAA,SAAAF,EAAAC,GAEA,MAAAzK,IAAAyK,EAAAD,GAAAl2B,UAIAyrB,IAAAzxE,UAAA81E,cAAA,WACA,GAAA30E,GAAAhC,IACA,OAAAgC,GAAAud,OAAAvZ,IAAAhE,EAAA3B,IAAAgD,KAAA,SAAA05E,GACA,MAAA/6E,GAAA66E,eACA5iC,GAAA1rC,QAAAwuE,EAAAl2B,UAGA7kD,EAAA6mB,IAAA7iB,IAAAhE,EAAA3B,IAAAgD,KAAA,SAAA25E,GAIA,GAAAD,EAAAlmE,UAAAmmE,EAAAnmE,QACA,MAAAo8D,GAGA,IAAAp8D,EAOA,OALAA,GADAkmE,EAAAlmE,QACAkmE,EAAAlmE,QAAA+C,WAEA,YAGA/C,IAAAimE,IACAA,GAAAjmE,GAAAkmE,EAAAC,GAGA/J,IACK,SAAA7sE,GACL,SAAAA,EAAA3B,QAAAs4E,EAAAl2B,SACA,MAAA7kD,GAAA6mB,IAAA+B,KACAhG,IAAA5iB,EAAA3B,GACAwmD,SAAAosB,KACS5vE,KAAA,WACT,MAAA4vE,KACS,SAAA7sE,GACT,MAAAktE,IAAAltE,IACApE,EAAA66E,gBAAA,EACAE,EAAAl2B,UAGAosB,IAGA,MAAA7sE,OAEG0I,MAAA,SAAA1I,GACH,SAAAA,EAAA3B,OACA,KAAA2B,EAEA,OAAA6sE,MAwEA,IAAAU,IAAA,CAwgBArpE,IAAAwsE,GAAAr5B,GAAA5V,cAqBAivC,GAAAj2E,UAAAwJ,OAAA,WACArK,KAAAsxE,WAAA,EACAtxE,KAAAsc,MAAA,YACAtc,KAAAoX,KAAA,WAGA0/D,GAAAj2E,UAAAwnD,MAAA,SAAAx/B,EAAAtJ,GAOA,QAAA2lC,KACAljD,EAAAqI,SAIA,QAAAynC,KACAjpB,EAAA3R,eAAA,YAAAguC,GACA3lC,EAAArI,eAAA,YAAAguC,GAbA,GAAAljD,GAAAhC,IACAgC,GAAAk7E,eAGAl7E,EAAAk7E,cAAA,EAKAr0D,EAAA1f,KAAA,YAAA+7C,GACA3lC,EAAApW,KAAA,YAAA+7C,GAKAljD,EAAAmH,KAAA,WAAA2oC,KAwCAxnC,GAAAgtE,GAAA75B,GAAA5V,cAyMAyvC,GAAAz2E,UAAAwJ,OAAA,WACArK,KAAAu4E,WACAv4E,KAAAu4E,UAAA,EACAv4E,KAAAqI,KAAAgC,SACArK,KAAA04E,KAAAruE,WA2BAg9C,GAAAr8B,OAAAkxD,IACAlxD,OAAAmxD,IACAnxD,OAAAoxD,IACApxD,OAAA0xD,IACA1xD,OAAAsY,IAMAzjC,EAAAD,QAAAynD,KzDyoT8B9mD,KAAKX,EAAU,WAAa,MAAOI,WAI3D,SAASH,EAAQD,EAASM,I0DltpBhC,SAAAP,GAGAE,EAAAD,QAAAD,KAgBC,SAAAwD,GAED,YA0BA,SAAAsoB,GAAApS,EAAA/D,GACA,GAAAnU,GAAAkY,EAAA,GACAjY,EAAAiY,EAAA,GACA5Y,EAAA4Y,EAAA,GACAgS,EAAAhS,EAAA,EAEAlY,KAAAC,EAAAX,GAAAW,EAAAiqB,GAAA/V,EAAA,eACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAC,GAAAD,EAAAV,GAAA6U,EAAA,eACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAlqB,GAAAkqB,EAAAjqB,GAAAkU,EAAA,eACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAA4qB,GAAA5qB,EAAAU,GAAAmU,EAAA,gBACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EACAU,IAAAC,EAAAX,GAAAW,EAAAiqB,GAAA/V,EAAA,eACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAC,GAAAD,EAAAV,GAAA6U,EAAA,gBACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAlqB,GAAAkqB,EAAAjqB,GAAAkU,EAAA,gBACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAA4qB,GAAA5qB,EAAAU,GAAAmU,EAAA,cACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EACAU,IAAAC,EAAAX,GAAAW,EAAAiqB,GAAA/V,EAAA,gBACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAC,GAAAD,EAAAV,GAAA6U,EAAA,gBACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAlqB,GAAAkqB,EAAAjqB,GAAAkU,EAAA,YACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAA4qB,GAAA5qB,EAAAU,GAAAmU,EAAA,iBACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EACAU,IAAAC,EAAAX,GAAAW,EAAAiqB,GAAA/V,EAAA,iBACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAC,GAAAD,EAAAV,GAAA6U,EAAA,eACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAlqB,GAAAkqB,EAAAjqB,GAAAkU,EAAA,iBACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAA4qB,GAAA5qB,EAAAU,GAAAmU,EAAA,iBACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EAEAU,IAAAC,EAAAiqB,EAAA5qB,GAAA4qB,GAAA/V,EAAA,eACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAV,EAAAW,GAAAX,GAAA6U,EAAA,gBACA+V,MAAA,EAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAjqB,EAAAD,GAAAC,GAAAkU,EAAA,gBACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAAU,EAAAkqB,GAAAlqB,GAAAmU,EAAA,eACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EACAU,IAAAC,EAAAiqB,EAAA5qB,GAAA4qB,GAAA/V,EAAA,eACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAV,EAAAW,GAAAX,GAAA6U,EAAA,eACA+V,MAAA,EAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAjqB,EAAAD,GAAAC,GAAAkU,EAAA,gBACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAAU,EAAAkqB,GAAAlqB,GAAAmU,EAAA,eACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EACAU,IAAAC,EAAAiqB,EAAA5qB,GAAA4qB,GAAA/V,EAAA,eACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAV,EAAAW,GAAAX,GAAA6U,EAAA,iBACA+V,MAAA,EAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAjqB,EAAAD,GAAAC,GAAAkU,EAAA,eACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAAU,EAAAkqB,GAAAlqB,GAAAmU,EAAA,gBACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EACAU,IAAAC,EAAAiqB,EAAA5qB,GAAA4qB,GAAA/V,EAAA,iBACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAV,EAAAW,GAAAX,GAAA6U,EAAA,cACA+V,MAAA,EAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAjqB,EAAAD,GAAAC,GAAAkU,EAAA,gBACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAAU,EAAAkqB,GAAAlqB,GAAAmU,EAAA,iBACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EAEAU,IAAAC,EAAAX,EAAA4qB,GAAA/V,EAAA,YACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAC,EAAAX,GAAA6U,EAAA,gBACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAlqB,EAAAC,GAAAkU,EAAA,iBACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAA4qB,EAAAlqB,GAAAmU,EAAA,eACAlU,MAAA,GAAAA,IAAA,GAAAX,EAAA,EACAU,IAAAC,EAAAX,EAAA4qB,GAAA/V,EAAA,gBACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAC,EAAAX,GAAA6U,EAAA,gBACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAlqB,EAAAC,GAAAkU,EAAA,eACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAA4qB,EAAAlqB,GAAAmU,EAAA,iBACAlU,MAAA,GAAAA,IAAA,GAAAX,EAAA,EACAU,IAAAC,EAAAX,EAAA4qB,GAAA/V,EAAA,gBACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAC,EAAAX,GAAA6U,EAAA,eACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAlqB,EAAAC,GAAAkU,EAAA,eACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAA4qB,EAAAlqB,GAAAmU,EAAA,cACAlU,MAAA,GAAAA,IAAA,GAAAX,EAAA,EACAU,IAAAC,EAAAX,EAAA4qB,GAAA/V,EAAA,eACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAlqB,EAAAC,EAAAX,GAAA6U,EAAA,gBACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAA4qB,EAAAlqB,EAAAC,GAAAkU,EAAA,gBACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAX,EAAA4qB,EAAAlqB,GAAAmU,EAAA,eACAlU,MAAA,GAAAA,IAAA,GAAAX,EAAA,EAEAU,IAAAV,GAAAW,GAAAiqB,IAAA/V,EAAA,eACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAjqB,GAAAD,GAAAV,IAAA6U,EAAA,gBACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAAU,GAAAkqB,GAAAjqB,IAAAkU,EAAA,iBACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAiqB,GAAA5qB,GAAAU,IAAAmU,EAAA,cACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EACAU,IAAAV,GAAAW,GAAAiqB,IAAA/V,EAAA,iBACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAjqB,GAAAD,GAAAV,IAAA6U,EAAA,gBACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAAU,GAAAkqB,GAAAjqB,IAAAkU,EAAA,cACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAiqB,GAAA5qB,GAAAU,IAAAmU,EAAA,gBACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EACAU,IAAAV,GAAAW,GAAAiqB,IAAA/V,EAAA,gBACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAjqB,GAAAD,GAAAV,IAAA6U,EAAA,eACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAAU,GAAAkqB,GAAAjqB,IAAAkU,EAAA,gBACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAiqB,GAAA5qB,GAAAU,IAAAmU,EAAA,iBACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EACAU,IAAAV,GAAAW,GAAAiqB,IAAA/V,EAAA,eACAnU,MAAA,EAAAA,IAAA,IAAAC,EAAA,EACAiqB,IAAAjqB,GAAAD,GAAAV,IAAA6U,EAAA,iBACA+V,MAAA,GAAAA,IAAA,IAAAlqB,EAAA,EACAV,IAAAU,GAAAkqB,GAAAjqB,IAAAkU,EAAA,eACA7U,MAAA,GAAAA,IAAA,IAAA4qB,EAAA,EACAjqB,IAAAiqB,GAAA5qB,GAAAU,IAAAmU,EAAA,eACAlU,MAAA,GAAAA,IAAA,IAAAX,EAAA,EAEA4Y,EAAA,GAAAlY,EAAAkY,EAAA,KACAA,EAAA,GAAAjY,EAAAiY,EAAA,KACAA,EAAA,GAAA5Y,EAAA4Y,EAAA,KACAA,EAAA,GAAAgS,EAAAhS,EAAA,KAGA,QAAAqS,GAAAP,GACA,GACAxqB,GADAgrB,IAGA,KAAAhrB,EAAA,EAAmBA,EAAA,GAAQA,GAAA,EAC3BgrB,EAAAhrB,GAAA,GAAAwqB,EAAAS,WAAAjrB,IAAAwqB,EAAAS,WAAAjrB,EAAA,QAAAwqB,EAAAS,WAAAjrB,EAAA,SAAAwqB,EAAAS,WAAAjrB,EAAA,OAEA,OAAAgrB,GAGA,QAAAE,GAAA1qB,GACA,GACAR,GADAgrB,IAGA,KAAAhrB,EAAA,EAAmBA,EAAA,GAAQA,GAAA,EAC3BgrB,EAAAhrB,GAAA,GAAAQ,EAAAR,IAAAQ,EAAAR,EAAA,QAAAQ,EAAAR,EAAA,SAAAQ,EAAAR,EAAA,OAEA,OAAAgrB,GAGA,QAAAG,GAAAX,GACA,GAEAxqB,GACAuC,EACA6oB,EACAC,EACAC,EACAC,EAPAC,EAAAhB,EAAAjoB,OACAoZ,GAAA,4CAQA,KAAA3b,EAAA,GAAoBA,GAAAwrB,EAAQxrB,GAAA,GAC5B8qB,EAAAnP,EAAAoP,EAAAP,EAAAhf,UAAAxL,EAAA,GAAAA,IAKA,KAHAwqB,IAAAhf,UAAAxL,EAAA,IACAuC,EAAAioB,EAAAjoB,OACA6oB,GAAA,iCACAprB,EAAA,EAAmBA,EAAAuC,EAAYvC,GAAA,EAC/BorB,EAAAprB,GAAA,IAAAwqB,EAAAS,WAAAjrB,OAAA,KAGA,IADAorB,EAAAprB,GAAA,UAAAA,EAAA,MACAA,EAAA,GAEA,IADA8qB,EAAAnP,EAAAyP,GACAprB,EAAA,EAAuBA,EAAA,GAAQA,GAAA,EAC/BorB,EAAAprB,GAAA,CAcA,OATAqrB,GAAA,EAAAG,EACAH,IAAApS,SAAA,IAAAwS,MAAA,kBACAH,EAAAzT,SAAAwT,EAAA,OACAE,EAAA1T,SAAAwT,EAAA,UAEAD,EAAA,IAAAE,EACAF,EAAA,IAAAG,EAEAT,EAAAnP,EAAAyP,GACAzP,EAGA,QAAA+P,GAAAlrB,GACA,GAEAR,GACAuC,EACA6oB,EACAC,EACAC,EACAC,EAPAC,EAAAhrB,EAAA+B,OACAoZ,GAAA,4CAQA,KAAA3b,EAAA,GAAoBA,GAAAwrB,EAAQxrB,GAAA,GAC5B8qB,EAAAnP,EAAAuP,EAAA1qB,EAAAmrB,SAAA3rB,EAAA,GAAAA,IAWA,KAJAQ,EAAAR,EAAA,GAAAwrB,EAAAhrB,EAAAmrB,SAAA3rB,EAAA,OAAAke,YAAA,GAEA3b,EAAA/B,EAAA+B,OACA6oB,GAAA,iCACAprB,EAAA,EAAmBA,EAAAuC,EAAYvC,GAAA,EAC/BorB,EAAAprB,GAAA,IAAAQ,EAAAR,OAAA,KAIA,IADAorB,EAAAprB,GAAA,UAAAA,EAAA,MACAA,EAAA,GAEA,IADA8qB,EAAAnP,EAAAyP,GACAprB,EAAA,EAAuBA,EAAA,GAAQA,GAAA,EAC/BorB,EAAAprB,GAAA,CAeA,OAVAqrB,GAAA,EAAAG,EACAH,IAAApS,SAAA,IAAAwS,MAAA,kBACAH,EAAAzT,SAAAwT,EAAA,OACAE,EAAA1T,SAAAwT,EAAA,UAEAD,EAAA,IAAAE,EACAF,EAAA,IAAAG,EAEAT,EAAAnP,EAAAyP,GAEAzP,EAGA,QAAAkQ,GAAAL,GACA,GACAxI,GADAwH,EAAA,EAEA,KAAAxH,EAAA,EAAmBA,EAAA,EAAOA,GAAA,EAC1BwH,GAAAoB,EAAAJ,GAAA,EAAAxI,EAAA,MAAA4I,EAAAJ,GAAA,EAAAxI,EAAA,GAEA,OAAAwH,GAGA,QAAAsB,GAAApT,GACA,GAAA1Y,EACA,KAAAA,EAAA,EAAmBA,EAAA0Y,EAAAnW,OAAcvC,GAAA,EACjC0Y,EAAA1Y,GAAA6rB,EAAAnT,EAAA1Y,GAEA,OAAA0Y,GAAArF,KAAA,IAmEA,QAAAmpE,GAAAplE,GAKA,MAJA,kBAAAoR,KAAApR,KACAA,EAAAkV,SAAAtd,mBAAAoI,KAGAA,EAGA,QAAAqlE,GAAArlE,EAAAslE,GACA,GAGA18E,GAHAuC,EAAA6U,EAAA7U,OACAyqB,EAAA,GAAAK,aAAA9qB,GACAwE,EAAA,GAAAmX,YAAA8O,EAGA,KAAAhtB,EAAA,EAAmBA,EAAAuC,EAAYvC,GAAA,EAC/B+G,EAAA/G,GAAAoX,EAAA6T,WAAAjrB,EAGA,OAAA08E,GAAA31E,EAAAimB,EAGA,QAAA2vD,GAAA3vD,GACA,MAAAzO,QAAAC,aAAA9d,MAAA,QAAAwd,YAAA8O,IAGA,QAAA4vD,GAAApvD,EAAAC,EAAAivD,GACA,GAAAjzE,GAAA,GAAAyU,YAAAsP,EAAAD,WAAAE,EAAAF,WAKA,OAHA9jB,GAAAkkB,IAAA,GAAAzP,YAAAsP,IACA/jB,EAAAkkB,IAAA,GAAAzP,YAAAuP,GAAAD,EAAAD,YAEAmvD,EAAAjzE,IAAAuU,OAGA,QAAA6+D,GAAA/wD,GACA,GAEApT,GAFAuxC,KACA1nD,EAAAupB,EAAAvpB,MAGA,KAAAmW,EAAA,EAAmBA,EAAAnW,EAAA,EAAgBmW,GAAA,EACnCuxC,EAAAviD,KAAAmQ,SAAAiU,EAAAc,OAAAlU,EAAA,OAGA,OAAA6F,QAAAC,aAAA9d,MAAA6d,OAAA0rC,GAYA,QAAAj+B,KAEA3sB,KAAA4sB,QAjZA,GAAA3B,GAAA,SAAA9pB,EAAAC,GACA,MAAAD,GAAAC,EAAA,YAEAmrB,GAAA,gEAssBA,OAhbA,qCAAAE,EAAAX,EAAA,YACAb,EAAA,SAAA5R,EAAAwT,GACA,GAAAC,IAAA,MAAAzT,IAAA,MAAAwT,GACAE,GAAA1T,GAAA,KAAAwT,GAAA,KAAAC,GAAA,GACA,OAAAC,IAAA,SAAAD,IAYA,mBAAAkB,0BAAAntB,UAAAI,QACA,WACA,QAAAw8E,GAAAhjE,EAAAvX,GAGA,MAFAuX,GAAA,EAAAA,GAAA,EAEAA,EAAA,EACAjO,KAAAS,IAAAwN,EAAAvX,EAAA,GAGAsJ,KAAAC,IAAAgO,EAAAvX,GAGA8qB,YAAAntB,UAAAI,MAAA,SAAAw+B,EAAAC,GACA,GAGA1nB,GACAuH,EACAg6B,EACAC,EANAt2C,EAAAlD,KAAAkuB,WACAwvD,EAAAD,EAAAh+C,EAAAv8B,GACAsqB,EAAAtqB,CAUA,OAJAw8B,KAAAv8B,IACAqqB,EAAAiwD,EAAA/9C,EAAAx8B,IAGAw6E,EAAAlwD,EACA,GAAAQ,aAAA,IAGAhW,EAAAwV,EAAAkwD,EACAn+D,EAAA,GAAAyO,aAAAhW,GACAuhC,EAAA,GAAA16B,YAAAU,GAEAi6B,EAAA,GAAA36B,YAAA7e,KAAA09E,EAAA1lE,GACAuhC,EAAAjrB,IAAAkrB,GAEAj6B,OA+EAoN,EAAA9rB,UAAAmsB,OAAA,SAAAjV,GAKA,MAFA/X,MAAAktB,aAAAiwD,EAAAplE,IAEA/X,MAUA2sB,EAAA9rB,UAAAqsB,aAAA,SAAAC,GACAntB,KAAAotB,OAAAD,EACAntB,KAAAqtB,SAAAF,EAAAjqB,MAEA,IACAvC,GADAuC,EAAAlD,KAAAotB,MAAAlqB,MAGA,KAAAvC,EAAA,GAAoBA,GAAAuC,EAAavC,GAAA,GACjC8qB,EAAAzrB,KAAA29E,MAAAjyD,EAAA1rB,KAAAotB,MAAAjhB,UAAAxL,EAAA,GAAAA,IAKA,OAFAX,MAAAotB,MAAAptB,KAAAotB,MAAAjhB,UAAAxL,EAAA,IAEAX,MAWA2sB,EAAA9rB,UAAA2sB,IAAA,SAAAC,GACA,GAEA9sB,GAEA+sB,EAJAC,EAAA3tB,KAAAotB,MACAlqB,EAAAyqB,EAAAzqB,OAEA6oB,GAAA,gCAGA,KAAAprB,EAAA,EAAmBA,EAAAuC,EAAYvC,GAAA,EAC/BorB,EAAAprB,GAAA,IAAAgtB,EAAA/B,WAAAjrB,OAAA,KAYA,OATAX,MAAA4tB,QAAA7B,EAAA7oB,GACAwqB,EAAAjB,EAAAzsB,KAAA29E,OAEAlwD,IACAC,EAAA8vD,EAAA9vD,IAGA1tB,KAAA4sB,QAEAc,GAQAf,EAAA9rB,UAAA+rB,MAAA,WAKA,MAJA5sB,MAAAotB,MAAA,GACAptB,KAAAqtB,QAAA,EACArtB,KAAA29E,OAAA,6CAEA39E,MAQA2sB,EAAA9rB,UAAA+8E,SAAA,WACA,OACAjwD,KAAA3tB,KAAAotB,MACAlqB,OAAAlD,KAAAqtB,QACApiB,KAAAjL,KAAA29E,QAWAhxD,EAAA9rB,UAAAg9E,SAAA,SAAAvhE,GAKA,MAJAtc,MAAAotB,MAAA9Q,EAAAqR,KACA3tB,KAAAqtB,QAAA/Q,EAAApZ,OACAlD,KAAA29E,MAAArhE,EAAArR,KAEAjL,MAOA2sB,EAAA9rB,UAAAgtB,QAAA,iBACA7tB,MAAA29E,YACA39E,MAAAotB,YACAptB,MAAAqtB,SASAV,EAAA9rB,UAAA+sB,QAAA,SAAA7B,EAAA7oB,GACA,GACA8oB,GACAC,EACAC,EAHAvrB,EAAAuC,CAMA,IADA6oB,EAAAprB,GAAA,UAAAA,EAAA,MACAA,EAAA,GAEA,IADA8qB,EAAAzrB,KAAA29E,MAAA5xD,GACAprB,EAAA,EAAuBA,EAAA,GAAQA,GAAA,EAC/BorB,EAAAprB,GAAA,CAMAqrB,GAAA,EAAAhsB,KAAAqtB,QACArB,IAAApS,SAAA,IAAAwS,MAAA,kBACAH,EAAAzT,SAAAwT,EAAA,OACAE,EAAA1T,SAAAwT,EAAA,UAEAD,EAAA,IAAAE,EACAF,EAAA,IAAAG,EACAT,EAAAzrB,KAAA29E,MAAA5xD,IAYAY,EAAA1hB,KAAA,SAAA8M,EAAA0V,GAGA,MAAAd,GAAAmB,WAAAqvD,EAAAplE,GAAA0V,IAWAd,EAAAmB,WAAA,SAAAC,EAAAN,GACA,GAAAxiB,GAAA6gB,EAAAiC,GACAL,EAAAjB,EAAAxhB,EAEA,OAAAwiB,GAAA+vD,EAAA9vD,MAUAf,EAAAqB,YAAA,WAEAhuB,KAAA4sB,SAUAD,EAAAqB,YAAAntB,UAAAmsB,OAAA,SAAAtlB,GACA,GAEA/G,GAFAgtB,EAAA4vD,EAAAv9E,KAAAotB,MAAAzO,OAAAjX,GAAA,GACAxE,EAAAyqB,EAAAzqB,MAKA,KAFAlD,KAAAqtB,SAAA3lB,EAAAwmB,WAEAvtB,EAAA,GAAoBA,GAAAuC,EAAavC,GAAA,GACjC8qB,EAAAzrB,KAAA29E,MAAA9xD,EAAA8B,EAAArB,SAAA3rB,EAAA,GAAAA,IAKA,OAFAX,MAAAotB,MAAAzsB,EAAA,GAAAuC,EAAA,GAAA2b,YAAA8O,EAAAhP,OAAA1d,MAAAN,EAAA,QAAAke,YAAA,GAEA7e,MAWA2sB,EAAAqB,YAAAntB,UAAA2sB,IAAA,SAAAC,GACA,GAGA9sB,GACA+sB,EAJAC,EAAA3tB,KAAAotB,MACAlqB,EAAAyqB,EAAAzqB,OACA6oB,GAAA,gCAIA,KAAAprB,EAAA,EAAmBA,EAAAuC,EAAYvC,GAAA,EAC/BorB,EAAAprB,GAAA,IAAAgtB,EAAAhtB,OAAA,KAYA,OATAX,MAAA4tB,QAAA7B,EAAA7oB,GACAwqB,EAAAjB,EAAAzsB,KAAA29E,OAEAlwD,IACAC,EAAA8vD,EAAA9vD,IAGA1tB,KAAA4sB,QAEAc,GAQAf,EAAAqB,YAAAntB,UAAA+rB,MAAA,WAKA,MAJA5sB,MAAAotB,MAAA,GAAAvO,YAAA,GACA7e,KAAAqtB,QAAA,EACArtB,KAAA29E,OAAA,6CAEA39E,MAQA2sB,EAAAqB,YAAAntB,UAAA+8E,SAAA,WACA,GAAAthE,GAAAqQ,EAAA9rB,UAAA+8E,SAAAr9E,KAAAP,KAKA,OAFAsc,GAAAqR,KAAA2vD,EAAAhhE,EAAAqR,MAEArR,GAUAqQ,EAAAqB,YAAAntB,UAAAg9E,SAAA,SAAAvhE,GAIA,MAFAA,GAAAqR,KAAAyvD,EAAA9gE,EAAAqR,MAAA,GAEAhB,EAAA9rB,UAAAg9E,SAAAt9E,KAAAP,KAAAsc,IAGAqQ,EAAAqB,YAAAntB,UAAAgtB,QAAAlB,EAAA9rB,UAAAgtB,QAEAlB,EAAAqB,YAAAntB,UAAA+sB,QAAAjB,EAAA9rB,UAAA+sB,QAUAjB,EAAAqB,YAAA/iB,KAAA,SAAAvD,EAAA+lB,GACA,GAAAxiB,GAAAohB,EAAA,GAAAxN,YAAAnX,IACAgmB,EAAAjB,EAAAxhB,EAEA,OAAAwiB,GAAA+vD,EAAA9vD,MAGAf,K1D0tpBM,SAAS9sB,EAAQD,I2Dt8qBvB,WACA,GAAAk+E,MAAkBh9E,eAClBG,UAEApB,GAAAD,QAAA,SAAA+9B,EAAAhhB,GACA,GAAAhR,GAAA8B,EAAAlL,EAAAwlB,CACAta,MACAsa,IACA,KAAApc,IAAAgR,GACAmhE,EAAAv9E,KAAAoc,EAAAhR,KACApJ,EAAAoa,EAAAhR,GACA,SAAAA,IAGA8B,EAAApF,KAAAsD,GACAoc,EAAA1f,KAAA9F,IAEA,OAAA2jC,UAAA7kC,MAAA,KAAAJ,EAAAV,KAAAkN,GAAAnM,QAAAq8B,KAAAt8B,MAAAsb,EAAA,KAAAoL,MAGCxnB,KAAAP,O3D88qBK,SAASH,EAAQD,G4Dn+qBvB,YAuDA,SAAAiK,GAAArI,EAAAmX,EAAAC,GACA,GAAAC,GAAAD,IAAA1V,OAAA,EACA1B,KAAAqX,EAAA1L,UAEAyL,EAAA/O,MACAgP,EAAAD,IAAA1V,OAAA,GAEA,IAAAiK,GAAA0L,EAAA1L,QACA2L,EAAAD,EAAAtG,KACA,IAAAjK,MAAAC,QAAA4E,GACAA,EAAA9E,KAAA7G,OACG,IAAAsX,IAAAH,EAAAzV,OAAA,GACH,GAAAyI,GAAAgN,EAAA9O,KACAsD,GAAAxB,GAAAnK,MAEAmX,GAAAtQ,KAAA7G,GA/DA5B,EAAA+F,UAAA,SAAAsM,GACA,GAAAiE,KACAA,GAAA7N,MAAc7G,IAAAyQ,GAId,KAFA,GACA9J,GAAA3G,EAAAgtB,EAAA/T,EAAA9Z,EAAAo9E,EAAAtwE,EAAA6H,EAAA3J,EAAApJ,EAAAy7E,EADAn6E,EAAA,GAEAsE,EAAA+N,EAAArM,OAKA,GAJArI,EAAA2G,EAAA3G,IACAgtB,EAAArmB,EAAAqmB,QAAA,GACA/T,EAAAtS,EAAAsS,KAAA,GACA5W,GAAA2qB,EACA/T,EACA5W,GAAA4W,MACK,oBAAAjZ,GACLqC,GAAA,mBAAArC,GAAA,KAAAkE,KAAAC,UAAAnE,OACK,WAAAA,EACLqC,GAAA,WACK,IAAAyE,MAAAC,QAAA/G,GAAA,CAEL,IADA0U,EAAA7N,MAAkBoS,IAAA,MAClB9Z,EAAAa,EAAA0B,OAAA,EAA8BvC,GAAA,EAAQA,IACtCo9E,EAAA,IAAAp9E,EAAA,OACAuV,EAAA7N,MAAoB7G,MAAAb,GAAA6tB,OAAAuvD,GAEpB7nE,GAAA7N,MAAkBoS,IAAA,UACb,CACLhN,IACA,KAAA6H,IAAA9T,GACAA,EAAAV,eAAAwU,IACA7H,EAAApF,KAAAiN,EAIA,KADAY,EAAA7N,MAAkBoS,IAAA,MAClB9Z,EAAA8M,EAAAvK,OAAA,EAA+BvC,GAAA,EAAQA,IACvCgL,EAAA8B,EAAA9M,GACA4B,EAAAf,EAAAmK,GACAqyE,EAAAr9E,EAAA,SACAq9E,GAAAt4E,KAAAC,UAAAgG,GAAA,IACAuK,EAAA7N,MAAoB7G,IAAAe,EAAAisB,OAAAwvD,GAEpB9nE,GAAA7N,MAAkBoS,IAAA,MAGlB,MAAA5W,IAyBAjE,EAAAkvB,MAAA,SAAA/W,GAOA,IANA,GAGAqB,GAAAuB,EAAAsjE,EACAC,EAAAC,EAAAC,EAAAlyE,EACA2O,EAAAC,EALAnC,KACAC,KACAjY,EAAA,IAMA,GADAyY,EAAArB,EAAApX,KACA,MAAAyY,GACA,MAAAA,GACA,mBAAAA,GAQA,OAAAA,GACA,QACA,SACA,SACA,QACA,QACA,KACA,SACAzY,GAAA,EACAkJ,EAAA,KAAA8O,EAAAC,EACA,MACA,SACAjY,GAAA,EACAkJ,GAAA,EAAA8O,EAAAC,EACA,MACA,SACAjY,GAAA,EACAkJ,GAAA,EAAA8O,EAAAC,EACA,MACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAGA,IAFA+B,EAAA,GACAha,MACA,CAEA,GADAs9E,EAAAlmE,EAAApX,MACA,cAAAwoB,KAAA80D,GAEW,CACXt9E,GACA,OAHAga,GAAAsjE,EAMAp0E,EAAA6O,WAAAiC,GAAAhC,EAAAC,EACA,MACA,SAIA,IAHAslE,EAAA,GACAC,EAAA,OACAC,EAAA,IACA,CAEA,GADAlyE,EAAA6L,EAAApX,KACA,MAAAuL,IAAA,OAAAiyE,GACAC,EAAA,OASA,KARAF,IAAAhyE,EACAiyE,EAAAjyE,EACA,OAAAiyE,EACAC,IAEAA,EAAA,EAMAv0E,EAAAnE,KAAAopB,MAAA,IAAAovD,EAAA,KAAAvlE,EAAAC,EACA,MACA,SACAiC,GAAwB1N,WAAAoF,MAAAoG,EAAAzV,QACxByV,EAAAtQ,KAAAwS,EAAA1N,SACAyL,EAAAvQ,KAAAwS,EACA,MACA,SACAC,GAAsB3N,WAAYoF,MAAAoG,EAAAzV,QAClCyV,EAAAtQ,KAAAyS,EAAA3N,SACAyL,EAAAvQ,KAAAyS,EACA,MACA,SACA,SAAAtU,OACA,sCAAA4S,OAtFA,CAGA,OAAAT,EAAAzV,OACA,MAAAyV,GAAA9O,KAEAA,GAAA8O,EAAA9O,MAAA8O,EAAAC,M5D6jrBM,SAAS/Y,EAAQD,I6DtprBvB,SAAAoC,GACA,YA2CA,SAAAq8E,GAAAv1E,GAIA,GAHA,gBAAAA,KACAA,EAAAoW,OAAApW,IAEA,6BAAAqgB,KAAArgB,GACA,SAAAhH,WAAA,yCAEA,OAAAgH,GAAAwgB,cAGA,QAAAg1D,GAAA/7E,GAIA,MAHA,gBAAAA,KACAA,EAAA2c,OAAA3c,IAEAA,EAIA,QAAAg8E,GAAAC,GACA,GAAAt2E,IACAC,KAAA,WACA,GAAA5F,GAAAi8E,EAAAz3B,OACA,QAAgB3+C,KAAAjF,SAAAZ,YAUhB,OANAk8E,GAAA92D,WACAzf,EAAAD,OAAAC,UAAA,WACA,MAAAA,KAIAA,EAGA,QAAAk+D,GAAApiE,GACAhE,KAAA0N,OAEA1J,YAAAoiE,GACApiE,EAAA6N,QAAA,SAAAtP,EAAAuG,GACA9I,KAAAgtB,OAAAlkB,EAAAvG,IACOvC,MACFsI,MAAAC,QAAAvE,GACLA,EAAA6N,QAAA,SAAA6sE,GACA1+E,KAAAgtB,OAAA0xD,EAAA,GAAAA,EAAA,KACO1+E,MACFgE,GACLpD,OAAA+9E,oBAAA36E,GAAA6N,QAAA,SAAA/I,GACA9I,KAAAgtB,OAAAlkB,EAAA9E,EAAA8E,KACO9I,MA0DP,QAAA4+E,GAAAx5E,GACA,MAAAA,GAAAy5E,SACA16E,QAAA8F,OAAA,GAAAnI,WAAA,sBAEAsD,EAAAy5E,UAAA,GAGA,QAAAC,GAAA5zB,GACA,UAAA/mD,SAAA,SAAAoK,EAAAtE,GACAihD,EAAA/tB,OAAA,WACA5uB,EAAA28C,EAAA9gD,SAEA8gD,EAAAoK,QAAA,WACArrD,EAAAihD,EAAA7kD,UAKA,QAAA04E,GAAAj0B,GACA,GAAAI,GAAA,GAAAH,YACAhhD,EAAA+0E,EAAA5zB,EAEA,OADAA,GAAAD,kBAAAH,GACA/gD,EAGA,QAAAi1E,GAAAl0B,GACA,GAAAI,GAAA,GAAAH,YACAhhD,EAAA+0E,EAAA5zB,EAEA,OADAA,GAAA+zB,WAAAn0B,GACA/gD,EAGA,QAAAm1E,GAAA70B,GAIA,OAHA3lC,GAAA,GAAA7F,YAAAwrC,GACAjK,EAAA,GAAA93C,OAAAoc,EAAAxhB,QAEAvC,EAAA,EAAmBA,EAAA+jB,EAAAxhB,OAAiBvC,IACpCy/C,EAAAz/C,GAAAue,OAAAC,aAAAuF,EAAA/jB,GAEA,OAAAy/C,GAAApsC,KAAA,IAGA,QAAAmrE,GAAA90B,GACA,GAAAA,EAAAppD,MACA,MAAAopD,GAAAppD,MAAA,EAEA,IAAAyjB,GAAA,GAAA7F,YAAAwrC,EAAAn8B,WAEA,OADAxJ,GAAA4J,IAAA,GAAAzP,YAAAwrC,IACA3lC,EAAA/F,OAIA,QAAAygE,KA0FA,MAzFAp/E,MAAA6+E,UAAA,EAEA7+E,KAAAq/E,UAAA,SAAAj6E,GAEA,GADApF,KAAAs/E,UAAAl6E,EACAA,EAEO,mBAAAA,GACPpF,KAAAu/E,UAAAn6E,MACO,IAAAq5E,EAAA3zB,MAAA34B,KAAAtxB,UAAA2+E,cAAAp6E,GACPpF,KAAAy/E,UAAAr6E,MACO,IAAAq5E,EAAAiB,UAAAC,SAAA9+E,UAAA2+E,cAAAp6E,GACPpF,KAAA4/E,cAAAx6E,MACO,IAAAq5E,EAAA7iD,cAAAikD,gBAAAh/E,UAAA2+E,cAAAp6E,GACPpF,KAAAu/E,UAAAn6E,EAAAwU,eACO,IAAA6kE,EAAA3yB,aAAA2yB,EAAA3zB,MAAAg1B,EAAA16E,GACPpF,KAAA+/E,iBAAAZ,EAAA/5E,EAAAuZ,QAEA3e,KAAAs/E,UAAA,GAAAntD,OAAAnyB,KAAA+/E,uBACO,KAAAtB,EAAA3yB,cAAA99B,YAAAntB,UAAA2+E,cAAAp6E,KAAA46E,EAAA56E,GAGP,SAAAoB,OAAA,4BAFAxG,MAAA+/E,iBAAAZ,EAAA/5E,OAdApF,MAAAu/E,UAAA,EAmBAv/E,MAAAgE,QAAAgC,IAAA,kBACA,gBAAAZ,GACApF,KAAAgE,QAAAsqB,IAAA,2CACStuB,KAAAy/E,WAAAz/E,KAAAy/E,UAAAv6D,KACTllB,KAAAgE,QAAAsqB,IAAA,eAAAtuB,KAAAy/E,UAAAv6D,MACSu5D,EAAA7iD,cAAAikD,gBAAAh/E,UAAA2+E,cAAAp6E,IACTpF,KAAAgE,QAAAsqB,IAAA,oEAKAmwD,EAAA3zB,OACA9qD,KAAA8qD,KAAA,WACA,GAAAm1B,GAAArB,EAAA5+E,KACA,IAAAigF,EACA,MAAAA,EAGA,IAAAjgF,KAAAy/E,UACA,MAAAt7E,SAAAoK,QAAAvO,KAAAy/E,UACS,IAAAz/E,KAAA+/E,iBACT,MAAA57E,SAAAoK,QAAA,GAAA4jB,OAAAnyB,KAAA+/E,mBACS,IAAA//E,KAAA4/E,cACT,SAAAp5E,OAAA,uCAEA,OAAArC,SAAAoK,QAAA,GAAA4jB,OAAAnyB,KAAAu/E,cAIAv/E,KAAA8rD,YAAA,WACA,MAAA9rD,MAAA+/E,iBACAnB,EAAA5+E,OAAAmE,QAAAoK,QAAAvO,KAAA+/E,kBAEA//E,KAAA8qD,OAAAznD,KAAA07E,KAKA/+E,KAAAmG,KAAA,WACA,GAAA85E,GAAArB,EAAA5+E,KACA,IAAAigF,EACA,MAAAA,EAGA,IAAAjgF,KAAAy/E,UACA,MAAAT,GAAAh/E,KAAAy/E,UACO,IAAAz/E,KAAA+/E,iBACP,MAAA57E,SAAAoK,QAAA2wE,EAAAl/E,KAAA+/E,kBACO,IAAA//E,KAAA4/E,cACP,SAAAp5E,OAAA,uCAEA,OAAArC,SAAAoK,QAAAvO,KAAAu/E,YAIAd,EAAAiB,WACA1/E,KAAA0/E,SAAA,WACA,MAAA1/E,MAAAmG,OAAA9C,KAAA68E,KAIAlgF,KAAAkG,KAAA,WACA,MAAAlG,MAAAmG,OAAA9C,KAAAqC,KAAAopB,QAGA9uB,KAMA,QAAAmgF,GAAAh7E,GACA,GAAAi7E,GAAAj7E,EAAA+7B,aACA,OAAAm/C,GAAAp6E,QAAAm6E,IAAA,EAAAA,EAAAj7E,EAGA,QAAAm7E,GAAAruE,EAAAjP,GACAA,OACA,IAAAoC,GAAApC,EAAAoC,IAEA,IAAA6M,YAAAquE,GAAA,CACA,GAAAruE,EAAA4sE,SACA,SAAA/8E,WAAA,eAEA9B,MAAAgH,IAAAiL,EAAAjL,IACAhH,KAAA4D,YAAAqO,EAAArO,YACAZ,EAAAgB,UACAhE,KAAAgE,QAAA,GAAAoiE,GAAAn0D,EAAAjO,UAEAhE,KAAAmF,OAAA8M,EAAA9M,OACAnF,KAAAkyD,KAAAjgD,EAAAigD,KACA9sD,GAAA,MAAA6M,EAAAqtE,YACAl6E,EAAA6M,EAAAqtE,UACArtE,EAAA4sE,UAAA,OAGA7+E,MAAAgH,IAAAkY,OAAAjN,EAWA,IARAjS,KAAA4D,YAAAZ,EAAAY,aAAA5D,KAAA4D,aAAA,QACAZ,EAAAgB,SAAAhE,KAAAgE,UACAhE,KAAAgE,QAAA,GAAAoiE,GAAApjE,EAAAgB,UAEAhE,KAAAmF,OAAAg7E,EAAAn9E,EAAAmC,QAAAnF,KAAAmF,QAAA,OACAnF,KAAAkyD,KAAAlvD,EAAAkvD,MAAAlyD,KAAAkyD,MAAA,KACAlyD,KAAAugF,SAAA,MAEA,QAAAvgF,KAAAmF,QAAA,SAAAnF,KAAAmF,SAAAC,EACA,SAAAtD,WAAA,4CAEA9B,MAAAq/E,UAAAj6E,GAOA,QAAA86E,GAAA96E,GACA,GAAAo7E,GAAA,GAAAb,SASA,OARAv6E,GAAAwsB,OAAAxhB,MAAA,KAAAyB,QAAA,SAAA+4C,GACA,GAAAA,EAAA,CACA,GAAAx6C,GAAAw6C,EAAAx6C,MAAA,KACAtH,EAAAsH,EAAA22C,QAAA9/C,QAAA,WACA1E,EAAA6N,EAAA4D,KAAA,KAAA/M,QAAA,UACAu5E,GAAAxzD,OAAA1c,mBAAAxH,GAAAwH,mBAAA/N,OAGAi+E,EAGA,QAAAC,GAAAC,GACA,GAAA18E,GAAA,GAAAoiE,EASA,OARAsa,GAAAtwE,MAAA,SAAAyB,QAAA,SAAA8uE,GACA,GAAAxwE,GAAAwwE,EAAAvwE,MAAA,KACAzE,EAAAwE,EAAA42C,QAAAn1B,MACA,IAAAjmB,EAAA,CACA,GAAApJ,GAAA4N,EAAA6D,KAAA,KAAA4d,MACA5tB,GAAAgpB,OAAArhB,EAAApJ,MAGAyB,EAKA,QAAA48E,GAAAC,EAAA79E,GACAA,IACAA,MAGAhD,KAAAklB,KAAA,UACAllB,KAAAyE,OAAA,UAAAzB,KAAAyB,OAAA,IACAzE,KAAA6F,GAAA7F,KAAAyE,QAAA,KAAAzE,KAAAyE,OAAA,IACAzE,KAAA8gF,WAAA,cAAA99E,KAAA89E,WAAA,KACA9gF,KAAAgE,QAAA,GAAAoiE,GAAApjE,EAAAgB,SACAhE,KAAAgH,IAAAhE,EAAAgE,KAAA,GACAhH,KAAAq/E,UAAAwB,GA7XA,IAAA7+E,EAAAwB,MAAA,CAIA,GAAAi7E,IACA7iD,aAAA,mBAAA55B,GACA2lB,SAAA,UAAA3lB,IAAA,YAAAiG,QACA6iD,KAAA,cAAA9oD,IAAA,QAAAA,IAAA,WACA,IAEA,MADA,IAAAmwB,OACA,EACO,MAAA9qB,GACP,aAGAq4E,SAAA,YAAA19E,GACA8pD,YAAA,eAAA9pD,GAGA,IAAAy8E,EAAA3yB,YACA,GAAAi1B,IACA,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGAjB,EAAA,SAAAt+E,GACA,MAAAA,IAAAw/E,SAAAngF,UAAA2+E,cAAAh+E,IAGAw+E,EAAAhyD,YAAAizD,QAAA,SAAAz/E,GACA,MAAAA,IAAAu/E,EAAA96E,QAAArF,OAAAC,UAAA+Y,SAAArZ,KAAAiB,KAAA,EAyDA4kE,GAAAvlE,UAAAmsB,OAAA,SAAAlkB,EAAAvG,GACAuG,EAAAu1E,EAAAv1E,GACAvG,EAAA+7E,EAAA/7E,EACA,IAAA2+E,GAAAlhF,KAAA0N,IAAA5E,EACA9I,MAAA0N,IAAA5E,GAAAo4E,IAAA,IAAA3+E,KAGA6jE,EAAAvlE,UAAA,gBAAAiI,SACA9I,MAAA0N,IAAA2wE,EAAAv1E,KAGAs9D,EAAAvlE,UAAAmF,IAAA,SAAA8C,GAEA,MADAA,GAAAu1E,EAAAv1E,GACA9I,KAAA67B,IAAA/yB,GAAA9I,KAAA0N,IAAA5E,GAAA,MAGAs9D,EAAAvlE,UAAAg7B,IAAA,SAAA/yB,GACA,MAAA9I,MAAA0N,IAAA5M,eAAAu9E,EAAAv1E,KAGAs9D,EAAAvlE,UAAAytB,IAAA,SAAAxlB,EAAAvG,GACAvC,KAAA0N,IAAA2wE,EAAAv1E,IAAAw1E,EAAA/7E,IAGA6jE,EAAAvlE,UAAAgR,QAAA,SAAA3H,EAAAi3E,GACA,OAAAr4E,KAAA9I,MAAA0N,IACA1N,KAAA0N,IAAA5M,eAAAgI,IACAoB,EAAA3J,KAAA4gF,EAAAnhF,KAAA0N,IAAA5E,KAAA9I,OAKAomE,EAAAvlE,UAAA4M,KAAA,WACA,GAAA+wE,KAEA,OADAx+E,MAAA6R,QAAA,SAAAtP,EAAAuG,GAAwC01E,EAAAn2E,KAAAS,KACxCy1E,EAAAC,IAGApY,EAAAvlE,UAAAknB,OAAA,WACA,GAAAy2D,KAEA,OADAx+E,MAAA6R,QAAA,SAAAtP,GAAkCi8E,EAAAn2E,KAAA9F,KAClCg8E,EAAAC,IAGApY,EAAAvlE,UAAAugF,QAAA,WACA,GAAA5C,KAEA,OADAx+E,MAAA6R,QAAA,SAAAtP,EAAAuG,GAAwC01E,EAAAn2E,MAAAS,EAAAvG,MACxCg8E,EAAAC,IAGAC,EAAA92D,WACAy+C,EAAAvlE,UAAAoH,OAAAC,UAAAk+D,EAAAvlE,UAAAugF,QAqJA,IAAAf,IAAA,6CA4CAC,GAAAz/E,UAAA0J,MAAA,WACA,UAAA+1E,GAAAtgF,MAA8BoF,KAAApF,KAAAs/E,aA6B9BF,EAAA7+E,KAAA+/E,EAAAz/E,WAgBAu+E,EAAA7+E,KAAAqgF,EAAA//E,WAEA+/E,EAAA//E,UAAA0J,MAAA,WACA,UAAAq2E,GAAA5gF,KAAAs/E,WACA76E,OAAAzE,KAAAyE,OACAq8E,WAAA9gF,KAAA8gF,WACA98E,QAAA,GAAAoiE,GAAApmE,KAAAgE,SACAgD,IAAAhH,KAAAgH,OAIA45E,EAAAv6E,MAAA,WACA,GAAAd,GAAA,GAAAq7E,GAAA,MAAuCn8E,OAAA,EAAAq8E,WAAA,IAEvC,OADAv7E,GAAA2f,KAAA,QACA3f,EAGA,IAAA87E,IAAA,oBAEAT,GAAAU,SAAA,SAAAt6E,EAAAvC,GACA,GAAA48E,EAAAp7E,QAAAxB,MAAA,EACA,SAAA88E,YAAA,sBAGA,WAAAX,GAAA,MAA+Bn8E,SAAAT,SAA0B6C,SAAAG,MAGzDhF,EAAAokE,UACApkE,EAAAs+E,UACAt+E,EAAA4+E,WAEA5+E,EAAAwB,MAAA,SAAAyO,EAAAooB,GACA,UAAAl2B,SAAA,SAAAoK,EAAAtE,GACA,GAAAioC,GAAA,GAAAouC,GAAAruE,EAAAooB,GACAssC,EAAA,GAAAO,eAEAP,GAAAxpC,OAAA,WACA,GAAAn6B,IACAyB,OAAAkiE,EAAAliE,OACAq8E,WAAAna,EAAAma,WACA98E,QAAAy8E,EAAA9Z,EAAA6a,yBAAA,IAEAx+E,GAAAgE,IAAA,eAAA2/D,KAAA8a,YAAAz+E,EAAAgB,QAAAgC,IAAA,gBACA,IAAAZ,GAAA,YAAAuhE,KAAAphE,SAAAohE,EAAAc,YACAl5D,GAAA,GAAAqyE,GAAAx7E,EAAApC,KAGA2jE,EAAArR,QAAA,WACArrD,EAAA,GAAAnI,WAAA,4BAGA6kE,EAAA/T,UAAA,WACA3oD,EAAA,GAAAnI,WAAA,4BAGA6kE,EAAAhK,KAAAzqB,EAAA/sC,OAAA+sC,EAAAlrC,KAAA,GAEA,YAAAkrC,EAAAtuC,cACA+iE,EAAAQ,iBAAA,GAGA,gBAAAR,IAAA8X,EAAA3zB,OACA6b,EAAAU,aAAA,QAGAn1B,EAAAluC,QAAA6N,QAAA,SAAAtP,EAAAuG,GACA69D,EAAAW,iBAAAx+D,EAAAvG,KAGAokE,EAAAe,KAAA,mBAAAx1B,GAAAotC,UAAA,KAAAptC,EAAAotC,cAGAt9E,EAAAwB,MAAAk+E,UAAA,IACC,mBAAA1/E,WAAAhC,O7D6prBK,SAASH,EAAQD,KAMvB","file":"cozy-client.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"client\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"client\"] = factory();\n\telse\n\t\troot[\"cozy\"] = root[\"cozy\"] || {}, root[\"cozy\"][\"client\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"client\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"client\"] = factory();\n\telse\n\t\troot[\"cozy\"] = root[\"cozy\"] || {}, root[\"cozy\"][\"client\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(38);\n\tmodule.exports = __webpack_require__(27);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FetchError = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /* global fetch */\n\t\n\t\n\texports.cozyFetch = cozyFetch;\n\texports.cozyFetchJSON = cozyFetchJSON;\n\texports.cozyFetchRawJSON = cozyFetchRawJSON;\n\texports.handleInvalidTokenError = handleInvalidTokenError;\n\t\n\tvar _auth_v = __webpack_require__(8);\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar _jsonapi = __webpack_require__(14);\n\t\n\tvar _jsonapi2 = _interopRequireDefault(_jsonapi);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction cozyFetch(cozy, path) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t  return cozy.fullpath(path).then(function (fullpath) {\n\t    var resp = void 0;\n\t    if (options.disableAuth) {\n\t      resp = fetch(fullpath, options);\n\t    } else if (options.manualAuthCredentials) {\n\t      resp = cozyFetchWithAuth(cozy, fullpath, options, options.manualAuthCredentials);\n\t    } else {\n\t      resp = cozy.authorize().then(function (credentials) {\n\t        return cozyFetchWithAuth(cozy, fullpath, options, credentials);\n\t      });\n\t    }\n\t    return resp.then(function (res) {\n\t      return handleResponse(res, cozy._invalidTokenErrorHandler);\n\t    });\n\t  });\n\t}\n\t\n\tfunction cozyFetchWithAuth(cozy, fullpath, options, credentials) {\n\t  if (credentials) {\n\t    options.headers = options.headers || {};\n\t    options.headers['Authorization'] = credentials.token.toAuthHeader();\n\t  }\n\t\n\t  // the option credentials:include tells fetch to include the cookies in the\n\t  // request even for cross-origin requests\n\t  options.credentials = 'include';\n\t\n\t  return Promise.all([cozy.isV2(), fetch(fullpath, options)]).then(function (_ref) {\n\t    var _ref2 = _slicedToArray(_ref, 2),\n\t        isV2 = _ref2[0],\n\t        res = _ref2[1];\n\t\n\t    if (res.status !== 400 && res.status !== 401 || isV2 || !credentials || options.dontRetry) {\n\t      return res;\n\t    }\n\t    // we try to refresh the token only for OAuth, ie, the client defined\n\t    // and the token is an instance of AccessToken.\n\t    var client = credentials.client,\n\t        token = credentials.token;\n\t\n\t    if (!client || !(token instanceof _auth_v.AccessToken)) {\n\t      return res;\n\t    }\n\t    options.dontRetry = true;\n\t    return (0, _utils.retry)(function () {\n\t      return (0, _auth_v.refreshToken)(cozy, client, token);\n\t    }, 3)().then(function (newToken) {\n\t      return cozy.saveCredentials(client, newToken);\n\t    }).then(function (credentials) {\n\t      return cozyFetchWithAuth(cozy, fullpath, options, credentials);\n\t    });\n\t  });\n\t}\n\t\n\tfunction cozyFetchJSON(cozy, method, path, body) {\n\t  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t\n\t  var processJSONAPI = typeof options.processJSONAPI === 'undefined' || options.processJSONAPI;\n\t  return fetchJSON(cozy, method, path, body, options).then(function (response) {\n\t    return handleJSONResponse(response, processJSONAPI);\n\t  });\n\t}\n\t\n\tfunction cozyFetchRawJSON(cozy, method, path, body) {\n\t  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t\n\t  return fetchJSON(cozy, method, path, body, options).then(function (response) {\n\t    return handleJSONResponse(response, false);\n\t  });\n\t}\n\t\n\tfunction fetchJSON(cozy, method, path, body) {\n\t  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t\n\t  options.method = method;\n\t\n\t  var headers = options.headers = options.headers || {};\n\t\n\t  headers['Accept'] = 'application/json';\n\t\n\t  if (method !== 'GET' && method !== 'HEAD' && body !== undefined) {\n\t    if (headers['Content-Type']) {\n\t      options.body = body;\n\t    } else {\n\t      headers['Content-Type'] = 'application/json';\n\t      options.body = JSON.stringify(body);\n\t    }\n\t  }\n\t\n\t  return cozyFetch(cozy, path, options);\n\t}\n\t\n\tfunction handleResponse(res, invalidTokenErrorHandler) {\n\t  if (res.ok) {\n\t    return res;\n\t  }\n\t  var data = void 0;\n\t  var contentType = res.headers.get('content-type');\n\t  if (contentType && contentType.indexOf('json') >= 0) {\n\t    data = res.json();\n\t  } else {\n\t    data = res.text();\n\t  }\n\t  return data.then(function (err) {\n\t    var error = new FetchError(res, err);\n\t    if (FetchError.isInvalidToken(error) && invalidTokenErrorHandler) {\n\t      invalidTokenErrorHandler(error);\n\t    }\n\t    throw error;\n\t  });\n\t}\n\t\n\tfunction handleJSONResponse(res) {\n\t  var processJSONAPI = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t\n\t  var contentType = res.headers.get('content-type');\n\t  if (!contentType || contentType.indexOf('json') < 0) {\n\t    return res.text(function (data) {\n\t      throw new FetchError(res, new Error('Response is not JSON: ' + data));\n\t    });\n\t  }\n\t\n\t  var json = res.json();\n\t  if (contentType.indexOf('application/vnd.api+json') === 0 && processJSONAPI) {\n\t    return json.then(_jsonapi2.default);\n\t  } else {\n\t    return json;\n\t  }\n\t}\n\t\n\tfunction handleInvalidTokenError(error) {\n\t  try {\n\t    var currentOrigin = window.location.origin;\n\t    var requestUrl = error.url;\n\t\n\t    if (requestUrl.indexOf(currentOrigin.replace(/^(https?:\\/\\/\\w+)-\\w+\\./, '$1.')) === 0) {\n\t      var redirectURL = currentOrigin + '?' + (0, _utils.encodeQuery)({ 'disconnect': 1 });\n\t      window.location = redirectURL;\n\t    }\n\t  } catch (e) {\n\t    console.warn('Unable to handle invalid token error', e, error);\n\t  }\n\t}\n\t\n\tvar FetchError = exports.FetchError = function (_Error) {\n\t  _inherits(FetchError, _Error);\n\t\n\t  function FetchError(res, reason) {\n\t    _classCallCheck(this, FetchError);\n\t\n\t    var _this = _possibleConstructorReturn(this, (FetchError.__proto__ || Object.getPrototypeOf(FetchError)).call(this));\n\t\n\t    if (Error.captureStackTrace) {\n\t      Error.captureStackTrace(_this, _this.constructor);\n\t    }\n\t    // XXX We have to hardcode this because babel doesn't play nice when extending Error\n\t    _this.name = 'FetchError';\n\t    _this.response = res;\n\t    _this.url = res.url;\n\t    _this.status = res.status;\n\t    _this.reason = reason;\n\t\n\t    Object.defineProperty(_this, 'message', {\n\t      value: reason.message || (typeof reason === 'string' ? reason : JSON.stringify(reason))\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  return FetchError;\n\t}(Error);\n\t\n\tFetchError.isUnauthorized = function (err) {\n\t  // XXX We can't use err instanceof FetchError because of the caveats of babel\n\t  return err.name === 'FetchError' && err.status === 401;\n\t};\n\t\n\tFetchError.isNotFound = function (err) {\n\t  // XXX We can't use err instanceof FetchError because of the caveats of babel\n\t  return err.name === 'FetchError' && err.status === 404;\n\t};\n\t\n\tFetchError.isInvalidToken = function (err) {\n\t  // XXX We can't use err instanceof FetchError because of the caveats of babel\n\t  return err.name === 'FetchError' && err.status === 400 && err.reason && (err.reason.error === 'Invalid JWT token' || err.reason.error === 'Expired token');\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tvar Promise = __webpack_require__(20);\n\t\n\t/* istanbul ignore next */\n\texports.once = function (fun) {\n\t  var called = false;\n\t  return exports.getArguments(function (args) {\n\t    if (called) {\n\t      console.trace();\n\t      throw new Error('once called  more than once');\n\t    } else {\n\t      called = true;\n\t      fun.apply(this, args);\n\t    }\n\t  });\n\t};\n\t/* istanbul ignore next */\n\texports.getArguments = function (fun) {\n\t  return function () {\n\t    var len = arguments.length;\n\t    var args = new Array(len);\n\t    var i = -1;\n\t    while (++i < len) {\n\t      args[i] = arguments[i];\n\t    }\n\t    return fun.call(this, args);\n\t  };\n\t};\n\t/* istanbul ignore next */\n\texports.toPromise = function (func) {\n\t  //create the function we will be returning\n\t  return exports.getArguments(function (args) {\n\t    var self = this;\n\t    var tempCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n\t    // if the last argument is a function, assume its a callback\n\t    var usedCB;\n\t    if (tempCB) {\n\t      // if it was a callback, create a new callback which calls it,\n\t      // but do so async so we don't trap any errors\n\t      usedCB = function (err, resp) {\n\t        process.nextTick(function () {\n\t          tempCB(err, resp);\n\t        });\n\t      };\n\t    }\n\t    var promise = new Promise(function (fulfill, reject) {\n\t      try {\n\t        var callback = exports.once(function (err, mesg) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            fulfill(mesg);\n\t          }\n\t        });\n\t        // create a callback for this invocation\n\t        // apply the function in the orig context\n\t        args.push(callback);\n\t        func.apply(self, args);\n\t      } catch (e) {\n\t        reject(e);\n\t      }\n\t    });\n\t    // if there is a callback, call it back\n\t    if (usedCB) {\n\t      promise.then(function (result) {\n\t        usedCB(null, result);\n\t      }, usedCB);\n\t    }\n\t    promise.cancel = function () {\n\t      return this;\n\t    };\n\t    return promise;\n\t  });\n\t};\n\t\n\texports.inherits = __webpack_require__(10);\n\texports.Promise = Promise;\n\t\n\texports.clone = function (obj) {\n\t  return exports.extend(true, {}, obj);\n\t};\n\t\n\texports.extend = __webpack_require__(16);\n\t\n\texports.callbackify = function (fun) {\n\t  return exports.getArguments(function (args) {\n\t    var cb = args.pop();\n\t    var promise = fun.apply(this, args);\n\t    exports.promisedCallback(promise, cb);\n\t    return promise;\n\t  });\n\t};\n\t\n\texports.promisedCallback = function (promise, callback) {\n\t  promise.then(function (res) {\n\t    process.nextTick(function () {\n\t      callback(null, res);\n\t    });\n\t  }, function (reason) {\n\t    process.nextTick(function () {\n\t      callback(reason);\n\t    });\n\t  });\n\t  return promise;\n\t};\n\t\n\tvar crypto = __webpack_require__(62);\n\tvar Md5 = __webpack_require__(22);\n\t\n\texports.MD5 = function (string) {\n\t  /* istanbul ignore else */\n\t  if (!process.browser) {\n\t    return crypto.createHash('md5').update(string).digest('hex');\n\t  } else {\n\t    return Md5.hash(string);\n\t  }\n\t};\n\t\n\texports.flatten = exports.getArguments(function (args) {\n\t  var res = [];\n\t  for (var i = 0, len = args.length; i < len; i++) {\n\t    var subArr = args[i];\n\t    if (Array.isArray(subArr)) {\n\t      res = res.concat(exports.flatten.apply(null, subArr));\n\t    } else {\n\t      res.push(subArr);\n\t    }\n\t  }\n\t  return res;\n\t});\n\t\n\texports.mergeObjects = function (arr) {\n\t  var res = {};\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    res = exports.extend(true, res, arr[i]);\n\t  }\n\t  return res;\n\t};\n\t\n\t// this would just be \"return doc[field]\", but fields\n\t// can be \"deep\" due to dot notation\n\texports.getFieldFromDoc = function (doc, parsedField) {\n\t  var value = doc;\n\t  for (var i = 0, len = parsedField.length; i < len; i++) {\n\t    var key = parsedField[i];\n\t    value = value[key];\n\t    if (!value) {\n\t      break;\n\t    }\n\t  }\n\t  return value;\n\t};\n\t\n\texports.setFieldInDoc = function (doc, parsedField, value) {\n\t  for (var i = 0, len = parsedField.length; i < len-1; i++) {\n\t    var elem = parsedField[i];\n\t    doc = doc[elem] = {};\n\t  }\n\t  doc[parsedField[len-1]] = value;\n\t};\n\t\n\t// Converts a string in dot notation to an array of its components, with backslash escaping\n\texports.parseField = function (fieldName) {\n\t  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n\t  var fields = [];\n\t  var current = '';\n\t  for (var i = 0, len = fieldName.length; i < len; i++) {\n\t    var ch = fieldName[i];\n\t    if (ch === '.') {\n\t      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n\t        current = current.substring(0, current.length - 1) + '.';\n\t      } else { // not escaped, so delimiter\n\t        fields.push(current);\n\t        current = '';\n\t      }\n\t    } else { // normal character\n\t      current += ch;\n\t    }\n\t  }\n\t  fields.push(current);\n\t  return fields;\n\t};\n\t\n\t// Selects a list of fields defined in dot notation from one doc\n\t// and copies them to a new doc. Like underscore _.pick but supports nesting.\n\texports.pick = function (obj, arr) {\n\t  var res = {};\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    var parsedField = exports.parseField(arr[i]);\n\t    var value = exports.getFieldFromDoc(obj, parsedField);\n\t    if(typeof value !== 'undefined') {\n\t      exports.setFieldInDoc(res, parsedField, value);\n\t    }\n\t  }\n\t  return res;\n\t};\n\t\n\t// e.g. ['a'], ['a', 'b'] is true, but ['b'], ['a', 'b'] is false\n\texports.oneArrayIsSubArrayOfOther = function (left, right) {\n\t\n\t  for (var i = 0, len = Math.min(left.length, right.length); i < len; i++) {\n\t    if (left[i] !== right[i]) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\t\n\t// e.g.['a', 'b', 'c'], ['a', 'b'] is false\n\texports.oneArrayIsStrictSubArrayOfOther = function (left, right) {\n\t\n\t  if (left.length > right.length) {\n\t    return false;\n\t  }\n\t\n\t  return exports.oneArrayIsSubArrayOfOther(left, right);\n\t};\n\t\n\t// same as above, but treat the left array as an unordered set\n\t// e.g. ['b', 'a'], ['a', 'b', 'c'] is true, but ['c'], ['a', 'b', 'c'] is false\n\texports.oneSetIsSubArrayOfOther = function (left, right) {\n\t  left = left.slice();\n\t  for (var i = 0, len = right.length; i < len; i++) {\n\t    var field = right[i];\n\t    if (!left.length) {\n\t      break;\n\t    }\n\t    var leftIdx = left.indexOf(field);\n\t    if (leftIdx === -1) {\n\t      return false;\n\t    } else {\n\t      left.splice(leftIdx, 1);\n\t    }\n\t  }\n\t  return true;\n\t};\n\t\n\texports.compare = function (left, right) {\n\t  return left < right ? -1 : left > right ? 1 : 0;\n\t};\n\t\n\texports.arrayToObject = function (arr) {\n\t  var res = {};\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    res[arr[i]] = true;\n\t  }\n\t  return res;\n\t};\n\t\n\texports.max = function (arr, fun) {\n\t  var max = null;\n\t  var maxScore = -1;\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    var element = arr[i];\n\t    var score = fun(element);\n\t    if (score > maxScore) {\n\t      maxScore = score;\n\t      max = element;\n\t    }\n\t  }\n\t  return max;\n\t};\n\t\n\texports.arrayEquals = function (arr1, arr2) {\n\t  if (arr1.length !== arr2.length) {\n\t    return false;\n\t  }\n\t  for (var i = 0, len = arr1.length; i < len; i++) {\n\t    if (arr1[i] !== arr2[i]) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\t\n\texports.uniq = function(arr) {\n\t  var obj = {};\n\t  for (var i = 0; i < arr.length; i++) {\n\t    obj['$' + arr[i]] = true;\n\t  }\n\t  return Object.keys(obj).map(function (key) {\n\t    return key.substring(1);\n\t  });\n\t};\n\t\n\texports.log = __webpack_require__(52)('pouchdb:find');\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.unpromiser = unpromiser;\n\texports.isPromise = isPromise;\n\texports.isOnline = isOnline;\n\texports.isOffline = isOffline;\n\texports.sleep = sleep;\n\texports.retry = retry;\n\texports.getFuzzedDelay = getFuzzedDelay;\n\texports.getBackedoffDelay = getBackedoffDelay;\n\texports.createPath = createPath;\n\texports.encodeQuery = encodeQuery;\n\texports.decodeQuery = decodeQuery;\n\texports.warn = warn;\n\t/* global navigator */\n\tvar FuzzFactor = 0.3;\n\t\n\tfunction unpromiser(fn) {\n\t  return function () {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    var value = fn.apply(this, args);\n\t    if (!isPromise(value)) {\n\t      return value;\n\t    }\n\t    var l = args.length;\n\t    if (l === 0 || typeof args[l - 1] !== 'function') {\n\t      return;\n\t    }\n\t    var cb = args[l - 1];\n\t    value.then(function (res) {\n\t      return cb(null, res);\n\t    }, function (err) {\n\t      return cb(err, null);\n\t    });\n\t  };\n\t}\n\t\n\tfunction isPromise(value) {\n\t  return !!value && typeof value.then === 'function';\n\t}\n\t\n\tfunction isOnline() {\n\t  return typeof navigator !== 'undefined' ? navigator.onLine : true;\n\t}\n\t\n\tfunction isOffline() {\n\t  return !isOnline();\n\t}\n\t\n\tfunction sleep(time, args) {\n\t  return new Promise(function (resolve) {\n\t    setTimeout(resolve, time, args);\n\t  });\n\t}\n\t\n\tfunction retry(fn, count) {\n\t  var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n\t\n\t  return function doTry() {\n\t    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t      args[_key2] = arguments[_key2];\n\t    }\n\t\n\t    return fn.apply(undefined, args).catch(function (err) {\n\t      if (--count < 0) {\n\t        throw err;\n\t      }\n\t      return sleep(getBackedoffDelay(delay, count)).then(function () {\n\t        return doTry.apply(undefined, args);\n\t      });\n\t    });\n\t  };\n\t}\n\t\n\tfunction getFuzzedDelay(retryDelay) {\n\t  var fuzzingFactor = (Math.random() * 2 - 1) * FuzzFactor;\n\t  return retryDelay * (1.0 + fuzzingFactor);\n\t}\n\t\n\tfunction getBackedoffDelay(retryDelay) {\n\t  var retryCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\t\n\t  return getFuzzedDelay(retryDelay * Math.pow(2, retryCount - 1));\n\t}\n\t\n\tfunction createPath(cozy, isV2, doctype) {\n\t  var id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\t  var query = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\t\n\t  var route = '/data/';\n\t  if (!isV2) {\n\t    route += encodeURIComponent(doctype) + '/';\n\t  }\n\t  if (id !== '') {\n\t    route += encodeURIComponent(id);\n\t  }\n\t  var q = encodeQuery(query);\n\t  if (q !== '') {\n\t    route += '?' + q;\n\t  }\n\t  return route;\n\t}\n\t\n\tfunction encodeQuery(query) {\n\t  if (!query) {\n\t    return '';\n\t  }\n\t  var q = '';\n\t  for (var qname in query) {\n\t    if (q !== '') {\n\t      q += '&';\n\t    }\n\t    q += encodeURIComponent(qname) + '=' + encodeURIComponent(query[qname]);\n\t  }\n\t  return q;\n\t}\n\t\n\tfunction decodeQuery(url) {\n\t  var queryIndex = url.indexOf('?');\n\t  if (queryIndex < 0) {\n\t    queryIndex = url.length;\n\t  }\n\t  var queries = {};\n\t  var fragIndex = url.indexOf('#');\n\t  if (fragIndex < 0) {\n\t    fragIndex = url.length;\n\t  }\n\t  if (fragIndex < queryIndex) {\n\t    return queries;\n\t  }\n\t  var queryStr = url.slice(queryIndex + 1, fragIndex);\n\t  if (queryStr === '') {\n\t    return queries;\n\t  }\n\t  var parts = queryStr.split('&');\n\t  for (var i = 0; i < parts.length; i++) {\n\t    var pair = parts[i].split('=');\n\t    if (pair.length === 0 || pair[0] === '') {\n\t      continue;\n\t    }\n\t    var qname = decodeURIComponent(pair[0]);\n\t    if (queries.hasOwnProperty(qname)) {\n\t      continue;\n\t    }\n\t    if (pair.length === 1) {\n\t      queries[qname] = true;\n\t    } else if (pair.length === 2) {\n\t      queries[qname] = decodeURIComponent(pair[1]);\n\t    } else {\n\t      throw new Error('Malformed URL');\n\t    }\n\t  }\n\t  return queries;\n\t}\n\t\n\tvar warned = [];\n\tfunction warn(text) {\n\t  if (warned.indexOf(text) === -1) {\n\t    warned.push(text);\n\t    console.warn('cozy-client-js', text);\n\t  }\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(2);\n\tvar collate = __webpack_require__(7);\n\t\n\tfunction getKey(obj) {\n\t  return Object.keys(obj)[0];\n\t}\n\t\n\tfunction getValue(obj) {\n\t  return obj[getKey(obj)];\n\t}\n\t\n\t// normalize the \"sort\" value\n\tfunction massageSort(sort) {\n\t  if (!Array.isArray(sort)) {\n\t    throw new Error('invalid sort json - should be an array');\n\t  }\n\t  return sort.map(function (sorting) {\n\t    if (typeof sorting === 'string') {\n\t      var obj = {};\n\t      obj[sorting] = 'asc';\n\t      return obj;\n\t    } else {\n\t      return sorting;\n\t    }\n\t  });\n\t}\n\t\n\tvar combinationFields = ['$or', '$nor', '$not'];\n\tfunction isCombinationalField (field) {\n\t  return combinationFields.indexOf(field) > -1;\n\t}\n\t\n\t// collapse logically equivalent gt/gte values\n\tfunction mergeGtGte(operator, value, fieldMatchers) {\n\t  if (typeof fieldMatchers.$eq !== 'undefined') {\n\t    return; // do nothing\n\t  }\n\t  if (typeof fieldMatchers.$gte !== 'undefined') {\n\t    if (operator === '$gte') {\n\t      if (value > fieldMatchers.$gte) { // more specificity\n\t        fieldMatchers.$gte = value;\n\t      }\n\t    } else { // operator === '$gt'\n\t      if (value >= fieldMatchers.$gte) { // more specificity\n\t        delete fieldMatchers.$gte;\n\t        fieldMatchers.$gt = value;\n\t      }\n\t    }\n\t  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n\t    if (operator === '$gte') {\n\t      if (value > fieldMatchers.$gt) { // more specificity\n\t        delete fieldMatchers.$gt;\n\t        fieldMatchers.$gte = value;\n\t      }\n\t    } else { // operator === '$gt'\n\t      if (value > fieldMatchers.$gt) { // more specificity\n\t        fieldMatchers.$gt = value;\n\t      }\n\t    }\n\t  } else {\n\t    fieldMatchers[operator] = value;\n\t  }\n\t}\n\t\n\t// collapse logically equivalent lt/lte values\n\tfunction mergeLtLte(operator, value, fieldMatchers) {\n\t  if (typeof fieldMatchers.$eq !== 'undefined') {\n\t    return; // do nothing\n\t  }\n\t  if (typeof fieldMatchers.$lte !== 'undefined') {\n\t    if (operator === '$lte') {\n\t      if (value < fieldMatchers.$lte) { // more specificity\n\t        fieldMatchers.$lte = value;\n\t      }\n\t    } else { // operator === '$gt'\n\t      if (value <= fieldMatchers.$lte) { // more specificity\n\t        delete fieldMatchers.$lte;\n\t        fieldMatchers.$lt = value;\n\t      }\n\t    }\n\t  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n\t    if (operator === '$lte') {\n\t      if (value < fieldMatchers.$lt) { // more specificity\n\t        delete fieldMatchers.$lt;\n\t        fieldMatchers.$lte = value;\n\t      }\n\t    } else { // operator === '$gt'\n\t      if (value < fieldMatchers.$lt) { // more specificity\n\t        fieldMatchers.$lt = value;\n\t      }\n\t    }\n\t  } else {\n\t    fieldMatchers[operator] = value;\n\t  }\n\t}\n\t\n\t// combine $ne values into one array\n\tfunction mergeNe(value, fieldMatchers) {\n\t  if ('$ne' in fieldMatchers) {\n\t    // there are many things this could \"not\" be\n\t    fieldMatchers.$ne.push(value);\n\t  } else { // doesn't exist yet\n\t    fieldMatchers.$ne = [value];\n\t  }\n\t}\n\t\n\t// add $eq into the mix\n\tfunction mergeEq(value, fieldMatchers) {\n\t  // these all have less specificity than the $eq\n\t  // TODO: check for user errors here\n\t  delete fieldMatchers.$gt;\n\t  delete fieldMatchers.$gte;\n\t  delete fieldMatchers.$lt;\n\t  delete fieldMatchers.$lte;\n\t  delete fieldMatchers.$ne;\n\t  fieldMatchers.$eq = value;\n\t}\n\t\n\t// flatten an array of selectors joined by an $and operator\n\tfunction mergeAndedSelectors(selectors) {\n\t\n\t  // sort to ensure that e.g. if the user specified\n\t  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n\t  // just {$gt: 'b'}\n\t  var res = {};\n\t\n\t  selectors.forEach(function (selector) {\n\t    Object.keys(selector).forEach(function (field) {\n\t      var matcher = selector[field];\n\t      if (typeof matcher !== 'object') {\n\t        matcher = {$eq: matcher};\n\t      }\n\t\n\t      if (isCombinationalField(field)) {\n\t        if (matcher instanceof Array) {\n\t          res[field] = matcher.map(function (m) {\n\t            return mergeAndedSelectors([m]);\n\t          });\n\t        } else {\n\t          res[field] = mergeAndedSelectors([matcher]);\n\t        }\n\t      } else {\n\t        var fieldMatchers = res[field] = res[field] || {};\n\t        Object.keys(matcher).forEach(function (operator) {\n\t          var value = matcher[operator];\n\t\n\t          if (operator === '$gt' || operator === '$gte') {\n\t            return mergeGtGte(operator, value, fieldMatchers);\n\t          } else if (operator === '$lt' || operator === '$lte') {\n\t            return mergeLtLte(operator, value, fieldMatchers);\n\t          } else if (operator === '$ne') {\n\t            return mergeNe(value, fieldMatchers);\n\t          } else if (operator === '$eq') {\n\t            return mergeEq(value, fieldMatchers);\n\t          }\n\t          fieldMatchers[operator] = value;\n\t        });\n\t      }\n\t    });\n\t  });\n\t\n\t  return res;\n\t}\n\t\n\t//\n\t// normalize the selector\n\t//\n\tfunction massageSelector(input) {\n\t  var result = utils.clone(input);\n\t  var wasAnded = false;\n\t  if ('$and' in result) {\n\t    result = mergeAndedSelectors(result['$and']);\n\t    wasAnded = true;\n\t  }\n\t\n\t  if ('$not' in result) {\n\t    //This feels a little like forcing, but it will work for now,\n\t    //I would like to come back to this and make the merging of selectors a little more generic\n\t    result['$not'] = mergeAndedSelectors([result['$not']]);\n\t  }\n\t\n\t  var fields = Object.keys(result);\n\t\n\t  for (var i = 0; i < fields.length; i++) {\n\t    var field = fields[i];\n\t    var matcher = result[field];\n\t\n\t    if (typeof matcher !== 'object' || matcher === null) {\n\t      matcher = {$eq: matcher};\n\t    } else if ('$ne' in matcher && !wasAnded) {\n\t      // I put these in an array, since there may be more than one\n\t      // but in the \"mergeAnded\" operation, I already take care of that\n\t      matcher.$ne = [matcher.$ne];\n\t    }\n\t    result[field] = matcher;\n\t  }\n\t\n\t  return result;\n\t}\n\t\n\t\n\tfunction massageIndexDef(indexDef) {\n\t  indexDef.fields = indexDef.fields.map(function (field) {\n\t    if (typeof field === 'string') {\n\t      var obj = {};\n\t      obj[field] = 'asc';\n\t      return obj;\n\t    }\n\t    return field;\n\t  });\n\t  return indexDef;\n\t}\n\t\n\tfunction getKeyFromDoc(doc, index) {\n\t  var res = [];\n\t  for (var i = 0; i < index.def.fields.length; i++) {\n\t    var field = getKey(index.def.fields[i]);\n\t    res.push(doc[field]);\n\t  }\n\t  return res;\n\t}\n\t\n\t// have to do this manually because REASONS. I don't know why\n\t// CouchDB didn't implement inclusive_start\n\tfunction filterInclusiveStart(rows, targetValue, index) {\n\t  var indexFields = index.def.fields;\n\t  for (var i = 0, len = rows.length; i < len; i++) {\n\t    var row = rows[i];\n\t\n\t    // shave off any docs at the beginning that are <= the\n\t    // target value\n\t\n\t    var docKey = getKeyFromDoc(row.doc, index);\n\t    if (indexFields.length === 1) {\n\t      docKey = docKey[0]; // only one field, not multi-field\n\t    } else { // more than one field in index\n\t      // in the case where e.g. the user is searching {$gt: {a: 1}}\n\t      // but the index is [a, b], then we need to shorten the doc key\n\t      while (docKey.length > targetValue.length) {\n\t        docKey.pop();\n\t      }\n\t    }\n\t    //ABS as we just looking for values that don't match\n\t    if (Math.abs(collate.collate(docKey, targetValue)) > 0) {\n\t      // no need to filter any further; we're past the key\n\t      break;\n\t    }\n\t  }\n\t  return i > 0 ? rows.slice(i) : rows;\n\t}\n\t\n\tfunction reverseOptions(opts) {\n\t  var newOpts = utils.clone(opts);\n\t  delete newOpts.startkey;\n\t  delete newOpts.endkey;\n\t  delete newOpts.inclusive_start;\n\t  delete newOpts.inclusive_end;\n\t\n\t  if ('endkey' in opts) {\n\t    newOpts.startkey = opts.endkey;\n\t  }\n\t  if ('startkey' in opts) {\n\t    newOpts.endkey = opts.startkey;\n\t  }\n\t  if ('inclusive_start' in opts) {\n\t    newOpts.inclusive_end = opts.inclusive_start;\n\t  }\n\t  if ('inclusive_end' in opts) {\n\t    newOpts.inclusive_start = opts.inclusive_end;\n\t  }\n\t  return newOpts;\n\t}\n\t\n\tfunction validateIndex(index) {\n\t  var ascFields = index.fields.filter(function (field) {\n\t    return getValue(field) === 'asc';\n\t  });\n\t  if (ascFields.length !== 0 && ascFields.length !== index.fields.length) {\n\t    throw new Error('unsupported mixed sorting');\n\t  }\n\t}\n\t\n\tfunction validateSort (requestDef, index) {\n\t  if (index.defaultUsed && requestDef.sort) {\n\t    var noneIdSorts = requestDef.sort.filter(function (sortItem) {\n\t      return Object.keys(sortItem)[0] !== '_id';\n\t    }).map(function (sortItem) {\n\t      return Object.keys(sortItem)[0];\n\t    });\n\t\n\t    if (noneIdSorts.length > 0) {\n\t      throw new Error('Cannot sort on field(s) \"' + noneIdSorts.join(',') +\n\t      '\" when using the default index');\n\t    }\n\t  }\n\t\n\t  if (index.defaultUsed) {\n\t    return;\n\t  }\n\t}\n\t\n\tfunction validateFindRequest(requestDef) {\n\t  if (typeof requestDef.selector !== 'object') {\n\t    throw new Error('you must provide a selector when you find()');\n\t  }\n\t\n\t  /*var selectors = requestDef.selector['$and'] || [requestDef.selector];\n\t  for (var i = 0; i < selectors.length; i++) {\n\t    var selector = selectors[i];\n\t    var keys = Object.keys(selector);\n\t    if (keys.length === 0) {\n\t      throw new Error('invalid empty selector');\n\t    }\n\t    //var selection = selector[keys[0]];\n\t    /*if (Object.keys(selection).length !== 1) {\n\t      throw new Error('invalid selector: ' + JSON.stringify(selection) +\n\t        ' - it must have exactly one key/value');\n\t    }\n\t  }*/\n\t}\n\t\n\t// determine the maximum number of fields\n\t// we're going to need to query, e.g. if the user\n\t// has selection ['a'] and sorting ['a', 'b'], then we\n\t// need to use the longer of the two: ['a', 'b']\n\tfunction getUserFields(selector, sort) {\n\t  var selectorFields = Object.keys(selector);\n\t  var sortFields = sort? sort.map(getKey) : [];\n\t  var userFields;\n\t  if (selectorFields.length >= sortFields.length) {\n\t    userFields = selectorFields;\n\t  } else {\n\t    userFields = sortFields;\n\t  }\n\t\n\t  if (sortFields.length === 0) {\n\t    return {\n\t      fields: userFields\n\t    };\n\t  }\n\t\n\t  // sort according to the user's preferred sorting\n\t  userFields = userFields.sort(function (left, right) {\n\t    var leftIdx = sortFields.indexOf(left);\n\t    if (leftIdx === -1) {\n\t      leftIdx = Number.MAX_VALUE;\n\t    }\n\t    var rightIdx = sortFields.indexOf(right);\n\t    if (rightIdx === -1) {\n\t      rightIdx = Number.MAX_VALUE;\n\t    }\n\t    return leftIdx < rightIdx ? -1 : leftIdx > rightIdx ? 1 : 0;\n\t  });\n\t\n\t  return {\n\t    fields: userFields,\n\t    sortOrder: sort.map(getKey)\n\t  };\n\t}\n\t\n\tmodule.exports = {\n\t  getKey: getKey,\n\t  getValue: getValue,\n\t  massageSort: massageSort,\n\t  massageSelector: massageSelector,\n\t  validateIndex: validateIndex,\n\t  validateFindRequest: validateFindRequest,\n\t  validateSort: validateSort,\n\t  reverseOptions: reverseOptions,\n\t  filterInclusiveStart: filterInclusiveStart,\n\t  massageIndexDef: massageIndexDef,\n\t  parseField: utils.parseField,\n\t  getUserFields: getUserFields,\n\t  isCombinationalField: isCombinationalField\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.DOCTYPE_FILES = undefined;\n\texports.normalizeDoctype = normalizeDoctype;\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar DOCTYPE_FILES = exports.DOCTYPE_FILES = 'io.cozy.files';\n\t\n\tvar KNOWN_DOCTYPES = {\n\t  'files': DOCTYPE_FILES,\n\t  'folder': DOCTYPE_FILES,\n\t  'contact': 'io.cozy.contacts',\n\t  'event': 'io.cozy.events',\n\t  'track': 'io.cozy.labs.music.track',\n\t  'playlist': 'io.cozy.labs.music.playlist'\n\t};\n\t\n\tvar REVERSE_KNOWN = {};\n\tObject.keys(KNOWN_DOCTYPES).forEach(function (k) {\n\t  REVERSE_KNOWN[KNOWN_DOCTYPES[k]] = k;\n\t});\n\t\n\tfunction normalizeDoctype(cozy, isV2, doctype) {\n\t  var isQualified = doctype.indexOf('.') !== -1;\n\t  if (isV2 && isQualified) {\n\t    var known = REVERSE_KNOWN[doctype];\n\t    if (known) return known;\n\t    return doctype.replace(/\\./g, '-');\n\t  }\n\t  if (!isV2 && !isQualified) {\n\t    var _known = KNOWN_DOCTYPES[doctype];\n\t    if (_known) {\n\t      (0, _utils.warn)('you are using a non-qualified doctype ' + doctype + ' assumed to be ' + _known);\n\t      return _known;\n\t    }\n\t    throw new Error('Doctype ' + doctype + ' should be qualified.');\n\t  }\n\t  return doctype;\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\n\tvar MAGNITUDE_DIGITS = 3; // ditto\n\tvar SEP = ''; // set to '_' for easier debugging \n\t\n\tvar utils = __webpack_require__(40);\n\t\n\texports.collate = function (a, b) {\n\t\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t\n\t  a = exports.normalizeKey(a);\n\t  b = exports.normalizeKey(b);\n\t\n\t  var ai = collationIndex(a);\n\t  var bi = collationIndex(b);\n\t  if ((ai - bi) !== 0) {\n\t    return ai - bi;\n\t  }\n\t  if (a === null) {\n\t    return 0;\n\t  }\n\t  switch (typeof a) {\n\t    case 'number':\n\t      return a - b;\n\t    case 'boolean':\n\t      return a === b ? 0 : (a < b ? -1 : 1);\n\t    case 'string':\n\t      return stringCollate(a, b);\n\t  }\n\t  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n\t};\n\t\n\t// couch considers null/NaN/Infinity/-Infinity === undefined,\n\t// for the purposes of mapreduce indexes. also, dates get stringified.\n\texports.normalizeKey = function (key) {\n\t  switch (typeof key) {\n\t    case 'undefined':\n\t      return null;\n\t    case 'number':\n\t      if (key === Infinity || key === -Infinity || isNaN(key)) {\n\t        return null;\n\t      }\n\t      return key;\n\t    case 'object':\n\t      var origKey = key;\n\t      if (Array.isArray(key)) {\n\t        var len = key.length;\n\t        key = new Array(len);\n\t        for (var i = 0; i < len; i++) {\n\t          key[i] = exports.normalizeKey(origKey[i]);\n\t        }\n\t      } else if (key instanceof Date) {\n\t        return key.toJSON();\n\t      } else if (key !== null) { // generic object\n\t        key = {};\n\t        for (var k in origKey) {\n\t          if (origKey.hasOwnProperty(k)) {\n\t            var val = origKey[k];\n\t            if (typeof val !== 'undefined') {\n\t              key[k] = exports.normalizeKey(val);\n\t            }\n\t          }\n\t        }\n\t      }\n\t  }\n\t  return key;\n\t};\n\t\n\tfunction indexify(key) {\n\t  if (key !== null) {\n\t    switch (typeof key) {\n\t      case 'boolean':\n\t        return key ? 1 : 0;\n\t      case 'number':\n\t        return numToIndexableString(key);\n\t      case 'string':\n\t        // We've to be sure that key does not contain \\u0000\n\t        // Do order-preserving replacements:\n\t        // 0 -> 1, 1\n\t        // 1 -> 1, 2\n\t        // 2 -> 2, 2\n\t        return key\n\t          .replace(/\\u0002/g, '\\u0002\\u0002')\n\t          .replace(/\\u0001/g, '\\u0001\\u0002')\n\t          .replace(/\\u0000/g, '\\u0001\\u0001');\n\t      case 'object':\n\t        var isArray = Array.isArray(key);\n\t        var arr = isArray ? key : Object.keys(key);\n\t        var i = -1;\n\t        var len = arr.length;\n\t        var result = '';\n\t        if (isArray) {\n\t          while (++i < len) {\n\t            result += exports.toIndexableString(arr[i]);\n\t          }\n\t        } else {\n\t          while (++i < len) {\n\t            var objKey = arr[i];\n\t            result += exports.toIndexableString(objKey) +\n\t                exports.toIndexableString(key[objKey]);\n\t          }\n\t        }\n\t        return result;\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t// convert the given key to a string that would be appropriate\n\t// for lexical sorting, e.g. within a database, where the\n\t// sorting is the same given by the collate() function.\n\texports.toIndexableString = function (key) {\n\t  var zero = '\\u0000';\n\t  key = exports.normalizeKey(key);\n\t  return collationIndex(key) + SEP + indexify(key) + zero;\n\t};\n\t\n\tfunction parseNumber(str, i) {\n\t  var originalIdx = i;\n\t  var num;\n\t  var zero = str[i] === '1';\n\t  if (zero) {\n\t    num = 0;\n\t    i++;\n\t  } else {\n\t    var neg = str[i] === '0';\n\t    i++;\n\t    var numAsString = '';\n\t    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n\t    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n\t    if (neg) {\n\t      magnitude = -magnitude;\n\t    }\n\t    i += MAGNITUDE_DIGITS;\n\t    while (true) {\n\t      var ch = str[i];\n\t      if (ch === '\\u0000') {\n\t        break;\n\t      } else {\n\t        numAsString += ch;\n\t      }\n\t      i++;\n\t    }\n\t    numAsString = numAsString.split('.');\n\t    if (numAsString.length === 1) {\n\t      num = parseInt(numAsString, 10);\n\t    } else {\n\t      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n\t    }\n\t    if (neg) {\n\t      num = num - 10;\n\t    }\n\t    if (magnitude !== 0) {\n\t      // parseFloat is more reliable than pow due to rounding errors\n\t      // e.g. Number.MAX_VALUE would return Infinity if we did\n\t      // num * Math.pow(10, magnitude);\n\t      num = parseFloat(num + 'e' + magnitude);\n\t    }\n\t  }\n\t  return {num: num, length : i - originalIdx};\n\t}\n\t\n\t// move up the stack while parsing\n\t// this function moved outside of parseIndexableString for performance\n\tfunction pop(stack, metaStack) {\n\t  var obj = stack.pop();\n\t\n\t  if (metaStack.length) {\n\t    var lastMetaElement = metaStack[metaStack.length - 1];\n\t    if (obj === lastMetaElement.element) {\n\t      // popping a meta-element, e.g. an object whose value is another object\n\t      metaStack.pop();\n\t      lastMetaElement = metaStack[metaStack.length - 1];\n\t    }\n\t    var element = lastMetaElement.element;\n\t    var lastElementIndex = lastMetaElement.index;\n\t    if (Array.isArray(element)) {\n\t      element.push(obj);\n\t    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n\t      var key = stack.pop();\n\t      element[key] = obj;\n\t    } else {\n\t      stack.push(obj); // obj with key only\n\t    }\n\t  }\n\t}\n\t\n\texports.parseIndexableString = function (str) {\n\t  var stack = [];\n\t  var metaStack = []; // stack for arrays and objects\n\t  var i = 0;\n\t\n\t  while (true) {\n\t    var collationIndex = str[i++];\n\t    if (collationIndex === '\\u0000') {\n\t      if (stack.length === 1) {\n\t        return stack.pop();\n\t      } else {\n\t        pop(stack, metaStack);\n\t        continue;\n\t      }\n\t    }\n\t    switch (collationIndex) {\n\t      case '1':\n\t        stack.push(null);\n\t        break;\n\t      case '2':\n\t        stack.push(str[i] === '1');\n\t        i++;\n\t        break;\n\t      case '3':\n\t        var parsedNum = parseNumber(str, i);\n\t        stack.push(parsedNum.num);\n\t        i += parsedNum.length;\n\t        break;\n\t      case '4':\n\t        var parsedStr = '';\n\t        while (true) {\n\t          var ch = str[i];\n\t          if (ch === '\\u0000') {\n\t            break;\n\t          }\n\t          parsedStr += ch;\n\t          i++;\n\t        }\n\t        // perform the reverse of the order-preserving replacement\n\t        // algorithm (see above)\n\t        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n\t          .replace(/\\u0001\\u0002/g, '\\u0001')\n\t          .replace(/\\u0002\\u0002/g, '\\u0002');\n\t        stack.push(parsedStr);\n\t        break;\n\t      case '5':\n\t        var arrayElement = { element: [], index: stack.length };\n\t        stack.push(arrayElement.element);\n\t        metaStack.push(arrayElement);\n\t        break;\n\t      case '6':\n\t        var objElement = { element: {}, index: stack.length };\n\t        stack.push(objElement.element);\n\t        metaStack.push(objElement);\n\t        break;\n\t      default:\n\t        throw new Error(\n\t          'bad collationIndex or unexpectedly reached end of input: ' + collationIndex);\n\t    }\n\t  }\n\t};\n\t\n\tfunction arrayCollate(a, b) {\n\t  var len = Math.min(a.length, b.length);\n\t  for (var i = 0; i < len; i++) {\n\t    var sort = exports.collate(a[i], b[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t  }\n\t  return (a.length === b.length) ? 0 :\n\t    (a.length > b.length) ? 1 : -1;\n\t}\n\tfunction stringCollate(a, b) {\n\t  // See: https://github.com/daleharvey/pouchdb/issues/40\n\t  // This is incompatible with the CouchDB implementation, but its the\n\t  // best we can do for now\n\t  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n\t}\n\tfunction objectCollate(a, b) {\n\t  var ak = Object.keys(a), bk = Object.keys(b);\n\t  var len = Math.min(ak.length, bk.length);\n\t  for (var i = 0; i < len; i++) {\n\t    // First sort the keys\n\t    var sort = exports.collate(ak[i], bk[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t    // if the keys are equal sort the values\n\t    sort = exports.collate(a[ak[i]], b[bk[i]]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t\n\t  }\n\t  return (ak.length === bk.length) ? 0 :\n\t    (ak.length > bk.length) ? 1 : -1;\n\t}\n\t// The collation is defined by erlangs ordered terms\n\t// the atoms null, true, false come first, then numbers, strings,\n\t// arrays, then objects\n\t// null/undefined/NaN/Infinity/-Infinity are all considered null\n\tfunction collationIndex(x) {\n\t  var id = ['boolean', 'number', 'string', 'object'];\n\t  var idx = id.indexOf(typeof x);\n\t  //false if -1 otherwise true, but fast!!!!1\n\t  if (~idx) {\n\t    if (x === null) {\n\t      return 1;\n\t    }\n\t    if (Array.isArray(x)) {\n\t      return 5;\n\t    }\n\t    return idx < 3 ? (idx + 2) : (idx + 3);\n\t  }\n\t  if (Array.isArray(x)) {\n\t    return 5;\n\t  }\n\t}\n\t\n\t// conversion:\n\t// x yyy zz...zz\n\t// x = 0 for negative, 1 for 0, 2 for positive\n\t// y = exponent (for negative numbers negated) moved so that it's >= 0\n\t// z = mantisse\n\tfunction numToIndexableString(num) {\n\t\n\t  if (num === 0) {\n\t    return '1';\n\t  }\n\t\n\t  // convert number to exponential format for easier and\n\t  // more succinct string sorting\n\t  var expFormat = num.toExponential().split(/e\\+?/);\n\t  var magnitude = parseInt(expFormat[1], 10);\n\t\n\t  var neg = num < 0;\n\t\n\t  var result = neg ? '0' : '2';\n\t\n\t  // first sort by magnitude\n\t  // it's easier if all magnitudes are positive\n\t  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n\t  var magString = utils.padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\t\n\t  result += SEP + magString;\n\t\n\t  // then sort by the factor\n\t  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n\t  if (neg) { // for negative reverse ordering\n\t    factor = 10 - factor;\n\t  }\n\t\n\t  var factorStr = factor.toFixed(20);\n\t\n\t  // strip zeros from the end\n\t  factorStr = factorStr.replace(/\\.?0+$/, '');\n\t\n\t  result += SEP + factorStr;\n\t\n\t  return result;\n\t}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.AppToken = exports.AccessToken = exports.Client = exports.StateKey = exports.CredsKey = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global btoa */\n\t\n\t\n\texports.client = client;\n\texports.registerClient = registerClient;\n\texports.updateClient = updateClient;\n\texports.unregisterClient = unregisterClient;\n\texports.getClient = getClient;\n\texports.getAuthCodeURL = getAuthCodeURL;\n\texports.getAccessToken = getAccessToken;\n\texports.refreshToken = refreshToken;\n\texports.oauthFlow = oauthFlow;\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar _fetch = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar StateSize = 16;\n\t\n\tvar CredsKey = exports.CredsKey = 'creds';\n\tvar StateKey = exports.StateKey = 'state';\n\t\n\tvar Client = exports.Client = function () {\n\t  function Client(opts) {\n\t    _classCallCheck(this, Client);\n\t\n\t    this.clientID = opts.clientID || opts.client_id || '';\n\t    this.clientSecret = opts.clientSecret || opts.client_secret || '';\n\t    this.registrationAccessToken = opts.registrationAccessToken || opts.registration_access_token || '';\n\t\n\t    if (opts.redirect_uris) {\n\t      this.redirectURI = opts.redirect_uris[0] || '';\n\t    } else {\n\t      this.redirectURI = opts.redirectURI || '';\n\t    }\n\t\n\t    this.softwareID = opts.softwareID || opts.software_id || '';\n\t    this.softwareVersion = opts.softwareVersion || opts.software_version || '';\n\t    this.clientName = opts.clientName || opts.client_name || '';\n\t    this.clientKind = opts.clientKind || opts.client_kind || '';\n\t    this.clientURI = opts.clientURI || opts.client_uri || '';\n\t\n\t    this.logoURI = opts.logoURI || opts.logo_uri || '';\n\t    this.policyURI = opts.policyURI || opts.policy_uri || '';\n\t\n\t    if (!this.registrationAccessToken) {\n\t      if (this.redirectURI === '') {\n\t        throw new Error('Missing redirectURI field');\n\t      }\n\t      if (this.softwareID === '') {\n\t        throw new Error('Missing softwareID field');\n\t      }\n\t      if (this.clientName === '') {\n\t        throw new Error('Missing clientName field');\n\t      }\n\t    }\n\t  }\n\t\n\t  _createClass(Client, [{\n\t    key: 'isRegistered',\n\t    value: function isRegistered() {\n\t      return this.clientID !== '';\n\t    }\n\t  }, {\n\t    key: 'toRegisterJSON',\n\t    value: function toRegisterJSON() {\n\t      return {\n\t        redirect_uris: [this.redirectURI],\n\t        software_id: this.softwareID,\n\t        software_version: this.softwareVersion,\n\t        client_name: this.clientName,\n\t        client_kind: this.clientKind,\n\t        client_uri: this.clientURI,\n\t        logo_uri: this.logoURI,\n\t        policy_uri: this.policyURI\n\t      };\n\t    }\n\t  }, {\n\t    key: 'toAuthHeader',\n\t    value: function toAuthHeader() {\n\t      return 'Bearer ' + this.registrationAccessToken;\n\t    }\n\t  }]);\n\t\n\t  return Client;\n\t}();\n\t\n\tvar AccessToken = exports.AccessToken = function () {\n\t  function AccessToken(opts) {\n\t    _classCallCheck(this, AccessToken);\n\t\n\t    this.tokenType = opts.tokenType || opts.token_type;\n\t    this.accessToken = opts.accessToken || opts.access_token;\n\t    this.refreshToken = opts.refreshToken || opts.refresh_token;\n\t    this.scope = opts.scope;\n\t  }\n\t\n\t  _createClass(AccessToken, [{\n\t    key: 'toAuthHeader',\n\t    value: function toAuthHeader() {\n\t      return 'Bearer ' + this.accessToken;\n\t    }\n\t  }, {\n\t    key: 'toBasicAuth',\n\t    value: function toBasicAuth() {\n\t      return 'user:' + this.accessToken + '@';\n\t    }\n\t  }]);\n\t\n\t  return AccessToken;\n\t}();\n\t\n\tvar AppToken = exports.AppToken = function () {\n\t  function AppToken(opts) {\n\t    _classCallCheck(this, AppToken);\n\t\n\t    this.token = opts.token || '';\n\t  }\n\t\n\t  _createClass(AppToken, [{\n\t    key: 'toAuthHeader',\n\t    value: function toAuthHeader() {\n\t      return 'Bearer ' + this.token;\n\t    }\n\t  }, {\n\t    key: 'toBasicAuth',\n\t    value: function toBasicAuth() {\n\t      return 'user:' + this.token + '@';\n\t    }\n\t  }]);\n\t\n\t  return AppToken;\n\t}();\n\t\n\tfunction client(cozy, clientParams) {\n\t  if (!clientParams) {\n\t    clientParams = cozy._clientParams;\n\t  }\n\t  if (clientParams instanceof Client) {\n\t    return clientParams;\n\t  }\n\t  return new Client(clientParams);\n\t}\n\t\n\tfunction registerClient(cozy, clientParams) {\n\t  var cli = client(cozy, clientParams);\n\t  if (cli.isRegistered()) {\n\t    return Promise.reject(new Error('Client already registered'));\n\t  }\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/auth/register', cli.toRegisterJSON(), {\n\t    disableAuth: true\n\t  }).then(function (data) {\n\t    return new Client(data);\n\t  });\n\t}\n\t\n\tfunction updateClient(cozy, clientParams) {\n\t  var resetSecret = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t  var cli = client(cozy, clientParams);\n\t  if (!cli.isRegistered()) {\n\t    return Promise.reject(new Error('Client not registered'));\n\t  }\n\t  var data = cli.toRegisterJSON();\n\t  data.client_id = cli.clientID;\n\t  if (resetSecret) data.client_secret = cli.clientSecret;\n\t\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'PUT', '/auth/register/' + cli.clientID, data, {\n\t    manualAuthCredentials: {\n\t      token: cli\n\t    }\n\t  }).then(function (data) {\n\t    return createClient(data, cli);\n\t  });\n\t}\n\t\n\tfunction unregisterClient(cozy, clientParams) {\n\t  var cli = client(cozy, clientParams);\n\t  if (!cli.isRegistered()) {\n\t    return Promise.reject(new Error('Client not registered'));\n\t  }\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'DELETE', '/auth/register/' + cli.clientID, null, {\n\t    manualAuthCredentials: {\n\t      token: cli\n\t    }\n\t  });\n\t}\n\t\n\t// getClient will retrive the registered client informations from the server.\n\tfunction getClient(cozy, clientParams) {\n\t  var cli = client(cozy, clientParams);\n\t  if (!cli.isRegistered()) {\n\t    return Promise.reject(new Error('Client not registered'));\n\t  }\n\t  if ((0, _utils.isOffline)()) {\n\t    return Promise.resolve(cli);\n\t  }\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/auth/register/' + cli.clientID, null, {\n\t    manualAuthCredentials: {\n\t      token: cli\n\t    }\n\t  }).then(function (data) {\n\t    return createClient(data, cli);\n\t  }).catch(function (err) {\n\t    // If we fall into an error while fetching the client (because of a\n\t    // bad connectivity for instance), we do not bail the whole process\n\t    // since the client should be able to continue with the persisted\n\t    // client and token.\n\t    //\n\t    // If it is an explicit Unauthorized error though, we bail, clear th\n\t    // cache and retry.\n\t    if (_fetch.FetchError.isUnauthorized(err) || _fetch.FetchError.isNotFound(err)) {\n\t      throw new Error('Client has been revoked');\n\t    }\n\t    throw err;\n\t  });\n\t}\n\t\n\t// createClient returns a new Client instance given on object containing the\n\t// data of the client, from the API, and an old instance of the client.\n\tfunction createClient(data, oldClient) {\n\t  var newClient = new Client(data);\n\t  // we need to keep track of the registrationAccessToken since it is send\n\t  // only on registration. The GET /auth/register/:client-id endpoint does\n\t  // not return this token.\n\t  var shouldPassRegistration = !!oldClient && oldClient.registrationAccessToken !== '' && newClient.registrationAccessToken === '';\n\t  if (shouldPassRegistration) {\n\t    newClient.registrationAccessToken = oldClient.registrationAccessToken;\n\t  }\n\t  return newClient;\n\t}\n\t\n\t// getAuthCodeURL returns a pair {authURL,state} given a registered client. The\n\t// state should be stored in order to be checked against on the user validation\n\t// phase.\n\tfunction getAuthCodeURL(cozy, client) {\n\t  var scopes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\t\n\t  if (!(client instanceof Client)) {\n\t    client = new Client(client);\n\t  }\n\t  if (!client.isRegistered()) {\n\t    throw new Error('Client not registered');\n\t  }\n\t  var state = generateRandomState();\n\t  var query = {\n\t    'client_id': client.clientID,\n\t    'redirect_uri': client.redirectURI,\n\t    'state': state,\n\t    'response_type': 'code',\n\t    'scope': scopes.join(' ')\n\t  };\n\t  return {\n\t    url: cozy._url + ('/auth/authorize?' + (0, _utils.encodeQuery)(query)),\n\t    state: state\n\t  };\n\t}\n\t\n\t// getAccessToken perform a request on the access_token entrypoint with the\n\t// authorization_code grant type in order to generate a new access token for a\n\t// newly registered client.\n\t//\n\t// This method extracts the access code and state from the given URL. By\n\t// default it uses window.location.href. Also, it checks the given state with\n\t// the one specified in the URL query parameter to prevent CSRF attacks.\n\tfunction getAccessToken(cozy, client, state) {\n\t  var pageURL = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\t\n\t  if (!state) {\n\t    return Promise.reject(new Error('Missing state value'));\n\t  }\n\t  var grantQueries = getGrantCodeFromPageURL(pageURL);\n\t  if (grantQueries === null) {\n\t    return Promise.reject(new Error('Missing states from current URL'));\n\t  }\n\t  if (state !== grantQueries.state) {\n\t    return Promise.reject(new Error('Given state does not match url query state'));\n\t  }\n\t  return retrieveToken(cozy, client, null, {\n\t    'grant_type': 'authorization_code',\n\t    'code': grantQueries.code\n\t  });\n\t}\n\t\n\t// refreshToken perform a request on the access_token entrypoint with the\n\t// refresh_token grant type in order to refresh the given token.\n\tfunction refreshToken(cozy, client, token) {\n\t  return retrieveToken(cozy, client, token, {\n\t    'grant_type': 'refresh_token',\n\t    'refresh_token': token.refreshToken\n\t  });\n\t}\n\t\n\t// oauthFlow performs the stateful registration and access granting of an OAuth\n\t// client.\n\tfunction oauthFlow(cozy, storage, clientParams, onRegistered) {\n\t  var ignoreCachedCredentials = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\t\n\t  if (ignoreCachedCredentials) {\n\t    return storage.clear().then(function () {\n\t      return oauthFlow(cozy, storage, clientParams, onRegistered, false);\n\t    });\n\t  }\n\t\n\t  var tryCount = 0;\n\t\n\t  function clearAndRetry(err) {\n\t    if (tryCount++ > 0) {\n\t      throw err;\n\t    }\n\t    return storage.clear().then(function () {\n\t      return oauthFlow(cozy, storage, clientParams, onRegistered);\n\t    });\n\t  }\n\t\n\t  function registerNewClient() {\n\t    return storage.clear().then(function () {\n\t      return registerClient(cozy, clientParams);\n\t    }).then(function (client) {\n\t      var _getAuthCodeURL = getAuthCodeURL(cozy, client, clientParams.scopes),\n\t          url = _getAuthCodeURL.url,\n\t          state = _getAuthCodeURL.state;\n\t\n\t      return storage.save(StateKey, { client: client, url: url, state: state });\n\t    });\n\t  }\n\t\n\t  return Promise.all([storage.load(CredsKey), storage.load(StateKey)]).then(function (_ref) {\n\t    var _ref2 = _slicedToArray(_ref, 2),\n\t        credentials = _ref2[0],\n\t        storedState = _ref2[1];\n\t\n\t    // If credentials are cached we re-fetch the registered client with the\n\t    // said token. Fetching the client, if the token is outdated we should try\n\t    // the token is refreshed.\n\t    if (credentials) {\n\t      var oldClient = void 0,\n\t          _token = void 0;\n\t      try {\n\t        oldClient = new Client(credentials.client);\n\t        _token = new AccessToken(credentials.token);\n\t      } catch (err) {\n\t        // bad cache, we should clear and retry the process\n\t        return clearAndRetry(err);\n\t      }\n\t      return getClient(cozy, oldClient).then(function (client) {\n\t        return { client: client, token: _token };\n\t      }).catch(function (err) {\n\t        // If we fall into an error while fetching the client (because of a\n\t        // bad connectivity for instance), we do not bail the whole process\n\t        // since the client should be able to continue with the persisted\n\t        // client and token.\n\t        //\n\t        // If it is an explicit Unauthorized error though, we bail, clear th\n\t        // cache and retry.\n\t        if (_fetch.FetchError.isUnauthorized(err) || _fetch.FetchError.isNotFound(err)) {\n\t          throw new Error('Client has been revoked');\n\t        }\n\t        return { client: oldClient, token: _token };\n\t      });\n\t    }\n\t\n\t    // Otherwise register a new client if necessary (ie. no client is stored)\n\t    // and call the onRegistered callback to wait for the user to grant the\n\t    // access. Finally fetches to access token on success.\n\t    var statePromise = void 0;\n\t    if (!storedState) {\n\t      statePromise = registerNewClient();\n\t    } else {\n\t      statePromise = Promise.resolve(storedState);\n\t    }\n\t\n\t    var client = void 0,\n\t        state = void 0,\n\t        token = void 0;\n\t    return statePromise.then(function (data) {\n\t      client = data.client;\n\t      state = data.state;\n\t      return Promise.resolve(onRegistered(client, data.url));\n\t    }).then(function (pageURL) {\n\t      return getAccessToken(cozy, client, state, pageURL);\n\t    }).then(function (t) {\n\t      token = t;\n\t    }).then(function () {\n\t      return storage.delete(StateKey);\n\t    }).then(function () {\n\t      return { client: client, token: token };\n\t    });\n\t  }).then(function (creds) {\n\t    return storage.save(CredsKey, creds);\n\t  }, function (err) {\n\t    if (_fetch.FetchError.isUnauthorized(err)) {\n\t      return clearAndRetry(err);\n\t    } else {\n\t      throw err;\n\t    }\n\t  });\n\t}\n\t\n\t// retrieveToken perform a request on the access_token entrypoint in order to\n\t// fetch a token.\n\tfunction retrieveToken(cozy, client, token, query) {\n\t  if (!(client instanceof Client)) {\n\t    client = new Client(client);\n\t  }\n\t  if (!client.isRegistered()) {\n\t    return Promise.reject(new Error('Client not registered'));\n\t  }\n\t  var body = (0, _utils.encodeQuery)(Object.assign({}, query, {\n\t    'client_id': client.clientID,\n\t    'client_secret': client.clientSecret\n\t  }));\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/auth/access_token', body, {\n\t    disableAuth: token === null,\n\t    dontRetry: true,\n\t    manualAuthCredentials: { client: client, token: token },\n\t    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n\t  }).then(function (data) {\n\t    data.refreshToken = data.refreshToken || query.refresh_token;\n\t    return new AccessToken(data);\n\t  });\n\t}\n\t\n\t// getGrantCodeFromPageURL extract the state and access_code query parameters\n\t// from the given url\n\tfunction getGrantCodeFromPageURL() {\n\t  var pageURL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t\n\t  if (pageURL === '' && typeof window !== 'undefined') {\n\t    pageURL = window.location.href;\n\t  }\n\t  var queries = (0, _utils.decodeQuery)(pageURL);\n\t  if (!queries.hasOwnProperty('state')) {\n\t    return null;\n\t  }\n\t  return {\n\t    state: queries['state'],\n\t    code: queries['access_code']\n\t  };\n\t}\n\t\n\t// generateRandomState will try to generate a 128bits random value from a secure\n\t// pseudo random generator. It will fallback on Math.random if it cannot find\n\t// such generator.\n\tfunction generateRandomState() {\n\t  var buffer = void 0;\n\t  if (typeof window !== 'undefined' && typeof window.crypto !== 'undefined' && typeof window.crypto.getRandomValues === 'function') {\n\t    buffer = new Uint8Array(StateSize);\n\t    window.crypto.getRandomValues(buffer);\n\t  } else {\n\t    try {\n\t      buffer = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"crypto\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())).randomBytes(StateSize);\n\t    } catch (e) {}\n\t  }\n\t  if (!buffer) {\n\t    buffer = new Array(StateSize);\n\t    for (var i = 0; i < buffer.length; i++) {\n\t      buffer[i] = Math.floor(Math.random() * 255);\n\t    }\n\t  }\n\t  return btoa(String.fromCharCode.apply(null, buffer)).replace(/=+$/, '').replace(/\\//g, '_').replace(/\\+/g, '-');\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\tvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\t\n\tvar scheduleDrain;\n\t\n\t{\n\t  if (Mutation) {\n\t    var called = 0;\n\t    var observer = new Mutation(nextTick);\n\t    var element = global.document.createTextNode('');\n\t    observer.observe(element, {\n\t      characterData: true\n\t    });\n\t    scheduleDrain = function () {\n\t      element.data = (called = ++called % 2);\n\t    };\n\t  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n\t    var channel = new global.MessageChannel();\n\t    channel.port1.onmessage = nextTick;\n\t    scheduleDrain = function () {\n\t      channel.port2.postMessage(0);\n\t    };\n\t  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n\t    scheduleDrain = function () {\n\t\n\t      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t      var scriptEl = global.document.createElement('script');\n\t      scriptEl.onreadystatechange = function () {\n\t        nextTick();\n\t\n\t        scriptEl.onreadystatechange = null;\n\t        scriptEl.parentNode.removeChild(scriptEl);\n\t        scriptEl = null;\n\t      };\n\t      global.document.documentElement.appendChild(scriptEl);\n\t    };\n\t  } else {\n\t    scheduleDrain = function () {\n\t      setTimeout(nextTick, 0);\n\t    };\n\t  }\n\t}\n\t\n\tvar draining;\n\tvar queue = [];\n\t//named nextTick for less confusing stack traces\n\tfunction nextTick() {\n\t  draining = true;\n\t  var i, oldQueue;\n\t  var len = queue.length;\n\t  while (len) {\n\t    oldQueue = queue;\n\t    queue = [];\n\t    i = -1;\n\t    while (++i < len) {\n\t      oldQueue[i]();\n\t    }\n\t    len = queue.length;\n\t  }\n\t  draining = false;\n\t}\n\t\n\tmodule.exports = immediate;\n\tfunction immediate(task) {\n\t  if (queue.push(task) === 1 && !draining) {\n\t    scheduleDrain();\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t/* istanbul ignore if */\n\texports.Promise = __webpack_require__(20);\n\t\n\texports.inherits = __webpack_require__(10);\n\texports.extend = __webpack_require__(16);\n\tvar argsarray = __webpack_require__(13);\n\t\n\t/* istanbul ignore next */\n\texports.promisedCallback = function (promise, callback) {\n\t  if (callback) {\n\t    promise.then(function (res) {\n\t      process.nextTick(function () {\n\t        callback(null, res);\n\t      });\n\t    }, function (reason) {\n\t      process.nextTick(function () {\n\t        callback(reason);\n\t      });\n\t    });\n\t  }\n\t  return promise;\n\t};\n\t\n\t/* istanbul ignore next */\n\texports.callbackify = function (fun) {\n\t  return argsarray(function (args) {\n\t    var cb = args.pop();\n\t    var promise = fun.apply(this, args);\n\t    if (typeof cb === 'function') {\n\t      exports.promisedCallback(promise, cb);\n\t    }\n\t    return promise;\n\t  });\n\t};\n\t\n\t// Promise finally util similar to Q.finally\n\t/* istanbul ignore next */\n\texports.fin = function (promise, cb) {\n\t  return promise.then(function (res) {\n\t    var promise2 = cb();\n\t    if (typeof promise2.then === 'function') {\n\t      return promise2.then(function () {\n\t        return res;\n\t      });\n\t    }\n\t    return res;\n\t  }, function (reason) {\n\t    var promise2 = cb();\n\t    if (typeof promise2.then === 'function') {\n\t      return promise2.then(function () {\n\t        throw reason;\n\t      });\n\t    }\n\t    throw reason;\n\t  });\n\t};\n\t\n\texports.sequentialize = function (queue, promiseFactory) {\n\t  return function () {\n\t    var args = arguments;\n\t    var that = this;\n\t    return queue.add(function () {\n\t      return promiseFactory.apply(that, args);\n\t    });\n\t  };\n\t};\n\t\n\texports.flatten = function (arrs) {\n\t  var res = [];\n\t  for (var i = 0, len = arrs.length; i < len; i++) {\n\t    res = res.concat(arrs[i]);\n\t  }\n\t  return res;\n\t};\n\t\n\t// uniq an array of strings, order not guaranteed\n\t// similar to underscore/lodash _.uniq\n\texports.uniq = function (arr) {\n\t  var map = {};\n\t\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    map['$' + arr[i]] = true;\n\t  }\n\t\n\t  var keys = Object.keys(map);\n\t  var output = new Array(keys.length);\n\t\n\t  for (i = 0, len = keys.length; i < len; i++) {\n\t    output[i] = keys[i].substring(1);\n\t  }\n\t  return output;\n\t};\n\t\n\tvar crypto = __webpack_require__(63);\n\tvar Md5 = __webpack_require__(22);\n\t\n\texports.MD5 = function (string) {\n\t  /* istanbul ignore else */\n\t  if (!process.browser) {\n\t    return crypto.createHash('md5').update(string).digest('hex');\n\t  } else {\n\t    return Md5.hash(string);\n\t  }\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar localUtils = __webpack_require__(4);\n\tvar abstractMapReduce = __webpack_require__(42);\n\tvar parseField = localUtils.parseField;\n\t\n\t//\n\t// One thing about these mappers:\n\t//\n\t// Per the advice of John-David Dalton (http://youtu.be/NthmeLEhDDM),\n\t// what you want to do in this case is optimize for the smallest possible\n\t// function, since that's the thing that gets run over and over again.\n\t//\n\t// This code would be a lot simpler if all the if/elses were inside\n\t// the function, but it would also be a lot less performant.\n\t//\n\t\n\t\n\tfunction createDeepMultiMapper(fields, emit) {\n\t  return function (doc) {\n\t    var toEmit = [];\n\t    for (var i = 0, iLen = fields.length; i < iLen; i++) {\n\t      var parsedField = parseField(fields[i]);\n\t      var value = doc;\n\t      for (var j = 0, jLen = parsedField.length; j < jLen; j++) {\n\t        var key = parsedField[j];\n\t        value = value[key];\n\t        if (!value) {\n\t          break;\n\t        }\n\t      }\n\t      toEmit.push(value);\n\t    }\n\t    emit(toEmit);\n\t  };\n\t}\n\t\n\tfunction createDeepSingleMapper(field, emit) {\n\t  var parsedField = parseField(field);\n\t  return function (doc) {\n\t    var value = doc;\n\t    for (var i = 0, len = parsedField.length; i < len; i++) {\n\t      var key = parsedField[i];\n\t      value = value[key];\n\t      if (!value) {\n\t        return; // do nothing\n\t      }\n\t    }\n\t    emit(value);\n\t  };\n\t}\n\t\n\tfunction createShallowSingleMapper(field, emit) {\n\t  return function (doc) {\n\t    emit(doc[field]);\n\t  };\n\t}\n\t\n\tfunction createShallowMultiMapper(fields, emit) {\n\t  return function (doc) {\n\t    var toEmit = [];\n\t    for (var i = 0, len = fields.length; i < len; i++) {\n\t      toEmit.push(doc[fields[i]]);\n\t    }\n\t    emit(toEmit);\n\t  };\n\t}\n\t\n\tfunction checkShallow(fields) {\n\t  for (var i = 0, len = fields.length; i < len; i++) {\n\t    var field = fields[i];\n\t    if (field.indexOf('.') !== -1) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction createMapper(fields, emit) {\n\t  var isShallow = checkShallow(fields);\n\t  var isSingle = fields.length === 1;\n\t\n\t  // notice we try to optimize for the most common case,\n\t  // i.e. single shallow indexes\n\t  if (isShallow) {\n\t    if (isSingle) {\n\t      return createShallowSingleMapper(fields[0], emit);\n\t    } else { // multi\n\t      return createShallowMultiMapper(fields, emit);\n\t    }\n\t  } else { // deep\n\t    if (isSingle) {\n\t      return createDeepSingleMapper(fields[0], emit);\n\t    } else { // multi\n\t      return createDeepMultiMapper(fields, emit);\n\t    }\n\t  }\n\t}\n\t\n\tfunction mapper(mapFunDef, emit) {\n\t  // mapFunDef is a list of fields\n\t\n\t  var fields = Object.keys(mapFunDef.fields);\n\t\n\t  return createMapper(fields, emit);\n\t}\n\t\n\t/* istanbul ignore next */\n\tfunction reducer(/*reduceFunDef*/) {\n\t  throw new Error('reduce not supported');\n\t}\n\t\n\tfunction ddocValidator(ddoc, viewName) {\n\t  var view = ddoc.views[viewName];\n\t  // This doesn't actually need to be here apparently, but\n\t  // I feel safer keeping it.\n\t  /* istanbul ignore if */\n\t  if (!view.map || !view.map.fields) {\n\t    throw new Error('ddoc ' + ddoc._id +' with view ' + viewName +\n\t      ' doesn\\'t have map.fields defined. ' +\n\t      'maybe it wasn\\'t created by this plugin?');\n\t  }\n\t}\n\t\n\tvar abstractMapper = abstractMapReduce({\n\t  name: 'indexes',\n\t  mapper: mapper,\n\t  reducer: reducer,\n\t  ddocValidator: ddocValidator\n\t});\n\t\n\tmodule.exports = abstractMapper;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = argsArray;\n\t\n\tfunction argsArray(fun) {\n\t  return function () {\n\t    var len = arguments.length;\n\t    if (len) {\n\t      var args = [];\n\t      var i = -1;\n\t      while (++i < len) {\n\t        args[i] = arguments[i];\n\t      }\n\t      return fun.call(this, args);\n\t    } else {\n\t      return fun.call(this, []);\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction indexKey(doc) {\n\t  return doc.type + '/' + doc.id;\n\t}\n\t\n\tfunction findByRef(resources, ref) {\n\t  return resources[indexKey(ref)];\n\t}\n\t\n\tfunction handleResource(rawResource, resources, links) {\n\t  var resource = {\n\t    _id: rawResource.id,\n\t    _type: rawResource.type,\n\t    _rev: rawResource.meta && rawResource.meta.rev,\n\t    links: Object.assign({}, rawResource.links, links),\n\t    attributes: rawResource.attributes,\n\t    relations: function relations(name) {\n\t      var rels = rawResource.relationships[name];\n\t      if (rels === undefined || rels.data === undefined) return undefined;\n\t      if (rels.data === null) return null;\n\t      if (!Array.isArray(rels.data)) return findByRef(resources, rels.data);\n\t      return rels.data.map(function (ref) {\n\t        return findByRef(resources, ref);\n\t      });\n\t    }\n\t  };\n\t  if (rawResource.relationships) {\n\t    resource.relationships = rawResource.relationships;\n\t  }\n\t\n\t  resources[indexKey(rawResource)] = resource;\n\t\n\t  return resource;\n\t}\n\t\n\tfunction handleTopLevel(doc) {\n\t  var resources = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t  // build an index of included resource by Type & ID\n\t  var included = doc.included;\n\t\n\t  if (Array.isArray(included)) {\n\t    included.forEach(function (r) {\n\t      return handleResource(r, resources, doc.links);\n\t    });\n\t  }\n\t\n\t  if (Array.isArray(doc.data)) {\n\t    return doc.data.map(function (r) {\n\t      return handleResource(r, resources, doc.links);\n\t    });\n\t  } else {\n\t    return handleResource(doc.data, resources, doc.links);\n\t  }\n\t}\n\t\n\texports.default = handleTopLevel;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar immediate = __webpack_require__(9);\n\t\n\t/* istanbul ignore next */\n\tfunction INTERNAL() {}\n\t\n\tvar handlers = {};\n\t\n\tvar REJECTED = ['REJECTED'];\n\tvar FULFILLED = ['FULFILLED'];\n\tvar PENDING = ['PENDING'];\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(resolver) {\n\t  if (typeof resolver !== 'function') {\n\t    throw new TypeError('resolver must be a function');\n\t  }\n\t  this.state = PENDING;\n\t  this.queue = [];\n\t  this.outcome = void 0;\n\t  if (resolver !== INTERNAL) {\n\t    safelyResolveThenable(this, resolver);\n\t  }\n\t}\n\t\n\tPromise.prototype[\"catch\"] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n\t    typeof onRejected !== 'function' && this.state === REJECTED) {\n\t    return this;\n\t  }\n\t  var promise = new this.constructor(INTERNAL);\n\t  if (this.state !== PENDING) {\n\t    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n\t    unwrap(promise, resolver, this.outcome);\n\t  } else {\n\t    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n\t  }\n\t\n\t  return promise;\n\t};\n\tfunction QueueItem(promise, onFulfilled, onRejected) {\n\t  this.promise = promise;\n\t  if (typeof onFulfilled === 'function') {\n\t    this.onFulfilled = onFulfilled;\n\t    this.callFulfilled = this.otherCallFulfilled;\n\t  }\n\t  if (typeof onRejected === 'function') {\n\t    this.onRejected = onRejected;\n\t    this.callRejected = this.otherCallRejected;\n\t  }\n\t}\n\tQueueItem.prototype.callFulfilled = function (value) {\n\t  handlers.resolve(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallFulfilled = function (value) {\n\t  unwrap(this.promise, this.onFulfilled, value);\n\t};\n\tQueueItem.prototype.callRejected = function (value) {\n\t  handlers.reject(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallRejected = function (value) {\n\t  unwrap(this.promise, this.onRejected, value);\n\t};\n\t\n\tfunction unwrap(promise, func, value) {\n\t  immediate(function () {\n\t    var returnValue;\n\t    try {\n\t      returnValue = func(value);\n\t    } catch (e) {\n\t      return handlers.reject(promise, e);\n\t    }\n\t    if (returnValue === promise) {\n\t      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n\t    } else {\n\t      handlers.resolve(promise, returnValue);\n\t    }\n\t  });\n\t}\n\t\n\thandlers.resolve = function (self, value) {\n\t  var result = tryCatch(getThen, value);\n\t  if (result.status === 'error') {\n\t    return handlers.reject(self, result.value);\n\t  }\n\t  var thenable = result.value;\n\t\n\t  if (thenable) {\n\t    safelyResolveThenable(self, thenable);\n\t  } else {\n\t    self.state = FULFILLED;\n\t    self.outcome = value;\n\t    var i = -1;\n\t    var len = self.queue.length;\n\t    while (++i < len) {\n\t      self.queue[i].callFulfilled(value);\n\t    }\n\t  }\n\t  return self;\n\t};\n\thandlers.reject = function (self, error) {\n\t  self.state = REJECTED;\n\t  self.outcome = error;\n\t  var i = -1;\n\t  var len = self.queue.length;\n\t  while (++i < len) {\n\t    self.queue[i].callRejected(error);\n\t  }\n\t  return self;\n\t};\n\t\n\tfunction getThen(obj) {\n\t  // Make sure we only access the accessor once as required by the spec\n\t  var then = obj && obj.then;\n\t  if (obj && typeof obj === 'object' && typeof then === 'function') {\n\t    return function appyThen() {\n\t      then.apply(obj, arguments);\n\t    };\n\t  }\n\t}\n\t\n\tfunction safelyResolveThenable(self, thenable) {\n\t  // Either fulfill, reject or reject with error\n\t  var called = false;\n\t  function onError(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.reject(self, value);\n\t  }\n\t\n\t  function onSuccess(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.resolve(self, value);\n\t  }\n\t\n\t  function tryToUnwrap() {\n\t    thenable(onSuccess, onError);\n\t  }\n\t\n\t  var result = tryCatch(tryToUnwrap);\n\t  if (result.status === 'error') {\n\t    onError(result.value);\n\t  }\n\t}\n\t\n\tfunction tryCatch(func, value) {\n\t  var out = {};\n\t  try {\n\t    out.value = func(value);\n\t    out.status = 'success';\n\t  } catch (e) {\n\t    out.status = 'error';\n\t    out.value = e;\n\t  }\n\t  return out;\n\t}\n\t\n\tPromise.resolve = resolve;\n\tfunction resolve(value) {\n\t  if (value instanceof this) {\n\t    return value;\n\t  }\n\t  return handlers.resolve(new this(INTERNAL), value);\n\t}\n\t\n\tPromise.reject = reject;\n\tfunction reject(reason) {\n\t  var promise = new this(INTERNAL);\n\t  return handlers.reject(promise, reason);\n\t}\n\t\n\tPromise.all = all;\n\tfunction all(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\t\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\t\n\t  var values = new Array(len);\n\t  var resolved = 0;\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\t\n\t  while (++i < len) {\n\t    allResolver(iterable[i], i);\n\t  }\n\t  return promise;\n\t  function allResolver(value, i) {\n\t    self.resolve(value).then(resolveFromAll, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t    function resolveFromAll(outValue) {\n\t      values[i] = outValue;\n\t      if (++resolved === len && !called) {\n\t        called = true;\n\t        handlers.resolve(promise, values);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tPromise.race = race;\n\tfunction race(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\t\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\t\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\t\n\t  while (++i < len) {\n\t    resolver(iterable[i]);\n\t  }\n\t  return promise;\n\t  function resolver(value) {\n\t    self.resolve(value).then(function (response) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.resolve(promise, response);\n\t      }\n\t    }, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t  }\n\t}\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t// Extends method\n\t// (taken from http://code.jquery.com/jquery-1.9.0.js)\n\t// Populate the class2type map\n\tvar class2type = {};\n\t\n\tvar types = [\n\t  \"Boolean\", \"Number\", \"String\", \"Function\", \"Array\",\n\t  \"Date\", \"RegExp\", \"Object\", \"Error\"\n\t];\n\tfor (var i = 0; i < types.length; i++) {\n\t  var typename = types[i];\n\t  class2type[\"[object \" + typename + \"]\"] = typename.toLowerCase();\n\t}\n\t\n\tvar core_toString = class2type.toString;\n\tvar core_hasOwn = class2type.hasOwnProperty;\n\t\n\tfunction type(obj) {\n\t  if (obj === null) {\n\t    return String(obj);\n\t  }\n\t  return typeof obj === \"object\" || typeof obj === \"function\" ?\n\t    class2type[core_toString.call(obj)] || \"object\" :\n\t    typeof obj;\n\t}\n\t\n\tfunction isWindow(obj) {\n\t  return obj !== null && obj === obj.window;\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t  // Must be an Object.\n\t  // Because of IE, we also have to check the presence of\n\t  // the constructor property.\n\t  // Make sure that DOM nodes and window objects don't pass through, as well\n\t  if (!obj || type(obj) !== \"object\" || obj.nodeType || isWindow(obj)) {\n\t    return false;\n\t  }\n\t\n\t  try {\n\t    // Not own constructor property must be Object\n\t    if (obj.constructor &&\n\t      !core_hasOwn.call(obj, \"constructor\") &&\n\t      !core_hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n\t      return false;\n\t    }\n\t  } catch ( e ) {\n\t    // IE8,9 Will throw exceptions on certain host objects #9897\n\t    return false;\n\t  }\n\t\n\t  // Own properties are enumerated firstly, so to speed up,\n\t  // if last one is own, then all properties are own.\n\t  var key;\n\t  for (key in obj) {}\n\t\n\t  return key === undefined || core_hasOwn.call(obj, key);\n\t}\n\t\n\t\n\tfunction isFunction(obj) {\n\t  return type(obj) === \"function\";\n\t}\n\t\n\tvar isArray = Array.isArray || function (obj) {\n\t  return type(obj) === \"array\";\n\t};\n\t\n\tfunction extend() {\n\t  // originally extend() was recursive, but this ended up giving us\n\t  // \"call stack exceeded\", so it's been unrolled to use a literal stack\n\t  // (see https://github.com/pouchdb/pouchdb/issues/2543)\n\t  var stack = [];\n\t  var i = -1;\n\t  var len = arguments.length;\n\t  var args = new Array(len);\n\t  while (++i < len) {\n\t    args[i] = arguments[i];\n\t  }\n\t  var container = {};\n\t  stack.push({args: args, result: {container: container, key: 'key'}});\n\t  var next;\n\t  while ((next = stack.pop())) {\n\t    extendInner(stack, next.args, next.result);\n\t  }\n\t  return container.key;\n\t}\n\t\n\tfunction extendInner(stack, args, result) {\n\t  var options, name, src, copy, copyIsArray, clone,\n\t    target = args[0] || {},\n\t    i = 1,\n\t    length = args.length,\n\t    deep = false,\n\t    numericStringRegex = /\\d+/,\n\t    optionsIsArray;\n\t\n\t  // Handle a deep copy situation\n\t  if (typeof target === \"boolean\") {\n\t    deep = target;\n\t    target = args[1] || {};\n\t    // skip the boolean and the target\n\t    i = 2;\n\t  }\n\t\n\t  // Handle case when target is a string or something (possible in deep copy)\n\t  if (typeof target !== \"object\" && !isFunction(target)) {\n\t    target = {};\n\t  }\n\t\n\t  // extend jQuery itself if only one argument is passed\n\t  if (length === i) {\n\t    /* jshint validthis: true */\n\t    target = this;\n\t    --i;\n\t  }\n\t\n\t  for (; i < length; i++) {\n\t    // Only deal with non-null/undefined values\n\t    if ((options = args[i]) != null) {\n\t      optionsIsArray = isArray(options);\n\t      // Extend the base object\n\t      for (name in options) {\n\t        //if (options.hasOwnProperty(name)) {\n\t        if (!(name in Object.prototype)) {\n\t          if (optionsIsArray && !numericStringRegex.test(name)) {\n\t            continue;\n\t          }\n\t\n\t          src = target[name];\n\t          copy = options[name];\n\t\n\t          // Prevent never-ending loop\n\t          if (target === copy) {\n\t            continue;\n\t          }\n\t\n\t          // Recurse if we're merging plain objects or arrays\n\t          if (deep && copy && (isPlainObject(copy) ||\n\t              (copyIsArray = isArray(copy)))) {\n\t            if (copyIsArray) {\n\t              copyIsArray = false;\n\t              clone = src && isArray(src) ? src : [];\n\t\n\t            } else {\n\t              clone = src && isPlainObject(src) ? src : {};\n\t            }\n\t\n\t            // Never move original objects, clone them\n\t            stack.push({\n\t              args: [deep, clone, copy],\n\t              result: {\n\t                container: target,\n\t                key: name\n\t              }\n\t            });\n\t\n\t          // Don't bring in undefined values\n\t          } else if (copy !== undefined) {\n\t            if (!(isArray(options) && isFunction(copy))) {\n\t              target[name] = copy;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // \"Return\" the modified object by setting the key\n\t  // on the given container\n\t  result.container[result.key] = target;\n\t}\n\t\n\t\n\tmodule.exports = extend;\n\t\n\t\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar upsert = __webpack_require__(21).upsert;\n\t\n\tmodule.exports = function (db, doc, diffFun) {\n\t  return upsert.apply(db, [doc, diffFun]);\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(2);\n\t\n\tvar localUtils = __webpack_require__(4);\n\tvar massageIndexDef = localUtils.massageIndexDef;\n\t\n\tfunction getIndexes(db) {\n\t  // just search through all the design docs and filter in-memory.\n\t  // hopefully there aren't that many ddocs.\n\t  return db.allDocs({\n\t    startkey: '_design/',\n\t    endkey: '_design/\\uffff',\n\t    include_docs: true\n\t  }).then(function (allDocsRes) {\n\t    var res = {\n\t      indexes: [{\n\t        ddoc: null,\n\t        name: '_all_docs',\n\t        type: 'special',\n\t        def: {\n\t          fields: [{_id: 'asc'}]\n\t        }\n\t      }]\n\t    };\n\t\n\t    res.indexes = utils.flatten(res.indexes, allDocsRes.rows.filter(function (row) {\n\t      return row.doc.language === 'query';\n\t    }).map(function (row) {\n\t      var viewNames = row.doc.views !== undefined ? Object.keys(row.doc.views) : [];\n\t\n\t      return viewNames.map(function (viewName) {\n\t        var view = row.doc.views[viewName];\n\t        return {\n\t          ddoc: row.id,\n\t          name: viewName,\n\t          type: 'json',\n\t          def: massageIndexDef(view.options.def)\n\t        };\n\t      });\n\t    }));\n\t\n\t    // these are sorted by view name for some reason\n\t    res.indexes.sort(function (left, right) {\n\t      return utils.compare(left.name, right.name);\n\t    });\n\t    res.total_rows = res.indexes.length;\n\t    return res;\n\t  });\n\t}\n\t\n\tmodule.exports = getIndexes;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(2);\n\tvar clone = utils.clone;\n\t\n\t// we restucture the supplied JSON considerably, because the official\n\t// Mango API is very particular about a lot of this stuff, but we like\n\t// to be liberal with what we accept in order to prevent mental\n\t// breakdowns in our users\n\tmodule.exports = function (requestDef) {\n\t  requestDef = clone(requestDef);\n\t\n\t  if (!requestDef.index) {\n\t    requestDef.index = {};\n\t  }\n\t\n\t  ['type', 'name', 'ddoc'].forEach(function (key) {\n\t    if (requestDef.index[key]) {\n\t      requestDef[key] = requestDef.index[key];\n\t      delete requestDef.index[key];\n\t    }\n\t  });\n\t\n\t  if (requestDef.fields) {\n\t    requestDef.index.fields = requestDef.fields;\n\t    delete requestDef.fields;\n\t  }\n\t\n\t  if (!requestDef.type) {\n\t    requestDef.type = 'json';\n\t  }\n\t  return requestDef;\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar lie = _interopDefault(__webpack_require__(55));\n\t\n\t/* istanbul ignore next */\n\tvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\t\n\tmodule.exports = PouchPromise;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar PouchPromise = __webpack_require__(56);\n\t\n\t// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n\t// the diffFun tells us what delta to apply to the doc.  it either returns\n\t// the doc, or false if it doesn't need to do an update after all\n\tfunction upsertInner(db, docId, diffFun) {\n\t  if (typeof docId !== 'string') {\n\t    return PouchPromise.reject(new Error('doc id is required'));\n\t  }\n\t\n\t  return db.get(docId).catch(function (err) {\n\t    /* istanbul ignore next */\n\t    if (err.status !== 404) {\n\t      throw err;\n\t    }\n\t    return {};\n\t  }).then(function (doc) {\n\t    // the user might change the _rev, so save it for posterity\n\t    var docRev = doc._rev;\n\t    var newDoc = diffFun(doc);\n\t\n\t    if (!newDoc) {\n\t      // if the diffFun returns falsy, we short-circuit as\n\t      // an optimization\n\t      return { updated: false, rev: docRev };\n\t    }\n\t\n\t    // users aren't allowed to modify these values,\n\t    // so reset them here\n\t    newDoc._id = docId;\n\t    newDoc._rev = docRev;\n\t    return tryAndPut(db, newDoc, diffFun);\n\t  });\n\t}\n\t\n\tfunction tryAndPut(db, doc, diffFun) {\n\t  return db.put(doc).then(function (res) {\n\t    return {\n\t      updated: true,\n\t      rev: res.rev\n\t    };\n\t  }, function (err) {\n\t    /* istanbul ignore next */\n\t    if (err.status !== 409) {\n\t      throw err;\n\t    }\n\t    return upsertInner(db, doc._id, diffFun);\n\t  });\n\t}\n\t\n\texports.upsert = function upsert(docId, diffFun, cb) {\n\t  var db = this;\n\t  var promise = upsertInner(db, docId, diffFun);\n\t  if (typeof cb !== 'function') {\n\t    return promise;\n\t  }\n\t  promise.then(function (resp) {\n\t    cb(null, resp);\n\t  }, cb);\n\t};\n\t\n\texports.putIfNotExists = function putIfNotExists(docId, doc, cb) {\n\t  var db = this;\n\t\n\t  if (typeof docId !== 'string') {\n\t    cb = doc;\n\t    doc = docId;\n\t    docId = doc._id;\n\t  }\n\t\n\t  var diffFun = function (existingDoc) {\n\t    if (existingDoc._rev) {\n\t      return false; // do nothing\n\t    }\n\t    return doc;\n\t  };\n\t\n\t  var promise = upsertInner(db, docId, diffFun);\n\t  if (typeof cb !== 'function') {\n\t    return promise;\n\t  }\n\t  promise.then(function (resp) {\n\t    cb(null, resp);\n\t  }, cb);\n\t};\n\t\n\t\n\t/* istanbul ignore next */\n\tif (typeof window !== 'undefined' && window.PouchDB) {\n\t  window.PouchDB.plugin(exports);\n\t}\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint bitwise:false*/\n\t/*global unescape*/\n\t\n\t(function (factory) {\n\t    if (true) {\n\t        // Node/CommonJS\n\t        module.exports = factory();\n\t    } else if (typeof define === 'function' && define.amd) {\n\t        // AMD\n\t        define(factory);\n\t    } else {\n\t        // Browser globals (with support for web workers)\n\t        var glob;\n\t        try {\n\t            glob = window;\n\t        } catch (e) {\n\t            glob = self;\n\t        }\n\t\n\t        glob.SparkMD5 = factory();\n\t    }\n\t}(function (undefined) {\n\t\n\t    'use strict';\n\t\n\t    ////////////////////////////////////////////////////////////////////////////\n\t\n\t    /*\n\t     * Fastest md5 implementation around (JKM md5)\n\t     * Credits: Joseph Myers\n\t     *\n\t     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n\t     * @see http://jsperf.com/md5-shootout/7\n\t     */\n\t\n\t    /* this function is much faster,\n\t      so if possible we use it. Some IEs\n\t      are the only ones I know of that\n\t      need the idiotic second function,\n\t      generated by an if clause.  */\n\t    var add32 = function (a, b) {\n\t        return (a + b) & 0xFFFFFFFF;\n\t    },\n\t\n\t    cmn = function (q, a, b, x, s, t) {\n\t        a = add32(add32(a, q), add32(x, t));\n\t        return add32((a << s) | (a >>> (32 - s)), b);\n\t    },\n\t\n\t    ff = function (a, b, c, d, x, s, t) {\n\t        return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n\t    },\n\t\n\t    gg = function (a, b, c, d, x, s, t) {\n\t        return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n\t    },\n\t\n\t    hh = function (a, b, c, d, x, s, t) {\n\t        return cmn(b ^ c ^ d, a, b, x, s, t);\n\t    },\n\t\n\t    ii = function (a, b, c, d, x, s, t) {\n\t        return cmn(c ^ (b | (~d)), a, b, x, s, t);\n\t    },\n\t\n\t    md5cycle = function (x, k) {\n\t        var a = x[0],\n\t            b = x[1],\n\t            c = x[2],\n\t            d = x[3];\n\t\n\t        a = ff(a, b, c, d, k[0], 7, -680876936);\n\t        d = ff(d, a, b, c, k[1], 12, -389564586);\n\t        c = ff(c, d, a, b, k[2], 17, 606105819);\n\t        b = ff(b, c, d, a, k[3], 22, -1044525330);\n\t        a = ff(a, b, c, d, k[4], 7, -176418897);\n\t        d = ff(d, a, b, c, k[5], 12, 1200080426);\n\t        c = ff(c, d, a, b, k[6], 17, -1473231341);\n\t        b = ff(b, c, d, a, k[7], 22, -45705983);\n\t        a = ff(a, b, c, d, k[8], 7, 1770035416);\n\t        d = ff(d, a, b, c, k[9], 12, -1958414417);\n\t        c = ff(c, d, a, b, k[10], 17, -42063);\n\t        b = ff(b, c, d, a, k[11], 22, -1990404162);\n\t        a = ff(a, b, c, d, k[12], 7, 1804603682);\n\t        d = ff(d, a, b, c, k[13], 12, -40341101);\n\t        c = ff(c, d, a, b, k[14], 17, -1502002290);\n\t        b = ff(b, c, d, a, k[15], 22, 1236535329);\n\t\n\t        a = gg(a, b, c, d, k[1], 5, -165796510);\n\t        d = gg(d, a, b, c, k[6], 9, -1069501632);\n\t        c = gg(c, d, a, b, k[11], 14, 643717713);\n\t        b = gg(b, c, d, a, k[0], 20, -373897302);\n\t        a = gg(a, b, c, d, k[5], 5, -701558691);\n\t        d = gg(d, a, b, c, k[10], 9, 38016083);\n\t        c = gg(c, d, a, b, k[15], 14, -660478335);\n\t        b = gg(b, c, d, a, k[4], 20, -405537848);\n\t        a = gg(a, b, c, d, k[9], 5, 568446438);\n\t        d = gg(d, a, b, c, k[14], 9, -1019803690);\n\t        c = gg(c, d, a, b, k[3], 14, -187363961);\n\t        b = gg(b, c, d, a, k[8], 20, 1163531501);\n\t        a = gg(a, b, c, d, k[13], 5, -1444681467);\n\t        d = gg(d, a, b, c, k[2], 9, -51403784);\n\t        c = gg(c, d, a, b, k[7], 14, 1735328473);\n\t        b = gg(b, c, d, a, k[12], 20, -1926607734);\n\t\n\t        a = hh(a, b, c, d, k[5], 4, -378558);\n\t        d = hh(d, a, b, c, k[8], 11, -2022574463);\n\t        c = hh(c, d, a, b, k[11], 16, 1839030562);\n\t        b = hh(b, c, d, a, k[14], 23, -35309556);\n\t        a = hh(a, b, c, d, k[1], 4, -1530992060);\n\t        d = hh(d, a, b, c, k[4], 11, 1272893353);\n\t        c = hh(c, d, a, b, k[7], 16, -155497632);\n\t        b = hh(b, c, d, a, k[10], 23, -1094730640);\n\t        a = hh(a, b, c, d, k[13], 4, 681279174);\n\t        d = hh(d, a, b, c, k[0], 11, -358537222);\n\t        c = hh(c, d, a, b, k[3], 16, -722521979);\n\t        b = hh(b, c, d, a, k[6], 23, 76029189);\n\t        a = hh(a, b, c, d, k[9], 4, -640364487);\n\t        d = hh(d, a, b, c, k[12], 11, -421815835);\n\t        c = hh(c, d, a, b, k[15], 16, 530742520);\n\t        b = hh(b, c, d, a, k[2], 23, -995338651);\n\t\n\t        a = ii(a, b, c, d, k[0], 6, -198630844);\n\t        d = ii(d, a, b, c, k[7], 10, 1126891415);\n\t        c = ii(c, d, a, b, k[14], 15, -1416354905);\n\t        b = ii(b, c, d, a, k[5], 21, -57434055);\n\t        a = ii(a, b, c, d, k[12], 6, 1700485571);\n\t        d = ii(d, a, b, c, k[3], 10, -1894986606);\n\t        c = ii(c, d, a, b, k[10], 15, -1051523);\n\t        b = ii(b, c, d, a, k[1], 21, -2054922799);\n\t        a = ii(a, b, c, d, k[8], 6, 1873313359);\n\t        d = ii(d, a, b, c, k[15], 10, -30611744);\n\t        c = ii(c, d, a, b, k[6], 15, -1560198380);\n\t        b = ii(b, c, d, a, k[13], 21, 1309151649);\n\t        a = ii(a, b, c, d, k[4], 6, -145523070);\n\t        d = ii(d, a, b, c, k[11], 10, -1120210379);\n\t        c = ii(c, d, a, b, k[2], 15, 718787259);\n\t        b = ii(b, c, d, a, k[9], 21, -343485551);\n\t\n\t        x[0] = add32(a, x[0]);\n\t        x[1] = add32(b, x[1]);\n\t        x[2] = add32(c, x[2]);\n\t        x[3] = add32(d, x[3]);\n\t    },\n\t\n\t    /* there needs to be support for Unicode here,\n\t       * unless we pretend that we can redefine the MD-5\n\t       * algorithm for multi-byte characters (perhaps\n\t       * by adding every four 16-bit characters and\n\t       * shortening the sum to 32 bits). Otherwise\n\t       * I suggest performing MD-5 as if every character\n\t       * was two bytes--e.g., 0040 0025 = @%--but then\n\t       * how will an ordinary MD-5 sum be matched?\n\t       * There is no way to standardize text to something\n\t       * like UTF-8 before transformation; speed cost is\n\t       * utterly prohibitive. The JavaScript standard\n\t       * itself needs to look at this: it should start\n\t       * providing access to strings as preformed UTF-8\n\t       * 8-bit unsigned value arrays.\n\t       */\n\t    md5blk = function (s) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n\t        }\n\t        return md5blks;\n\t    },\n\t\n\t    md5blk_array = function (a) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n\t        }\n\t        return md5blks;\n\t    },\n\t\n\t    md51 = function (s) {\n\t        var n = s.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk(s.substring(i - 64, i)));\n\t        }\n\t        s = s.substring(i - 64);\n\t        length = s.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t        return state;\n\t    },\n\t\n\t    md51_array = function (a) {\n\t        var n = a.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n\t        }\n\t\n\t        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n\t        // containing the last element of the parent array if the sub array specified starts\n\t        // beyond the length of the parent array - weird.\n\t        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n\t        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\t\n\t        length = a.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t\n\t        return state;\n\t    },\n\t\n\t    hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'],\n\t\n\t    rhex = function (n) {\n\t        var s = '',\n\t            j;\n\t        for (j = 0; j < 4; j += 1) {\n\t            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n\t        }\n\t        return s;\n\t    },\n\t\n\t    hex = function (x) {\n\t        var i;\n\t        for (i = 0; i < x.length; i += 1) {\n\t            x[i] = rhex(x[i]);\n\t        }\n\t        return x.join('');\n\t    },\n\t\n\t    md5 = function (s) {\n\t        return hex(md51(s));\n\t    },\n\t\n\t\n\t\n\t    ////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation.\n\t     *\n\t     * Use this class to perform an incremental md5, otherwise use the\n\t     * static methods instead.\n\t     */\n\t    SparkMD5 = function () {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    };\n\t\n\t\n\t    // In some cases the fast add32 function cannot be used..\n\t    if (md5('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n\t        add32 = function (x, y) {\n\t            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n\t                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t            return (msw << 16) | (lsw & 0xFFFF);\n\t        };\n\t    }\n\t\n\t\n\t    /**\n\t     * Appends a string.\n\t     * A conversion will be applied if an utf8 string is detected.\n\t     *\n\t     * @param {String} str The string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.append = function (str) {\n\t        // converts the string to utf8 bytes if necessary\n\t        if (/[\\u0080-\\uFFFF]/.test(str)) {\n\t            str = unescape(encodeURIComponent(str));\n\t        }\n\t\n\t        // then append as binary\n\t        this.appendBinary(str);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Appends a binary string.\n\t     *\n\t     * @param {String} contents The binary string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.appendBinary = function (contents) {\n\t        this._buff += contents;\n\t        this._length += contents.length;\n\t\n\t        var length = this._buff.length,\n\t            i;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._state, md5blk(this._buff.substring(i - 64, i)));\n\t        }\n\t\n\t        this._buff = this._buff.substr(i - 64);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     * Use the raw parameter to obtain the raw result instead of the hex one.\n\t     *\n\t     * @param {Boolean} raw True to get the raw result, false to get the hex result\n\t     *\n\t     * @return {String|Array} The result\n\t     */\n\t    SparkMD5.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            i,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = !!raw ? this._state : hex(this._state);\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    /**\n\t     * Finish the final calculation based on the tail.\n\t     *\n\t     * @param {Array}  tail   The tail (will be modified)\n\t     * @param {Number} length The length of the remaining buffer\n\t     */\n\t    SparkMD5.prototype._finish = function (tail, length) {\n\t        var i = length,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(this._state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Do the final computation based on the tail and length\n\t        // Beware that the final length may not fit in 32 bits so we take care of that\n\t        tmp = this._length * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t        md5cycle(this._state, tail);\n\t    };\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.reset = function () {\n\t        this._buff = \"\";\n\t        this._length = 0;\n\t        this._state = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Releases memory used by the incremental buffer and other aditional\n\t     * resources. If you plan to use the instance again, use reset instead.\n\t     */\n\t    SparkMD5.prototype.destroy = function () {\n\t        delete this._state;\n\t        delete this._buff;\n\t        delete this._length;\n\t    };\n\t\n\t\n\t    /**\n\t     * Performs the md5 hash on a string.\n\t     * A conversion will be applied if utf8 string is detected.\n\t     *\n\t     * @param {String}  str The string\n\t     * @param {Boolean} raw True to get the raw result, false to get the hex result\n\t     *\n\t     * @return {String|Array} The result\n\t     */\n\t    SparkMD5.hash = function (str, raw) {\n\t        // converts the string to utf8 bytes if necessary\n\t        if (/[\\u0080-\\uFFFF]/.test(str)) {\n\t            str = unescape(encodeURIComponent(str));\n\t        }\n\t\n\t        var hash = md51(str);\n\t\n\t        return !!raw ? hash : hex(hash);\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on a binary string.\n\t     *\n\t     * @param {String}  content The binary string\n\t     * @param {Boolean} raw     True to get the raw result, false to get the hex result\n\t     *\n\t     * @return {String|Array} The result\n\t     */\n\t    SparkMD5.hashBinary = function (content, raw) {\n\t        var hash = md51(content);\n\t\n\t        return !!raw ? hash : hex(hash);\n\t    };\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation for array buffers.\n\t     *\n\t     * Use this class to perform an incremental md5 ONLY for array buffers.\n\t     */\n\t    SparkMD5.ArrayBuffer = function () {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    };\n\t\n\t    ////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * Appends an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array to be appended\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n\t        // TODO: we could avoid the concatenation here but the algorithm would be more complex\n\t        //       if you find yourself needing extra performance, please make a PR.\n\t        var buff = this._concatArrayBuffer(this._buff, arr),\n\t            length = buff.length,\n\t            i;\n\t\n\t        this._length += arr.byteLength;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._state, md5blk_array(buff.subarray(i - 64, i)));\n\t        }\n\t\n\t        // Avoids IE10 weirdness (documented above)\n\t        this._buff = (i - 64) < length ? buff.subarray(i - 64) : new Uint8Array(0);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     * Use the raw parameter to obtain the raw result instead of the hex one.\n\t     *\n\t     * @param {Boolean} raw True to get the raw result, false to get the hex result\n\t     *\n\t     * @return {String|Array} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            i,\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = !!raw ? this._state : hex(this._state);\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.reset = function () {\n\t        this._buff = new Uint8Array(0);\n\t        this._length = 0;\n\t        this._state = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Releases memory used by the incremental buffer and other aditional\n\t     * resources. If you plan to use the instance again, use reset instead.\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\t\n\t    /**\n\t     * Concats two array buffers, returning a new one.\n\t     *\n\t     * @param  {ArrayBuffer} first  The first array buffer\n\t     * @param  {ArrayBuffer} second The second array buffer\n\t     *\n\t     * @return {ArrayBuffer} The new array buffer\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype._concatArrayBuffer = function (first, second) {\n\t        var firstLength = first.length,\n\t            result = new Uint8Array(firstLength + second.byteLength);\n\t\n\t        result.set(first);\n\t        result.set(new Uint8Array(second), firstLength);\n\t\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array buffer\n\t     * @param {Boolean}     raw True to get the raw result, false to get the hex result\n\t     *\n\t     * @return {String|Array} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n\t        var hash = md51_array(new Uint8Array(arr));\n\t\n\t        return !!raw ? hash : hex(hash);\n\t    };\n\t\n\t    return SparkMD5;\n\t}));\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar LocalStorage = exports.LocalStorage = function () {\n\t  function LocalStorage(storage, prefix) {\n\t    _classCallCheck(this, LocalStorage);\n\t\n\t    if (!storage && typeof window !== 'undefined') {\n\t      storage = window.localStorage;\n\t    }\n\t    this.storage = storage;\n\t    this.prefix = prefix || 'cozy:oauth:';\n\t  }\n\t\n\t  _createClass(LocalStorage, [{\n\t    key: 'save',\n\t    value: function save(key, value) {\n\t      var _this = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this.storage.setItem(_this.prefix + key, JSON.stringify(value));\n\t        resolve(value);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'load',\n\t    value: function load(key) {\n\t      var _this2 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var item = _this2.storage.getItem(_this2.prefix + key);\n\t        if (!item) {\n\t          resolve();\n\t        } else {\n\t          resolve(JSON.parse(item));\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'delete',\n\t    value: function _delete(key) {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        return resolve(_this3.storage.removeItem(_this3.prefix + key));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var storage = _this4.storage;\n\t        for (var i = 0; i < storage.length; i++) {\n\t          var key = storage.key(i);\n\t          if (key.indexOf(_this4.prefix) === 0) {\n\t            storage.removeItem(key);\n\t          }\n\t        }\n\t        resolve();\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return LocalStorage;\n\t}();\n\t\n\tvar MemoryStorage = exports.MemoryStorage = function () {\n\t  function MemoryStorage() {\n\t    _classCallCheck(this, MemoryStorage);\n\t\n\t    this.hash = Object.create(null);\n\t  }\n\t\n\t  _createClass(MemoryStorage, [{\n\t    key: 'save',\n\t    value: function save(key, value) {\n\t      this.hash[key] = value;\n\t      return Promise.resolve(value);\n\t    }\n\t  }, {\n\t    key: 'load',\n\t    value: function load(key) {\n\t      return Promise.resolve(this.hash[key]);\n\t    }\n\t  }, {\n\t    key: 'delete',\n\t    value: function _delete(key) {\n\t      var deleted = delete this.hash[key];\n\t      return Promise.resolve(deleted);\n\t    }\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this.hash = Object.create(null);\n\t      return Promise.resolve();\n\t    }\n\t  }]);\n\n\t  return MemoryStorage;\n\t}();\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.getAppToken = getAppToken;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/* global btoa */\n\tvar V2TOKEN_ABORT_TIMEOUT = 3000;\n\t\n\tfunction getAppToken() {\n\t  return new Promise(function (resolve, reject) {\n\t    if (typeof window === 'undefined') {\n\t      return reject(new Error('getV2Token should be used in browser'));\n\t    } else if (!window.parent) {\n\t      return reject(new Error('getV2Token should be used in iframe'));\n\t    } else if (!window.parent.postMessage) {\n\t      return reject(new Error('getV2Token should be used in modern browser'));\n\t    }\n\t    var origin = window.location.origin;\n\t    var intent = { action: 'getToken' };\n\t    var timeout = null;\n\t    var receiver = function receiver(event) {\n\t      var token = void 0;\n\t      try {\n\t        token = new AppToken({\n\t          appName: event.data.appName,\n\t          token: event.data.token\n\t        });\n\t      } catch (e) {\n\t        reject(e);\n\t        return;\n\t      }\n\t      window.removeEventListener('message', receiver);\n\t      clearTimeout(timeout);\n\t      resolve({ client: null, token: token });\n\t    };\n\t    window.addEventListener('message', receiver, false);\n\t    window.parent.postMessage(intent, origin);\n\t    timeout = setTimeout(function () {\n\t      reject(new Error('No response from parent iframe after 3s'));\n\t    }, V2TOKEN_ABORT_TIMEOUT);\n\t  });\n\t}\n\t\n\tvar AppToken = exports.AppToken = function () {\n\t  function AppToken(opts) {\n\t    _classCallCheck(this, AppToken);\n\t\n\t    this.appName = opts.appName || '';\n\t    this.token = opts.token || '';\n\t  }\n\t\n\t  _createClass(AppToken, [{\n\t    key: 'toAuthHeader',\n\t    value: function toAuthHeader() {\n\t      return 'Basic ' + btoa(this.appName + ':' + this.token);\n\t    }\n\t  }]);\n\n\t  return AppToken;\n\t}();\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.create = create;\n\texports.find = find;\n\texports.findMany = findMany;\n\texports.findAll = findAll;\n\texports.changesFeed = changesFeed;\n\texports.update = update;\n\texports.updateAttributes = updateAttributes;\n\texports._delete = _delete;\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar _doctypes = __webpack_require__(5);\n\t\n\tvar _fetch = __webpack_require__(1);\n\t\n\tvar NOREV = 'stack-v2-no-rev';\n\t\n\tfunction create(cozy, doctype, attributes) {\n\t  return cozy.isV2().then(function (isV2) {\n\t    doctype = (0, _doctypes.normalizeDoctype)(cozy, isV2, doctype);\n\t    if (isV2) {\n\t      attributes.docType = doctype;\n\t    }\n\t    var path = (0, _utils.createPath)(cozy, isV2, doctype, attributes._id);\n\t    var httpVerb = attributes._id ? 'PUT' : 'POST';\n\t    delete attributes._id;\n\t    return (0, _fetch.cozyFetchJSON)(cozy, httpVerb, path, attributes).then(function (resp) {\n\t      if (isV2) {\n\t        return find(cozy, doctype, resp._id);\n\t      } else {\n\t        return resp.data;\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction find(cozy, doctype, id) {\n\t  return cozy.isV2().then(function (isV2) {\n\t    doctype = (0, _doctypes.normalizeDoctype)(cozy, isV2, doctype);\n\t\n\t    if (!id) {\n\t      return Promise.reject(new Error('Missing id parameter'));\n\t    }\n\t\n\t    var path = (0, _utils.createPath)(cozy, isV2, doctype, id);\n\t    return (0, _fetch.cozyFetchJSON)(cozy, 'GET', path).then(function (resp) {\n\t      if (isV2) {\n\t        return Object.assign(resp, { _rev: NOREV });\n\t      } else {\n\t        return resp;\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction findMany(cozy, doctype, ids) {\n\t  if (!(ids instanceof Array)) {\n\t    return Promise.reject(new Error('Parameter ids must be a non-empty array'));\n\t  }\n\t  if (ids.length === 0) {\n\t    // So users don't need to be defensive regarding the array content.\n\t    // This should not hide issues in user code since the result will be an\n\t    // empty object anyway.\n\t    return Promise.resolve({});\n\t  }\n\t\n\t  return cozy.isV2().then(function (isV2) {\n\t    if (isV2) {\n\t      return Promise.reject(new Error('findMany is not available on v2'));\n\t    }\n\t\n\t    var path = (0, _utils.createPath)(cozy, isV2, doctype, '_all_docs', { include_docs: true });\n\t\n\t    return (0, _fetch.cozyFetchJSON)(cozy, 'POST', path, { keys: ids }).then(function (resp) {\n\t      var docs = {};\n\t\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = resp.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var row = _step.value;\n\t          var key = row.key,\n\t              doc = row.doc,\n\t              error = row.error;\n\t\n\t          docs[key] = error ? { error: error } : { doc: doc };\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return docs;\n\t    }).catch(function (error) {\n\t      if (error.status !== 404) return Promise.reject(error);\n\t\n\t      // When no doc was ever created and the database does not exist yet,\n\t      // the response will be a 404 error.\n\t      var docs = {};\n\t\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\t\n\t      try {\n\t        for (var _iterator2 = ids[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var id = _step2.value;\n\t\n\t          docs[id] = { error: error };\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t\n\t      return docs;\n\t    });\n\t  });\n\t}\n\t\n\tfunction findAll(cozy, doctype) {\n\t  return cozy.isV2().then(function (isV2) {\n\t    if (isV2) {\n\t      return Promise.reject(new Error('findAll is not available on v2'));\n\t    }\n\t\n\t    var path = (0, _utils.createPath)(cozy, isV2, doctype, '_all_docs', { include_docs: true });\n\t\n\t    return (0, _fetch.cozyFetchJSON)(cozy, 'POST', path, {}).then(function (resp) {\n\t      var docs = [];\n\t\n\t      var _iteratorNormalCompletion3 = true;\n\t      var _didIteratorError3 = false;\n\t      var _iteratorError3 = undefined;\n\t\n\t      try {\n\t        for (var _iterator3 = resp.rows[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t          var row = _step3.value;\n\t          var doc = row.doc;\n\t          // if not couchDB indexes\n\t\n\t          if (!doc._id.match(/_design\\//)) docs.push(doc);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t            _iterator3.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError3) {\n\t            throw _iteratorError3;\n\t          }\n\t        }\n\t      }\n\t\n\t      return docs;\n\t    }).catch(function (error) {\n\t      // the _all_docs endpoint returns a 404 error if no document with the given\n\t      // doctype exists.\n\t      if (error.status === 404) return [];\n\t      throw error;\n\t    });\n\t  });\n\t}\n\t\n\tfunction changesFeed(cozy, doctype, options) {\n\t  return cozy.isV2().then(function (isV2) {\n\t    doctype = (0, _doctypes.normalizeDoctype)(cozy, isV2, doctype);\n\t    var path = (0, _utils.createPath)(cozy, isV2, doctype, '_changes', options);\n\t    return (0, _fetch.cozyFetchJSON)(cozy, 'GET', path);\n\t  });\n\t}\n\t\n\tfunction update(cozy, doctype, doc, changes) {\n\t  return cozy.isV2().then(function (isV2) {\n\t    doctype = (0, _doctypes.normalizeDoctype)(cozy, isV2, doctype);\n\t    var _id = doc._id,\n\t        _rev = doc._rev;\n\t\n\t\n\t    if (!_id) {\n\t      return Promise.reject(new Error('Missing _id field in passed document'));\n\t    }\n\t\n\t    if (!isV2 && !_rev) {\n\t      return Promise.reject(new Error('Missing _rev field in passed document'));\n\t    }\n\t\n\t    if (isV2) {\n\t      changes = Object.assign({ _id: _id }, changes);\n\t    } else {\n\t      changes = Object.assign({ _id: _id, _rev: _rev }, changes);\n\t    }\n\t\n\t    var path = (0, _utils.createPath)(cozy, isV2, doctype, _id);\n\t    return (0, _fetch.cozyFetchJSON)(cozy, 'PUT', path, changes).then(function (resp) {\n\t      if (isV2) {\n\t        return find(cozy, doctype, _id);\n\t      } else {\n\t        return resp.data;\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction updateAttributes(cozy, doctype, _id, changes) {\n\t  var tries = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 3;\n\t\n\t  return cozy.isV2().then(function (isV2) {\n\t    doctype = (0, _doctypes.normalizeDoctype)(cozy, isV2, doctype);\n\t    return find(cozy, doctype, _id).then(function (doc) {\n\t      return update(cozy, doctype, doc, Object.assign({ _id: _id }, doc, changes));\n\t    }).catch(function (err) {\n\t      if (tries > 0) {\n\t        return updateAttributes(cozy, doctype, _id, changes, tries - 1);\n\t      } else {\n\t        throw err;\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction _delete(cozy, doctype, doc) {\n\t  return cozy.isV2().then(function (isV2) {\n\t    doctype = (0, _doctypes.normalizeDoctype)(cozy, isV2, doctype);\n\t    var _id = doc._id,\n\t        _rev = doc._rev;\n\t\n\t\n\t    if (!_id) {\n\t      return Promise.reject(new Error('Missing _id field in passed document'));\n\t    }\n\t\n\t    if (!isV2 && !_rev) {\n\t      return Promise.reject(new Error('Missing _rev field in passed document'));\n\t    }\n\t\n\t    var query = isV2 ? null : { rev: _rev };\n\t    var path = (0, _utils.createPath)(cozy, isV2, doctype, _id, query);\n\t    return (0, _fetch.cozyFetchJSON)(cozy, 'DELETE', path).then(function (resp) {\n\t      if (isV2) {\n\t        return { id: _id, rev: NOREV };\n\t      } else {\n\t        return resp;\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TRASH_DIR_ID = exports.ROOT_DIR_ID = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /* global Blob, File */\n\t\n\t\n\texports.create = create;\n\texports.createDirectory = createDirectory;\n\texports.createDirectoryByPath = createDirectoryByPath;\n\texports.updateById = updateById;\n\texports.updateAttributesById = updateAttributesById;\n\texports.updateAttributesByPath = updateAttributesByPath;\n\texports.trashById = trashById;\n\texports.statById = statById;\n\texports.statByPath = statByPath;\n\texports.downloadById = downloadById;\n\texports.downloadByPath = downloadByPath;\n\texports.getDownloadLinkByPath = getDownloadLinkByPath;\n\texports.getDownloadLinkById = getDownloadLinkById;\n\texports.getFilePath = getFilePath;\n\texports.getCollectionShareLink = getCollectionShareLink;\n\texports.getArchiveLinkByPaths = getArchiveLinkByPaths;\n\texports.getArchiveLinkByIds = getArchiveLinkByIds;\n\texports.listTrash = listTrash;\n\texports.clearTrash = clearTrash;\n\texports.restoreById = restoreById;\n\texports.destroyById = destroyById;\n\t\n\tvar _fetch = __webpack_require__(1);\n\t\n\tvar _jsonapi = __webpack_require__(14);\n\t\n\tvar _jsonapi2 = _interopRequireDefault(_jsonapi);\n\t\n\tvar _doctypes = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// global variables\n\tvar ROOT_DIR_ID = exports.ROOT_DIR_ID = 'io.cozy.files.root-dir';\n\tvar TRASH_DIR_ID = exports.TRASH_DIR_ID = 'io.cozy.files.trash-dir';\n\t\n\tvar contentTypeOctetStream = 'application/octet-stream';\n\t\n\tfunction sanitizeFileName(name) {\n\t  return name && name.trim();\n\t}\n\t\n\tfunction getFileTypeFromName(name) {\n\t  if (/\\.heic$/i.test(name)) return 'image/heic';else if (/\\.heif$/i.test(name)) return 'image/heif';else return null;\n\t}\n\t\n\tfunction doUpload(cozy, data, method, path, options) {\n\t  if (!data) {\n\t    throw new Error('missing data argument');\n\t  }\n\t\n\t  // transform any ArrayBufferView to ArrayBuffer\n\t  if (data.buffer && data.buffer instanceof ArrayBuffer) {\n\t    data = data.buffer;\n\t  }\n\t\n\t  var isBuffer = typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer;\n\t  var isFile = typeof File !== 'undefined' && data instanceof File;\n\t  var isBlob = typeof Blob !== 'undefined' && data instanceof Blob;\n\t  var isStream = data.readable === true && typeof data.pipe === 'function';\n\t  var isString = typeof data === 'string';\n\t\n\t  if (!isBuffer && !isFile && !isBlob && !isStream && !isString) {\n\t    throw new Error('invalid data type');\n\t  }\n\t\n\t  var _ref = options || {},\n\t      contentType = _ref.contentType,\n\t      checksum = _ref.checksum,\n\t      lastModifiedDate = _ref.lastModifiedDate,\n\t      ifMatch = _ref.ifMatch;\n\t\n\t  if (!contentType) {\n\t    if (isBuffer) {\n\t      contentType = contentTypeOctetStream;\n\t    } else if (isFile) {\n\t      contentType = data.type || getFileTypeFromName(data.name.toLowerCase()) || contentTypeOctetStream;\n\t      if (!lastModifiedDate) {\n\t        lastModifiedDate = data.lastModifiedDate;\n\t      }\n\t    } else if (isBlob) {\n\t      contentType = data.type || contentTypeOctetStream;\n\t    } else if (isStream) {\n\t      contentType = contentTypeOctetStream;\n\t    } else if (typeof data === 'string') {\n\t      contentType = 'text/plain';\n\t    }\n\t  }\n\t\n\t  if (lastModifiedDate && typeof lastModifiedDate === 'string') {\n\t    lastModifiedDate = new Date(lastModifiedDate);\n\t  }\n\t\n\t  return (0, _fetch.cozyFetch)(cozy, path, {\n\t    method: method,\n\t    headers: {\n\t      'Content-Type': contentType,\n\t      'Content-MD5': checksum || '',\n\t      'Date': lastModifiedDate ? lastModifiedDate.toGMTString() : '',\n\t      'If-Match': ifMatch || ''\n\t    },\n\t    body: data\n\t  }).then(function (res) {\n\t    var json = res.json();\n\t    if (!res.ok) {\n\t      return json.then(function (err) {\n\t        throw err;\n\t      });\n\t    } else {\n\t      return json.then(_jsonapi2.default);\n\t    }\n\t  });\n\t}\n\t\n\tfunction create(cozy, data, options) {\n\t  var _ref2 = options || {},\n\t      name = _ref2.name,\n\t      dirID = _ref2.dirID,\n\t      executable = _ref2.executable;\n\t\n\t  // handle case where data is a file and contains the name\n\t\n\t\n\t  if (!name && typeof data.name === 'string') {\n\t    name = data.name;\n\t  }\n\t\n\t  name = sanitizeFileName(name);\n\t\n\t  if (typeof name !== 'string' || name === '') {\n\t    throw new Error('missing name argument');\n\t  }\n\t\n\t  if (executable === undefined) {\n\t    executable = false;\n\t  }\n\t\n\t  var path = '/files/' + encodeURIComponent(dirID || '');\n\t  var query = '?Name=' + encodeURIComponent(name) + '&Type=file&Executable=' + executable;\n\t  return doUpload(cozy, data, 'POST', '' + path + query, options);\n\t}\n\t\n\tfunction createDirectory(cozy, options) {\n\t  var _ref3 = options || {},\n\t      name = _ref3.name,\n\t      dirID = _ref3.dirID,\n\t      lastModifiedDate = _ref3.lastModifiedDate;\n\t\n\t  name = sanitizeFileName(name);\n\t\n\t  if (typeof name !== 'string' || name === '') {\n\t    throw new Error('missing name argument');\n\t  }\n\t\n\t  if (lastModifiedDate && typeof lastModifiedDate === 'string') {\n\t    lastModifiedDate = new Date(lastModifiedDate);\n\t  }\n\t\n\t  var path = '/files/' + encodeURIComponent(dirID || '');\n\t  var query = '?Name=' + encodeURIComponent(name) + '&Type=directory';\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '' + path + query, undefined, {\n\t    headers: {\n\t      'Date': lastModifiedDate ? lastModifiedDate.toGMTString() : ''\n\t    }\n\t  });\n\t}\n\t\n\tfunction getDirectoryOrCreate(cozy, name, parentDirectory) {\n\t  if (parentDirectory && !parentDirectory.attributes) throw new Error('Malformed parent directory');\n\t\n\t  name = sanitizeFileName(name);\n\t\n\t  var path = (parentDirectory._id === ROOT_DIR_ID ? '' : parentDirectory.attributes.path) + '/' + name;\n\t\n\t  return cozy.files.statByPath(path || '/').catch(function (error) {\n\t    var parsedError = JSON.parse(error.message);\n\t    var errors = parsedError.errors;\n\t    if (errors && errors.length && errors[0].status === '404') {\n\t      return cozy.files.createDirectory({\n\t        name: name,\n\t        dirID: parentDirectory && parentDirectory._id\n\t      });\n\t    }\n\t\n\t    throw errors;\n\t  });\n\t}\n\t\n\tfunction createDirectoryByPath(cozy, path, offline) {\n\t  var parts = path.split('/').filter(function (part) {\n\t    return part !== '';\n\t  });\n\t\n\t  var rootDirectoryPromise = cozy.files.statById(ROOT_DIR_ID, offline);\n\t\n\t  return parts.length ? parts.reduce(function (parentDirectoryPromise, part) {\n\t    return parentDirectoryPromise.then(function (parentDirectory) {\n\t      return getDirectoryOrCreate(cozy, part, parentDirectory);\n\t    });\n\t  }, rootDirectoryPromise) : rootDirectoryPromise;\n\t}\n\t\n\tfunction updateById(cozy, id, data, options) {\n\t  return doUpload(cozy, data, 'PUT', '/files/' + encodeURIComponent(id), options);\n\t}\n\t\n\tfunction doUpdateAttributes(cozy, attrs, path, options) {\n\t  if (!attrs || (typeof attrs === 'undefined' ? 'undefined' : _typeof(attrs)) !== 'object') {\n\t    throw new Error('missing attrs argument');\n\t  }\n\t\n\t  var _ref4 = options || {},\n\t      ifMatch = _ref4.ifMatch;\n\t\n\t  var body = {\n\t    data: {\n\t      attributes: Object.assign({}, attrs, { name: sanitizeFileName(attrs.name) })\n\t    }\n\t  };\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'PATCH', path, body, {\n\t    headers: {\n\t      'If-Match': ifMatch || ''\n\t    }\n\t  });\n\t}\n\t\n\tfunction updateAttributesById(cozy, id, attrs, options) {\n\t  return doUpdateAttributes(cozy, attrs, '/files/' + encodeURIComponent(id), options);\n\t}\n\t\n\tfunction updateAttributesByPath(cozy, path, attrs, options) {\n\t  return doUpdateAttributes(cozy, attrs, '/files/metadata?Path=' + encodeURIComponent(path), options);\n\t}\n\t\n\tfunction trashById(cozy, id, options) {\n\t  if (typeof id !== 'string' || id === '') {\n\t    throw new Error('missing id argument');\n\t  }\n\t\n\t  var _ref5 = options || {},\n\t      ifMatch = _ref5.ifMatch;\n\t\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'DELETE', '/files/' + encodeURIComponent(id), undefined, {\n\t    headers: {\n\t      'If-Match': ifMatch || ''\n\t    }\n\t  });\n\t}\n\t\n\tfunction statById(cozy, id) {\n\t  var offline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t\n\t  if (offline && cozy.offline.hasDatabase(_doctypes.DOCTYPE_FILES)) {\n\t    var db = cozy.offline.getDatabase(_doctypes.DOCTYPE_FILES);\n\t    return Promise.all([db.get(id), db.find(Object.assign({ selector: { 'dir_id': id } }, options))]).then(function (_ref6) {\n\t      var _ref7 = _slicedToArray(_ref6, 2),\n\t          doc = _ref7[0],\n\t          children = _ref7[1];\n\t\n\t      if (id === ROOT_DIR_ID) {\n\t        children.docs = children.docs.filter(function (doc) {\n\t          return doc._id !== TRASH_DIR_ID;\n\t        });\n\t      }\n\t      children = sortFiles(children.docs.map(function (doc) {\n\t        return addIsDir(toJsonApi(cozy, doc));\n\t      }));\n\t      return addIsDir(toJsonApi(cozy, doc, children));\n\t    });\n\t  }\n\t  var query = Object.keys(options).length === 0 ? '' : '?' + encodePageOptions(options);\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/files/' + encodeURIComponent(id) + query).then(addIsDir);\n\t}\n\t\n\tfunction statByPath(cozy, path) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/files/metadata?Path=' + encodeURIComponent(path)).then(addIsDir);\n\t}\n\t\n\tfunction downloadById(cozy, id) {\n\t  return (0, _fetch.cozyFetch)(cozy, '/files/download/' + encodeURIComponent(id));\n\t}\n\t\n\tfunction downloadByPath(cozy, path) {\n\t  return (0, _fetch.cozyFetch)(cozy, '/files/download?Path=' + encodeURIComponent(path));\n\t}\n\t\n\tfunction extractResponseLinkRelated(res) {\n\t  var href = res.links && res.links.related;\n\t  if (!href) throw new Error('No related link in server response');\n\t  return href;\n\t}\n\t\n\tfunction getDownloadLinkByPath(cozy, path) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/files/downloads?Path=' + encodeURIComponent(path)).then(extractResponseLinkRelated);\n\t}\n\t\n\tfunction getDownloadLinkById(cozy, id) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/files/downloads?Id=' + encodeURIComponent(id)).then(extractResponseLinkRelated);\n\t}\n\t\n\tfunction getFilePath(cozy) {\n\t  var file = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t  var folder = arguments[2];\n\t\n\t  if (!folder || !folder.attributes) {\n\t    throw Error('Folder should be valid with an attributes.path property');\n\t  }\n\t\n\t  var folderPath = folder.attributes.path.endsWith('/') ? folder.attributes.path : folder.attributes.path + '/';\n\t\n\t  return '' + folderPath + file.name;\n\t}\n\t\n\tfunction getCollectionShareLink(cozy, id, collectionType) {\n\t  if (!id) {\n\t    return Promise.reject(Error('An id should be provided to create a share link'));\n\t  }\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/permissions?codes=email', {\n\t    data: {\n\t      type: 'io.cozy.permissions',\n\t      attributes: {\n\t        permissions: {\n\t          files: {\n\t            type: 'io.cozy.files',\n\t            verbs: ['GET'],\n\t            values: [id],\n\t            selector: 'referenced_by'\n\t          },\n\t          collection: {\n\t            type: collectionType,\n\t            verbs: ['GET'],\n\t            values: [id]\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }).then(function (data) {\n\t    return { sharecode: 'sharecode=' + data.attributes.codes.email, id: 'id=' + id };\n\t  });\n\t}\n\t\n\tfunction getArchiveLinkByPaths(cozy, paths) {\n\t  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'files';\n\t\n\t  var archive = {\n\t    type: 'io.cozy.archives',\n\t    attributes: {\n\t      name: name,\n\t      files: paths\n\t    }\n\t  };\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/files/archive', { data: archive }).then(extractResponseLinkRelated);\n\t}\n\t\n\tfunction getArchiveLinkByIds(cozy, ids) {\n\t  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'files';\n\t\n\t  var archive = {\n\t    type: 'io.cozy.archives',\n\t    attributes: {\n\t      name: name,\n\t      ids: ids\n\t    }\n\t  };\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/files/archive', { data: archive }).then(extractResponseLinkRelated);\n\t}\n\t\n\tfunction listTrash(cozy) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/files/trash');\n\t}\n\t\n\tfunction clearTrash(cozy) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'DELETE', '/files/trash');\n\t}\n\t\n\tfunction restoreById(cozy, id) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/files/trash/' + encodeURIComponent(id));\n\t}\n\t\n\tfunction destroyById(cozy, id, options) {\n\t  var _ref8 = options || {},\n\t      ifMatch = _ref8.ifMatch;\n\t\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'DELETE', '/files/trash/' + encodeURIComponent(id), undefined, {\n\t    headers: {\n\t      'If-Match': ifMatch || ''\n\t    }\n\t  });\n\t}\n\t\n\tfunction addIsDir(obj) {\n\t  obj.isDir = obj.attributes.type === 'directory';\n\t  return obj;\n\t}\n\t\n\tfunction encodePageOptions(options) {\n\t  var opts = [];\n\t  for (var name in options) {\n\t    opts.push('page[' + encodeURIComponent(name) + ']=' + encodeURIComponent(options[name]));\n\t  }\n\t  return opts.join('&');\n\t}\n\t\n\tfunction toJsonApi(cozy, doc) {\n\t  var contents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\t\n\t  var clone = JSON.parse(JSON.stringify(doc));\n\t  delete clone._id;\n\t  delete clone._rev;\n\t  return {\n\t    _id: doc._id,\n\t    _rev: doc._rev,\n\t    _type: _doctypes.DOCTYPE_FILES,\n\t    attributes: clone,\n\t    relationships: {\n\t      contents: {\n\t        data: contents,\n\t        meta: {\n\t          count: contents.length\n\t        }\n\t      }\n\t    },\n\t    relations: function relations(name) {\n\t      if (name === 'contents') {\n\t        return contents;\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tfunction sortFiles(allFiles) {\n\t  var folders = allFiles.filter(function (f) {\n\t    return f.attributes.type === 'directory';\n\t  });\n\t  var files = allFiles.filter(function (f) {\n\t    return f.attributes.type !== 'directory';\n\t  });\n\t  var sort = function sort(files) {\n\t    return files.sort(function (a, b) {\n\t      return a.attributes.name.localeCompare(b.attributes.name);\n\t    });\n\t  };\n\t  return sort(folders).concat(sort(files));\n\t}\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global fetch URL */\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar _auth_storage = __webpack_require__(23);\n\t\n\tvar _auth_v = __webpack_require__(24);\n\t\n\tvar _auth_v2 = __webpack_require__(8);\n\t\n\tvar auth = _interopRequireWildcard(_auth_v2);\n\t\n\tvar _data = __webpack_require__(25);\n\t\n\tvar data = _interopRequireWildcard(_data);\n\t\n\tvar _fetch = __webpack_require__(1);\n\t\n\tvar cozyFetch = _interopRequireWildcard(_fetch);\n\t\n\tvar _mango = __webpack_require__(30);\n\t\n\tvar mango = _interopRequireWildcard(_mango);\n\t\n\tvar _files = __webpack_require__(26);\n\t\n\tvar files = _interopRequireWildcard(_files);\n\t\n\tvar _intents = __webpack_require__(28);\n\t\n\tvar intents = _interopRequireWildcard(_intents);\n\t\n\tvar _jobs = __webpack_require__(29);\n\t\n\tvar jobs = _interopRequireWildcard(_jobs);\n\t\n\tvar _offline = __webpack_require__(31);\n\t\n\tvar offline = _interopRequireWildcard(_offline);\n\t\n\tvar _settings = __webpack_require__(33);\n\t\n\tvar settings = _interopRequireWildcard(_settings);\n\t\n\tvar _relations = __webpack_require__(32);\n\t\n\tvar relations = _interopRequireWildcard(_relations);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AppTokenV3 = auth.AppToken,\n\t    AccessTokenV3 = auth.AccessToken,\n\t    ClientV3 = auth.Client;\n\t\n\t\n\tvar AuthNone = 0;\n\tvar AuthRunning = 1;\n\tvar AuthError = 2;\n\tvar AuthOK = 3;\n\t\n\tvar defaultClientParams = {\n\t  softwareID: 'github.com/cozy/cozy-client-js'\n\t};\n\t\n\tvar dataProto = {\n\t  create: data.create,\n\t  find: data.find,\n\t  findMany: data.findMany,\n\t  findAll: data.findAll,\n\t  update: data.update,\n\t  delete: data._delete,\n\t  updateAttributes: data.updateAttributes,\n\t  changesFeed: data.changesFeed,\n\t  defineIndex: mango.defineIndex,\n\t  query: mango.query,\n\t  addReferencedFiles: relations.addReferencedFiles,\n\t  removeReferencedFiles: relations.removeReferencedFiles,\n\t  listReferencedFiles: relations.listReferencedFiles,\n\t  fetchReferencedFiles: relations.fetchReferencedFiles,\n\t  destroy: function destroy() {\n\t    (0, _utils.warn)('destroy is deprecated, use cozy.data.delete instead.');\n\t    return data._delete.apply(data, arguments);\n\t  }\n\t};\n\t\n\tvar authProto = {\n\t  client: auth.client,\n\t  registerClient: auth.registerClient,\n\t  updateClient: auth.updateClient,\n\t  unregisterClient: auth.unregisterClient,\n\t  getClient: auth.getClient,\n\t  getAuthCodeURL: auth.getAuthCodeURL,\n\t  getAccessToken: auth.getAccessToken,\n\t  refreshToken: auth.refreshToken\n\t};\n\t\n\tvar filesProto = {\n\t  create: files.create,\n\t  createDirectory: files.createDirectory,\n\t  createDirectoryByPath: files.createDirectoryByPath,\n\t  updateById: files.updateById,\n\t  updateAttributesById: files.updateAttributesById,\n\t  updateAttributesByPath: files.updateAttributesByPath,\n\t  trashById: files.trashById,\n\t  statById: files.statById,\n\t  statByPath: files.statByPath,\n\t  downloadById: files.downloadById,\n\t  downloadByPath: files.downloadByPath,\n\t  getDownloadLinkById: files.getDownloadLinkById,\n\t  getDownloadLink: files.getDownloadLinkByPath, // DEPRECATED, should be removed very soon\n\t  getDownloadLinkByPath: files.getDownloadLinkByPath,\n\t  getArchiveLink: function getArchiveLink() {\n\t    (0, _utils.warn)('getArchiveLink is deprecated, use cozy.files.getArchiveLinkByPaths instead.');\n\t    return files.getArchiveLinkByPaths.apply(files, arguments);\n\t  },\n\t  getArchiveLinkByPaths: files.getArchiveLinkByPaths,\n\t  getArchiveLinkByIds: files.getArchiveLinkByIds,\n\t  getFilePath: files.getFilePath,\n\t  getCollectionShareLink: files.getCollectionShareLink,\n\t  query: mango.queryFiles,\n\t  listTrash: files.listTrash,\n\t  clearTrash: files.clearTrash,\n\t  restoreById: files.restoreById,\n\t  destroyById: files.destroyById\n\t};\n\t\n\tvar intentsProto = {\n\t  create: intents.create,\n\t  createService: intents.createService\n\t};\n\t\n\tvar jobsProto = {\n\t  create: jobs.create,\n\t  count: jobs.count,\n\t  queued: jobs.queued\n\t};\n\t\n\tvar offlineProto = {\n\t  init: offline.init,\n\t  getDoctypes: offline.getDoctypes,\n\t  // database\n\t  hasDatabase: offline.hasDatabase,\n\t  getDatabase: offline.getDatabase,\n\t  createDatabase: offline.createDatabase,\n\t  destroyDatabase: offline.destroyDatabase,\n\t  destroyAllDatabase: offline.destroyAllDatabase,\n\t  // replication\n\t  hasReplication: offline.hasReplication,\n\t  replicateFromCozy: offline.replicateFromCozy,\n\t  stopReplication: offline.stopReplication,\n\t  stopAllReplication: offline.stopAllReplication,\n\t  // repeated replication\n\t  hasRepeatedReplication: offline.hasRepeatedReplication,\n\t  startRepeatedReplication: offline.startRepeatedReplication,\n\t  stopRepeatedReplication: offline.stopRepeatedReplication,\n\t  stopAllRepeatedReplication: offline.stopAllRepeatedReplication\n\t};\n\t\n\tvar settingsProto = {\n\t  diskUsage: settings.diskUsage,\n\t  changePassphrase: settings.changePassphrase,\n\t  getInstance: settings.getInstance,\n\t  updateInstance: settings.updateInstance,\n\t  getClients: settings.getClients,\n\t  deleteClientById: settings.deleteClientById,\n\t  updateLastSync: settings.updateLastSync\n\t};\n\t\n\tvar ensureHasReconnectParam = function ensureHasReconnectParam(_url) {\n\t  var url = new URL(_url);\n\t  if (url.searchParams && !url.searchParams.has('reconnect')) {\n\t    url.searchParams.append('reconnect', 1);\n\t  } else if (!url.search || url.search.indexOf('reconnect') === -1) {\n\t    // Some old navigators do not have the searchParams API\n\t    // and it is not polyfilled by babel-polyfill\n\t    url.search = url.search + '&reconnect=1';\n\t  }\n\t  return url.toString();\n\t};\n\t\n\tvar Client = function () {\n\t  function Client(options) {\n\t    _classCallCheck(this, Client);\n\t\n\t    this.data = {};\n\t    this.files = {};\n\t    this.intents = {};\n\t    this.jobs = {};\n\t    this.offline = {};\n\t    this.settings = {};\n\t    this.auth = {\n\t      Client: ClientV3,\n\t      AccessToken: AccessTokenV3,\n\t      AppToken: AppTokenV3,\n\t      AppTokenV2: _auth_v.AppToken,\n\t      LocalStorage: _auth_storage.LocalStorage,\n\t      MemoryStorage: _auth_storage.MemoryStorage\n\t    };\n\t    this._inited = false;\n\t    if (options) {\n\t      this.init(options);\n\t    }\n\t  }\n\t\n\t  _createClass(Client, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      this._inited = true;\n\t      this._oauth = false; // is oauth activated or not\n\t      this._token = null; // application token\n\t      this._authstate = AuthNone;\n\t      this._authcreds = null;\n\t      this._storage = null;\n\t      this._version = options.version || null;\n\t      this._offline = null;\n\t\n\t      var token = options.token;\n\t      var oauth = options.oauth;\n\t      if (token && oauth) {\n\t        throw new Error('Cannot specify an application token with a oauth activated');\n\t      }\n\t\n\t      if (token) {\n\t        this._token = new AppTokenV3({ token: token });\n\t      } else if (oauth) {\n\t        this._oauth = true;\n\t        this._storage = oauth.storage;\n\t        this._clientParams = Object.assign({}, defaultClientParams, oauth.clientParams);\n\t        this._onRegistered = oauth.onRegistered || nopOnRegistered;\n\t      }\n\t\n\t      var url = options.cozyURL || '';\n\t      while (url[url.length - 1] === '/') {\n\t        url = url.slice(0, -1);\n\t      }\n\t\n\t      this._url = url;\n\t\n\t      this._invalidTokenErrorHandler = options.onInvalidTokenError !== undefined ? options.onInvalidTokenError : cozyFetch.handleInvalidTokenError;\n\t\n\t      var disablePromises = !!options.disablePromises;\n\t      addToProto(this, this.data, dataProto, disablePromises);\n\t      addToProto(this, this.auth, authProto, disablePromises);\n\t      addToProto(this, this.files, filesProto, disablePromises);\n\t      addToProto(this, this.intents, intentsProto, disablePromises);\n\t      addToProto(this, this.jobs, jobsProto, disablePromises);\n\t      addToProto(this, this.offline, offlineProto, disablePromises);\n\t      addToProto(this, this.settings, settingsProto, disablePromises);\n\t\n\t      if (options.offline) {\n\t        this.offline.init(options.offline);\n\t      }\n\t\n\t      // Exposing cozyFetchJSON to make some development easier. Should be temporary.\n\t      this.fetchJSON = function _fetchJSON() {\n\t        var args = [this].concat(Array.prototype.slice.call(arguments));\n\t        return cozyFetch.cozyFetchJSON.apply(this, args);\n\t      };\n\t    }\n\t  }, {\n\t    key: 'authorize',\n\t    value: function authorize() {\n\t      var _this = this;\n\t\n\t      var forceTokenRefresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t      var state = this._authstate;\n\t      if (state === AuthOK || state === AuthRunning) {\n\t        return this._authcreds;\n\t      }\n\t\n\t      this._authstate = AuthRunning;\n\t      this._authcreds = this.isV2().then(function (isV2) {\n\t        if (isV2 && _this._oauth) {\n\t          throw new Error('OAuth is not supported on the V2 stack');\n\t        }\n\t        if (_this._oauth) {\n\t          if (forceTokenRefresh && _this._clientParams.redirectURI) {\n\t            _this._clientParams.redirectURI = ensureHasReconnectParam(_this._clientParams.redirectURI);\n\t          }\n\t          return auth.oauthFlow(_this, _this._storage, _this._clientParams, _this._onRegistered, forceTokenRefresh);\n\t        }\n\t        // we expect to be on a client side application running in a browser\n\t        // with cookie-based authentication.\n\t        if (isV2) {\n\t          return (0, _auth_v.getAppToken)();\n\t        } else if (_this._token) {\n\t          return Promise.resolve({ client: null, token: _this._token });\n\t        } else {\n\t          throw new Error('Missing application token');\n\t        }\n\t      });\n\t\n\t      this._authcreds.then(function () {\n\t        _this._authstate = AuthOK;\n\t      }, function () {\n\t        _this._authstate = AuthError;\n\t      });\n\t\n\t      return this._authcreds;\n\t    }\n\t  }, {\n\t    key: 'saveCredentials',\n\t    value: function saveCredentials(client, token) {\n\t      var creds = { client: client, token: token };\n\t      if (!this._storage || this._authstate === AuthRunning) {\n\t        return Promise.resolve(creds);\n\t      }\n\t      this._storage.save(auth.CredsKey, creds);\n\t      this._authcreds = Promise.resolve(creds);\n\t      return this._authcreds;\n\t    }\n\t  }, {\n\t    key: 'fullpath',\n\t    value: function fullpath(path) {\n\t      var _this2 = this;\n\t\n\t      return this.isV2().then(function (isV2) {\n\t        var pathprefix = isV2 ? '/ds-api' : '';\n\t        return _this2._url + pathprefix + path;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'isV2',\n\t    value: function isV2() {\n\t      var _this3 = this;\n\t\n\t      if (!this._version) {\n\t        return (0, _utils.retry)(function () {\n\t          return fetch(_this3._url + '/status/');\n\t        }, 3)().then(function (res) {\n\t          if (!res.ok) {\n\t            throw new Error('Could not fetch cozy status');\n\t          } else {\n\t            return res.json();\n\t          }\n\t        }).then(function (status) {\n\t          _this3._version = status.datasystem !== undefined ? 2 : 3;\n\t          return _this3.isV2();\n\t        });\n\t      }\n\t      return Promise.resolve(this._version === 2);\n\t    }\n\t  }]);\n\t\n\t  return Client;\n\t}();\n\t\n\tfunction nopOnRegistered() {\n\t  throw new Error('Missing onRegistered callback');\n\t}\n\t\n\tfunction protoify(context, fn) {\n\t  return function prototyped() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return fn.apply(undefined, [context].concat(args));\n\t  };\n\t}\n\t\n\tfunction addToProto(ctx, obj, proto, disablePromises) {\n\t  for (var attr in proto) {\n\t    var fn = protoify(ctx, proto[attr]);\n\t    if (disablePromises) {\n\t      fn = (0, _utils.unpromiser)(fn);\n\t    }\n\t    obj[attr] = fn;\n\t  }\n\t}\n\t\n\tmodule.exports = new Client();\n\tObject.assign(module.exports, { Client: Client, LocalStorage: _auth_storage.LocalStorage, MemoryStorage: _auth_storage.MemoryStorage });\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.create = create;\n\texports.createService = createService;\n\t\n\tvar _fetch = __webpack_require__(1);\n\t\n\tvar intentClass = 'coz-intent';\n\t\n\t// helper to serialize/deserialize an error for/from postMessage\n\tvar errorSerializer = function () {\n\t  function mapErrorProperties(from, to) {\n\t    var result = Object.assign(to, from);\n\t    var nativeProperties = ['name', 'message'];\n\t    return nativeProperties.reduce(function (result, property) {\n\t      if (from[property]) {\n\t        to[property] = from[property];\n\t      }\n\t      return result;\n\t    }, result);\n\t  }\n\t  return {\n\t    serialize: function serialize(error) {\n\t      return mapErrorProperties(error, {});\n\t    },\n\t    deserialize: function deserialize(data) {\n\t      return mapErrorProperties(data, new Error(data.message));\n\t    }\n\t  };\n\t}();\n\t\n\t// inject iframe for service in given element\n\tfunction injectService(url, element, intent, data, onReadyCallback) {\n\t  var document = element.ownerDocument;\n\t  if (!document) throw new Error('Cannot retrieve document object from given element');\n\t\n\t  var window = document.defaultView;\n\t  if (!window) throw new Error('Cannot retrieve window object from document');\n\t\n\t  var iframe = document.createElement('iframe');\n\t  // if callback provided for when iframe is loaded\n\t  if (typeof onReadyCallback === 'function') iframe.onload = onReadyCallback;\n\t  // TODO: implement 'title' attribute\n\t  iframe.setAttribute('src', url);\n\t  iframe.classList.add(intentClass);\n\t  element.appendChild(iframe);\n\t  iframe.focus();\n\t\n\t  // Keeps only http://domain:port/\n\t  var serviceOrigin = url.split('/', 3).join('/');\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    var handshaken = false;\n\t    var messageHandler = function messageHandler(event) {\n\t      if (event.origin !== serviceOrigin) return;\n\t\n\t      if (event.data.type === 'load') {\n\t        // Safari 9.1 (At least) send a MessageEvent when the iframe loads,\n\t        // making the handshake fails.\n\t        console.warn && console.warn('Cozy Client ignored MessageEvent having data.type `load`.');\n\t        return;\n\t      }\n\t\n\t      if (event.data.type === 'intent-' + intent._id + ':ready') {\n\t        handshaken = true;\n\t        return event.source.postMessage(data, event.origin);\n\t      }\n\t\n\t      if (handshaken && event.data.type === 'intent-' + intent._id + ':resize') {\n\t        ['width', 'height', 'maxWidth', 'maxHeight'].forEach(function (prop) {\n\t          if (event.data.transition) element.style.transition = event.data.transition;\n\t          if (event.data.dimensions[prop]) element.style[prop] = event.data.dimensions[prop] + 'px';\n\t        });\n\t\n\t        return true;\n\t      }\n\t\n\t      window.removeEventListener('message', messageHandler);\n\t      var removeIntentFrame = function removeIntentFrame() {\n\t        // check if the parent node has not been already removed from the DOM\n\t        iframe.parentNode && iframe.parentNode.removeChild(iframe);\n\t      };\n\t\n\t      if (handshaken && event.data.type === 'intent-' + intent._id + ':exposeFrameRemoval') {\n\t        return resolve({ removeIntentFrame: removeIntentFrame, doc: event.data.document });\n\t      }\n\t\n\t      removeIntentFrame();\n\t\n\t      if (event.data.type === 'intent-' + intent._id + ':error') {\n\t        return reject(errorSerializer.deserialize(event.data.error));\n\t      }\n\t\n\t      if (handshaken && event.data.type === 'intent-' + intent._id + ':cancel') {\n\t        return resolve(null);\n\t      }\n\t\n\t      if (handshaken && event.data.type === 'intent-' + intent._id + ':done') {\n\t        return resolve(event.data.document);\n\t      }\n\t\n\t      if (!handshaken) {\n\t        return reject(new Error('Unexpected handshake message from intent service'));\n\t      }\n\t\n\t      // We may be in a state where the messageHandler is still attached to then\n\t      // window, but will not be needed anymore. For example, the service failed\n\t      // before adding the `unload` listener, so no `intent:cancel` message has\n\t      // never been sent.\n\t      // So we simply ignore other messages, and this listener will stay here,\n\t      // waiting for a message which will never come, forever (almost).\n\t    };\n\t\n\t    window.addEventListener('message', messageHandler);\n\t  });\n\t}\n\t\n\tfunction create(cozy, action, type) {\n\t  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t  var permissions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\t\n\t  if (!action) throw new Error('Misformed intent, \"action\" property must be provided');\n\t  if (!type) throw new Error('Misformed intent, \"type\" property must be provided');\n\t\n\t  var createPromise = (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/intents', {\n\t    data: {\n\t      type: 'io.cozy.intents',\n\t      attributes: {\n\t        action: action,\n\t        type: type,\n\t        data: data,\n\t        permissions: permissions\n\t      }\n\t    }\n\t  });\n\t\n\t  createPromise.start = function (element, onReadyCallback) {\n\t    return createPromise.then(function (intent) {\n\t      var service = intent.attributes.services && intent.attributes.services[0];\n\t\n\t      if (!service) {\n\t        return Promise.reject(new Error('Unable to find a service'));\n\t      }\n\t\n\t      return injectService(service.href, element, intent, data, onReadyCallback);\n\t    });\n\t  };\n\t\n\t  return createPromise;\n\t}\n\t\n\tfunction listenClientData(intent, window) {\n\t  return new Promise(function (resolve, reject) {\n\t    var messageEventListener = function messageEventListener(event) {\n\t      if (event.origin !== intent.attributes.client) return;\n\t\n\t      window.removeEventListener('message', messageEventListener);\n\t      resolve(event.data);\n\t    };\n\t\n\t    window.addEventListener('message', messageEventListener);\n\t    window.parent.postMessage({\n\t      type: 'intent-' + intent._id + ':ready'\n\t    }, intent.attributes.client);\n\t  });\n\t}\n\t\n\t// returns a service to communicate with intent client\n\tfunction createService(cozy, intentId, serviceWindow) {\n\t  serviceWindow = serviceWindow || typeof window !== 'undefined' && window;\n\t  if (!serviceWindow) throw new Error('Intent service should be used in browser');\n\t\n\t  intentId = intentId || serviceWindow.location.search.split('=')[1];\n\t  if (!intentId) throw new Error('Cannot retrieve intent from URL');\n\t\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/intents/' + intentId).then(function (intent) {\n\t    var terminated = false;\n\t\n\t    var _terminate = function _terminate(message) {\n\t      if (terminated) throw new Error('Intent service has already been terminated');\n\t      terminated = true;\n\t      serviceWindow.parent.postMessage(message, intent.attributes.client);\n\t    };\n\t\n\t    var resizeClient = function resizeClient(dimensions, transitionProperty) {\n\t      if (terminated) throw new Error('Intent service has been terminated');\n\t\n\t      var message = {\n\t        type: 'intent-' + intent._id + ':resize',\n\t        // if a dom element is passed, calculate its size\n\t        dimensions: dimensions.element ? Object.assign({}, dimensions, {\n\t          maxHeight: dimensions.element.clientHeight,\n\t          maxWidth: dimensions.element.clientWidth\n\t        }) : dimensions,\n\t        transition: transitionProperty\n\t      };\n\t\n\t      serviceWindow.parent.postMessage(message, intent.attributes.client);\n\t    };\n\t\n\t    var cancel = function cancel() {\n\t      _terminate({ type: 'intent-' + intent._id + ':cancel' });\n\t    };\n\t\n\t    // Prevent unfulfilled client promises when this window unloads for a\n\t    // reason or another.\n\t    serviceWindow.addEventListener('unload', function () {\n\t      if (!terminated) cancel();\n\t    });\n\t\n\t    return listenClientData(intent, serviceWindow).then(function (data) {\n\t      return {\n\t        getData: function getData() {\n\t          return data;\n\t        },\n\t        getIntent: function getIntent() {\n\t          return intent;\n\t        },\n\t        terminate: function terminate(doc) {\n\t          if (data && data.exposeIntentFrameRemoval) {\n\t            return _terminate({\n\t              type: 'intent-' + intent._id + ':exposeFrameRemoval',\n\t              document: doc\n\t            });\n\t          } else {\n\t            return _terminate({\n\t              type: 'intent-' + intent._id + ':done',\n\t              document: doc\n\t            });\n\t          }\n\t        },\n\t        throw: function _throw(error) {\n\t          return _terminate({\n\t            type: 'intent-' + intent._id + ':error',\n\t            error: errorSerializer.serialize(error)\n\t          });\n\t        },\n\t        resizeClient: resizeClient,\n\t        cancel: cancel\n\t      };\n\t    });\n\t  });\n\t}\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.count = count;\n\texports.queued = queued;\n\texports.create = create;\n\t\n\tvar _fetch = __webpack_require__(1);\n\t\n\tfunction count(cozy, workerType) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/jobs/queue/' + workerType).then(function (data) {\n\t    return data.length;\n\t  });\n\t}\n\t\n\tfunction queued(cozy, workerType) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/jobs/queue/' + workerType);\n\t}\n\t\n\tfunction create(cozy, workerType, args, options) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/jobs/queue/' + workerType, {\n\t    data: {\n\t      type: 'io.cozy.jobs',\n\t      attributes: {\n\t        arguments: args || {},\n\t        options: options || {}\n\t      }\n\t    }\n\t  });\n\t}\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.defineIndex = defineIndex;\n\texports.query = query;\n\texports.queryFiles = queryFiles;\n\texports.parseSelector = parseSelector;\n\texports.normalizeSelector = normalizeSelector;\n\texports.makeMapReduceQuery = makeMapReduceQuery;\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar _doctypes = __webpack_require__(5);\n\t\n\tvar _fetch = __webpack_require__(1);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction defineIndex(cozy, doctype, fields) {\n\t  return cozy.isV2().then(function (isV2) {\n\t    doctype = (0, _doctypes.normalizeDoctype)(cozy, isV2, doctype);\n\t    if (!Array.isArray(fields) || fields.length === 0) {\n\t      throw new Error('defineIndex fields should be a non-empty array');\n\t    }\n\t    if (isV2) {\n\t      return defineIndexV2(cozy, doctype, fields);\n\t    } else {\n\t      return defineIndexV3(cozy, doctype, fields);\n\t    }\n\t  });\n\t}\n\t\n\tfunction query(cozy, indexRef, options) {\n\t  return cozy.isV2().then(function (isV2) {\n\t    if (!indexRef) {\n\t      throw new Error('query should be passed the indexRef');\n\t    }\n\t    if (isV2) {\n\t      return queryV2(cozy, indexRef, options);\n\t    } else {\n\t      return queryV3(cozy, indexRef, options);\n\t    }\n\t  });\n\t}\n\t\n\tfunction queryFiles(cozy, indexRef, options) {\n\t  var opts = getV3Options(indexRef, options);\n\t  return (0, _fetch.cozyFetchRawJSON)(cozy, 'POST', '/files/_find', opts).then(function (response) {\n\t    return options.wholeResponse ? response : response.docs;\n\t  });\n\t}\n\t\n\t// Internals\n\t\n\tvar VALUEOPERATORS = ['$eq', '$gt', '$gte', '$lt', '$lte'];\n\tvar LOGICOPERATORS = ['$or', '$and', '$not'];\n\t\n\t/* eslint-disable */\n\tvar MAP_TEMPLATE = function (doc) {\n\t  if (doc.docType.toLowerCase() === 'DOCTYPEPLACEHOLDER') {\n\t    emit(FIELDSPLACEHOLDER, doc);\n\t  }\n\t}.toString().replace(/ /g, '').replace(/\\n/g, '');\n\tvar COUCHDB_INFINITY = { '\\uFFFF': '\\uFFFF' };\n\tvar COUCHDB_LOWEST = null;\n\t/* eslint-enable */\n\t\n\t// defineIndexV2 is equivalent to defineIndex but only works for V2.\n\t// It transforms the index fields into a map reduce view.\n\tfunction defineIndexV2(cozy, doctype, fields) {\n\t  var indexName = 'by' + fields.map(capitalize).join('');\n\t  var indexDefinition = { map: makeMapFunction(doctype, fields), reduce: '_count' };\n\t  var path = '/request/' + doctype + '/' + indexName + '/';\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'PUT', path, indexDefinition).then(function () {\n\t    return { doctype: doctype, type: 'mapreduce', name: indexName, fields: fields };\n\t  });\n\t}\n\t\n\tfunction defineIndexV3(cozy, doctype, fields) {\n\t  var path = (0, _utils.createPath)(cozy, false, doctype, '_index');\n\t  var indexDefinition = { 'index': { fields: fields } };\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', path, indexDefinition).then(function (response) {\n\t    var indexResult = { doctype: doctype, type: 'mango', name: response.id, fields: fields };\n\t\n\t    if (response.result === 'exists') return indexResult;\n\t\n\t    // indexes might not be usable right after being created; so we delay the resolving until they are\n\t    var selector = {};\n\t    selector[fields[0]] = { '$gt': null };\n\t\n\t    var opts = getV3Options(indexResult, { 'selector': selector });\n\t    var path = (0, _utils.createPath)(cozy, false, indexResult.doctype, '_find');\n\t    return (0, _fetch.cozyFetchJSON)(cozy, 'POST', path, opts).then(function () {\n\t      return indexResult;\n\t    }).catch(function () {\n\t      // one retry\n\t      return (0, _utils.sleep)(1000).then(function () {\n\t        return (0, _fetch.cozyFetchJSON)(cozy, 'POST', path, opts);\n\t      }).then(function () {\n\t        return indexResult;\n\t      }).catch(function () {\n\t        return (0, _utils.sleep)(500).then(function () {\n\t          return indexResult;\n\t        });\n\t      });\n\t    });\n\t  });\n\t}\n\t\n\t// queryV2 is equivalent to query but only works for V2.\n\t// It transforms the query into a _views call using makeMapReduceQuery\n\tfunction queryV2(cozy, indexRef, options) {\n\t  if (indexRef.type !== 'mapreduce') {\n\t    throw new Error('query indexRef should be the return value of defineIndexV2');\n\t  }\n\t  if (options.fields) {\n\t    (0, _utils.warn)('query fields will be ignored on v2');\n\t  }\n\t\n\t  var path = '/request/' + indexRef.doctype + '/' + indexRef.name + '/';\n\t  var opts = makeMapReduceQuery(indexRef, options);\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', path, opts).then(function (response) {\n\t    return response.map(function (r) {\n\t      return r.value;\n\t    });\n\t  });\n\t}\n\t\n\t// queryV3 is equivalent to query but only works for V3\n\tfunction queryV3(cozy, indexRef, options) {\n\t  var opts = getV3Options(indexRef, options);\n\t\n\t  var path = (0, _utils.createPath)(cozy, false, indexRef.doctype, '_find');\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', path, opts).then(function (response) {\n\t    return options.wholeResponse ? response : response.docs;\n\t  });\n\t}\n\t\n\tfunction getV3Options(indexRef, options) {\n\t  if (indexRef.type !== 'mango') {\n\t    throw new Error('indexRef should be the return value of defineIndexV3');\n\t  }\n\t\n\t  var opts = {\n\t    use_index: indexRef.name,\n\t    fields: options.fields,\n\t    selector: options.selector,\n\t    limit: options.limit,\n\t    skip: options.skip,\n\t    since: options.since,\n\t    sort: options.sort\n\t  };\n\t\n\t  if (options.descending) {\n\t    opts.sort = indexRef.fields.map(function (f) {\n\t      return _defineProperty({}, f, 'desc');\n\t    });\n\t  }\n\t\n\t  return opts;\n\t}\n\t\n\t// misc\n\tfunction capitalize(name) {\n\t  return name.charAt(0).toUpperCase() + name.slice(1);\n\t}\n\t\n\tfunction makeMapFunction(doctype, fields) {\n\t  fields = '[' + fields.map(function (name) {\n\t    return 'doc.' + name;\n\t  }).join(',') + ']';\n\t\n\t  return MAP_TEMPLATE.replace('DOCTYPEPLACEHOLDER', doctype.toLowerCase()).replace('FIELDSPLACEHOLDER', fields);\n\t}\n\t\n\t// parseSelector takes a mango selector and returns it as an array of filter\n\t// a filter is [path, operator, value] array\n\t// a path is an array of field names\n\t// This function is only exported so it can be unit tested.\n\t// Example :\n\t// parseSelector({\"test\":{\"deep\": {\"$gt\": 3}}})\n\t// [[['test', 'deep'], '$gt', 3 ]]\n\tfunction parseSelector(selector) {\n\t  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t  var operator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '$eq';\n\t\n\t  if ((typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) !== 'object') {\n\t    return [[path, operator, selector]];\n\t  }\n\t\n\t  var keys = Object.keys(selector);\n\t  if (keys.length === 0) {\n\t    throw new Error('empty selector');\n\t  } else {\n\t    return keys.reduce(function (acc, k) {\n\t      if (LOGICOPERATORS.indexOf(k) !== -1) {\n\t        throw new Error('cozy-client-js does not support mango logic ops');\n\t      } else if (VALUEOPERATORS.indexOf(k) !== -1) {\n\t        return acc.concat(parseSelector(selector[k], path, k));\n\t      } else {\n\t        return acc.concat(parseSelector(selector[k], path.concat(k), '$eq'));\n\t      }\n\t    }, []);\n\t  }\n\t}\n\t\n\t// normalizeSelector takes a mango selector and returns it as an object\n\t// normalized.\n\t// This function is only exported so it can be unit tested.\n\t// Example :\n\t// parseSelector({\"test\":{\"deep\": {\"$gt\": 3}}})\n\t// {\"test.deep\": {\"$gt\": 3}}\n\tfunction normalizeSelector(selector) {\n\t  var filters = parseSelector(selector);\n\t  return filters.reduce(function (acc, filter) {\n\t    var _filter = _slicedToArray(filter, 3),\n\t        path = _filter[0],\n\t        op = _filter[1],\n\t        value = _filter[2];\n\t\n\t    var field = path.join('.');\n\t    acc[field] = acc[field] || {};\n\t    acc[field][op] = value;\n\t    return acc;\n\t  }, {});\n\t}\n\t\n\t// applySelector takes the normalized selector for the current field\n\t// and append the proper values to opts.startkey, opts.endkey\n\tfunction applySelector(selector, opts) {\n\t  var value = selector['$eq'];\n\t  var lower = COUCHDB_LOWEST;\n\t  var upper = COUCHDB_INFINITY;\n\t  var inclusiveEnd = void 0;\n\t\n\t  if (value) {\n\t    opts.startkey.push(value);\n\t    opts.endkey.push(value);\n\t    return false;\n\t  }\n\t\n\t  value = selector['$gt'];\n\t  if (value) {\n\t    throw new Error('operator $gt (strict greater than) not supported');\n\t  }\n\t\n\t  value = selector['$gte'];\n\t  if (value) {\n\t    lower = value;\n\t  }\n\t\n\t  value = selector['$lte'];\n\t  if (value) {\n\t    upper = value;\n\t    inclusiveEnd = true;\n\t  }\n\t\n\t  value = selector['$lt'];\n\t  if (value) {\n\t    upper = value;\n\t    inclusiveEnd = false;\n\t  }\n\t\n\t  opts.startkey.push(lower);\n\t  opts.endkey.push(upper);\n\t  if (inclusiveEnd !== undefined) opts.inclusive_end = inclusiveEnd;\n\t  return true;\n\t}\n\t\n\t// makeMapReduceQuery takes a mango query and generate _views call parameters\n\t// to obtain same results depending on fields in the passed indexRef.\n\tfunction makeMapReduceQuery(indexRef, query) {\n\t  var mrquery = {\n\t    startkey: [],\n\t    endkey: [],\n\t    reduce: false\n\t  };\n\t  var firstFreeValueField = null;\n\t  var normalizedSelector = normalizeSelector(query.selector);\n\t\n\t  indexRef.fields.forEach(function (field) {\n\t    var selector = normalizedSelector[field];\n\t\n\t    if (selector && firstFreeValueField != null) {\n\t      throw new Error('Selector on field ' + field + ', but not on ' + firstFreeValueField + ' which is higher in index fields.');\n\t    } else if (selector) {\n\t      selector.used = true;\n\t      var isFreeValue = applySelector(selector, mrquery);\n\t      if (isFreeValue) firstFreeValueField = field;\n\t    } else if (firstFreeValueField == null) {\n\t      firstFreeValueField = field;\n\t      mrquery.endkey.push(COUCHDB_INFINITY);\n\t    }\n\t  });\n\t\n\t  Object.keys(normalizedSelector).forEach(function (field) {\n\t    if (!normalizedSelector[field].used) {\n\t      throw new Error('Cant apply selector on ' + field + ', it is not in index');\n\t    }\n\t  });\n\t\n\t  if (query.descending) {\n\t    mrquery = {\n\t      descending: true,\n\t      reduce: false,\n\t      startkey: mrquery.endkey,\n\t      endkey: mrquery.startkey,\n\t      inclusive_end: mrquery.inclusive_end\n\t    };\n\t  }\n\t\n\t  return mrquery;\n\t}\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.replicationOfflineError = undefined;\n\texports.init = init;\n\texports.getDoctypes = getDoctypes;\n\texports.hasDatabase = hasDatabase;\n\texports.getDatabase = getDatabase;\n\texports.setDatabase = setDatabase;\n\texports.createDatabase = createDatabase;\n\texports.destroyDatabase = destroyDatabase;\n\texports.destroyAllDatabase = destroyAllDatabase;\n\texports.hasReplication = hasReplication;\n\texports.replicateFromCozy = replicateFromCozy;\n\texports.stopReplication = stopReplication;\n\texports.stopAllReplication = stopAllReplication;\n\texports.hasRepeatedReplication = hasRepeatedReplication;\n\texports.startRepeatedReplication = startRepeatedReplication;\n\texports.stopRepeatedReplication = stopRepeatedReplication;\n\texports.stopAllRepeatedReplication = stopAllRepeatedReplication;\n\t\n\tvar _doctypes = __webpack_require__(5);\n\t\n\tvar _auth_v = __webpack_require__(8);\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar _pouchdb = __webpack_require__(57);\n\t\n\tvar _pouchdb2 = _interopRequireDefault(_pouchdb);\n\t\n\tvar _pouchdbFind = __webpack_require__(51);\n\t\n\tvar _pouchdbFind2 = _interopRequireDefault(_pouchdbFind);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar replicationOfflineError = exports.replicationOfflineError = 'Replication abort, your device is actually offline.'; /* global pouchdbAdapterCordovaSqlite */\n\t\n\t\n\tvar pluginLoaded = false;\n\t\n\t/*\n\t  For each doctype we have some parameters:\n\t  cozy._offline[doctype] = {\n\t    database: pouchdb database\n\t    replication: the pouchdb replication\n\t    replicationPromise: promise of replication\n\t    interval: repeated replication interval\n\t  }\n\t*/\n\t\n\tfunction init(cozy, _ref) {\n\t  var _ref$options = _ref.options,\n\t      options = _ref$options === undefined ? {} : _ref$options,\n\t      _ref$doctypes = _ref.doctypes,\n\t      doctypes = _ref$doctypes === undefined ? [] : _ref$doctypes;\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\t\n\t  try {\n\t    for (var _iterator = doctypes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var doctype = _step.value;\n\t\n\t      createDatabase(cozy, doctype, options);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t// helper\n\t\n\tfunction getInfo(cozy, doctype) {\n\t  cozy._offline = cozy._offline || [];\n\t  cozy._offline[doctype] = cozy._offline[doctype] || {};\n\t  return cozy._offline[doctype];\n\t}\n\t\n\tfunction getDoctypes(cozy) {\n\t  cozy._offline = cozy._offline || [];\n\t  return Object.keys(cozy._offline);\n\t}\n\t\n\t//\n\t// DATABASE\n\t//\n\t\n\tfunction hasDatabase(cozy, doctype) {\n\t  return getDatabase(cozy, doctype) !== undefined;\n\t}\n\t\n\tfunction getDatabase(cozy, doctype) {\n\t  return getInfo(cozy, doctype).database;\n\t}\n\t\n\tfunction setDatabase(cozy, doctype, database) {\n\t  cozy._offline[doctype].database = database;\n\t  return getDatabase(cozy, doctype);\n\t}\n\t\n\tfunction createDatabase(cozy, doctype) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t  if (!pluginLoaded) {\n\t    _pouchdb2.default.plugin(_pouchdbFind2.default);\n\t    if (typeof pouchdbAdapterCordovaSqlite !== 'undefined') _pouchdb2.default.plugin(pouchdbAdapterCordovaSqlite);\n\t    pluginLoaded = true;\n\t  }\n\t\n\t  if (hasDatabase(cozy, doctype)) {\n\t    return Promise.resolve(getDatabase(cozy, doctype));\n\t  }\n\t\n\t  setDatabase(cozy, doctype, new _pouchdb2.default(doctype, options));\n\t  return createIndexes(cozy, doctype).then(function () {\n\t    return getDatabase(cozy, doctype);\n\t  });\n\t}\n\t\n\tfunction destroyDatabase(cozy, doctype) {\n\t  if (!hasDatabase(cozy, doctype)) {\n\t    return Promise.resolve(false);\n\t  }\n\t\n\t  return stopRepeatedReplication(cozy, doctype).then(function () {\n\t    return stopReplication(cozy, doctype);\n\t  }).then(function () {\n\t    return getDatabase(cozy, doctype).destroy();\n\t  }).then(function (response) {\n\t    setDatabase(cozy, doctype, undefined);\n\t    return response;\n\t  });\n\t}\n\t\n\tfunction destroyAllDatabase(cozy) {\n\t  var doctypes = getDoctypes(cozy);\n\t  var destroy = function destroy(doctype) {\n\t    return destroyDatabase(cozy, doctype);\n\t  };\n\t  return Promise.all(doctypes.map(destroy));\n\t}\n\t\n\tfunction createIndexes(cozy, doctype) {\n\t  if (doctype === _doctypes.DOCTYPE_FILES) {\n\t    return getDatabase(cozy, doctype).createIndex({ index: { fields: ['dir_id'] } });\n\t  }\n\t  return Promise.resolve();\n\t}\n\t\n\t//\n\t// REPLICATION\n\t//\n\t\n\tfunction hasReplication(cozy, doctype) {\n\t  return getReplication(cozy, doctype) !== undefined;\n\t}\n\t\n\tfunction getReplication(cozy, doctype) {\n\t  return getInfo(cozy, doctype).replication;\n\t}\n\t\n\tfunction setReplication(cozy, doctype, replication) {\n\t  cozy._offline[doctype].replication = replication;\n\t  return getReplication(cozy, doctype);\n\t}\n\t\n\tfunction getReplicationUrl(cozy, doctype) {\n\t  return cozy.authorize().then(function (credentials) {\n\t    var basic = credentials.token.toBasicAuth();\n\t    return (cozy._url + '/data/' + doctype).replace('//', '//' + basic);\n\t  });\n\t}\n\t\n\tfunction getReplicationPromise(cozy, doctype) {\n\t  return getInfo(cozy, doctype).replicationPromise;\n\t}\n\t\n\tfunction setReplicationPromise(cozy, doctype, promise) {\n\t  cozy._offline[doctype].replicationPromise = promise;\n\t  return getReplicationPromise(cozy, doctype);\n\t}\n\t\n\tfunction replicateFromCozy(cozy, doctype) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t  return setReplicationPromise(cozy, doctype, new Promise(function (resolve, reject) {\n\t    if (!hasDatabase(cozy, doctype)) {\n\t      createDatabase(cozy, doctype);\n\t    }\n\t    if (options.live === true) {\n\t      return reject(new Error('You can\\'t use `live` option with Cozy couchdb.'));\n\t    }\n\t\n\t    if ((0, _utils.isOffline)()) {\n\t      reject(replicationOfflineError);\n\t      options.onError && options.onError(replicationOfflineError);\n\t      return;\n\t    }\n\t\n\t    getReplicationUrl(cozy, doctype).then(function (url) {\n\t      return setReplication(cozy, doctype, getDatabase(cozy, doctype).replicate.from(url, options).on('complete', function (info) {\n\t        setReplication(cozy, doctype, undefined);\n\t        resolve(info);\n\t        options.onComplete && options.onComplete(info);\n\t      }).on('error', function (err) {\n\t        if (err.error === 'code=400, message=Expired token') {\n\t          cozy.authorize().then(function (_ref2) {\n\t            var client = _ref2.client,\n\t                token = _ref2.token;\n\t\n\t            (0, _auth_v.refreshToken)(cozy, client, token).then(function (newToken) {\n\t              return cozy.saveCredentials(client, newToken);\n\t            }).then(function (credentials) {\n\t              return replicateFromCozy(cozy, doctype, options);\n\t            });\n\t          });\n\t        } else {\n\t          console.warn('ReplicateFromCozy \\'' + doctype + '\\' Error:');\n\t          console.warn(err);\n\t          setReplication(cozy, doctype, undefined);\n\t          reject(err);\n\t          options.onError && options.onError(err);\n\t        }\n\t      }));\n\t    });\n\t  }));\n\t}\n\t\n\tfunction stopReplication(cozy, doctype) {\n\t  if (!getDatabase(cozy, doctype) || !hasReplication(cozy, doctype)) {\n\t    return Promise.resolve();\n\t  }\n\t\n\t  return new Promise(function (resolve) {\n\t    try {\n\t      getReplicationPromise(cozy, doctype).then(function () {\n\t        resolve();\n\t      });\n\t      getReplication(cozy, doctype).cancel();\n\t      // replication is set to undefined by complete replication\n\t    } catch (e) {\n\t      resolve();\n\t    }\n\t  });\n\t}\n\t\n\tfunction stopAllReplication(cozy) {\n\t  var doctypes = getDoctypes(cozy);\n\t  var stop = function stop(doctype) {\n\t    return stopReplication(cozy, doctype);\n\t  };\n\t  return Promise.all(doctypes.map(stop));\n\t}\n\t\n\t//\n\t// REPEATED REPLICATION\n\t//\n\t\n\tfunction getRepeatedReplication(cozy, doctype) {\n\t  return getInfo(cozy, doctype).interval;\n\t}\n\t\n\tfunction setRepeatedReplication(cozy, doctype, interval) {\n\t  cozy._offline[doctype].interval = interval;\n\t}\n\t\n\tfunction hasRepeatedReplication(cozy, doctype) {\n\t  return getRepeatedReplication(cozy, doctype) !== undefined;\n\t}\n\t\n\tfunction startRepeatedReplication(cozy, doctype, timer) {\n\t  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t\n\t  // TODO: add timer limitation for not flooding Gozy\n\t  if (hasRepeatedReplication(cozy, doctype)) {\n\t    return getRepeatedReplication(cozy, doctype);\n\t  }\n\t\n\t  return setRepeatedReplication(cozy, doctype, setInterval(function () {\n\t    if ((0, _utils.isOffline)()) {\n\t      // network is offline, replication cannot be launched\n\t      console.info(replicationOfflineError);\n\t      return;\n\t    }\n\t    if (!hasReplication(cozy, doctype)) {\n\t      replicateFromCozy(cozy, doctype, options);\n\t      // TODO: add replicationToCozy\n\t    }\n\t  }, timer * 1000));\n\t}\n\t\n\tfunction stopRepeatedReplication(cozy, doctype) {\n\t  if (hasRepeatedReplication(cozy, doctype)) {\n\t    clearInterval(getRepeatedReplication(cozy, doctype));\n\t    setRepeatedReplication(cozy, doctype, undefined);\n\t  }\n\t  if (hasReplication(cozy, doctype)) {\n\t    return stopReplication(cozy, doctype);\n\t  }\n\t\n\t  return Promise.resolve();\n\t}\n\t\n\tfunction stopAllRepeatedReplication(cozy) {\n\t  var doctypes = getDoctypes(cozy);\n\t  var stop = function stop(doctype) {\n\t    return stopRepeatedReplication(cozy, doctype);\n\t  };\n\t  return Promise.all(doctypes.map(stop));\n\t}\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.removeReferencedFiles = exports.addReferencedFiles = undefined;\n\texports.listReferencedFiles = listReferencedFiles;\n\texports.fetchReferencedFiles = fetchReferencedFiles;\n\t\n\tvar _fetch = __webpack_require__(1);\n\t\n\tvar _doctypes = __webpack_require__(5);\n\t\n\tfunction updateRelations(verb) {\n\t  return function (cozy, doc, ids) {\n\t    if (!doc) throw new Error('missing doc argument');\n\t    if (!Array.isArray(ids)) ids = [ids];\n\t\n\t    var refs = ids.map(function (id) {\n\t      return { type: _doctypes.DOCTYPE_FILES, id: id };\n\t    });\n\t\n\t    return (0, _fetch.cozyFetchJSON)(cozy, verb, makeReferencesPath(doc), { data: refs });\n\t  };\n\t}\n\t\n\tvar addReferencedFiles = exports.addReferencedFiles = updateRelations('POST');\n\tvar removeReferencedFiles = exports.removeReferencedFiles = updateRelations('DELETE');\n\t\n\tfunction listReferencedFiles(cozy, doc) {\n\t  if (!doc) throw new Error('missing doc argument');\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', makeReferencesPath(doc)).then(function (files) {\n\t    return files.map(function (file) {\n\t      return file._id;\n\t    });\n\t  });\n\t}\n\t\n\tfunction fetchReferencedFiles(cozy, doc, options) {\n\t  if (!doc) throw new Error('missing doc argument');\n\t  var params = Object.keys(options).map(function (key) {\n\t    return '&page[' + key + ']=' + options[key];\n\t  }).join('');\n\t  // As datetime is the only sort option available, I see no reason to not have it by default\n\t  return (0, _fetch.cozyFetchRawJSON)(cozy, 'GET', makeReferencesPath(doc) + '?include=files&sort=datetime' + params);\n\t}\n\t\n\tfunction makeReferencesPath(doc) {\n\t  var type = encodeURIComponent(doc._type);\n\t  var id = encodeURIComponent(doc._id);\n\t  return '/data/' + type + '/' + id + '/relationships/references';\n\t}\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.diskUsage = diskUsage;\n\texports.changePassphrase = changePassphrase;\n\texports.getInstance = getInstance;\n\texports.updateInstance = updateInstance;\n\texports.getClients = getClients;\n\texports.deleteClientById = deleteClientById;\n\texports.updateLastSync = updateLastSync;\n\t\n\tvar _fetch = __webpack_require__(1);\n\t\n\tfunction diskUsage(cozy) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/settings/disk-usage');\n\t}\n\t\n\tfunction changePassphrase(cozy, currentPassPhrase, newPassPhrase) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'PUT', '/settings/passphrase', {\n\t    current_passphrase: currentPassPhrase,\n\t    new_passphrase: newPassPhrase\n\t  });\n\t}\n\t\n\tfunction getInstance(cozy) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/settings/instance');\n\t}\n\t\n\tfunction updateInstance(cozy, instance) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'PUT', '/settings/instance', instance);\n\t}\n\t\n\tfunction getClients(cozy) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'GET', '/settings/clients');\n\t}\n\t\n\tfunction deleteClientById(cozy, id) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'DELETE', '/settings/clients/' + id);\n\t}\n\t\n\tfunction updateLastSync(cozy) {\n\t  return (0, _fetch.cozyFetchJSON)(cozy, 'POST', '/settings/synchronized');\n\t}\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(35);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // NB: In an Electron preload script, document will be defined but not fully\n\t  // initialized. Since we know we're in Chrome, we'll just detect this case\n\t  // explicitly\n\t  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {\n\t    return true;\n\t  }\n\t\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t    // double check webkit in userAgent just in case we are in a worker\n\t    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  try {\n\t    return JSON.stringify(v);\n\t  } catch (err) {\n\t    return '[UnexpectedJSONParseError]: ' + err.message;\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs(args) {\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args.splice(1, 0, c, 'color: inherit')\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  try {\n\t    return exports.storage.debug;\n\t  } catch(e) {}\n\t\n\t  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\t  if (typeof process !== 'undefined' && 'env' in process) {\n\t    return process.env.DEBUG;\n\t  }\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage() {\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = createDebug.debug = createDebug.default = createDebug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(39);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t * @param {String} namespace\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor(namespace) {\n\t  var hash = 0, i;\n\t\n\t  for (i in namespace) {\n\t    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t    hash |= 0; // Convert to 32bit integer\n\t  }\n\t\n\t  return exports.colors[Math.abs(hash) % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction createDebug(namespace) {\n\t\n\t  function debug() {\n\t    // disabled?\n\t    if (!debug.enabled) return;\n\t\n\t    var self = debug;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // turn the `arguments` into a proper Array\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %O\n\t      args.unshift('%O');\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    // apply env-specific formatting (colors, etc.)\n\t    exports.formatArgs.call(self, args);\n\t\n\t    var logFn = debug.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t\n\t  debug.namespace = namespace;\n\t  debug.enabled = exports.enabled(namespace);\n\t  debug.useColors = exports.useColors();\n\t  debug.color = selectColor(namespace);\n\t\n\t  // env-specific initialization logic for debug instances\n\t  if ('function' === typeof exports.init) {\n\t    exports.init(debug);\n\t  }\n\t\n\t  return debug;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * isArray\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * toString\n\t */\n\t\n\tvar str = Object.prototype.toString;\n\t\n\t/**\n\t * Whether or not the given `val`\n\t * is an array.\n\t *\n\t * example:\n\t *\n\t *        isArray([]);\n\t *        // > true\n\t *        isArray(arguments);\n\t *        // > false\n\t *        isArray('');\n\t *        // > false\n\t *\n\t * @param {mixed} val\n\t * @return {bool}\n\t */\n\t\n\tmodule.exports = isArray || function (val) {\n\t  return !! val && '[object Array]' == str.call(val);\n\t};\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(61);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000\n\tvar m = s * 60\n\tvar h = m * 60\n\tvar d = h * 24\n\tvar y = d * 365.25\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (val, options) {\n\t  options = options || {}\n\t  var type = typeof val\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val)\n\t  } else if (type === 'number' && isNaN(val) === false) {\n\t    return options.long ?\n\t\t\t\tfmtLong(val) :\n\t\t\t\tfmtShort(val)\n\t  }\n\t  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n\t}\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = String(str)\n\t  if (str.length > 10000) {\n\t    return\n\t  }\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n\t  if (!match) {\n\t    return\n\t  }\n\t  var n = parseFloat(match[1])\n\t  var type = (match[2] || 'ms').toLowerCase()\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n\n\t    default:\n\t      return undefined\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtShort(ms) {\n\t  if (ms >= d) {\n\t    return Math.round(ms / d) + 'd'\n\t  }\n\t  if (ms >= h) {\n\t    return Math.round(ms / h) + 'h'\n\t  }\n\t  if (ms >= m) {\n\t    return Math.round(ms / m) + 'm'\n\t  }\n\t  if (ms >= s) {\n\t    return Math.round(ms / s) + 's'\n\t  }\n\t  return ms + 'ms'\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtLong(ms) {\n\t  return plural(ms, d, 'day') ||\n\t    plural(ms, h, 'hour') ||\n\t    plural(ms, m, 'minute') ||\n\t    plural(ms, s, 'second') ||\n\t    ms + ' ms'\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) {\n\t    return\n\t  }\n\t  if (ms < n * 1.5) {\n\t    return Math.floor(ms / n) + ' ' + name\n\t  }\n\t  return Math.ceil(ms / n) + ' ' + name + 's'\n\t}\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction pad(str, padWith, upToLength) {\n\t  var padding = '';\n\t  var targetLength = upToLength - str.length;\n\t  while (padding.length < targetLength) {\n\t    padding += padWith;\n\t  }\n\t  return padding;\n\t}\n\t\n\texports.padLeft = function (str, padWith, upToLength) {\n\t  var padding = pad(str, padWith, upToLength);\n\t  return padding + str;\n\t};\n\t\n\texports.padRight = function (str, padWith, upToLength) {\n\t  var padding = pad(str, padWith, upToLength);\n\t  return str + padding;\n\t};\n\t\n\texports.stringLexCompare = function (a, b) {\n\t\n\t  var aLen = a.length;\n\t  var bLen = b.length;\n\t\n\t  var i;\n\t  for (i = 0; i < aLen; i++) {\n\t    if (i === bLen) {\n\t      // b is shorter substring of a\n\t      return 1;\n\t    }\n\t    var aChar = a.charAt(i);\n\t    var bChar = b.charAt(i);\n\t    if (aChar !== bChar) {\n\t      return aChar < bChar ? -1 : 1;\n\t    }\n\t  }\n\t\n\t  if (aLen < bLen) {\n\t    // a is shorter substring of b\n\t    return -1;\n\t  }\n\t\n\t  return 0;\n\t};\n\t\n\t/*\n\t * returns the decimal form for the given integer, i.e. writes\n\t * out all the digits (in base-10) instead of using scientific notation\n\t */\n\texports.intToDecimalForm = function (int) {\n\t\n\t  var isNeg = int < 0;\n\t  var result = '';\n\t\n\t  do {\n\t    var remainder = isNeg ? -Math.ceil(int % 10) : Math.floor(int % 10);\n\t\n\t    result = remainder + result;\n\t    int = isNeg ? Math.ceil(int / 10) : Math.floor(int / 10);\n\t  } while (int);\n\t\n\t\n\t  if (isNeg && result !== '0') {\n\t    result = '-' + result;\n\t  }\n\t\n\t  return result;\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar upsert = __webpack_require__(17);\n\tvar utils = __webpack_require__(11);\n\tvar Promise = utils.Promise;\n\t\n\tfunction stringify(input) {\n\t  if (!input) {\n\t    return 'undefined'; // backwards compat for empty reduce\n\t  }\n\t  // for backwards compat with mapreduce, functions/strings are stringified\n\t  // as-is. everything else is JSON-stringified.\n\t  switch (typeof input) {\n\t    case 'function':\n\t      // e.g. a mapreduce map\n\t      return input.toString();\n\t    case 'string':\n\t      // e.g. a mapreduce built-in _reduce function\n\t      return input.toString();\n\t    default:\n\t      // e.g. a JSON object in the case of mango queries\n\t      return JSON.stringify(input);\n\t  }\n\t}\n\t\n\tmodule.exports = function (opts) {\n\t  var sourceDB = opts.db;\n\t  var viewName = opts.viewName;\n\t  var mapFun = opts.map;\n\t  var reduceFun = opts.reduce;\n\t  var temporary = opts.temporary;\n\t  var pluginName = opts.pluginName;\n\t\n\t  // the \"undefined\" part is for backwards compatibility\n\t  var viewSignature = stringify(mapFun) + stringify(reduceFun) +\n\t    'undefined';\n\t\n\t  if (!temporary && sourceDB._cachedViews) {\n\t    var cachedView = sourceDB._cachedViews[viewSignature];\n\t    if (cachedView) {\n\t      return Promise.resolve(cachedView);\n\t    }\n\t  }\n\t\n\t  return sourceDB.info().then(function (info) {\n\t\n\t    var depDbName = info.db_name + '-mrview-' +\n\t      (temporary ? 'temp' : utils.MD5(viewSignature));\n\t\n\t    // save the view name in the source PouchDB so it can be cleaned up if necessary\n\t    // (e.g. when the _design doc is deleted, remove all associated view data)\n\t    function diffFunction(doc) {\n\t      doc.views = doc.views || {};\n\t      var fullViewName = viewName;\n\t      if (fullViewName.indexOf('/') === -1) {\n\t        fullViewName = viewName + '/' + viewName;\n\t      }\n\t      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n\t      /* istanbul ignore if */\n\t      if (depDbs[depDbName]) {\n\t        return; // no update necessary\n\t      }\n\t      depDbs[depDbName] = true;\n\t      return doc;\n\t    }\n\t    return upsert(sourceDB, '_local/' + pluginName, diffFunction).then(function () {\n\t      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n\t        var db = res.db;\n\t        db.auto_compaction = true;\n\t        var view = {\n\t          name: depDbName,\n\t          db: db, \n\t          sourceDB: sourceDB,\n\t          adapter: sourceDB.adapter,\n\t          mapFun: mapFun,\n\t          reduceFun: reduceFun\n\t        };\n\t        return view.db.get('_local/lastSeq').catch(function (err) {\n\t          /* istanbul ignore if */\n\t          if (err.status !== 404) {\n\t            throw err;\n\t          }\n\t        }).then(function (lastSeqDoc) {\n\t          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n\t          if (!temporary) {\n\t            sourceDB._cachedViews = sourceDB._cachedViews || {};\n\t            sourceDB._cachedViews[viewSignature] = view;\n\t            view.db.on('destroyed', function () {\n\t              delete sourceDB._cachedViews[viewSignature];\n\t            });\n\t          }\n\t          return view;\n\t        });\n\t      });\n\t    });\n\t  });\n\t};\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tvar pouchCollate = __webpack_require__(7);\n\tvar TaskQueue = __webpack_require__(43);\n\tvar collate = pouchCollate.collate;\n\tvar toIndexableString = pouchCollate.toIndexableString;\n\tvar normalizeKey = pouchCollate.normalizeKey;\n\tvar createView = __webpack_require__(41);\n\tvar log;\n\t/* istanbul ignore else */\n\tif ((typeof console !== 'undefined') && (typeof console.log === 'function')) {\n\t  log = Function.prototype.bind.call(console.log, console);\n\t} else {\n\t  log = function () {};\n\t}\n\tvar utils = __webpack_require__(11);\n\tvar Promise = utils.Promise;\n\tvar persistentQueues = {};\n\tvar tempViewQueue = new TaskQueue();\n\tvar CHANGES_BATCH_SIZE = 50;\n\t\n\tfunction QueryParseError(message) {\n\t  this.status = 400;\n\t  this.name = 'query_parse_error';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, QueryParseError);\n\t  } catch (e) {}\n\t}\n\t\n\tutils.inherits(QueryParseError, Error);\n\t\n\tfunction NotFoundError(message) {\n\t  this.status = 404;\n\t  this.name = 'not_found';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, NotFoundError);\n\t  } catch (e) {}\n\t}\n\t\n\tutils.inherits(NotFoundError, Error);\n\t\n\tfunction parseViewName(name) {\n\t  // can be either 'ddocname/viewname' or just 'viewname'\n\t  // (where the ddoc name is the same)\n\t  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n\t}\n\t\n\tfunction isGenOne(changes) {\n\t  // only return true if the current change is 1-\n\t  // and there are no other leafs\n\t  return changes.length === 1 && /^1-/.test(changes[0].rev);\n\t}\n\t\n\tfunction sortByKeyThenValue(x, y) {\n\t  var keyCompare = collate(x.key, y.key);\n\t  return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n\t}\n\t\n\tfunction sliceResults(results, limit, skip) {\n\t  skip = skip || 0;\n\t  if (typeof limit === 'number') {\n\t    return results.slice(skip, limit + skip);\n\t  } else if (skip > 0) {\n\t    return results.slice(skip);\n\t  }\n\t  return results;\n\t}\n\t\n\tfunction rowToDocId(row) {\n\t  var val = row.value;\n\t  // Users can explicitly specify a joined doc _id, or it\n\t  // defaults to the doc _id that emitted the key/value.\n\t  var docId = (val && typeof val === 'object' && val._id) || row.id;\n\t  return docId;\n\t}\n\t\n\tfunction emitError(db, e) {\n\t  try {\n\t    db.emit('error', e);\n\t  } catch (err) {\n\t    console.error(\n\t      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n\t      'You can debug this error by doing:\\n' +\n\t      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n\t      'Please double-check your map/reduce function.');\n\t    console.error(e);\n\t  }\n\t}\n\t\n\tfunction tryCode(db, fun, args) {\n\t  // emit an event if there was an error thrown by a map/reduce function.\n\t  // putting try/catches in a single function also avoids deoptimizations.\n\t  try {\n\t    return {\n\t      output : fun.apply(null, args)\n\t    };\n\t  } catch (e) {\n\t    emitError(db, e);\n\t    return {error: e};\n\t  }\n\t}\n\t\n\tfunction checkQueryParseError(options, fun) {\n\t  var startkeyName = options.descending ? 'endkey' : 'startkey';\n\t  var endkeyName = options.descending ? 'startkey' : 'endkey';\n\t\n\t  if (typeof options[startkeyName] !== 'undefined' &&\n\t    typeof options[endkeyName] !== 'undefined' &&\n\t    collate(options[startkeyName], options[endkeyName]) > 0) {\n\t    throw new QueryParseError('No rows can match your key range, reverse your ' +\n\t    'start_key and end_key or set {descending : true}');\n\t  } else if (fun.reduce && options.reduce !== false) {\n\t    if (options.include_docs) {\n\t      throw new QueryParseError('{include_docs:true} is invalid for reduce');\n\t    } else if (options.keys && options.keys.length > 1 &&\n\t      !options.group && !options.group_level) {\n\t      throw new QueryParseError('Multi-key fetches for reduce views must use {group: true}');\n\t    }\n\t  }\n\t  if (options.group_level) {\n\t    if (typeof options.group_level !== 'number') {\n\t      throw new QueryParseError('Invalid value for integer: \"' + options.group_level + '\"');\n\t    }\n\t    if (options.group_level < 0) {\n\t      throw new QueryParseError('Invalid value for positive integer: ' +\n\t      '\"' + options.group_level + '\"');\n\t    }\n\t  }\n\t}\n\t\n\tfunction defaultsTo(value) {\n\t  return function (reason) {\n\t    /* istanbul ignore else */\n\t    if (reason.status === 404) {\n\t      return value;\n\t    } else {\n\t      throw reason;\n\t    }\n\t  };\n\t}\n\t\n\tfunction createIndexer(def) {\n\t\n\t  var pluginName = def.name;\n\t  var mapper = def.mapper;\n\t  var reducer = def.reducer;\n\t  var ddocValidator = def.ddocValidator;\n\t\n\t\n\t  // returns a promise for a list of docs to update, based on the input docId.\n\t  // the order doesn't matter, because post-3.2.0, bulkDocs\n\t  // is an atomic operation in all three adapters.\n\t  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n\t    var metaDocId = '_local/doc_' + docId;\n\t    var defaultMetaDoc = {_id: metaDocId, keys: []};\n\t    var docData = docIdsToChangesAndEmits[docId];\n\t    var indexableKeysToKeyValues = docData.indexableKeysToKeyValues;\n\t    var changes = docData.changes;\n\t\n\t    function getMetaDoc() {\n\t      if (isGenOne(changes)) {\n\t        // generation 1, so we can safely assume initial state\n\t        // for performance reasons (avoids unnecessary GETs)\n\t        return Promise.resolve(defaultMetaDoc);\n\t      }\n\t      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n\t    }\n\t\n\t    function getKeyValueDocs(metaDoc) {\n\t      if (!metaDoc.keys.length) {\n\t        // no keys, no need for a lookup\n\t        return Promise.resolve({rows: []});\n\t      }\n\t      return view.db.allDocs({\n\t        keys: metaDoc.keys,\n\t        include_docs: true\n\t      });\n\t    }\n\t\n\t    function processKvDocs(metaDoc, kvDocsRes) {\n\t      var kvDocs = [];\n\t      var oldKeysMap = {};\n\t\n\t      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n\t        var row = kvDocsRes.rows[i];\n\t        var doc = row.doc;\n\t        if (!doc) { // deleted\n\t          continue;\n\t        }\n\t        kvDocs.push(doc);\n\t        oldKeysMap[doc._id] = true;\n\t        doc._deleted = !indexableKeysToKeyValues[doc._id];\n\t        if (!doc._deleted) {\n\t          var keyValue = indexableKeysToKeyValues[doc._id];\n\t          if ('value' in keyValue) {\n\t            doc.value = keyValue.value;\n\t          }\n\t        }\n\t      }\n\t\n\t      var newKeys = Object.keys(indexableKeysToKeyValues);\n\t      newKeys.forEach(function (key) {\n\t        if (!oldKeysMap[key]) {\n\t          // new doc\n\t          var kvDoc = {\n\t            _id: key\n\t          };\n\t          var keyValue = indexableKeysToKeyValues[key];\n\t          if ('value' in keyValue) {\n\t            kvDoc.value = keyValue.value;\n\t          }\n\t          kvDocs.push(kvDoc);\n\t        }\n\t      });\n\t      metaDoc.keys = utils.uniq(newKeys.concat(metaDoc.keys));\n\t      kvDocs.push(metaDoc);\n\t\n\t      return kvDocs;\n\t    }\n\t\n\t    return getMetaDoc().then(function (metaDoc) {\n\t      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n\t        return processKvDocs(metaDoc, kvDocsRes);\n\t      });\n\t    });\n\t  }\n\t\n\t  // updates all emitted key/value docs and metaDocs in the mrview database\n\t  // for the given batch of documents from the source database\n\t  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n\t    var seqDocId = '_local/lastSeq';\n\t    return view.db.get(seqDocId)\n\t    .catch(defaultsTo({_id: seqDocId, seq: 0}))\n\t    .then(function (lastSeqDoc) {\n\t      var docIds = Object.keys(docIdsToChangesAndEmits);\n\t      return Promise.all(docIds.map(function (docId) {\n\t        return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n\t      })).then(function (listOfDocsToPersist) {\n\t        var docsToPersist = utils.flatten(listOfDocsToPersist);\n\t        lastSeqDoc.seq = seq;\n\t        docsToPersist.push(lastSeqDoc);\n\t        // write all docs in a single operation, update the seq once\n\t        return view.db.bulkDocs({docs : docsToPersist});\n\t      });\n\t    });\n\t  }\n\t\n\t  function getQueue(view) {\n\t    var viewName = typeof view === 'string' ? view : view.name;\n\t    var queue = persistentQueues[viewName];\n\t    if (!queue) {\n\t      queue = persistentQueues[viewName] = new TaskQueue();\n\t    }\n\t    return queue;\n\t  }\n\t\n\t  function updateView(view) {\n\t    return utils.sequentialize(getQueue(view), function () {\n\t      return updateViewInQueue(view);\n\t    })();\n\t  }\n\t\n\t  function updateViewInQueue(view) {\n\t    // bind the emit function once\n\t    var mapResults;\n\t    var doc;\n\t\n\t    function emit(key, value) {\n\t      var output = {id: doc._id, key: normalizeKey(key)};\n\t      // Don't explicitly store the value unless it's defined and non-null.\n\t      // This saves on storage space, because often people don't use it.\n\t      if (typeof value !== 'undefined' && value !== null) {\n\t        output.value = normalizeKey(value);\n\t      }\n\t      mapResults.push(output);\n\t    }\n\t\n\t    var mapFun = mapper(view.mapFun, emit);\n\t\n\t    var currentSeq = view.seq || 0;\n\t\n\t    function processChange(docIdsToChangesAndEmits, seq) {\n\t      return function () {\n\t        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n\t      };\n\t    }\n\t\n\t    var queue = new TaskQueue();\n\t\n\t    return new Promise(function (resolve, reject) {\n\t\n\t      function complete() {\n\t        queue.finish().then(function () {\n\t          view.seq = currentSeq;\n\t          resolve();\n\t        });\n\t      }\n\t\n\t      function processNextBatch() {\n\t        view.sourceDB.changes({\n\t          conflicts: true,\n\t          include_docs: true,\n\t          style: 'all_docs',\n\t          since: currentSeq,\n\t          limit: CHANGES_BATCH_SIZE\n\t        }).on('complete', function (response) {\n\t          var results = response.results;\n\t          if (!results.length) {\n\t            return complete();\n\t          }\n\t          var docIdsToChangesAndEmits = {};\n\t          for (var i = 0, l = results.length; i < l; i++) {\n\t            var change = results[i];\n\t            if (change.doc._id[0] !== '_') {\n\t              mapResults = [];\n\t              doc = change.doc;\n\t\n\t              if (!doc._deleted) {\n\t                tryCode(view.sourceDB, mapFun, [doc]);\n\t              }\n\t              mapResults.sort(sortByKeyThenValue);\n\t\n\t              var indexableKeysToKeyValues = {};\n\t              var lastKey;\n\t              for (var j = 0, jl = mapResults.length; j < jl; j++) {\n\t                var obj = mapResults[j];\n\t                var complexKey = [obj.key, obj.id];\n\t                if (collate(obj.key, lastKey) === 0) {\n\t                  complexKey.push(j); // dup key+id, so make it unique\n\t                }\n\t                var indexableKey = toIndexableString(complexKey);\n\t                indexableKeysToKeyValues[indexableKey] = obj;\n\t                lastKey = obj.key;\n\t              }\n\t              docIdsToChangesAndEmits[change.doc._id] = {\n\t                indexableKeysToKeyValues: indexableKeysToKeyValues,\n\t                changes: change.changes\n\t              };\n\t            }\n\t            currentSeq = change.seq;\n\t          }\n\t          queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n\t          if (results.length < CHANGES_BATCH_SIZE) {\n\t            return complete();\n\t          }\n\t          return processNextBatch();\n\t        }).on('error', onError);\n\t        /* istanbul ignore next */\n\t        function onError(err) {\n\t          reject(err);\n\t        }\n\t      }\n\t\n\t      processNextBatch();\n\t    });\n\t  }\n\t\n\t  function reduceView(view, results, options) {\n\t    if (options.group_level === 0) {\n\t      delete options.group_level;\n\t    }\n\t\n\t    var shouldGroup = options.group || options.group_level;\n\t\n\t    var reduceFun = reducer(view.reduceFun);\n\t\n\t    var groups = [];\n\t    var lvl = options.group_level;\n\t    results.forEach(function (e) {\n\t      var last = groups[groups.length - 1];\n\t      var key = shouldGroup ? e.key : null;\n\t\n\t      // only set group_level for array keys\n\t      if (shouldGroup && Array.isArray(key) && typeof lvl === 'number') {\n\t        key = key.length > lvl ? key.slice(0, lvl) : key;\n\t      }\n\t\n\t      if (last && collate(last.key[0][0], key) === 0) {\n\t        last.key.push([key, e.id]);\n\t        last.value.push(e.value);\n\t        return;\n\t      }\n\t      groups.push({key: [\n\t        [key, e.id]\n\t      ], value: [e.value]});\n\t    });\n\t    for (var i = 0, len = groups.length; i < len; i++) {\n\t      var e = groups[i];\n\t      var reduceTry = tryCode(view.sourceDB, reduceFun, [e.key, e.value, false]);\n\t      // TODO: can't do instanceof BuiltInError because this class is buried\n\t      // in mapreduce.js\n\t      if (reduceTry.error && /BuiltInError/.test(reduceTry.error.constructor)) {\n\t        // CouchDB returns an error if a built-in errors out\n\t        throw reduceTry.error;\n\t      }\n\t      // CouchDB just sets the value to null if a non-built-in errors out\n\t      e.value = reduceTry.error ? null : reduceTry.output;\n\t      e.key = e.key[0][0];\n\t    }\n\t    // no total_rows/offset when reducing\n\t    return {rows: sliceResults(groups, options.limit, options.skip)};\n\t  }\n\t\n\t  function queryView(view, opts) {\n\t    return utils.sequentialize(getQueue(view), function () {\n\t      return queryViewInQueue(view, opts);\n\t    })();\n\t  }\n\t\n\t  function queryViewInQueue(view, opts) {\n\t    var totalRows;\n\t    var shouldReduce = view.reduceFun && opts.reduce !== false;\n\t    var skip = opts.skip || 0;\n\t    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n\t      // equivalent query\n\t      opts.limit = 0;\n\t      delete opts.keys;\n\t    }\n\t\n\t    function fetchFromView(viewOpts) {\n\t      viewOpts.include_docs = true;\n\t      return view.db.allDocs(viewOpts).then(function (res) {\n\t        totalRows = res.total_rows;\n\t        return res.rows.map(function (result) {\n\t\n\t          // implicit migration - in older versions of PouchDB,\n\t          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n\t          // this is tested in a migration test\n\t          /* istanbul ignore next */\n\t          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n\t              result.doc.value !== null) {\n\t            var keys = Object.keys(result.doc.value).sort();\n\t            // this detection method is not perfect, but it's unlikely the user\n\t            // emitted a value which was an object with these 3 exact keys\n\t            var expectedKeys = ['id', 'key', 'value'];\n\t            if (!(keys < expectedKeys || keys > expectedKeys)) {\n\t              return result.doc.value;\n\t            }\n\t          }\n\t\n\t          var parsedKeyAndDocId = pouchCollate.parseIndexableString(result.doc._id);\n\t          return {\n\t            key: parsedKeyAndDocId[0],\n\t            id: parsedKeyAndDocId[1],\n\t            value: ('value' in result.doc ? result.doc.value : null)\n\t          };\n\t        });\n\t      });\n\t    }\n\t\n\t    function onMapResultsReady(rows) {\n\t      var finalResults;\n\t      if (shouldReduce) {\n\t        finalResults = reduceView(view, rows, opts);\n\t      } else {\n\t        finalResults = {\n\t          total_rows: totalRows,\n\t          offset: skip,\n\t          rows: rows\n\t        };\n\t      }\n\t      if (opts.include_docs) {\n\t        var docIds = utils.uniq(rows.map(rowToDocId));\n\t\n\t        return view.sourceDB.allDocs({\n\t          keys: docIds,\n\t          include_docs: true,\n\t          conflicts: opts.conflicts,\n\t          attachments: opts.attachments,\n\t          binary: opts.binary\n\t        }).then(function (allDocsRes) {\n\t          var docIdsToDocs = {};\n\t          allDocsRes.rows.forEach(function (row) {\n\t            if (row.doc) {\n\t              docIdsToDocs['$' + row.id] = row.doc;\n\t            }\n\t          });\n\t          rows.forEach(function (row) {\n\t            var docId = rowToDocId(row);\n\t            var doc = docIdsToDocs['$' + docId];\n\t            if (doc) {\n\t              row.doc = doc;\n\t            }\n\t          });\n\t          return finalResults;\n\t        });\n\t      } else {\n\t        return finalResults;\n\t      }\n\t    }\n\t\n\t    var flatten = function (array) {\n\t      return array.reduce(function (prev, cur) {\n\t        return prev.concat(cur);\n\t      });\n\t    };\n\t\n\t    if (typeof opts.keys !== 'undefined') {\n\t      var keys = opts.keys;\n\t      var fetchPromises = keys.map(function (key) {\n\t        var viewOpts = {\n\t          startkey : toIndexableString([key]),\n\t          endkey   : toIndexableString([key, {}])\n\t        };\n\t        return fetchFromView(viewOpts);\n\t      });\n\t      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n\t    } else { // normal query, no 'keys'\n\t      var viewOpts = {\n\t        descending : opts.descending\n\t      };\n\t      if (typeof opts.startkey !== 'undefined') {\n\t        viewOpts.startkey = opts.descending ?\n\t          toIndexableString([opts.startkey, {}]) :\n\t          toIndexableString([opts.startkey]);\n\t      }\n\t      if (typeof opts.endkey !== 'undefined') {\n\t        var inclusiveEnd = opts.inclusive_end !== false;\n\t        if (opts.descending) {\n\t          inclusiveEnd = !inclusiveEnd;\n\t        }\n\t\n\t        viewOpts.endkey = toIndexableString(inclusiveEnd ? [opts.endkey, {}] : [opts.endkey]);\n\t      }\n\t      if (typeof opts.key !== 'undefined') {\n\t        var keyStart = toIndexableString([opts.key]);\n\t        var keyEnd = toIndexableString([opts.key, {}]);\n\t        if (viewOpts.descending) {\n\t          viewOpts.endkey = keyStart;\n\t          viewOpts.startkey = keyEnd;\n\t        } else {\n\t          viewOpts.startkey = keyStart;\n\t          viewOpts.endkey = keyEnd;\n\t        }\n\t      }\n\t      if (!shouldReduce) {\n\t        if (typeof opts.limit === 'number') {\n\t          viewOpts.limit = opts.limit;\n\t        }\n\t        viewOpts.skip = skip;\n\t      }\n\t      return fetchFromView(viewOpts).then(onMapResultsReady);\n\t    }\n\t  }\n\t\n\t  function localViewCleanup(db) {\n\t    return db.get('_local/' + pluginName).then(function (metaDoc) {\n\t      var docsToViews = {};\n\t      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n\t        var parts = parseViewName(fullViewName);\n\t        var designDocName = '_design/' + parts[0];\n\t        var viewName = parts[1];\n\t        docsToViews[designDocName] = docsToViews[designDocName] || {};\n\t        docsToViews[designDocName][viewName] = true;\n\t      });\n\t      var opts = {\n\t        keys : Object.keys(docsToViews),\n\t        include_docs : true\n\t      };\n\t      return db.allDocs(opts).then(function (res) {\n\t        var viewsToStatus = {};\n\t        res.rows.forEach(function (row) {\n\t          var ddocName = row.key.substring(8);\n\t          Object.keys(docsToViews[row.key]).forEach(function (viewName) {\n\t            var fullViewName = ddocName + '/' + viewName;\n\t            /* istanbul ignore if */\n\t            if (!metaDoc.views[fullViewName]) {\n\t              // new format, without slashes, to support PouchDB 2.2.0\n\t              // migration test in pouchdb's browser.migration.js verifies this\n\t              fullViewName = viewName;\n\t            }\n\t            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n\t            // design doc deleted, or view function nonexistent\n\t            var statusIsGood = row.doc && row.doc.views && row.doc.views[viewName];\n\t            viewDBNames.forEach(function (viewDBName) {\n\t              viewsToStatus[viewDBName] = viewsToStatus[viewDBName] || statusIsGood;\n\t            });\n\t          });\n\t        });\n\t        var dbsToDelete = Object.keys(viewsToStatus).filter(function (viewDBName) {\n\t          return !viewsToStatus[viewDBName];\n\t        });\n\t        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n\t          return utils.sequentialize(getQueue(viewDBName), function () {\n\t            return new db.constructor(viewDBName, db.__opts).destroy();\n\t          })();\n\t        });\n\t        return Promise.all(destroyPromises).then(function () {\n\t          return {ok: true};\n\t        });\n\t      });\n\t    }, defaultsTo({ok: true}));\n\t  }\n\t\n\t  function queryPromised(db, fun, opts) {\n\t    if (typeof fun !== 'string') {\n\t      // temp_view\n\t      checkQueryParseError(opts, fun);\n\t\n\t      var createViewOpts = {\n\t        db : db,\n\t        viewName : 'temp_view/temp_view',\n\t        map : fun.map,\n\t        reduce : fun.reduce,\n\t        temporary : true,\n\t        pluginName: pluginName\n\t      };\n\t      tempViewQueue.add(function () {\n\t        return createView(createViewOpts).then(function (view) {\n\t          function cleanup() {\n\t            return view.db.destroy();\n\t          }\n\t          return utils.fin(updateView(view).then(function () {\n\t            return queryView(view, opts);\n\t          }), cleanup);\n\t        });\n\t      });\n\t      return tempViewQueue.finish();\n\t    } else {\n\t      // persistent view\n\t      var fullViewName = fun;\n\t      var parts = parseViewName(fullViewName);\n\t      var designDocName = parts[0];\n\t      var viewName = parts[1];\n\t      return db.get('_design/' + designDocName).then(function (doc) {\n\t        var fun = doc.views && doc.views[viewName];\n\t\n\t        if (!fun) {\n\t          // basic validator; it's assumed that every subclass would want this\n\t          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n\t            viewName);\n\t        }\n\t\n\t        ddocValidator(doc, viewName);\n\t        checkQueryParseError(opts, fun);\n\t\n\t        var createViewOpts = {\n\t          db : db,\n\t          viewName : fullViewName,\n\t          map : fun.map,\n\t          reduce : fun.reduce,\n\t          pluginName: pluginName\n\t        };\n\t        return createView(createViewOpts).then(function (view) {\n\t          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n\t            if (opts.stale === 'update_after') {\n\t              process.nextTick(function () {\n\t                updateView(view);\n\t              });\n\t            }\n\t            return queryView(view, opts);\n\t          } else { // stale not ok\n\t            return updateView(view).then(function () {\n\t              return queryView(view, opts);\n\t            });\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }\n\t\n\t  var query = function (fun, opts, callback) {\n\t    var db = this;\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = utils.extend(true, {}, opts);\n\t\n\t    if (typeof fun === 'function') {\n\t      fun = {map : fun};\n\t    }\n\t\n\t    var promise = Promise.resolve().then(function () {\n\t      return queryPromised(db, fun, opts);\n\t    });\n\t    utils.promisedCallback(promise, callback);\n\t    return promise;\n\t  };\n\t\n\t  var viewCleanup = utils.callbackify(function () {\n\t    var db = this;\n\t    return localViewCleanup(db);\n\t  });\n\t\n\t  return {\n\t    query: query,\n\t    viewCleanup: viewCleanup\n\t  };\n\t}\n\t\n\tmodule.exports = createIndexer;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/*\n\t * Simple task queue to sequentialize actions. Assumes callbacks will eventually fire (once).\n\t */\n\t\n\tvar Promise = __webpack_require__(11).Promise;\n\t\n\tfunction TaskQueue() {\n\t  this.promise = new Promise(function (fulfill) {fulfill(); });\n\t}\n\tTaskQueue.prototype.add = function (promiseFactory) {\n\t  this.promise = this.promise.catch(function () {\n\t    // just recover\n\t  }).then(function () {\n\t    return promiseFactory();\n\t  });\n\t  return this.promise;\n\t};\n\tTaskQueue.prototype.finish = function () {\n\t  return this.promise;\n\t};\n\t\n\tmodule.exports = TaskQueue;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar massageCreateIndexRequest = __webpack_require__(19);\n\t\n\tfunction createIndex(db, requestDef, callback) {\n\t  requestDef = massageCreateIndexRequest(requestDef);\n\t\n\t  db.request({\n\t    method: 'POST',\n\t    url: '_index',\n\t    body: requestDef\n\t  }, callback);\n\t}\n\t\n\tfunction find(db, requestDef, callback) {\n\t  db.request({\n\t    method: 'POST',\n\t    url: '_find',\n\t    body: requestDef\n\t  }, callback);\n\t}\n\t\n\tfunction getIndexes(db, callback) {\n\t  db.request({\n\t    method: 'GET',\n\t    url: '_index'\n\t  }, callback);\n\t}\n\t\n\tfunction deleteIndex(db, indexDef, callback) {\n\t\n\t\n\t  var ddoc = indexDef.ddoc;\n\t  var type = indexDef.type || 'json';\n\t  var name = indexDef.name;\n\t\n\t  if (!ddoc) {\n\t    return callback(new Error('you must provide an index\\'s ddoc'));\n\t  }\n\t\n\t  if (!name) {\n\t    return callback(new Error('you must provide an index\\'s name'));\n\t  }\n\t\n\t  var url = '_index/' + [ddoc, type, name].map(encodeURIComponent).join('/');\n\t\n\t  db.request({\n\t    method: 'DELETE',\n\t    url: url\n\t  }, callback);\n\t}\n\t\n\texports.createIndex = createIndex;\n\texports.find = find;\n\texports.getIndexes = getIndexes;\n\texports.deleteIndex = deleteIndex;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(2);\n\tvar log = utils.log;\n\t\n\tvar pouchUpsert = __webpack_require__(21);\n\tvar abstractMapper = __webpack_require__(12);\n\tvar localUtils = __webpack_require__(4);\n\tvar validateIndex = localUtils.validateIndex;\n\tvar massageIndexDef = localUtils.massageIndexDef;\n\tvar massageCreateIndexRequest = __webpack_require__(19);\n\t\n\tfunction upsert(db, docId, diffFun) {\n\t  return pouchUpsert.upsert.call(db, docId, diffFun);\n\t}\n\t\n\tfunction createIndex(db, requestDef) {\n\t  requestDef = massageCreateIndexRequest(requestDef);\n\t  var originalIndexDef = utils.clone(requestDef.index);\n\t  requestDef.index = massageIndexDef(requestDef.index);\n\t\n\t  validateIndex(requestDef.index);\n\t\n\t  var md5 = utils.MD5(JSON.stringify(requestDef));\n\t\n\t  var viewName = requestDef.name || ('idx-' + md5);\n\t\n\t  var ddocName = requestDef.ddoc || ('idx-' + md5);\n\t  var ddocId = '_design/' + ddocName;\n\t\n\t  var hasInvalidLanguage = false;\n\t  var viewExists = false;\n\t\n\t  function updateDdoc(doc) {\n\t    if (doc._rev && doc.language !== 'query') {\n\t      hasInvalidLanguage = true;\n\t    }\n\t    doc.language = 'query';\n\t    doc.views = doc.views || {};\n\t\n\t    viewExists = !!doc.views[viewName];\n\t\n\t    if (viewExists) {\n\t      return false;\n\t    }\n\t\n\t    doc.views[viewName] = {\n\t      map: {\n\t        fields: utils.mergeObjects(requestDef.index.fields)\n\t      },\n\t      reduce: '_count',\n\t      options: {\n\t        def: originalIndexDef\n\t      }\n\t    };\n\t\n\t    return doc;\n\t  }\n\t\n\t  log('creating index', ddocId);\n\t\n\t  return upsert(db, ddocId, updateDdoc).then(function () {\n\t    if (hasInvalidLanguage) {\n\t      throw new Error('invalid language for ddoc with id \"' +\n\t      ddocId +\n\t      '\" (should be \"query\")');\n\t    }\n\t  }).then(function () {\n\t    // kick off a build\n\t    // TODO: abstract-pouchdb-mapreduce should support auto-updating\n\t    // TODO: should also use update_after, but pouchdb/pouchdb#3415 blocks me\n\t    var signature = ddocName + '/' + viewName;\n\t    return abstractMapper.query.call(db, signature, {\n\t      limit: 0,\n\t      reduce: false\n\t    }).then(function () {\n\t      return {\n\t        id: ddocId,\n\t        name: viewName,\n\t        result: viewExists ? 'exists' : 'created'\n\t      };\n\t    });\n\t  });\n\t}\n\t\n\tmodule.exports = createIndex;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar abstractMapper = __webpack_require__(12);\n\tvar upsert = __webpack_require__(17);\n\t\n\tfunction deleteIndex(db, index) {\n\t\n\t  if (!index.ddoc) {\n\t    throw new Error('you must supply an index.ddoc when deleting');\n\t  }\n\t\n\t  if (!index.name) {\n\t    throw new Error('you must supply an index.name when deleting');\n\t  }\n\t\n\t  var docId = index.ddoc;\n\t  var viewName = index.name;\n\t\n\t  function deltaFun (doc) {\n\t    if (Object.keys(doc.views).length === 1 && doc.views[viewName]) {\n\t      // only one view in this ddoc, delete the whole ddoc\n\t      return {_id: docId, _deleted: true};\n\t    }\n\t    // more than one view here, just remove the view\n\t    delete doc.views[viewName];\n\t    return doc;\n\t  }\n\t\n\t  return upsert(db, docId, deltaFun).then(function () {\n\t    return abstractMapper.viewCleanup.apply(db);\n\t  }).then(function () {\n\t    return {ok: true};\n\t  });\n\t}\n\t\n\tmodule.exports = deleteIndex;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//\n\t// Do an in-memory filtering of rows that aren't covered by the index.\n\t// E.g. if the user is asking for foo=1 and bar=2, but the index\n\t// only covers \"foo\", then this in-memory filter would take care of\n\t// \"bar\".\n\t//\n\t\n\tvar isArray = __webpack_require__(37);\n\tvar collate = __webpack_require__(7).collate;\n\tvar localUtils = __webpack_require__(4);\n\tvar isCombinationalField = localUtils.isCombinationalField;\n\tvar getKey = localUtils.getKey;\n\tvar getValue = localUtils.getValue;\n\tvar parseField = localUtils.parseField;\n\tvar utils = __webpack_require__(2);\n\tvar getFieldFromDoc = utils.getFieldFromDoc;\n\t\n\t// create a comparator based on the sort object\n\tfunction createFieldSorter(sort) {\n\t\n\t  function getFieldValuesAsArray(doc) {\n\t    return sort.map(function (sorting) {\n\t      var fieldName = getKey(sorting);\n\t      var parsedField = parseField(fieldName);\n\t      var docFieldValue = getFieldFromDoc(doc, parsedField);\n\t      return docFieldValue;\n\t    });\n\t  }\n\t\n\t  return function (aRow, bRow) {\n\t    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n\t    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n\t    var collation = collate(aFieldValues, bFieldValues);\n\t    if (collation !== 0) {\n\t      return collation;\n\t    }\n\t    // this is what mango seems to do\n\t    return utils.compare(aRow.doc._id, bRow.doc._id);\n\t  };\n\t}\n\t\n\tfunction filterInMemoryFields (rows, requestDef, inMemoryFields) {\n\t  rows = rows.filter(function (row) {\n\t    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n\t  });\n\t\n\t  if (requestDef.sort) {\n\t    // in-memory sort\n\t    var fieldSorter = createFieldSorter(requestDef.sort);\n\t    rows = rows.sort(fieldSorter);\n\t    if (typeof requestDef.sort[0] !== 'string' &&\n\t        getValue(requestDef.sort[0]) === 'desc') {\n\t      rows = rows.reverse();\n\t    }\n\t  }\n\t\n\t  if ('limit' in requestDef || 'skip' in requestDef) {\n\t    // have to do the limit in-memory\n\t    var skip = requestDef.skip || 0;\n\t    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n\t    rows = rows.slice(skip, limit);\n\t  }\n\t  return rows;\n\t}\n\t\n\tfunction rowFilter (doc, selector, inMemoryFields) {\n\t  return inMemoryFields.every(function (field) {\n\t    var matcher = selector[field];\n\t    var parsedField = parseField(field);\n\t    var docFieldValue = getFieldFromDoc(doc, parsedField);\n\t    if (isCombinationalField(field)) {\n\t      return matchCominationalSelector(field, matcher, doc);\n\t    }\n\t\n\t    return matchSelector(matcher, doc, parsedField, docFieldValue);\n\t  });\n\t}\n\t\n\tfunction matchSelector (matcher, doc, parsedField, docFieldValue) {\n\t  if (!matcher) {\n\t    // no filtering necessary; this field is just needed for sorting\n\t    return true;\n\t  }\n\t\n\t  return Object.keys(matcher).every(function (userOperator) {\n\t    var userValue = matcher[userOperator];\n\t    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n\t  });\n\t}\n\t\n\tfunction matchCominationalSelector (field, matcher, doc) {\n\t\n\t  if (field === '$or') {\n\t    return matcher.some(function (orMatchers) {\n\t      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n\t    });\n\t  }\n\t\n\t  if (field === '$not') {\n\t    return !rowFilter(doc, matcher, Object.keys(matcher));\n\t  }\n\t\n\t  //`$nor`\n\t  return !matcher.find(function (orMatchers) {\n\t    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n\t  });\n\t\n\t}\n\t\n\tfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n\t  if (!matchers[userOperator]) {\n\t    throw new Error('unknown operator \"' + userOperator +\n\t      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n\t      '$nin, $size, $mod, $regex, $elemMatch, $type or $all');\n\t  }\n\t  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n\t}\n\t\n\tfunction fieldExists(docFieldValue) {\n\t  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n\t}\n\t\n\tfunction fieldIsNotUndefined(docFieldValue) {\n\t  return typeof docFieldValue !== 'undefined';\n\t}\n\t\n\tfunction modField (docFieldValue, userValue) {\n\t  var divisor = userValue[0];\n\t  var mod = userValue[1];\n\t  if (divisor === 0) {\n\t    throw new Error('Bad divisor, cannot divide by zero');\n\t  }\n\t\n\t  if (parseInt(divisor, 10) !== divisor ) {\n\t    throw new Error('Divisor is not an integer');\n\t  }\n\t\n\t  if (parseInt(mod, 10) !== mod ) {\n\t    throw new Error('Modulus is not an integer');\n\t  }\n\t\n\t  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n\t    return false;\n\t  }\n\t\n\t  return docFieldValue % divisor === mod;\n\t}\n\t\n\tfunction arrayContainsValue (docFieldValue, userValue) {\n\t  return userValue.some(function (val) {\n\t    if (docFieldValue instanceof Array) {\n\t      return docFieldValue.indexOf(val) > -1;\n\t    }\n\t\n\t    return docFieldValue === val;\n\t  });\n\t}\n\t\n\tfunction arrayContainsAllValues (docFieldValue, userValue) {\n\t  return userValue.every(function (val) {\n\t    return docFieldValue.indexOf(val) > -1;\n\t  });\n\t}\n\t\n\tfunction arraySize (docFieldValue, userValue) {\n\t  return docFieldValue.length === userValue;\n\t}\n\t\n\tfunction regexMatch(docFieldValue, userValue) {\n\t  var re = new RegExp(userValue);\n\t\n\t  return re.test(docFieldValue);\n\t}\n\t\n\tfunction typeMatch(docFieldValue, userValue) {\n\t\n\t  switch (userValue) {\n\t    case 'null':\n\t      return docFieldValue === null;\n\t    case 'boolean':\n\t      return typeof(docFieldValue) === 'boolean';\n\t    case 'number':\n\t      return typeof(docFieldValue) === 'number';\n\t    case 'string':\n\t      return typeof(docFieldValue) === 'string';\n\t    case 'array':\n\t      return docFieldValue instanceof Array;\n\t    case 'object':\n\t      return ({}).toString.call(docFieldValue) === '[object Object]';\n\t  }\n\t\n\t  throw new Error(userValue + ' not supported as a type.' +\n\t                  'Please use one of object, string, array, number, boolean or null.');\n\t\n\t}\n\t\n\tvar matchers = {\n\t\n\t  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n\t    if (!isArray(docFieldValue)) {\n\t      return false;\n\t    }\n\t\n\t    if (docFieldValue.length === 0) {\n\t      return false;\n\t    }\n\t\n\t    if (typeof docFieldValue[0] === 'object') {\n\t      return docFieldValue.some(function (val) {\n\t        return rowFilter(val, userValue, Object.keys(userValue));\n\t      });\n\t    }\n\t\n\t    return docFieldValue.some(function (val) {\n\t      return matchSelector(userValue, doc, parsedField, val);\n\t    });\n\t  },\n\t\n\t  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n\t  },\n\t\n\t  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n\t  },\n\t\n\t  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n\t  },\n\t\n\t  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n\t  },\n\t\n\t  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n\t  },\n\t\n\t  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n\t    //a field that is null is still considered to exist\n\t    if (userValue) {\n\t      return fieldIsNotUndefined(docFieldValue);\n\t    }\n\t\n\t    return !fieldIsNotUndefined(docFieldValue);\n\t  },\n\t\n\t  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n\t  },\n\t\n\t  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n\t    return userValue.every(function (neValue) {\n\t      return collate(docFieldValue, neValue) !== 0;\n\t    });\n\t  },\n\t  '$in': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n\t  },\n\t\n\t  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n\t  },\n\t\n\t  '$size': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n\t  },\n\t\n\t  '$all': function (doc, userValue, parsedField, docFieldValue) {\n\t    return isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n\t  },\n\t\n\t  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n\t  },\n\t\n\t  '$type': function (doc, userValue, parsedField, docFieldValue) {\n\t    return typeMatch(docFieldValue, userValue);\n\t  }\n\t};\n\t\n\tmodule.exports = filterInMemoryFields;\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(2);\n\tvar clone = utils.clone;\n\tvar getIndexes = __webpack_require__(18);\n\tvar collate = __webpack_require__(7).collate;\n\tvar abstractMapper = __webpack_require__(12);\n\tvar planQuery = __webpack_require__(49);\n\tvar localUtils = __webpack_require__(4);\n\tvar filterInMemoryFields = __webpack_require__(47);\n\tvar massageSelector = localUtils.massageSelector;\n\tvar massageSort = localUtils.massageSort;\n\tvar getValue = localUtils.getValue;\n\tvar validateFindRequest = localUtils.validateFindRequest;\n\tvar validateSort = localUtils.validateSort;\n\tvar reverseOptions = localUtils.reverseOptions;\n\tvar filterInclusiveStart = localUtils.filterInclusiveStart;\n\tvar Promise = utils.Promise;\n\t\n\tfunction indexToSignature(index) {\n\t  // remove '_design/'\n\t  return index.ddoc.substring(8) + '/' + index.name;\n\t}\n\t\n\tfunction doAllDocs(db, originalOpts) {\n\t  var opts = clone(originalOpts);\n\t\n\t  // CouchDB responds in weird ways when you provide a non-string to _id;\n\t  // we mimic the behavior for consistency. See issue66 tests for details.\n\t\n\t  if (opts.descending) {\n\t    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n\t      opts.endkey = '';\n\t    }\n\t    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n\t      opts.limit = 0;\n\t    }\n\t  } else {\n\t    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n\t      opts.startkey = '';\n\t    }\n\t    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n\t      opts.limit = 0;\n\t    }\n\t  }\n\t  if ('key' in opts && typeof opts.key !== 'string') {\n\t    opts.limit = 0;\n\t  }\n\t\n\t  return db.allDocs(opts);\n\t}\n\t\n\tfunction find(db, requestDef) {\n\t\n\t  if (requestDef.selector) {\n\t    requestDef.selector = massageSelector(requestDef.selector);\n\t  }\n\t  if (requestDef.sort) {\n\t    requestDef.sort = massageSort(requestDef.sort);\n\t  }\n\t\n\t  validateFindRequest(requestDef);\n\t\n\t  return getIndexes(db).then(function (getIndexesRes) {\n\t\n\t    var queryPlan = planQuery(requestDef, getIndexesRes.indexes);\n\t\n\t    var indexToUse = queryPlan.index;\n\t\n\t    validateSort(requestDef, indexToUse);\n\t\n\t    var opts = utils.extend(true, {\n\t      include_docs: true,\n\t      reduce: false\n\t    }, queryPlan.queryOpts);\n\t\n\t    if ('startkey' in opts && 'endkey' in opts &&\n\t        collate(opts.startkey, opts.endkey) > 0) {\n\t      // can't possibly return any results, startkey > endkey\n\t      return {docs: []};\n\t    }\n\t\n\t    var isDescending = requestDef.sort &&\n\t      typeof requestDef.sort[0] !== 'string' &&\n\t      getValue(requestDef.sort[0]) === 'desc';\n\t\n\t    if (isDescending) {\n\t      // either all descending or all ascending\n\t      opts.descending = true;\n\t      opts = reverseOptions(opts);\n\t    }\n\t\n\t    if (!queryPlan.inMemoryFields.length) {\n\t      // no in-memory filtering necessary, so we can let the\n\t      // database do the limit/skip for us\n\t      if ('limit' in requestDef) {\n\t        opts.limit = requestDef.limit;\n\t      }\n\t      if ('skip' in requestDef) {\n\t        opts.skip = requestDef.skip;\n\t      }\n\t    }\n\t\n\t    return Promise.resolve().then(function () {\n\t      if (indexToUse.name === '_all_docs') {\n\t        return doAllDocs(db, opts);\n\t      } else {\n\t        var signature = indexToSignature(indexToUse);\n\t        return abstractMapper.query.call(db, signature, opts);\n\t      }\n\t    }).then(function (res) {\n\t\n\t      if (opts.inclusive_start === false) {\n\t        // may have to manually filter the first one,\n\t        // since couchdb has no true inclusive_start option\n\t        res.rows = filterInclusiveStart(res.rows, opts.startkey, indexToUse);\n\t      }\n\t\n\t      if (queryPlan.inMemoryFields.length) {\n\t        // need to filter some stuff in-memory\n\t        res.rows = filterInMemoryFields(res.rows, requestDef, queryPlan.inMemoryFields);\n\t      }\n\t\n\t      var resp = {\n\t        docs: res.rows.map(function (row) {\n\t          var doc = row.doc;\n\t          if (requestDef.fields) {\n\t            return utils.pick(doc, requestDef.fields);\n\t          }\n\t          return doc;\n\t        })\n\t      };\n\t\n\t      if (indexToUse.defaultUsed) {\n\t        resp.warning = 'no matching index found, create an index to optimize query time';\n\t      }\n\t\n\t      return resp;\n\t    });\n\t  });\n\t}\n\t\n\tmodule.exports = find;\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(2);\n\tvar log = utils.log;\n\tvar localUtils = __webpack_require__(4);\n\tvar getKey = localUtils.getKey;\n\tvar getUserFields = localUtils.getUserFields;\n\t\n\t// couchdb lowest collation value\n\tvar COLLATE_LO = null;\n\t\n\t// couchdb highest collation value (TODO: well not really, but close enough amirite)\n\tvar COLLATE_HI = {\"\\uffff\": {}};\n\t\n\t// couchdb second-lowest collation value\n\t\n\tfunction checkFieldInIndex(index, field) {\n\t  var indexFields = index.def.fields.map(getKey);\n\t  for (var i = 0, len = indexFields.length; i < len; i++) {\n\t    var indexField = indexFields[i];\n\t    if (field === indexField) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t// so when you do e.g. $eq/$eq, we can do it entirely in the database.\n\t// but when you do e.g. $gt/$eq, the first part can be done\n\t// in the database, but the second part has to be done in-memory,\n\t// because $gt has forced us to lose precision.\n\t// so that's what this determines\n\tfunction userOperatorLosesPrecision(selector, field) {\n\t  var matcher = selector[field];\n\t  var userOperator = getKey(matcher);\n\t\n\t  return userOperator !== '$eq';\n\t}\n\t\n\t// sort the user fields by their position in the index,\n\t// if they're in the index\n\tfunction sortFieldsByIndex(userFields, index) {\n\t  var indexFields = index.def.fields.map(getKey);\n\t\n\t  return userFields.slice().sort(function (a, b) {\n\t    var aIdx = indexFields.indexOf(a);\n\t    var bIdx = indexFields.indexOf(b);\n\t    if (aIdx === -1) {\n\t      aIdx = Number.MAX_VALUE;\n\t    }\n\t    if (bIdx === -1) {\n\t      bIdx = Number.MAX_VALUE;\n\t    }\n\t    return utils.compare(aIdx, bIdx);\n\t  });\n\t}\n\t\n\t// first pass to try to find fields that will need to be sorted in-memory\n\tfunction getBasicInMemoryFields(index, selector, userFields) {\n\t\n\t  userFields = sortFieldsByIndex(userFields, index);\n\t\n\t  // check if any of the user selectors lose precision\n\t  var needToFilterInMemory = false;\n\t  for (var i = 0, len = userFields.length; i < len; i++) {\n\t    var field = userFields[i];\n\t    if (needToFilterInMemory || !checkFieldInIndex(index, field)) {\n\t      return userFields.slice(i);\n\t    }\n\t    if (i < len - 1 && userOperatorLosesPrecision(selector, field)) {\n\t      needToFilterInMemory = true;\n\t    }\n\t  }\n\t  return [];\n\t}\n\t\n\tfunction getInMemoryFieldsFromNe(selector) {\n\t  var fields = [];\n\t  Object.keys(selector).forEach(function (field) {\n\t    var matcher = selector[field];\n\t    Object.keys(matcher).forEach(function (operator) {\n\t      if (operator === '$ne') {\n\t        fields.push(field);\n\t      }\n\t    });\n\t  });\n\t  return fields;\n\t}\n\t\n\tfunction getInMemoryFields(coreInMemoryFields, index, selector, userFields) {\n\t  var result = utils.flatten(\n\t    // in-memory fields reported as necessary by the query planner\n\t    coreInMemoryFields,\n\t    // combine with another pass that checks for any we may have missed\n\t    getBasicInMemoryFields(index, selector, userFields),\n\t    // combine with another pass that checks for $ne's\n\t    getInMemoryFieldsFromNe(selector)\n\t  );\n\t\n\t  return sortFieldsByIndex(utils.uniq(result), index);\n\t}\n\t\n\t// check that at least one field in the user's query is represented\n\t// in the index. order matters in the case of sorts\n\tfunction checkIndexFieldsMatch(indexFields, sortOrder, fields) {\n\t  if (sortOrder) {\n\t    // array has to be a strict subarray of index array. furthermore,\n\t    // the sortOrder fields need to all be represented in the index\n\t    var sortMatches = utils.oneArrayIsStrictSubArrayOfOther(sortOrder, indexFields);\n\t    var selectorMatches = utils.oneArrayIsSubArrayOfOther(fields, indexFields);\n\t\n\t    return sortMatches && selectorMatches;\n\t  }\n\t\n\t  // all of the user's specified fields still need to be\n\t  // on the left side of the index array, although the order\n\t  // doesn't matter\n\t  return utils.oneSetIsSubArrayOfOther(fields, indexFields);\n\t}\n\t\n\tvar logicalMatchers = ['$eq', '$gt', '$gte', '$lt', '$lte'];\n\tfunction isNonLogicalMatcher (matcher) {\n\t  return logicalMatchers.indexOf(matcher) === -1;\n\t}\n\t\n\t// check all the index fields for usages of '$ne'\n\t// e.g. if the user queries {foo: {$ne: 'foo'}, bar: {$eq: 'bar'}},\n\t// then we can neither use an index on ['foo'] nor an index on\n\t// ['foo', 'bar'], but we can use an index on ['bar'] or ['bar', 'foo']\n\tfunction checkFieldsLogicallySound(indexFields, selector) {\n\t  var firstField = indexFields[0];\n\t  var matcher = selector[firstField];\n\t\n\t  var hasLogicalOperator = Object.keys(matcher).some(function (matcherKey) {\n\t    return !(isNonLogicalMatcher(matcherKey));\n\t  });\n\t\n\t  if (!hasLogicalOperator) {\n\t    return false;\n\t  }\n\t\n\t  var isInvalidNe = Object.keys(matcher).length === 1 &&\n\t    getKey(matcher) === '$ne';\n\t\n\t  return !isInvalidNe;\n\t}\n\t\n\tfunction checkIndexMatches(index, sortOrder, fields, selector) {\n\t\n\t  var indexFields = index.def.fields.map(getKey);\n\t\n\t  var fieldsMatch = checkIndexFieldsMatch(indexFields, sortOrder, fields);\n\t\n\t  if (!fieldsMatch) {\n\t    return false;\n\t  }\n\t\n\t  return checkFieldsLogicallySound(indexFields, selector);\n\t}\n\t\n\t//\n\t// the algorithm is very simple:\n\t// take all the fields the user supplies, and if those fields\n\t// are a strict subset of the fields in some index,\n\t// then use that index\n\t//\n\t//\n\tfunction findMatchingIndexes(selector, userFields, sortOrder, indexes) {\n\t\n\t  return indexes.reduce(function (res, index) {\n\t    var indexMatches = checkIndexMatches(index, sortOrder, userFields, selector);\n\t    if (indexMatches) {\n\t      res.push(index);\n\t    }\n\t    return res;\n\t  }, []);\n\t}\n\t\n\t// find the best index, i.e. the one that matches the most fields\n\t// in the user's query\n\tfunction findBestMatchingIndex(selector, userFields, sortOrder, indexes) {\n\t\n\t  var matchingIndexes = findMatchingIndexes(selector, userFields, sortOrder, indexes);\n\t\n\t  if (matchingIndexes.length === 0) {\n\t    //return `all_docs` as a default index;\n\t    //I'm assuming that _all_docs is always first\n\t    var defaultIndex = indexes[0];\n\t    defaultIndex.defaultUsed = true;\n\t    return defaultIndex;\n\t  }\n\t  if (matchingIndexes.length === 1) {\n\t    return matchingIndexes[0];\n\t  }\n\t\n\t  var userFieldsMap = utils.arrayToObject(userFields);\n\t\n\t  function scoreIndex(index) {\n\t    var indexFields = index.def.fields.map(getKey);\n\t    var score = 0;\n\t    for (var i = 0, len = indexFields.length; i < len; i++) {\n\t      var indexField = indexFields[i];\n\t      if (userFieldsMap[indexField]) {\n\t        score++;\n\t      }\n\t    }\n\t    return score;\n\t  }\n\t\n\t  return utils.max(matchingIndexes, scoreIndex);\n\t}\n\t\n\tfunction getSingleFieldQueryOptsFor(userOperator, userValue) {\n\t  switch (userOperator) {\n\t    case '$eq':\n\t      return {key: userValue};\n\t    case '$lte':\n\t      return {endkey: userValue};\n\t    case '$gte':\n\t      return {startkey: userValue};\n\t    case '$lt':\n\t      return {\n\t        endkey: userValue,\n\t        inclusive_end: false\n\t      };\n\t    case '$gt':\n\t      return {\n\t        startkey: userValue,\n\t        inclusive_start: false\n\t      };\n\t  }\n\t}\n\t\n\tfunction getSingleFieldCoreQueryPlan(selector, index) {\n\t  var field = getKey(index.def.fields[0]);\n\t  var matcher = selector[field];\n\t  var inMemoryFields = [];\n\t\n\t  var userOperators = Object.keys(matcher);\n\t\n\t  var combinedOpts;\n\t\n\t  userOperators.forEach(function (userOperator) {\n\t\n\t    if (isNonLogicalMatcher(userOperator)) {\n\t      inMemoryFields.push(field);\n\t      return;\n\t    }\n\t\n\t    var userValue = matcher[userOperator];\n\t\n\t    var newQueryOpts = getSingleFieldQueryOptsFor(userOperator, userValue);\n\t\n\t    if (combinedOpts) {\n\t      combinedOpts = utils.mergeObjects([combinedOpts, newQueryOpts]);\n\t    } else {\n\t      combinedOpts = newQueryOpts;\n\t    }\n\t  });\n\t\n\t  return {\n\t    queryOpts: combinedOpts,\n\t    inMemoryFields: inMemoryFields\n\t  };\n\t}\n\t\n\tfunction getMultiFieldCoreQueryPlan(userOperator, userValue) {\n\t  switch (userOperator) {\n\t    case '$eq':\n\t      return {\n\t        startkey: userValue,\n\t        endkey: userValue\n\t      };\n\t    case '$lte':\n\t      return {\n\t        endkey: userValue\n\t      };\n\t    case '$gte':\n\t      return {\n\t        startkey: userValue\n\t      };\n\t    case '$lt':\n\t      return {\n\t        endkey: userValue,\n\t        inclusive_end: false\n\t      };\n\t    case '$gt':\n\t      return {\n\t        startkey: userValue,\n\t        inclusive_start: false\n\t      };\n\t  }\n\t}\n\t\n\tfunction getMultiFieldQueryOpts(selector, index) {\n\t\n\t  var indexFields = index.def.fields.map(getKey);\n\t\n\t  var inMemoryFields = [];\n\t  var startkey = [];\n\t  var endkey = [];\n\t  var inclusiveStart;\n\t  var inclusiveEnd;\n\t\n\t\n\t  function finish(i) {\n\t\n\t    if (inclusiveStart !== false) {\n\t      startkey.push(COLLATE_LO);\n\t    }\n\t    if (inclusiveEnd !== false) {\n\t      endkey.push(COLLATE_HI);\n\t    }\n\t    // keep track of the fields where we lost specificity,\n\t    // and therefore need to filter in-memory\n\t    inMemoryFields = indexFields.slice(i);\n\t  }\n\t\n\t  for (var i = 0, len = indexFields.length; i < len; i++) {\n\t    var indexField = indexFields[i];\n\t\n\t    var matcher = selector[indexField];\n\t\n\t    if (!matcher) { // fewer fields in user query than in index\n\t      finish(i);\n\t      break;\n\t    } else if (i > 0) {\n\t      if ('$ne' in matcher) { // unusable $ne index\n\t        finish(i);\n\t        break;\n\t      }\n\t      var usingGtlt = (\n\t        '$gt' in matcher || '$gte' in matcher ||\n\t        '$lt' in matcher || '$lte' in matcher);\n\t      var previousKeys = Object.keys(selector[indexFields[i - 1]]);\n\t      var previousWasEq = utils.arrayEquals(previousKeys, ['$eq']);\n\t      var previousWasSame = utils.arrayEquals(previousKeys, Object.keys(matcher));\n\t      var gtltLostSpecificity = usingGtlt && !previousWasEq && !previousWasSame;\n\t      if (gtltLostSpecificity) {\n\t        finish(i);\n\t        break;\n\t      }\n\t    }\n\t\n\t    var userOperators = Object.keys(matcher);\n\t\n\t    var combinedOpts = null;\n\t\n\t    for (var j = 0; j < userOperators.length; j++) {\n\t      var userOperator = userOperators[j];\n\t      var userValue = matcher[userOperator];\n\t\n\t      var newOpts = getMultiFieldCoreQueryPlan(userOperator, userValue);\n\t\n\t      if (combinedOpts) {\n\t        combinedOpts = utils.mergeObjects([combinedOpts, newOpts]);\n\t      } else {\n\t        combinedOpts = newOpts;\n\t      }\n\t    }\n\t\n\t    startkey.push('startkey' in combinedOpts ? combinedOpts.startkey : COLLATE_LO);\n\t    endkey.push('endkey' in combinedOpts ? combinedOpts.endkey : COLLATE_HI);\n\t    if ('inclusive_start' in combinedOpts) {\n\t      inclusiveStart = combinedOpts.inclusive_start;\n\t    }\n\t    if ('inclusive_end' in combinedOpts) {\n\t      inclusiveEnd = combinedOpts.inclusive_end;\n\t    }\n\t  }\n\t\n\t  var res = {\n\t    startkey: startkey,\n\t    endkey: endkey\n\t  };\n\t\n\t  if (typeof inclusiveStart !== 'undefined') {\n\t    res.inclusive_start = inclusiveStart;\n\t  }\n\t  if (typeof inclusiveEnd !== 'undefined') {\n\t    res.inclusive_end = inclusiveEnd;\n\t  }\n\t\n\t  return {\n\t    queryOpts: res,\n\t    inMemoryFields: inMemoryFields\n\t  };\n\t}\n\t\n\tfunction getDefaultQueryPlan () {\n\t  return {\n\t    queryOpts: {startkey: null},\n\t    //getInMemoryFields will do the work here later\n\t    inMemoryFields: []\n\t  };\n\t}\n\t\n\tfunction getCoreQueryPlan(selector, index) {\n\t  if (index.defaultUsed) {\n\t    return getDefaultQueryPlan(selector, index);\n\t  }\n\t\n\t  if (index.def.fields.length === 1) {\n\t    // one field in index, so the value was indexed as a singleton\n\t    return getSingleFieldCoreQueryPlan(selector, index);\n\t  }\n\t  // else index has multiple fields, so the value was indexed as an array\n\t  return getMultiFieldQueryOpts(selector, index);\n\t}\n\t\n\tfunction planQuery(request, indexes) {\n\t\n\t  log('planning query', request);\n\t\n\t  var selector = request.selector;\n\t  var sort = request.sort;\n\t\n\t  var userFieldsRes = getUserFields(selector, sort);\n\t\n\t  var userFields = userFieldsRes.fields;\n\t  var sortOrder = userFieldsRes.sortOrder;\n\t  var index = findBestMatchingIndex(selector, userFields, sortOrder, indexes);\n\t\n\t  var coreQueryPlan = getCoreQueryPlan(selector, index);\n\t  var queryOpts = coreQueryPlan.queryOpts;\n\t  var coreInMemoryFields = coreQueryPlan.inMemoryFields;\n\t\n\t  var inMemoryFields = getInMemoryFields(coreInMemoryFields, index, selector, userFields);\n\t\n\t  var res = {\n\t    queryOpts: queryOpts,\n\t    index: index,\n\t    inMemoryFields: inMemoryFields\n\t  };\n\t  log('query plan', res);\n\t  return res;\n\t}\n\t\n\tmodule.exports = planQuery;\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(2);\n\tvar callbackify = utils.callbackify;\n\t\n\texports.createIndex = callbackify(__webpack_require__(45));\n\texports.find = callbackify(__webpack_require__(48));\n\texports.getIndexes = callbackify(__webpack_require__(18));\n\texports.deleteIndex = callbackify(__webpack_require__(46));\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(2);\n\t\n\tvar httpIndexes = __webpack_require__(44);\n\tvar localIndexes = __webpack_require__(50);\n\t\n\tvar plugin = {};\n\tplugin.createIndex = utils.toPromise(function (requestDef, callback) {\n\t\n\t  if (typeof requestDef !== 'object') {\n\t    return callback(new Error('you must provide an index to create'));\n\t  }\n\t\n\t  var adapter = this.type() === 'http' ? httpIndexes : localIndexes;\n\t\n\t  adapter.createIndex(this, requestDef, callback);\n\t});\n\t\n\tplugin.find = utils.toPromise(function (requestDef, callback) {\n\t\n\t  if (typeof callback === 'undefined') {\n\t    callback = requestDef;\n\t    requestDef = undefined;\n\t  }\n\t\n\t  if (typeof requestDef !== 'object') {\n\t    return callback(new Error('you must provide search parameters to find()'));\n\t  }\n\t\n\t  var adapter = this.type() === 'http' ? httpIndexes : localIndexes;\n\t\n\t  adapter.find(this, requestDef, callback);\n\t});\n\t\n\tplugin.getIndexes = utils.toPromise(function (callback) {\n\t\n\t  var adapter = this.type() === 'http' ? httpIndexes : localIndexes;\n\t\n\t  adapter.getIndexes(this, callback);\n\t});\n\t\n\tplugin.deleteIndex = utils.toPromise(function (indexDef, callback) {\n\t\n\t  if (typeof indexDef !== 'object') {\n\t    return callback(new Error('you must provide an index to delete'));\n\t  }\n\t\n\t  var adapter = this.type() === 'http' ? httpIndexes : localIndexes;\n\t\n\t  adapter.deleteIndex(this, indexDef, callback);\n\t});\n\t\n\tmodule.exports = plugin;\n\t\n\t/* istanbul ignore next */\n\tif (typeof window !== 'undefined' && window.PouchDB) {\n\t  window.PouchDB.plugin(plugin);\n\t}\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(53);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // NB: In an Electron preload script, document will be defined but not fully\n\t  // initialized. Since we know we're in Chrome, we'll just detect this case\n\t  // explicitly\n\t  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n\t    return true;\n\t  }\n\t\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t    // double check webkit in userAgent just in case we are in a worker\n\t    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  try {\n\t    return JSON.stringify(v);\n\t  } catch (err) {\n\t    return '[UnexpectedJSONParseError]: ' + err.message;\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs(args) {\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args.splice(1, 0, c, 'color: inherit')\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t\n\t  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\t  if (!r && typeof process !== 'undefined' && 'env' in process) {\n\t    r = process.env.DEBUG;\n\t  }\n\t\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage() {\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(54);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t * @param {String} namespace\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor(namespace) {\n\t  var hash = 0, i;\n\t\n\t  for (i in namespace) {\n\t    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t    hash |= 0; // Convert to 32bit integer\n\t  }\n\t\n\t  return exports.colors[Math.abs(hash) % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction createDebug(namespace) {\n\t\n\t  function debug() {\n\t    // disabled?\n\t    if (!debug.enabled) return;\n\t\n\t    var self = debug;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // turn the `arguments` into a proper Array\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %O\n\t      args.unshift('%O');\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    // apply env-specific formatting (colors, etc.)\n\t    exports.formatArgs.call(self, args);\n\t\n\t    var logFn = debug.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t\n\t  debug.namespace = namespace;\n\t  debug.enabled = exports.enabled(namespace);\n\t  debug.useColors = exports.useColors();\n\t  debug.color = selectColor(namespace);\n\t\n\t  // env-specific initialization logic for debug instances\n\t  if ('function' === typeof exports.init) {\n\t    exports.init(debug);\n\t  }\n\t\n\t  return debug;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  exports.names = [];\n\t  exports.skips = [];\n\t\n\t  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} [options]\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options) {\n\t  options = options || {};\n\t  var type = typeof val;\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val);\n\t  } else if (type === 'number' && isNaN(val) === false) {\n\t    return options.long ? fmtLong(val) : fmtShort(val);\n\t  }\n\t  throw new Error(\n\t    'val is not a non-empty string or a valid number. val=' +\n\t      JSON.stringify(val)\n\t  );\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = String(str);\n\t  if (str.length > 100) {\n\t    return;\n\t  }\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n\t    str\n\t  );\n\t  if (!match) {\n\t    return;\n\t  }\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t    default:\n\t      return undefined;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtShort(ms) {\n\t  if (ms >= d) {\n\t    return Math.round(ms / d) + 'd';\n\t  }\n\t  if (ms >= h) {\n\t    return Math.round(ms / h) + 'h';\n\t  }\n\t  if (ms >= m) {\n\t    return Math.round(ms / m) + 'm';\n\t  }\n\t  if (ms >= s) {\n\t    return Math.round(ms / s) + 's';\n\t  }\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtLong(ms) {\n\t  return plural(ms, d, 'day') ||\n\t    plural(ms, h, 'hour') ||\n\t    plural(ms, m, 'minute') ||\n\t    plural(ms, s, 'second') ||\n\t    ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) {\n\t    return;\n\t  }\n\t  if (ms < n * 1.5) {\n\t    return Math.floor(ms / n) + ' ' + name;\n\t  }\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ },\n/* 55 */\n15,\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar lie = _interopDefault(__webpack_require__(15));\n\t\n\t/* istanbul ignore next */\n\tvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\t\n\tmodule.exports = PouchPromise;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar lie = _interopDefault(__webpack_require__(15));\n\tvar getArguments = _interopDefault(__webpack_require__(13));\n\tvar debug = _interopDefault(__webpack_require__(34));\n\tvar events = __webpack_require__(36);\n\tvar inherits = _interopDefault(__webpack_require__(10));\n\tvar nextTick = _interopDefault(__webpack_require__(9));\n\tvar scopedEval = _interopDefault(__webpack_require__(59));\n\tvar Md5 = _interopDefault(__webpack_require__(58));\n\tvar vuvuzela = _interopDefault(__webpack_require__(60));\n\t\n\t/* istanbul ignore next */\n\tvar PouchPromise$1 = typeof Promise === 'function' ? Promise : lie;\n\t\n\tfunction isBinaryObject(object) {\n\t  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n\t    (typeof Blob !== 'undefined' && object instanceof Blob);\n\t}\n\t\n\tfunction cloneArrayBuffer(buff) {\n\t  if (typeof buff.slice === 'function') {\n\t    return buff.slice(0);\n\t  }\n\t  // IE10-11 slice() polyfill\n\t  var target = new ArrayBuffer(buff.byteLength);\n\t  var targetArray = new Uint8Array(target);\n\t  var sourceArray = new Uint8Array(buff);\n\t  targetArray.set(sourceArray);\n\t  return target;\n\t}\n\t\n\tfunction cloneBinaryObject(object) {\n\t  if (object instanceof ArrayBuffer) {\n\t    return cloneArrayBuffer(object);\n\t  }\n\t  var size = object.size;\n\t  var type = object.type;\n\t  // Blob\n\t  if (typeof object.slice === 'function') {\n\t    return object.slice(0, size, type);\n\t  }\n\t  // PhantomJS slice() replacement\n\t  return object.webkitSlice(0, size, type);\n\t}\n\t\n\t// most of this is borrowed from lodash.isPlainObject:\n\t// https://github.com/fis-components/lodash.isplainobject/\n\t// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\t\n\tvar funcToString = Function.prototype.toString;\n\tvar objectCtorString = funcToString.call(Object);\n\t\n\tfunction isPlainObject(value) {\n\t  var proto = Object.getPrototypeOf(value);\n\t  /* istanbul ignore if */\n\t  if (proto === null) { // not sure when this happens, but I guess it can\n\t    return true;\n\t  }\n\t  var Ctor = proto.constructor;\n\t  return (typeof Ctor == 'function' &&\n\t    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t}\n\t\n\tfunction clone(object) {\n\t  var newObject;\n\t  var i;\n\t  var len;\n\t\n\t  if (!object || typeof object !== 'object') {\n\t    return object;\n\t  }\n\t\n\t  if (Array.isArray(object)) {\n\t    newObject = [];\n\t    for (i = 0, len = object.length; i < len; i++) {\n\t      newObject[i] = clone(object[i]);\n\t    }\n\t    return newObject;\n\t  }\n\t\n\t  // special case: to avoid inconsistencies between IndexedDB\n\t  // and other backends, we automatically stringify Dates\n\t  if (object instanceof Date) {\n\t    return object.toISOString();\n\t  }\n\t\n\t  if (isBinaryObject(object)) {\n\t    return cloneBinaryObject(object);\n\t  }\n\t\n\t  if (!isPlainObject(object)) {\n\t    return object; // don't clone objects like Workers\n\t  }\n\t\n\t  newObject = {};\n\t  for (i in object) {\n\t    /* istanbul ignore else */\n\t    if (Object.prototype.hasOwnProperty.call(object, i)) {\n\t      var value = clone(object[i]);\n\t      if (typeof value !== 'undefined') {\n\t        newObject[i] = value;\n\t      }\n\t    }\n\t  }\n\t  return newObject;\n\t}\n\t\n\tfunction once(fun) {\n\t  var called = false;\n\t  return getArguments(function (args) {\n\t    /* istanbul ignore if */\n\t    if (called) {\n\t      // this is a smoke test and should never actually happen\n\t      throw new Error('once called more than once');\n\t    } else {\n\t      called = true;\n\t      fun.apply(this, args);\n\t    }\n\t  });\n\t}\n\t\n\tfunction toPromise(func) {\n\t  //create the function we will be returning\n\t  return getArguments(function (args) {\n\t    // Clone arguments\n\t    args = clone(args);\n\t    var self = this;\n\t    // if the last argument is a function, assume its a callback\n\t    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n\t    var promise = new PouchPromise$1(function (fulfill, reject) {\n\t      var resp;\n\t      try {\n\t        var callback = once(function (err, mesg) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            fulfill(mesg);\n\t          }\n\t        });\n\t        // create a callback for this invocation\n\t        // apply the function in the orig context\n\t        args.push(callback);\n\t        resp = func.apply(self, args);\n\t        if (resp && typeof resp.then === 'function') {\n\t          fulfill(resp);\n\t        }\n\t      } catch (e) {\n\t        reject(e);\n\t      }\n\t    });\n\t    // if there is a callback, call it back\n\t    if (usedCB) {\n\t      promise.then(function (result) {\n\t        usedCB(null, result);\n\t      }, usedCB);\n\t    }\n\t    return promise;\n\t  });\n\t}\n\t\n\tvar log = debug('pouchdb:api');\n\t\n\tfunction adapterFun(name, callback) {\n\t  function logApiCall(self, name, args) {\n\t    /* istanbul ignore if */\n\t    if (log.enabled) {\n\t      var logArgs = [self.name, name];\n\t      for (var i = 0; i < args.length - 1; i++) {\n\t        logArgs.push(args[i]);\n\t      }\n\t      log.apply(null, logArgs);\n\t\n\t      // override the callback itself to log the response\n\t      var origCallback = args[args.length - 1];\n\t      args[args.length - 1] = function (err, res) {\n\t        var responseArgs = [self.name, name];\n\t        responseArgs = responseArgs.concat(\n\t          err ? ['error', err] : ['success', res]\n\t        );\n\t        log.apply(null, responseArgs);\n\t        origCallback(err, res);\n\t      };\n\t    }\n\t  }\n\t\n\t  return toPromise(getArguments(function (args) {\n\t    if (this._closed) {\n\t      return PouchPromise$1.reject(new Error('database is closed'));\n\t    }\n\t    if (this._destroyed) {\n\t      return PouchPromise$1.reject(new Error('database is destroyed'));\n\t    }\n\t    var self = this;\n\t    logApiCall(self, name, args);\n\t    if (!this.taskqueue.isReady) {\n\t      return new PouchPromise$1(function (fulfill, reject) {\n\t        self.taskqueue.addTask(function (failed) {\n\t          if (failed) {\n\t            reject(failed);\n\t          } else {\n\t            fulfill(self[name].apply(self, args));\n\t          }\n\t        });\n\t      });\n\t    }\n\t    return callback.apply(this, args);\n\t  }));\n\t}\n\t\n\t// like underscore/lodash _.pick()\n\tfunction pick(obj, arr) {\n\t  var res = {};\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    var prop = arr[i];\n\t    if (prop in obj) {\n\t      res[prop] = obj[prop];\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction mangle(key) {\n\t  return '$' + key;\n\t}\n\tfunction unmangle(key) {\n\t  return key.substring(1);\n\t}\n\tfunction Map$1() {\n\t  this._store = {};\n\t}\n\tMap$1.prototype.get = function (key) {\n\t  var mangled = mangle(key);\n\t  return this._store[mangled];\n\t};\n\tMap$1.prototype.set = function (key, value) {\n\t  var mangled = mangle(key);\n\t  this._store[mangled] = value;\n\t  return true;\n\t};\n\tMap$1.prototype.has = function (key) {\n\t  var mangled = mangle(key);\n\t  return mangled in this._store;\n\t};\n\tMap$1.prototype.delete = function (key) {\n\t  var mangled = mangle(key);\n\t  var res = mangled in this._store;\n\t  delete this._store[mangled];\n\t  return res;\n\t};\n\tMap$1.prototype.forEach = function (cb) {\n\t  var keys = Object.keys(this._store);\n\t  for (var i = 0, len = keys.length; i < len; i++) {\n\t    var key = keys[i];\n\t    var value = this._store[key];\n\t    key = unmangle(key);\n\t    cb(value, key);\n\t  }\n\t};\n\tObject.defineProperty(Map$1.prototype, 'size', {\n\t  get: function () {\n\t    return Object.keys(this._store).length;\n\t  }\n\t});\n\t\n\tfunction Set$1(array) {\n\t  this._store = new Map$1();\n\t\n\t  // init with an array\n\t  if (array && Array.isArray(array)) {\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      this.add(array[i]);\n\t    }\n\t  }\n\t}\n\tSet$1.prototype.add = function (key) {\n\t  return this._store.set(key, true);\n\t};\n\tSet$1.prototype.has = function (key) {\n\t  return this._store.has(key);\n\t};\n\tSet$1.prototype.forEach = function (cb) {\n\t  this._store.forEach(function (value, key) {\n\t    cb(key);\n\t  });\n\t};\n\tObject.defineProperty(Set$1.prototype, 'size', {\n\t  get: function () {\n\t    return this._store.size;\n\t  }\n\t});\n\t\n\t/* global Map,Set,Symbol */\n\t// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n\t// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n\t// Notably they fail in IE11 and iOS 8.4, which this prevents.\n\tfunction supportsMapAndSet() {\n\t  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n\t    return false;\n\t  }\n\t  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n\t  return prop && 'get' in prop && Map[Symbol.species] === Map;\n\t}\n\t\n\t// based on https://github.com/montagejs/collections\n\t/* global Map,Set */\n\t\n\tvar ExportedSet;\n\tvar ExportedMap;\n\t\n\t{\n\t  if (supportsMapAndSet()) { // prefer built-in Map/Set\n\t    ExportedSet = Set;\n\t    ExportedMap = Map;\n\t  } else { // fall back to our polyfill\n\t    ExportedSet = Set$1;\n\t    ExportedMap = Map$1;\n\t  }\n\t}\n\t\n\t// Most browsers throttle concurrent requests at 6, so it's silly\n\t// to shim _bulk_get by trying to launch potentially hundreds of requests\n\t// and then letting the majority time out. We can handle this ourselves.\n\tvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\t\n\tfunction identityFunction(x) {\n\t  return x;\n\t}\n\t\n\tfunction formatResultForOpenRevsGet(result) {\n\t  return [{\n\t    ok: result\n\t  }];\n\t}\n\t\n\t// shim for P/CouchDB adapters that don't directly implement _bulk_get\n\tfunction bulkGet(db, opts, callback) {\n\t  var requests = opts.docs;\n\t\n\t  // consolidate into one request per doc if possible\n\t  var requestsById = new ExportedMap();\n\t  requests.forEach(function (request) {\n\t    if (requestsById.has(request.id)) {\n\t      requestsById.get(request.id).push(request);\n\t    } else {\n\t      requestsById.set(request.id, [request]);\n\t    }\n\t  });\n\t\n\t  var numDocs = requestsById.size;\n\t  var numDone = 0;\n\t  var perDocResults = new Array(numDocs);\n\t\n\t  function collapseResultsAndFinish() {\n\t    var results = [];\n\t    perDocResults.forEach(function (res) {\n\t      res.docs.forEach(function (info) {\n\t        results.push({\n\t          id: res.id,\n\t          docs: [info]\n\t        });\n\t      });\n\t    });\n\t    callback(null, {results: results});\n\t  }\n\t\n\t  function checkDone() {\n\t    if (++numDone === numDocs) {\n\t      collapseResultsAndFinish();\n\t    }\n\t  }\n\t\n\t  function gotResult(docIndex, id, docs) {\n\t    perDocResults[docIndex] = {id: id, docs: docs};\n\t    checkDone();\n\t  }\n\t\n\t  var allRequests = [];\n\t  requestsById.forEach(function (value, key) {\n\t    allRequests.push(key);\n\t  });\n\t\n\t  var i = 0;\n\t\n\t  function nextBatch() {\n\t\n\t    if (i >= allRequests.length) {\n\t      return;\n\t    }\n\t\n\t    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n\t    var batch = allRequests.slice(i, upTo);\n\t    processBatch(batch, i);\n\t    i += batch.length;\n\t  }\n\t\n\t  function processBatch(batch, offset) {\n\t    batch.forEach(function (docId, j) {\n\t      var docIdx = offset + j;\n\t      var docRequests = requestsById.get(docId);\n\t\n\t      // just use the first request as the \"template\"\n\t      // TODO: The _bulk_get API allows for more subtle use cases than this,\n\t      // but for now it is unlikely that there will be a mix of different\n\t      // \"atts_since\" or \"attachments\" in the same request, since it's just\n\t      // replicate.js that is using this for the moment.\n\t      // Also, atts_since is aspirational, since we don't support it yet.\n\t      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n\t      docOpts.open_revs = docRequests.map(function (request) {\n\t        // rev is optional, open_revs disallowed\n\t        return request.rev;\n\t      });\n\t\n\t      // remove falsey / undefined revisions\n\t      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\t\n\t      var formatResult = identityFunction;\n\t\n\t      if (docOpts.open_revs.length === 0) {\n\t        delete docOpts.open_revs;\n\t\n\t        // when fetching only the \"winning\" leaf,\n\t        // transform the result so it looks like an open_revs\n\t        // request\n\t        formatResult = formatResultForOpenRevsGet;\n\t      }\n\t\n\t      // globally-supplied options\n\t      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n\t        if (param in opts) {\n\t          docOpts[param] = opts[param];\n\t        }\n\t      });\n\t      db.get(docId, docOpts, function (err, res) {\n\t        var result;\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          result = [{error: err}];\n\t        } else {\n\t          result = formatResult(res);\n\t        }\n\t        gotResult(docIdx, docId, result);\n\t        nextBatch();\n\t      });\n\t    });\n\t  }\n\t\n\t  nextBatch();\n\t\n\t}\n\t\n\tfunction isChromeApp() {\n\t  return (typeof chrome !== \"undefined\" &&\n\t    typeof chrome.storage !== \"undefined\" &&\n\t    typeof chrome.storage.local !== \"undefined\");\n\t}\n\t\n\tvar hasLocal;\n\t\n\tif (isChromeApp()) {\n\t  hasLocal = false;\n\t} else {\n\t  try {\n\t    localStorage.setItem('_pouch_check_localstorage', 1);\n\t    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n\t  } catch (e) {\n\t    hasLocal = false;\n\t  }\n\t}\n\t\n\tfunction hasLocalStorage() {\n\t  return hasLocal;\n\t}\n\t\n\tinherits(Changes, events.EventEmitter);\n\t\n\t/* istanbul ignore next */\n\tfunction attachBrowserEvents(self) {\n\t  if (isChromeApp()) {\n\t    chrome.storage.onChanged.addListener(function (e) {\n\t      // make sure it's event addressed to us\n\t      if (e.db_name != null) {\n\t        //object only has oldValue, newValue members\n\t        self.emit(e.dbName.newValue);\n\t      }\n\t    });\n\t  } else if (hasLocalStorage()) {\n\t    if (typeof addEventListener !== 'undefined') {\n\t      addEventListener(\"storage\", function (e) {\n\t        self.emit(e.key);\n\t      });\n\t    } else { // old IE\n\t      window.attachEvent(\"storage\", function (e) {\n\t        self.emit(e.key);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tfunction Changes() {\n\t  events.EventEmitter.call(this);\n\t  this._listeners = {};\n\t\n\t  attachBrowserEvents(this);\n\t}\n\tChanges.prototype.addListener = function (dbName, id, db, opts) {\n\t  /* istanbul ignore if */\n\t  if (this._listeners[id]) {\n\t    return;\n\t  }\n\t  var self = this;\n\t  var inprogress = false;\n\t  function eventFunction() {\n\t    /* istanbul ignore if */\n\t    if (!self._listeners[id]) {\n\t      return;\n\t    }\n\t    if (inprogress) {\n\t      inprogress = 'waiting';\n\t      return;\n\t    }\n\t    inprogress = true;\n\t    var changesOpts = pick(opts, [\n\t      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n\t      'doc_ids', 'view', 'since', 'query_params', 'binary'\n\t    ]);\n\t\n\t    /* istanbul ignore next */\n\t    function onError() {\n\t      inprogress = false;\n\t    }\n\t\n\t    db.changes(changesOpts).on('change', function (c) {\n\t      if (c.seq > opts.since && !opts.cancelled) {\n\t        opts.since = c.seq;\n\t        opts.onChange(c);\n\t      }\n\t    }).on('complete', function () {\n\t      if (inprogress === 'waiting') {\n\t        nextTick(eventFunction);\n\t      }\n\t      inprogress = false;\n\t    }).on('error', onError);\n\t  }\n\t  this._listeners[id] = eventFunction;\n\t  this.on(dbName, eventFunction);\n\t};\n\t\n\tChanges.prototype.removeListener = function (dbName, id) {\n\t  /* istanbul ignore if */\n\t  if (!(id in this._listeners)) {\n\t    return;\n\t  }\n\t  events.EventEmitter.prototype.removeListener.call(this, dbName,\n\t    this._listeners[id]);\n\t  delete this._listeners[id];\n\t};\n\t\n\t\n\t/* istanbul ignore next */\n\tChanges.prototype.notifyLocalWindows = function (dbName) {\n\t  //do a useless change on a storage thing\n\t  //in order to get other windows's listeners to activate\n\t  if (isChromeApp()) {\n\t    chrome.storage.local.set({dbName: dbName});\n\t  } else if (hasLocalStorage()) {\n\t    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n\t  }\n\t};\n\t\n\tChanges.prototype.notify = function (dbName) {\n\t  this.emit(dbName);\n\t  this.notifyLocalWindows(dbName);\n\t};\n\t\n\tfunction guardedConsole(method) {\n\t  /* istanbul ignore else */\n\t  if (console !== 'undefined' && method in console) {\n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t    console[method].apply(console, args);\n\t  }\n\t}\n\t\n\tfunction randomNumber(min, max) {\n\t  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n\t  min = parseInt(min, 10) || 0;\n\t  max = parseInt(max, 10);\n\t  if (max !== max || max <= min) {\n\t    max = (min || 1) << 1; //doubling\n\t  } else {\n\t    max = max + 1;\n\t  }\n\t  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n\t  if(max > maxTimeout) {\n\t    min = maxTimeout >> 1; // divide by two\n\t    max = maxTimeout;\n\t  }\n\t  var ratio = Math.random();\n\t  var range = max - min;\n\t\n\t  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n\t}\n\t\n\tfunction defaultBackOff(min) {\n\t  var max = 0;\n\t  if (!min) {\n\t    max = 2000;\n\t  }\n\t  return randomNumber(min, max);\n\t}\n\t\n\t// designed to give info to browser users, who are disturbed\n\t// when they see http errors in the console\n\tfunction explainError(status, str) {\n\t  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n\t}\n\t\n\tvar assign;\n\t{\n\t  if (typeof Object.assign === 'function') {\n\t    assign = Object.assign;\n\t  } else {\n\t    // lite Object.assign polyfill based on\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\t    assign = function (target) {\n\t      var to = Object(target);\n\t\n\t      for (var index = 1; index < arguments.length; index++) {\n\t        var nextSource = arguments[index];\n\t\n\t        if (nextSource != null) { // Skip over if undefined or null\n\t          for (var nextKey in nextSource) {\n\t            // Avoid bugs when hasOwnProperty is shadowed\n\t            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t              to[nextKey] = nextSource[nextKey];\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return to;\n\t    };\n\t  }\n\t}\n\t\n\tvar assign$1 = assign;\n\t\n\tinherits(PouchError, Error);\n\t\n\tfunction PouchError(status, error, reason) {\n\t  Error.call(this, reason);\n\t  this.status = status;\n\t  this.name = error;\n\t  this.message = reason;\n\t  this.error = true;\n\t}\n\t\n\tPouchError.prototype.toString = function () {\n\t  return JSON.stringify({\n\t    status: this.status,\n\t    name: this.name,\n\t    message: this.message,\n\t    reason: this.reason\n\t  });\n\t};\n\t\n\tvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\n\tvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\n\tvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\n\tvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\n\tvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\n\tvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\n\tvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\n\tvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\n\tvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\n\tvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\n\tvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\n\tvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\n\tvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\n\tvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\n\tvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\n\tvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\n\tvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\n\tvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\n\tvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\n\tvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\n\tvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\n\tvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\n\tvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\n\tvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\t\n\tfunction createError(error, reason) {\n\t  function CustomPouchError(reason) {\n\t    // inherit error properties from our parent error manually\n\t    // so as to allow proper JSON parsing.\n\t    /* jshint ignore:start */\n\t    for (var p in error) {\n\t      if (typeof error[p] !== 'function') {\n\t        this[p] = error[p];\n\t      }\n\t    }\n\t    /* jshint ignore:end */\n\t    if (reason !== undefined) {\n\t      this.reason = reason;\n\t    }\n\t  }\n\t  CustomPouchError.prototype = PouchError.prototype;\n\t  return new CustomPouchError(reason);\n\t}\n\t\n\tfunction generateErrorFromResponse(err) {\n\t\n\t  if (typeof err !== 'object') {\n\t    var data = err;\n\t    err = UNKNOWN_ERROR;\n\t    err.data = data;\n\t  }\n\t\n\t  if ('error' in err && err.error === 'conflict') {\n\t    err.name = 'conflict';\n\t    err.status = 409;\n\t  }\n\t\n\t  if (!('name' in err)) {\n\t    err.name = err.error || 'unknown';\n\t  }\n\t\n\t  if (!('status' in err)) {\n\t    err.status = 500;\n\t  }\n\t\n\t  if (!('message' in err)) {\n\t    err.message = err.message || err.reason;\n\t  }\n\t\n\t  return err;\n\t}\n\t\n\tfunction tryFilter(filter, doc, req) {\n\t  try {\n\t    return !filter(doc, req);\n\t  } catch (err) {\n\t    var msg = 'Filter function threw: ' + err.toString();\n\t    return createError(BAD_REQUEST, msg);\n\t  }\n\t}\n\t\n\tfunction filterChange(opts) {\n\t  var req = {};\n\t  var hasFilter = opts.filter && typeof opts.filter === 'function';\n\t  req.query = opts.query_params;\n\t\n\t  return function filter(change) {\n\t    if (!change.doc) {\n\t      // CSG sends events on the changes feed that don't have documents,\n\t      // this hack makes a whole lot of existing code robust.\n\t      change.doc = {};\n\t    }\n\t\n\t    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\t\n\t    if (typeof filterReturn === 'object') {\n\t      return filterReturn;\n\t    }\n\t\n\t    if (filterReturn) {\n\t      return false;\n\t    }\n\t\n\t    if (!opts.include_docs) {\n\t      delete change.doc;\n\t    } else if (!opts.attachments) {\n\t      for (var att in change.doc._attachments) {\n\t        /* istanbul ignore else */\n\t        if (change.doc._attachments.hasOwnProperty(att)) {\n\t          change.doc._attachments[att].stub = true;\n\t        }\n\t      }\n\t    }\n\t    return true;\n\t  };\n\t}\n\t\n\tfunction flatten(arrs) {\n\t  var res = [];\n\t  for (var i = 0, len = arrs.length; i < len; i++) {\n\t    res = res.concat(arrs[i]);\n\t  }\n\t  return res;\n\t}\n\t\n\t// shim for Function.prototype.name,\n\t// for browsers that don't support it like IE\n\t\n\t/* istanbul ignore next */\n\tfunction f() {}\n\t\n\tvar hasName = f.name;\n\tvar res;\n\t\n\t// We dont run coverage in IE\n\t/* istanbul ignore else */\n\tif (hasName) {\n\t  res = function (fun) {\n\t    return fun.name;\n\t  };\n\t} else {\n\t  res = function (fun) {\n\t    return fun.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n\t  };\n\t}\n\t\n\t// Determine id an ID is valid\n\t//   - invalid IDs begin with an underescore that does not begin '_design' or\n\t//     '_local'\n\t//   - any other string value is a valid id\n\t// Returns the specific error object for each case\n\tfunction invalidIdError(id) {\n\t  var err;\n\t  if (!id) {\n\t    err = createError(MISSING_ID);\n\t  } else if (typeof id !== 'string') {\n\t    err = createError(INVALID_ID);\n\t  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n\t    err = createError(RESERVED_ID);\n\t  }\n\t  if (err) {\n\t    throw err;\n\t  }\n\t}\n\t\n\tfunction listenerCount(ee, type) {\n\t  return 'listenerCount' in ee ? ee.listenerCount(type) :\n\t                                 events.EventEmitter.listenerCount(ee, type);\n\t}\n\t\n\t// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\t// avoid using process.nextTick() directly because the polyfill is very large and we don't\n\t// need all of it (see: https://github.com/defunctzombie/node-process).\n\t// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n\t// package, so it's the one we use.\n\t// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n\t// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n\t// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n\t// (least latency) option, which is \"immediate\" due to use of microtasks.\n\t// All of our nextTicks are isolated to this one function so we can easily swap out one\n\t// implementation for another.\n\t\n\tfunction parseDesignDocFunctionName(s) {\n\t  if (!s) {\n\t    return null;\n\t  }\n\t  var parts = s.split('/');\n\t  if (parts.length === 2) {\n\t    return parts;\n\t  }\n\t  if (parts.length === 1) {\n\t    return [s, s];\n\t  }\n\t  return null;\n\t}\n\t\n\tfunction normalizeDesignDocFunctionName(s) {\n\t  var normalized = parseDesignDocFunctionName(s);\n\t  return normalized ? normalized.join('/') : null;\n\t}\n\t\n\t// originally parseUri 1.2.2, now patched by us\n\t// (c) Steven Levithan <stevenlevithan.com>\n\t// MIT License\n\tvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n\t    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\n\tvar qName =\"queryKey\";\n\tvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\t\n\t// use the \"loose\" parser\n\t/* jshint maxlen: false */\n\tvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\t\n\tfunction parseUri(str) {\n\t  var m = parser.exec(str);\n\t  var uri = {};\n\t  var i = 14;\n\t\n\t  while (i--) {\n\t    var key = keys[i];\n\t    var value = m[i] || \"\";\n\t    var encoded = ['user', 'password'].indexOf(key) !== -1;\n\t    uri[key] = encoded ? decodeURIComponent(value) : value;\n\t  }\n\t\n\t  uri[qName] = {};\n\t  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n\t    if ($1) {\n\t      uri[qName][$1] = $2;\n\t    }\n\t  });\n\t\n\t  return uri;\n\t}\n\t\n\t// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n\t// the diffFun tells us what delta to apply to the doc.  it either returns\n\t// the doc, or false if it doesn't need to do an update after all\n\tfunction upsert(db, docId, diffFun) {\n\t  return new PouchPromise$1(function (fulfill, reject) {\n\t    db.get(docId, function (err, doc) {\n\t      if (err) {\n\t        /* istanbul ignore next */\n\t        if (err.status !== 404) {\n\t          return reject(err);\n\t        }\n\t        doc = {};\n\t      }\n\t\n\t      // the user might change the _rev, so save it for posterity\n\t      var docRev = doc._rev;\n\t      var newDoc = diffFun(doc);\n\t\n\t      if (!newDoc) {\n\t        // if the diffFun returns falsy, we short-circuit as\n\t        // an optimization\n\t        return fulfill({updated: false, rev: docRev});\n\t      }\n\t\n\t      // users aren't allowed to modify these values,\n\t      // so reset them here\n\t      newDoc._id = docId;\n\t      newDoc._rev = docRev;\n\t      fulfill(tryAndPut(db, newDoc, diffFun));\n\t    });\n\t  });\n\t}\n\t\n\tfunction tryAndPut(db, doc, diffFun) {\n\t  return db.put(doc).then(function (res) {\n\t    return {\n\t      updated: true,\n\t      rev: res.rev\n\t    };\n\t  }, function (err) {\n\t    /* istanbul ignore next */\n\t    if (err.status !== 409) {\n\t      throw err;\n\t    }\n\t    return upsert(db, doc._id, diffFun);\n\t  });\n\t}\n\t\n\t// BEGIN Math.uuid.js\n\t\n\t/*!\n\tMath.uuid.js (v1.4)\n\thttp://www.broofa.com\n\tmailto:robert@broofa.com\n\t\n\tCopyright (c) 2010 Robert Kieffer\n\tDual licensed under the MIT and GPL licenses.\n\t*/\n\t\n\t/*\n\t * Generate a random uuid.\n\t *\n\t * USAGE: Math.uuid(length, radix)\n\t *   length - the desired number of characters\n\t *   radix  - the number of allowable values for each character.\n\t *\n\t * EXAMPLES:\n\t *   // No arguments  - returns RFC4122, version 4 ID\n\t *   >>> Math.uuid()\n\t *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n\t *\n\t *   // One argument - returns ID of the specified length\n\t *   >>> Math.uuid(15)     // 15 character ID (default base=62)\n\t *   \"VcydxgltxrVZSTV\"\n\t *\n\t *   // Two arguments - returns ID of the specified length, and radix. \n\t *   // (Radix must be <= 62)\n\t *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\n\t *   \"01001010\"\n\t *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\n\t *   \"47473046\"\n\t *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\n\t *   \"098F4D35\"\n\t */\n\tvar chars = (\n\t  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n\t  'abcdefghijklmnopqrstuvwxyz'\n\t).split('');\n\tfunction getValue(radix) {\n\t  return 0 | Math.random() * radix;\n\t}\n\tfunction uuid(len, radix) {\n\t  radix = radix || chars.length;\n\t  var out = '';\n\t  var i = -1;\n\t\n\t  if (len) {\n\t    // Compact form\n\t    while (++i < len) {\n\t      out += chars[getValue(radix)];\n\t    }\n\t    return out;\n\t  }\n\t    // rfc4122, version 4 form\n\t    // Fill in random data.  At i==19 set the high bits of clock sequence as\n\t    // per rfc4122, sec. 4.1.5\n\t  while (++i < 36) {\n\t    switch (i) {\n\t      case 8:\n\t      case 13:\n\t      case 18:\n\t      case 23:\n\t        out += '-';\n\t        break;\n\t      case 19:\n\t        out += chars[(getValue(16) & 0x3) | 0x8];\n\t        break;\n\t      default:\n\t        out += chars[getValue(16)];\n\t    }\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t// We fetch all leafs of the revision tree, and sort them based on tree length\n\t// and whether they were deleted, undeleted documents with the longest revision\n\t// tree (most edits) win\n\t// The final sort algorithm is slightly documented in a sidebar here:\n\t// http://guide.couchdb.org/draft/conflicts.html\n\tfunction winningRev(metadata) {\n\t  var winningId;\n\t  var winningPos;\n\t  var winningDeleted;\n\t  var toVisit = metadata.rev_tree.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var tree = node.ids;\n\t    var branches = tree[2];\n\t    var pos = node.pos;\n\t    if (branches.length) { // non-leaf\n\t      for (var i = 0, len = branches.length; i < len; i++) {\n\t        toVisit.push({pos: pos + 1, ids: branches[i]});\n\t      }\n\t      continue;\n\t    }\n\t    var deleted = !!tree[1].deleted;\n\t    var id = tree[0];\n\t    // sort by deleted, then pos, then id\n\t    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n\t        winningPos !== pos ? winningPos < pos : winningId < id)) {\n\t      winningId = id;\n\t      winningPos = pos;\n\t      winningDeleted = deleted;\n\t    }\n\t  }\n\t\n\t  return winningPos + '-' + winningId;\n\t}\n\t\n\t// Pretty much all below can be combined into a higher order function to\n\t// traverse revisions\n\t// The return value from the callback will be passed as context to all\n\t// children of that node\n\tfunction traverseRevTree(revs, callback) {\n\t  var toVisit = revs.slice();\n\t\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var branches = tree[2];\n\t    var newCtx =\n\t      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n\t    }\n\t  }\n\t}\n\t\n\tfunction sortByPos(a, b) {\n\t  return a.pos - b.pos;\n\t}\n\t\n\tfunction collectLeaves(revs) {\n\t  var leaves = [];\n\t  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n\t    if (isLeaf) {\n\t      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n\t    }\n\t  });\n\t  leaves.sort(sortByPos).reverse();\n\t  for (var i = 0, len = leaves.length; i < len; i++) {\n\t    delete leaves[i].pos;\n\t  }\n\t  return leaves;\n\t}\n\t\n\t// returns revs of all conflicts that is leaves such that\n\t// 1. are not deleted and\n\t// 2. are different than winning revision\n\tfunction collectConflicts(metadata) {\n\t  var win = winningRev(metadata);\n\t  var leaves = collectLeaves(metadata.rev_tree);\n\t  var conflicts = [];\n\t  for (var i = 0, len = leaves.length; i < len; i++) {\n\t    var leaf = leaves[i];\n\t    if (leaf.rev !== win && !leaf.opts.deleted) {\n\t      conflicts.push(leaf.rev);\n\t    }\n\t  }\n\t  return conflicts;\n\t}\n\t\n\t// compact a tree by marking its non-leafs as missing,\n\t// and return a list of revs to delete\n\tfunction compactTree(metadata) {\n\t  var revs = [];\n\t  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                               revHash, ctx, opts) {\n\t    if (opts.status === 'available' && !isLeaf) {\n\t      revs.push(pos + '-' + revHash);\n\t      opts.status = 'missing';\n\t    }\n\t  });\n\t  return revs;\n\t}\n\t\n\t// build up a list of all the paths to the leafs in this revision tree\n\tfunction rootToLeaf(revs) {\n\t  var paths = [];\n\t  var toVisit = revs.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var id = tree[0];\n\t    var opts = tree[1];\n\t    var branches = tree[2];\n\t    var isLeaf = branches.length === 0;\n\t\n\t    var history = node.history ? node.history.slice() : [];\n\t    history.push({id: id, opts: opts});\n\t    if (isLeaf) {\n\t      paths.push({pos: (pos + 1 - history.length), ids: history});\n\t    }\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n\t    }\n\t  }\n\t  return paths.reverse();\n\t}\n\t\n\t// for a better overview of what this is doing, read:\n\t// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n\t//\n\t// But for a quick intro, CouchDB uses a revision tree to store a documents\n\t// history, A -> B -> C, when a document has conflicts, that is a branch in the\n\t// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n\t//\n\t// KeyTree = [Path ... ]\n\t// Path = {pos: position_from_root, ids: Tree}\n\t// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\t\n\tfunction sortByPos$1(a, b) {\n\t  return a.pos - b.pos;\n\t}\n\t\n\t// classic binary search\n\tfunction binarySearch(arr, item, comparator) {\n\t  var low = 0;\n\t  var high = arr.length;\n\t  var mid;\n\t  while (low < high) {\n\t    mid = (low + high) >>> 1;\n\t    if (comparator(arr[mid], item) < 0) {\n\t      low = mid + 1;\n\t    } else {\n\t      high = mid;\n\t    }\n\t  }\n\t  return low;\n\t}\n\t\n\t// assuming the arr is sorted, insert the item in the proper place\n\tfunction insertSorted(arr, item, comparator) {\n\t  var idx = binarySearch(arr, item, comparator);\n\t  arr.splice(idx, 0, item);\n\t}\n\t\n\t// Turn a path as a flat array into a tree with a single branch.\n\t// If any should be stemmed from the beginning of the array, that's passed\n\t// in as the second argument\n\tfunction pathToTree(path, numStemmed) {\n\t  var root;\n\t  var leaf;\n\t  for (var i = numStemmed, len = path.length; i < len; i++) {\n\t    var node = path[i];\n\t    var currentLeaf = [node.id, node.opts, []];\n\t    if (leaf) {\n\t      leaf[2].push(currentLeaf);\n\t      leaf = currentLeaf;\n\t    } else {\n\t      root = leaf = currentLeaf;\n\t    }\n\t  }\n\t  return root;\n\t}\n\t\n\t// compare the IDs of two trees\n\tfunction compareTree(a, b) {\n\t  return a[0] < b[0] ? -1 : 1;\n\t}\n\t\n\t// Merge two trees together\n\t// The roots of tree1 and tree2 must be the same revision\n\tfunction mergeTree(in_tree1, in_tree2) {\n\t  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n\t  var conflicts = false;\n\t  while (queue.length > 0) {\n\t    var item = queue.pop();\n\t    var tree1 = item.tree1;\n\t    var tree2 = item.tree2;\n\t\n\t    if (tree1[1].status || tree2[1].status) {\n\t      tree1[1].status =\n\t        (tree1[1].status ===  'available' ||\n\t        tree2[1].status === 'available') ? 'available' : 'missing';\n\t    }\n\t\n\t    for (var i = 0; i < tree2[2].length; i++) {\n\t      if (!tree1[2][0]) {\n\t        conflicts = 'new_leaf';\n\t        tree1[2][0] = tree2[2][i];\n\t        continue;\n\t      }\n\t\n\t      var merged = false;\n\t      for (var j = 0; j < tree1[2].length; j++) {\n\t        if (tree1[2][j][0] === tree2[2][i][0]) {\n\t          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n\t          merged = true;\n\t        }\n\t      }\n\t      if (!merged) {\n\t        conflicts = 'new_branch';\n\t        insertSorted(tree1[2], tree2[2][i], compareTree);\n\t      }\n\t    }\n\t  }\n\t  return {conflicts: conflicts, tree: in_tree1};\n\t}\n\t\n\tfunction doMerge(tree, path, dontExpand) {\n\t  var restree = [];\n\t  var conflicts = false;\n\t  var merged = false;\n\t  var res;\n\t\n\t  if (!tree.length) {\n\t    return {tree: [path], conflicts: 'new_leaf'};\n\t  }\n\t\n\t  for (var i = 0, len = tree.length; i < len; i++) {\n\t    var branch = tree[i];\n\t    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n\t      // Paths start at the same position and have the same root, so they need\n\t      // merged\n\t      res = mergeTree(branch.ids, path.ids);\n\t      restree.push({pos: branch.pos, ids: res.tree});\n\t      conflicts = conflicts || res.conflicts;\n\t      merged = true;\n\t    } else if (dontExpand !== true) {\n\t      // The paths start at a different position, take the earliest path and\n\t      // traverse up until it as at the same point from root as the path we\n\t      // want to merge.  If the keys match we return the longer path with the\n\t      // other merged After stemming we dont want to expand the trees\n\t\n\t      var t1 = branch.pos < path.pos ? branch : path;\n\t      var t2 = branch.pos < path.pos ? path : branch;\n\t      var diff = t2.pos - t1.pos;\n\t\n\t      var candidateParents = [];\n\t\n\t      var trees = [];\n\t      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n\t      while (trees.length > 0) {\n\t        var item = trees.pop();\n\t        if (item.diff === 0) {\n\t          if (item.ids[0] === t2.ids[0]) {\n\t            candidateParents.push(item);\n\t          }\n\t          continue;\n\t        }\n\t        var elements = item.ids[2];\n\t        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n\t          trees.push({\n\t            ids: elements[j],\n\t            diff: item.diff - 1,\n\t            parent: item.ids,\n\t            parentIdx: j\n\t          });\n\t        }\n\t      }\n\t\n\t      var el = candidateParents[0];\n\t\n\t      if (!el) {\n\t        restree.push(branch);\n\t      } else {\n\t        res = mergeTree(el.ids, t2.ids);\n\t        el.parent[2][el.parentIdx] = res.tree;\n\t        restree.push({pos: t1.pos, ids: t1.ids});\n\t        conflicts = conflicts || res.conflicts;\n\t        merged = true;\n\t      }\n\t    } else {\n\t      restree.push(branch);\n\t    }\n\t  }\n\t\n\t  // We didnt find\n\t  if (!merged) {\n\t    restree.push(path);\n\t  }\n\t\n\t  restree.sort(sortByPos$1);\n\t\n\t  return {\n\t    tree: restree,\n\t    conflicts: conflicts || 'internal_node'\n\t  };\n\t}\n\t\n\t// To ensure we dont grow the revision tree infinitely, we stem old revisions\n\tfunction stem(tree, depth) {\n\t  // First we break out the tree into a complete list of root to leaf paths\n\t  var paths = rootToLeaf(tree);\n\t  var maybeStem = {};\n\t\n\t  var result;\n\t  for (var i = 0, len = paths.length; i < len; i++) {\n\t    // Then for each path, we cut off the start of the path based on the\n\t    // `depth` to stem to, and generate a new set of flat trees\n\t    var path = paths[i];\n\t    var stemmed = path.ids;\n\t    var numStemmed = Math.max(0, stemmed.length - depth);\n\t    var stemmedNode = {\n\t      pos: path.pos + numStemmed,\n\t      ids: pathToTree(stemmed, numStemmed)\n\t    };\n\t\n\t    for (var s = 0; s < numStemmed; s++) {\n\t      var rev = (path.pos + s) + '-' + stemmed[s].id;\n\t      maybeStem[rev] = true;\n\t    }\n\t\n\t    // Then we remerge all those flat trees together, ensuring that we dont\n\t    // connect trees that would go beyond the depth limit\n\t    if (result) {\n\t      result = doMerge(result, stemmedNode, true).tree;\n\t    } else {\n\t      result = [stemmedNode];\n\t    }\n\t  }\n\t\n\t  traverseRevTree(result, function (isLeaf, pos, revHash) {\n\t    // some revisions may have been removed in a branch but not in another\n\t    delete maybeStem[pos + '-' + revHash];\n\t  });\n\t\n\t  return {\n\t    tree: result,\n\t    revs: Object.keys(maybeStem)\n\t  };\n\t}\n\t\n\tfunction merge(tree, path, depth) {\n\t  var newTree = doMerge(tree, path);\n\t  var stemmed = stem(newTree.tree, depth);\n\t  return {\n\t    tree: stemmed.tree,\n\t    stemmedRevs: stemmed.revs,\n\t    conflicts: newTree.conflicts\n\t  };\n\t}\n\t\n\t// return true if a rev exists in the rev tree, false otherwise\n\tfunction revExists(revs, rev) {\n\t  var toVisit = revs.slice();\n\t  var splitRev = rev.split('-');\n\t  var targetPos = parseInt(splitRev[0], 10);\n\t  var targetId = splitRev[1];\n\t\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    if (node.pos === targetPos && node.ids[0] === targetId) {\n\t      return true;\n\t    }\n\t    var branches = node.ids[2];\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\tfunction getTrees(node) {\n\t  return node.ids;\n\t}\n\t\n\t// check if a specific revision of a doc has been deleted\n\t//  - metadata: the metadata object from the doc store\n\t//  - rev: (optional) the revision to check. defaults to winning revision\n\tfunction isDeleted(metadata, rev) {\n\t  if (!rev) {\n\t    rev = winningRev(metadata);\n\t  }\n\t  var id = rev.substring(rev.indexOf('-') + 1);\n\t  var toVisit = metadata.rev_tree.map(getTrees);\n\t\n\t  var tree;\n\t  while ((tree = toVisit.pop())) {\n\t    if (tree[0] === id) {\n\t      return !!tree[1].deleted;\n\t    }\n\t    toVisit = toVisit.concat(tree[2]);\n\t  }\n\t}\n\t\n\tfunction isLocalId(id) {\n\t  return (/^_local/).test(id);\n\t}\n\t\n\t// returns the current leaf node for a given revision\n\tfunction latest(rev, metadata) {\n\t  var toVisit = metadata.rev_tree.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var id = tree[0];\n\t    var opts = tree[1];\n\t    var branches = tree[2];\n\t    var isLeaf = branches.length === 0;\n\t\n\t    var history = node.history ? node.history.slice() : [];\n\t    history.push({id: id, pos: pos, opts: opts});\n\t\n\t    if (isLeaf) {\n\t      for (var i = 0, len = history.length; i < len; i++) {\n\t        var historyNode = history[i];\n\t        var historyRev = historyNode.pos + '-' + historyNode.id;\n\t\n\t        if (historyRev === rev) {\n\t          // return the rev of this leaf\n\t          return pos + '-' + id;\n\t        }\n\t      }\n\t    }\n\t\n\t    for (var j = 0, l = branches.length; j < l; j++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n\t}\n\t\n\tfunction evalFilter(input) {\n\t  return scopedEval('\"use strict\";\\nreturn ' + input + ';', {});\n\t}\n\t\n\tfunction evalView(input) {\n\t  var code = [\n\t    'return function(doc) {',\n\t    '  \"use strict\";',\n\t    '  var emitted = false;',\n\t    '  var emit = function (a, b) {',\n\t    '    emitted = true;',\n\t    '  };',\n\t    '  var view = ' + input + ';',\n\t    '  view(doc);',\n\t    '  if (emitted) {',\n\t    '    return true;',\n\t    '  }',\n\t    '};'\n\t  ].join('\\n');\n\t\n\t  return scopedEval(code, {});\n\t}\n\t\n\tinherits(Changes$2, events.EventEmitter);\n\t\n\tfunction tryCatchInChangeListener(self, change) {\n\t  // isolate try/catches to avoid V8 deoptimizations\n\t  try {\n\t    self.emit('change', change);\n\t  } catch (e) {\n\t    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n\t  }\n\t}\n\t\n\tfunction Changes$2(db, opts, callback) {\n\t  events.EventEmitter.call(this);\n\t  var self = this;\n\t  this.db = db;\n\t  opts = opts ? clone(opts) : {};\n\t  var complete = opts.complete = once(function (err, resp) {\n\t    if (err) {\n\t      if (listenerCount(self, 'error') > 0) {\n\t        self.emit('error', err);\n\t      }\n\t    } else {\n\t      self.emit('complete', resp);\n\t    }\n\t    self.removeAllListeners();\n\t    db.removeListener('destroyed', onDestroy);\n\t  });\n\t  if (callback) {\n\t    self.on('complete', function (resp) {\n\t      callback(null, resp);\n\t    });\n\t    self.on('error', callback);\n\t  }\n\t  function onDestroy() {\n\t    self.cancel();\n\t  }\n\t  db.once('destroyed', onDestroy);\n\t\n\t  opts.onChange = function (change) {\n\t    /* istanbul ignore if */\n\t    if (self.isCancelled) {\n\t      return;\n\t    }\n\t    tryCatchInChangeListener(self, change);\n\t  };\n\t\n\t  var promise = new PouchPromise$1(function (fulfill, reject) {\n\t    opts.complete = function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        fulfill(res);\n\t      }\n\t    };\n\t  });\n\t  self.once('cancel', function () {\n\t    db.removeListener('destroyed', onDestroy);\n\t    opts.complete(null, {status: 'cancelled'});\n\t  });\n\t  this.then = promise.then.bind(promise);\n\t  this['catch'] = promise['catch'].bind(promise);\n\t  this.then(function (result) {\n\t    complete(null, result);\n\t  }, complete);\n\t\n\t\n\t\n\t  if (!db.taskqueue.isReady) {\n\t    db.taskqueue.addTask(function (failed) {\n\t      if (failed) {\n\t        opts.complete(failed);\n\t      } else if (self.isCancelled) {\n\t        self.emit('cancel');\n\t      } else {\n\t        self.doChanges(opts);\n\t      }\n\t    });\n\t  } else {\n\t    self.doChanges(opts);\n\t  }\n\t}\n\tChanges$2.prototype.cancel = function () {\n\t  this.isCancelled = true;\n\t  if (this.db.taskqueue.isReady) {\n\t    this.emit('cancel');\n\t  }\n\t};\n\tfunction processChange(doc, metadata, opts) {\n\t  var changeList = [{rev: doc._rev}];\n\t  if (opts.style === 'all_docs') {\n\t    changeList = collectLeaves(metadata.rev_tree)\n\t    .map(function (x) { return {rev: x.rev}; });\n\t  }\n\t  var change = {\n\t    id: metadata.id,\n\t    changes: changeList,\n\t    doc: doc\n\t  };\n\t\n\t  if (isDeleted(metadata, doc._rev)) {\n\t    change.deleted = true;\n\t  }\n\t  if (opts.conflicts) {\n\t    change.doc._conflicts = collectConflicts(metadata);\n\t    if (!change.doc._conflicts.length) {\n\t      delete change.doc._conflicts;\n\t    }\n\t  }\n\t  return change;\n\t}\n\t\n\tChanges$2.prototype.doChanges = function (opts) {\n\t  var self = this;\n\t  var callback = opts.complete;\n\t\n\t  opts = clone(opts);\n\t  if ('live' in opts && !('continuous' in opts)) {\n\t    opts.continuous = opts.live;\n\t  }\n\t  opts.processChange = processChange;\n\t\n\t  if (opts.since === 'latest') {\n\t    opts.since = 'now';\n\t  }\n\t  if (!opts.since) {\n\t    opts.since = 0;\n\t  }\n\t  if (opts.since === 'now') {\n\t    this.db.info().then(function (info) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        callback(null, {status: 'cancelled'});\n\t        return;\n\t      }\n\t      opts.since = info.update_seq;\n\t      self.doChanges(opts);\n\t    }, callback);\n\t    return;\n\t  }\n\t\n\t\n\t  if (opts.view && !opts.filter) {\n\t    opts.filter = '_view';\n\t  }\n\t\n\t  if (opts.filter && typeof opts.filter === 'string') {\n\t    if (opts.filter === '_view') {\n\t      opts.view = normalizeDesignDocFunctionName(opts.view);\n\t    } else {\n\t      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n\t    }\n\t\n\t    if (this.db.type() !== 'http' && !opts.doc_ids) {\n\t      return this.filterChanges(opts);\n\t    }\n\t  }\n\t\n\t  if (!('descending' in opts)) {\n\t    opts.descending = false;\n\t  }\n\t\n\t  // 0 and 1 should return 1 document\n\t  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n\t  opts.complete = callback;\n\t  var newPromise = this.db._changes(opts);\n\t  /* istanbul ignore else */\n\t  if (newPromise && typeof newPromise.cancel === 'function') {\n\t    var cancel = self.cancel;\n\t    self.cancel = getArguments(function (args) {\n\t      newPromise.cancel();\n\t      cancel.apply(this, args);\n\t    });\n\t  }\n\t};\n\t\n\tChanges$2.prototype.filterChanges = function (opts) {\n\t  var self = this;\n\t  var callback = opts.complete;\n\t  if (opts.filter === '_view') {\n\t    if (!opts.view || typeof opts.view !== 'string') {\n\t      var err = createError(BAD_REQUEST,\n\t        '`view` filter parameter not found or invalid.');\n\t      return callback(err);\n\t    }\n\t    // fetch a view from a design doc, make it behave like a filter\n\t    var viewName = parseDesignDocFunctionName(opts.view);\n\t    this.db.get('_design/' + viewName[0], function (err, ddoc) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        return callback(null, {status: 'cancelled'});\n\t      }\n\t      /* istanbul ignore next */\n\t      if (err) {\n\t        return callback(generateErrorFromResponse(err));\n\t      }\n\t      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n\t        ddoc.views[viewName[1]].map;\n\t      if (!mapFun) {\n\t        return callback(createError(MISSING_DOC,\n\t          (ddoc.views ? 'missing json key: ' + viewName[1] :\n\t            'missing json key: views')));\n\t      }\n\t      opts.filter = evalView(mapFun);\n\t      self.doChanges(opts);\n\t    });\n\t  } else {\n\t    // fetch a filter from a design doc\n\t    var filterName = parseDesignDocFunctionName(opts.filter);\n\t    if (!filterName) {\n\t      return self.doChanges(opts);\n\t    }\n\t    this.db.get('_design/' + filterName[0], function (err, ddoc) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        return callback(null, {status: 'cancelled'});\n\t      }\n\t      /* istanbul ignore next */\n\t      if (err) {\n\t        return callback(generateErrorFromResponse(err));\n\t      }\n\t      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n\t      if (!filterFun) {\n\t        return callback(createError(MISSING_DOC,\n\t          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n\t            : 'missing json key: filters')));\n\t      }\n\t      opts.filter = evalFilter(filterFun);\n\t      self.doChanges(opts);\n\t    });\n\t  }\n\t};\n\t\n\t/*\n\t * A generic pouch adapter\n\t */\n\t\n\tfunction compare(left, right) {\n\t  return left < right ? -1 : left > right ? 1 : 0;\n\t}\n\t\n\t// Wrapper for functions that call the bulkdocs api with a single doc,\n\t// if the first result is an error, return an error\n\tfunction yankError(callback) {\n\t  return function (err, results) {\n\t    if (err || (results[0] && results[0].error)) {\n\t      callback(err || results[0]);\n\t    } else {\n\t      callback(null, results.length ? results[0]  : results);\n\t    }\n\t  };\n\t}\n\t\n\t// clean docs given to us by the user\n\tfunction cleanDocs(docs) {\n\t  for (var i = 0; i < docs.length; i++) {\n\t    var doc = docs[i];\n\t    if (doc._deleted) {\n\t      delete doc._attachments; // ignore atts for deleted docs\n\t    } else if (doc._attachments) {\n\t      // filter out extraneous keys from _attachments\n\t      var atts = Object.keys(doc._attachments);\n\t      for (var j = 0; j < atts.length; j++) {\n\t        var att = atts[j];\n\t        doc._attachments[att] = pick(doc._attachments[att],\n\t          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t// compare two docs, first by _id then by _rev\n\tfunction compareByIdThenRev(a, b) {\n\t  var idCompare = compare(a._id, b._id);\n\t  if (idCompare !== 0) {\n\t    return idCompare;\n\t  }\n\t  var aStart = a._revisions ? a._revisions.start : 0;\n\t  var bStart = b._revisions ? b._revisions.start : 0;\n\t  return compare(aStart, bStart);\n\t}\n\t\n\t// for every node in a revision tree computes its distance from the closest\n\t// leaf\n\tfunction computeHeight(revs) {\n\t  var height = {};\n\t  var edges = [];\n\t  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n\t    var rev = pos + \"-\" + id;\n\t    if (isLeaf) {\n\t      height[rev] = 0;\n\t    }\n\t    if (prnt !== undefined) {\n\t      edges.push({from: prnt, to: rev});\n\t    }\n\t    return rev;\n\t  });\n\t\n\t  edges.reverse();\n\t  edges.forEach(function (edge) {\n\t    if (height[edge.from] === undefined) {\n\t      height[edge.from] = 1 + height[edge.to];\n\t    } else {\n\t      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n\t    }\n\t  });\n\t  return height;\n\t}\n\t\n\tfunction allDocsKeysQuery(api, opts, callback) {\n\t  var keys =  ('limit' in opts) ?\n\t      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n\t      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n\t  if (opts.descending) {\n\t    keys.reverse();\n\t  }\n\t  if (!keys.length) {\n\t    return api._allDocs({limit: 0}, callback);\n\t  }\n\t  var finalResults = {\n\t    offset: opts.skip\n\t  };\n\t  return PouchPromise$1.all(keys.map(function (key) {\n\t    var subOpts = assign$1({key: key, deleted: 'ok'}, opts);\n\t    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n\t      delete subOpts[optKey];\n\t    });\n\t    return new PouchPromise$1(function (resolve, reject) {\n\t      api._allDocs(subOpts, function (err, res) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          return reject(err);\n\t        }\n\t        finalResults.total_rows = res.total_rows;\n\t        resolve(res.rows[0] || {key: key, error: 'not_found'});\n\t      });\n\t    });\n\t  })).then(function (results) {\n\t    finalResults.rows = results;\n\t    return finalResults;\n\t  });\n\t}\n\t\n\t// all compaction is done in a queue, to avoid attaching\n\t// too many listeners at once\n\tfunction doNextCompaction(self) {\n\t  var task = self._compactionQueue[0];\n\t  var opts = task.opts;\n\t  var callback = task.callback;\n\t  self.get('_local/compaction').catch(function () {\n\t    return false;\n\t  }).then(function (doc) {\n\t    if (doc && doc.last_seq) {\n\t      opts.last_seq = doc.last_seq;\n\t    }\n\t    self._compact(opts, function (err, res) {\n\t      /* istanbul ignore if */\n\t      if (err) {\n\t        callback(err);\n\t      } else {\n\t        callback(null, res);\n\t      }\n\t      nextTick(function () {\n\t        self._compactionQueue.shift();\n\t        if (self._compactionQueue.length) {\n\t          doNextCompaction(self);\n\t        }\n\t      });\n\t    });\n\t  });\n\t}\n\t\n\tfunction attachmentNameError(name) {\n\t  if (name.charAt(0) === '_') {\n\t    return name + 'is not a valid attachment name, attachment ' +\n\t      'names cannot start with \\'_\\'';\n\t  }\n\t  return false;\n\t}\n\t\n\tinherits(AbstractPouchDB, events.EventEmitter);\n\t\n\tfunction AbstractPouchDB() {\n\t  events.EventEmitter.call(this);\n\t}\n\t\n\tAbstractPouchDB.prototype.post =\n\t  adapterFun('post', function (doc, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof doc !== 'object' || Array.isArray(doc)) {\n\t    return callback(createError(NOT_AN_OBJECT));\n\t  }\n\t  this.bulkDocs({docs: [doc]}, opts, yankError(callback));\n\t});\n\t\n\tAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n\t  if (typeof opts === 'function') {\n\t    cb = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof doc !== 'object' || Array.isArray(doc)) {\n\t    return cb(createError(NOT_AN_OBJECT));\n\t  }\n\t  invalidIdError(doc._id);\n\t  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n\t    if (doc._deleted) {\n\t      return this._removeLocal(doc, cb);\n\t    } else {\n\t      return this._putLocal(doc, cb);\n\t    }\n\t  }\n\t  if (typeof this._put === 'function' && opts.new_edits !== false) {\n\t    this._put(doc, opts, cb);\n\t  } else {\n\t    this.bulkDocs({docs: [doc]}, opts, yankError(cb));\n\t  }\n\t});\n\t\n\tAbstractPouchDB.prototype.putAttachment =\n\t  adapterFun('putAttachment', function (docId, attachmentId, rev,\n\t                                              blob, type) {\n\t  var api = this;\n\t  if (typeof type === 'function') {\n\t    type = blob;\n\t    blob = rev;\n\t    rev = null;\n\t  }\n\t  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n\t  /* istanbul ignore if */\n\t  if (typeof type === 'undefined') {\n\t    type = blob;\n\t    blob = rev;\n\t    rev = null;\n\t  }\n\t  if (!type) {\n\t    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n\t  }\n\t\n\t  function createAttachment(doc) {\n\t    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n\t    doc._attachments = doc._attachments || {};\n\t    doc._attachments[attachmentId] = {\n\t      content_type: type,\n\t      data: blob,\n\t      revpos: ++prevrevpos\n\t    };\n\t    return api.put(doc);\n\t  }\n\t\n\t  return api.get(docId).then(function (doc) {\n\t    if (doc._rev !== rev) {\n\t      throw createError(REV_CONFLICT);\n\t    }\n\t\n\t    return createAttachment(doc);\n\t  }, function (err) {\n\t     // create new doc\n\t    /* istanbul ignore else */\n\t    if (err.reason === MISSING_DOC.message) {\n\t      return createAttachment({_id: docId});\n\t    } else {\n\t      throw err;\n\t    }\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.removeAttachment =\n\t  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n\t                                                 callback) {\n\t  var self = this;\n\t  self.get(docId, function (err, obj) {\n\t    /* istanbul ignore if */\n\t    if (err) {\n\t      callback(err);\n\t      return;\n\t    }\n\t    if (obj._rev !== rev) {\n\t      callback(createError(REV_CONFLICT));\n\t      return;\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!obj._attachments) {\n\t      return callback();\n\t    }\n\t    delete obj._attachments[attachmentId];\n\t    if (Object.keys(obj._attachments).length === 0) {\n\t      delete obj._attachments;\n\t    }\n\t    self.put(obj, callback);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.remove =\n\t  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n\t  var doc;\n\t  if (typeof optsOrRev === 'string') {\n\t    // id, rev, opts, callback style\n\t    doc = {\n\t      _id: docOrId,\n\t      _rev: optsOrRev\n\t    };\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t  } else {\n\t    // doc, opts, callback style\n\t    doc = docOrId;\n\t    if (typeof optsOrRev === 'function') {\n\t      callback = optsOrRev;\n\t      opts = {};\n\t    } else {\n\t      callback = opts;\n\t      opts = optsOrRev;\n\t    }\n\t  }\n\t  opts = opts || {};\n\t  opts.was_delete = true;\n\t  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n\t  newDoc._deleted = true;\n\t  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n\t    return this._removeLocal(doc, callback);\n\t  }\n\t  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback));\n\t});\n\t\n\tAbstractPouchDB.prototype.revsDiff =\n\t  adapterFun('revsDiff', function (req, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  var ids = Object.keys(req);\n\t\n\t  if (!ids.length) {\n\t    return callback(null, {});\n\t  }\n\t\n\t  var count = 0;\n\t  var missing = new ExportedMap();\n\t\n\t  function addToMissing(id, revId) {\n\t    if (!missing.has(id)) {\n\t      missing.set(id, {missing: []});\n\t    }\n\t    missing.get(id).missing.push(revId);\n\t  }\n\t\n\t  function processDoc(id, rev_tree) {\n\t    // Is this fast enough? Maybe we should switch to a set simulated by a map\n\t    var missingForId = req[id].slice(0);\n\t    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n\t      opts) {\n\t        var rev = pos + '-' + revHash;\n\t        var idx = missingForId.indexOf(rev);\n\t        if (idx === -1) {\n\t          return;\n\t        }\n\t\n\t        missingForId.splice(idx, 1);\n\t        /* istanbul ignore if */\n\t        if (opts.status !== 'available') {\n\t          addToMissing(id, rev);\n\t        }\n\t      });\n\t\n\t    // Traversing the tree is synchronous, so now `missingForId` contains\n\t    // revisions that were not found in the tree\n\t    missingForId.forEach(function (rev) {\n\t      addToMissing(id, rev);\n\t    });\n\t  }\n\t\n\t  ids.map(function (id) {\n\t    this._getRevisionTree(id, function (err, rev_tree) {\n\t      if (err && err.status === 404 && err.message === 'missing') {\n\t        missing.set(id, {missing: req[id]});\n\t      } else if (err) {\n\t        /* istanbul ignore next */\n\t        return callback(err);\n\t      } else {\n\t        processDoc(id, rev_tree);\n\t      }\n\t\n\t      if (++count === ids.length) {\n\t        // convert LazyMap to object\n\t        var missingObj = {};\n\t        missing.forEach(function (value, key) {\n\t          missingObj[key] = value;\n\t        });\n\t        return callback(null, missingObj);\n\t      }\n\t    });\n\t  }, this);\n\t});\n\t\n\t// _bulk_get API for faster replication, as described in\n\t// https://github.com/apache/couchdb-chttpd/pull/33\n\t// At the \"abstract\" level, it will just run multiple get()s in\n\t// parallel, because this isn't much of a performance cost\n\t// for local databases (except the cost of multiple transactions, which is\n\t// small). The http adapter overrides this in order\n\t// to do a more efficient single HTTP request.\n\tAbstractPouchDB.prototype.bulkGet =\n\t  adapterFun('bulkGet', function (opts, callback) {\n\t  bulkGet(this, opts, callback);\n\t});\n\t\n\t// compact one document and fire callback\n\t// by compacting we mean removing all revisions which\n\t// are further from the leaf in revision tree than max_height\n\tAbstractPouchDB.prototype.compactDocument =\n\t  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n\t  var self = this;\n\t  this._getRevisionTree(docId, function (err, revTree) {\n\t    /* istanbul ignore if */\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    var height = computeHeight(revTree);\n\t    var candidates = [];\n\t    var revs = [];\n\t    Object.keys(height).forEach(function (rev) {\n\t      if (height[rev] > maxHeight) {\n\t        candidates.push(rev);\n\t      }\n\t    });\n\t\n\t    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n\t      var rev = pos + '-' + revHash;\n\t      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n\t        revs.push(rev);\n\t      }\n\t    });\n\t    self._doCompaction(docId, revs, callback);\n\t  });\n\t});\n\t\n\t// compact the whole database using single document\n\t// compaction\n\tAbstractPouchDB.prototype.compact =\n\t  adapterFun('compact', function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  var self = this;\n\t  opts = opts || {};\n\t\n\t  self._compactionQueue = self._compactionQueue || [];\n\t  self._compactionQueue.push({opts: opts, callback: callback});\n\t  if (self._compactionQueue.length === 1) {\n\t    doNextCompaction(self);\n\t  }\n\t});\n\tAbstractPouchDB.prototype._compact = function (opts, callback) {\n\t  var self = this;\n\t  var changesOpts = {\n\t    return_docs: false,\n\t    last_seq: opts.last_seq || 0\n\t  };\n\t  var promises = [];\n\t\n\t  function onChange(row) {\n\t    promises.push(self.compactDocument(row.id, 0));\n\t  }\n\t  function onComplete(resp) {\n\t    var lastSeq = resp.last_seq;\n\t    PouchPromise$1.all(promises).then(function () {\n\t      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n\t        if (!doc.last_seq || doc.last_seq < lastSeq) {\n\t          doc.last_seq = lastSeq;\n\t          return doc;\n\t        }\n\t        return false; // somebody else got here first, don't update\n\t      });\n\t    }).then(function () {\n\t      callback(null, {ok: true});\n\t    }).catch(callback);\n\t  }\n\t  self.changes(changesOpts)\n\t    .on('change', onChange)\n\t    .on('complete', onComplete)\n\t    .on('error', callback);\n\t};\n\t\n\t/* Begin api wrappers. Specific functionality to storage belongs in the\n\t   _[method] */\n\tAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n\t  if (typeof opts === 'function') {\n\t    cb = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof id !== 'string') {\n\t    return cb(createError(INVALID_ID));\n\t  }\n\t  if (isLocalId(id) && typeof this._getLocal === 'function') {\n\t    return this._getLocal(id, cb);\n\t  }\n\t  var leaves = [], self = this;\n\t\n\t  function finishOpenRevs() {\n\t    var result = [];\n\t    var count = leaves.length;\n\t    /* istanbul ignore if */\n\t    if (!count) {\n\t      return cb(null, result);\n\t    }\n\t\n\t    // order with open_revs is unspecified\n\t    leaves.forEach(function (leaf) {\n\t      self.get(id, {\n\t        rev: leaf,\n\t        revs: opts.revs,\n\t        latest: opts.latest,\n\t        attachments: opts.attachments\n\t      }, function (err, doc) {\n\t        if (!err) {\n\t          // using latest=true can produce duplicates\n\t          var existing;\n\t          for (var i = 0, l = result.length; i < l; i++) {\n\t            if (result[i].ok && result[i].ok._rev === doc._rev) {\n\t              existing = true;\n\t              break;\n\t            }\n\t          }\n\t          if (!existing) {\n\t            result.push({ok: doc});\n\t          }\n\t        } else {\n\t          result.push({missing: leaf});\n\t        }\n\t        count--;\n\t        if (!count) {\n\t          cb(null, result);\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  if (opts.open_revs) {\n\t    if (opts.open_revs === \"all\") {\n\t      this._getRevisionTree(id, function (err, rev_tree) {\n\t        if (err) {\n\t          return cb(err);\n\t        }\n\t        leaves = collectLeaves(rev_tree).map(function (leaf) {\n\t          return leaf.rev;\n\t        });\n\t        finishOpenRevs();\n\t      });\n\t    } else {\n\t      if (Array.isArray(opts.open_revs)) {\n\t        leaves = opts.open_revs;\n\t        for (var i = 0; i < leaves.length; i++) {\n\t          var l = leaves[i];\n\t          // looks like it's the only thing couchdb checks\n\t          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n\t            return cb(createError(INVALID_REV));\n\t          }\n\t        }\n\t        finishOpenRevs();\n\t      } else {\n\t        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n\t      }\n\t    }\n\t    return; // open_revs does not like other options\n\t  }\n\t\n\t  return this._get(id, opts, function (err, result) {\n\t    if (err) {\n\t      return cb(err);\n\t    }\n\t\n\t    var doc = result.doc;\n\t    var metadata = result.metadata;\n\t    var ctx = result.ctx;\n\t\n\t    if (opts.conflicts) {\n\t      var conflicts = collectConflicts(metadata);\n\t      if (conflicts.length) {\n\t        doc._conflicts = conflicts;\n\t      }\n\t    }\n\t\n\t    if (isDeleted(metadata, doc._rev)) {\n\t      doc._deleted = true;\n\t    }\n\t\n\t    if (opts.revs || opts.revs_info) {\n\t      var splittedRev = doc._rev.split('-');\n\t      var revNo       = parseInt(splittedRev[0], 10);\n\t      var revHash     = splittedRev[1];\n\t\n\t      var paths = rootToLeaf(metadata.rev_tree);\n\t      var path = null;\n\t\n\t      for (var i = 0; i < paths.length; i++) {\n\t        var currentPath = paths[i];\n\t        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n\t          .indexOf(revHash);\n\t        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\t\n\t        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n\t          path = currentPath;\n\t        }\n\t      }\n\t\n\t      var indexOfRev = path.ids.map(function (x) { return x.id; })\n\t        .indexOf(doc._rev.split('-')[1]) + 1;\n\t      var howMany = path.ids.length - indexOfRev;\n\t      path.ids.splice(indexOfRev, howMany);\n\t      path.ids.reverse();\n\t\n\t      if (opts.revs) {\n\t        doc._revisions = {\n\t          start: (path.pos + path.ids.length) - 1,\n\t          ids: path.ids.map(function (rev) {\n\t            return rev.id;\n\t          })\n\t        };\n\t      }\n\t      if (opts.revs_info) {\n\t        var pos =  path.pos + path.ids.length;\n\t        doc._revs_info = path.ids.map(function (rev) {\n\t          pos--;\n\t          return {\n\t            rev: pos + '-' + rev.id,\n\t            status: rev.opts.status\n\t          };\n\t        });\n\t      }\n\t    }\n\t\n\t    if (opts.attachments && doc._attachments) {\n\t      var attachments = doc._attachments;\n\t      var count = Object.keys(attachments).length;\n\t      if (count === 0) {\n\t        return cb(null, doc);\n\t      }\n\t      Object.keys(attachments).forEach(function (key) {\n\t        this._getAttachment(doc._id, key, attachments[key], {\n\t          // Previously the revision handling was done in adapter.js\n\t          // getAttachment, however since idb-next doesnt we need to\n\t          // pass the rev through\n\t          rev: doc._rev,\n\t          binary: opts.binary,\n\t          ctx: ctx\n\t        }, function (err, data) {\n\t          var att = doc._attachments[key];\n\t          att.data = data;\n\t          delete att.stub;\n\t          delete att.length;\n\t          if (!--count) {\n\t            cb(null, doc);\n\t          }\n\t        });\n\t      }, self);\n\t    } else {\n\t      if (doc._attachments) {\n\t        for (var key in doc._attachments) {\n\t          /* istanbul ignore else */\n\t          if (doc._attachments.hasOwnProperty(key)) {\n\t            doc._attachments[key].stub = true;\n\t          }\n\t        }\n\t      }\n\t      cb(null, doc);\n\t    }\n\t  });\n\t});\n\t\n\t// TODO: I dont like this, it forces an extra read for every\n\t// attachment read and enforces a confusing api between\n\t// adapter.js and the adapter implementation\n\tAbstractPouchDB.prototype.getAttachment =\n\t  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n\t  var self = this;\n\t  if (opts instanceof Function) {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  this._get(docId, opts, function (err, res) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n\t      opts.ctx = res.ctx;\n\t      opts.binary = true;\n\t      self._getAttachment(docId, attachmentId,\n\t                          res.doc._attachments[attachmentId], opts, callback);\n\t    } else {\n\t      return callback(createError(MISSING_DOC));\n\t    }\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.allDocs =\n\t  adapterFun('allDocs', function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n\t  if (opts.start_key) {\n\t    opts.startkey = opts.start_key;\n\t  }\n\t  if (opts.end_key) {\n\t    opts.endkey = opts.end_key;\n\t  }\n\t  if ('keys' in opts) {\n\t    if (!Array.isArray(opts.keys)) {\n\t      return callback(new TypeError('options.keys must be an array'));\n\t    }\n\t    var incompatibleOpt =\n\t      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n\t      return incompatibleOpt in opts;\n\t    })[0];\n\t    if (incompatibleOpt) {\n\t      callback(createError(QUERY_PARSE_ERROR,\n\t        'Query parameter `' + incompatibleOpt +\n\t        '` is not compatible with multi-get'\n\t      ));\n\t      return;\n\t    }\n\t    if (this.type() !== 'http') {\n\t      return allDocsKeysQuery(this, opts, callback);\n\t    }\n\t  }\n\t\n\t  return this._allDocs(opts, callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.changes = function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return new Changes$2(this, opts, callback);\n\t};\n\t\n\tAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n\t  this._closed = true;\n\t  this.emit('closed');\n\t  return this._close(callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n\t  var self = this;\n\t  this._info(function (err, info) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    // assume we know better than the adapter, unless it informs us\n\t    info.db_name = info.db_name || self.name;\n\t    info.auto_compaction = !!(self.auto_compaction && self.type() !== 'http');\n\t    info.adapter = self.type();\n\t    callback(null, info);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n\t  return this._id(callback);\n\t});\n\t\n\t/* istanbul ignore next */\n\tAbstractPouchDB.prototype.type = function () {\n\t  return (typeof this._type === 'function') ? this._type() : this.adapter;\n\t};\n\t\n\tAbstractPouchDB.prototype.bulkDocs =\n\t  adapterFun('bulkDocs', function (req, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  if (Array.isArray(req)) {\n\t    req = {\n\t      docs: req\n\t    };\n\t  }\n\t\n\t  if (!req || !req.docs || !Array.isArray(req.docs)) {\n\t    return callback(createError(MISSING_BULK_DOCS));\n\t  }\n\t\n\t  for (var i = 0; i < req.docs.length; ++i) {\n\t    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n\t      return callback(createError(NOT_AN_OBJECT));\n\t    }\n\t  }\n\t\n\t  var attachmentError;\n\t  req.docs.forEach(function (doc) {\n\t    if (doc._attachments) {\n\t      Object.keys(doc._attachments).forEach(function (name) {\n\t        attachmentError = attachmentError || attachmentNameError(name);\n\t        if (!doc._attachments[name].content_type) {\n\t          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n\t        }\n\t      });\n\t    }\n\t  });\n\t\n\t  if (attachmentError) {\n\t    return callback(createError(BAD_REQUEST, attachmentError));\n\t  }\n\t\n\t  if (!('new_edits' in opts)) {\n\t    if ('new_edits' in req) {\n\t      opts.new_edits = req.new_edits;\n\t    } else {\n\t      opts.new_edits = true;\n\t    }\n\t  }\n\t\n\t  var adapter = this;\n\t  if (!opts.new_edits && adapter.type() !== 'http') {\n\t    // ensure revisions of the same doc are sorted, so that\n\t    // the local adapter processes them correctly (#2935)\n\t    req.docs.sort(compareByIdThenRev);\n\t  }\n\t\n\t  cleanDocs(req.docs);\n\t\n\t  // in the case of conflicts, we want to return the _ids to the user\n\t  // however, the underlying adapter may destroy the docs array, so\n\t  // create a copy here\n\t  var ids = req.docs.map(function (doc) {\n\t    return doc._id;\n\t  });\n\t\n\t  return this._bulkDocs(req, opts, function (err, res) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    if (!opts.new_edits) {\n\t      // this is what couch does when new_edits is false\n\t      res = res.filter(function (x) {\n\t        return x.error;\n\t      });\n\t    }\n\t    // add ids for error/conflict responses (not required for CouchDB)\n\t    if (adapter.type() !== 'http') {\n\t      for (var i = 0, l = res.length; i < l; i++) {\n\t        res[i].id = res[i].id || ids[i];\n\t      }\n\t    }\n\t\n\t    callback(null, res);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.registerDependentDatabase =\n\t  adapterFun('registerDependentDatabase', function (dependentDb,\n\t                                                          callback) {\n\t  var depDB = new this.constructor(dependentDb, this.__opts);\n\t\n\t  function diffFun(doc) {\n\t    doc.dependentDbs = doc.dependentDbs || {};\n\t    if (doc.dependentDbs[dependentDb]) {\n\t      return false; // no update required\n\t    }\n\t    doc.dependentDbs[dependentDb] = true;\n\t    return doc;\n\t  }\n\t  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n\t    .then(function () {\n\t      callback(null, {db: depDB});\n\t    }).catch(callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.destroy =\n\t  adapterFun('destroy', function (opts, callback) {\n\t\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  var self = this;\n\t  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\t\n\t  function destroyDb() {\n\t    // call destroy method of the particular adaptor\n\t    self._destroy(opts, function (err, resp) {\n\t      if (err) {\n\t        return callback(err);\n\t      }\n\t      self._destroyed = true;\n\t      self.emit('destroyed');\n\t      callback(null, resp || { 'ok': true });\n\t    });\n\t  }\n\t\n\t  if (self.type() === 'http') {\n\t    // no need to check for dependent DBs if it's a remote DB\n\t    return destroyDb();\n\t  }\n\t\n\t  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n\t    if (err) {\n\t      /* istanbul ignore if */\n\t      if (err.status !== 404) {\n\t        return callback(err);\n\t      } else { // no dependencies\n\t        return destroyDb();\n\t      }\n\t    }\n\t    var dependentDbs = localDoc.dependentDbs;\n\t    var PouchDB = self.constructor;\n\t    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n\t      // use_prefix is only false in the browser\n\t      /* istanbul ignore next */\n\t      var trueName = usePrefix ?\n\t        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n\t      return new PouchDB(trueName, self.__opts).destroy();\n\t    });\n\t    PouchPromise$1.all(deletedMap).then(destroyDb, callback);\n\t  });\n\t});\n\t\n\tfunction TaskQueue$1() {\n\t  this.isReady = false;\n\t  this.failed = false;\n\t  this.queue = [];\n\t}\n\t\n\tTaskQueue$1.prototype.execute = function () {\n\t  var fun;\n\t  if (this.failed) {\n\t    while ((fun = this.queue.shift())) {\n\t      fun(this.failed);\n\t    }\n\t  } else {\n\t    while ((fun = this.queue.shift())) {\n\t      fun();\n\t    }\n\t  }\n\t};\n\t\n\tTaskQueue$1.prototype.fail = function (err) {\n\t  this.failed = err;\n\t  this.execute();\n\t};\n\t\n\tTaskQueue$1.prototype.ready = function (db) {\n\t  this.isReady = true;\n\t  this.db = db;\n\t  this.execute();\n\t};\n\t\n\tTaskQueue$1.prototype.addTask = function (fun) {\n\t  this.queue.push(fun);\n\t  if (this.failed) {\n\t    this.execute();\n\t  }\n\t};\n\t\n\tfunction parseAdapter(name, opts) {\n\t  var match = name.match(/([a-z\\-]*):\\/\\/(.*)/);\n\t  if (match) {\n\t    // the http adapter expects the fully qualified name\n\t    return {\n\t      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n\t      adapter: match[1]\n\t    };\n\t  }\n\t\n\t  var adapters = PouchDB$5.adapters;\n\t  var preferredAdapters = PouchDB$5.preferredAdapters;\n\t  var prefix = PouchDB$5.prefix;\n\t  var adapterName = opts.adapter;\n\t\n\t  if (!adapterName) { // automatically determine adapter\n\t    for (var i = 0; i < preferredAdapters.length; ++i) {\n\t      adapterName = preferredAdapters[i];\n\t      // check for browsers that have been upgraded from websql-only to websql+idb\n\t      /* istanbul ignore if */\n\t      if (adapterName === 'idb' && 'websql' in adapters &&\n\t          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n\t        // log it, because this can be confusing during development\n\t        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n\t          ' avoid data loss, because it was already opened with WebSQL.');\n\t        continue; // keep using websql to avoid user data loss\n\t      }\n\t      break;\n\t    }\n\t  }\n\t\n\t  var adapter = adapters[adapterName];\n\t\n\t  // if adapter is invalid, then an error will be thrown later\n\t  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n\t    adapter.use_prefix : true;\n\t\n\t  return {\n\t    name: usePrefix ? (prefix + name) : name,\n\t    adapter: adapterName\n\t  };\n\t}\n\t\n\t// OK, so here's the deal. Consider this code:\n\t//     var db1 = new PouchDB('foo');\n\t//     var db2 = new PouchDB('foo');\n\t//     db1.destroy();\n\t// ^ these two both need to emit 'destroyed' events,\n\t// as well as the PouchDB constructor itself.\n\t// So we have one db object (whichever one got destroy() called on it)\n\t// responsible for emitting the initial event, which then gets emitted\n\t// by the constructor, which then broadcasts it to any other dbs\n\t// that may have been created with the same name.\n\tfunction prepareForDestruction(self) {\n\t\n\t  var destructionListeners = self.constructor._destructionListeners;\n\t\n\t  function onDestroyed() {\n\t    self.removeListener('closed', onClosed);\n\t    self.constructor.emit('destroyed', self.name);\n\t  }\n\t\n\t  function onConstructorDestroyed() {\n\t    self.removeListener('destroyed', onDestroyed);\n\t    self.removeListener('closed', onClosed);\n\t    self.emit('destroyed');\n\t  }\n\t\n\t  function onClosed() {\n\t    self.removeListener('destroyed', onDestroyed);\n\t    destructionListeners.delete(self.name);\n\t  }\n\t\n\t  self.once('destroyed', onDestroyed);\n\t  self.once('closed', onClosed);\n\t\n\t  // in setup.js, the constructor is primed to listen for destroy events\n\t  if (!destructionListeners.has(self.name)) {\n\t    destructionListeners.set(self.name, []);\n\t  }\n\t  destructionListeners.get(self.name).push(onConstructorDestroyed);\n\t}\n\t\n\tinherits(PouchDB$5, AbstractPouchDB);\n\tfunction PouchDB$5(name, opts) {\n\t  // In Node our test suite only tests this for PouchAlt unfortunately\n\t  /* istanbul ignore if */\n\t  if (!(this instanceof PouchDB$5)) {\n\t    return new PouchDB$5(name, opts);\n\t  }\n\t\n\t  var self = this;\n\t  opts = opts || {};\n\t\n\t  if (name && typeof name === 'object') {\n\t    opts = name;\n\t    name = opts.name;\n\t    delete opts.name;\n\t  }\n\t\n\t  this.__opts = opts = clone(opts);\n\t\n\t  self.auto_compaction = opts.auto_compaction;\n\t  self.prefix = PouchDB$5.prefix;\n\t\n\t  if (typeof name !== 'string') {\n\t    throw new Error('Missing/invalid DB name');\n\t  }\n\t\n\t  var prefixedName = (opts.prefix || '') + name;\n\t  var backend = parseAdapter(prefixedName, opts);\n\t\n\t  opts.name = backend.name;\n\t  opts.adapter = opts.adapter || backend.adapter;\n\t\n\t  self.name = name;\n\t  self._adapter = opts.adapter;\n\t  debug('pouchdb:adapter')('Picked adapter: ' + opts.adapter);\n\t\n\t  if (!PouchDB$5.adapters[opts.adapter] ||\n\t      !PouchDB$5.adapters[opts.adapter].valid()) {\n\t    throw new Error('Invalid Adapter: ' + opts.adapter);\n\t  }\n\t\n\t  AbstractPouchDB.call(self);\n\t  self.taskqueue = new TaskQueue$1();\n\t\n\t  self.adapter = opts.adapter;\n\t\n\t  PouchDB$5.adapters[opts.adapter].call(self, opts, function (err) {\n\t    if (err) {\n\t      return self.taskqueue.fail(err);\n\t    }\n\t    prepareForDestruction(self);\n\t\n\t    self.emit('created', self);\n\t    PouchDB$5.emit('created', self.name);\n\t    self.taskqueue.ready(self);\n\t  });\n\t\n\t}\n\t\n\tPouchDB$5.debug = debug;\n\t\n\tPouchDB$5.adapters = {};\n\tPouchDB$5.preferredAdapters = [];\n\t\n\tPouchDB$5.prefix = '_pouch_';\n\t\n\tvar eventEmitter = new events.EventEmitter();\n\t\n\tfunction setUpEventEmitter(Pouch) {\n\t  Object.keys(events.EventEmitter.prototype).forEach(function (key) {\n\t    if (typeof events.EventEmitter.prototype[key] === 'function') {\n\t      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n\t    }\n\t  });\n\t\n\t  // these are created in constructor.js, and allow us to notify each DB with\n\t  // the same name that it was destroyed, via the constructor object\n\t  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\t  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n\t    destructListeners.get(name).forEach(function (callback) {\n\t      callback();\n\t    });\n\t    destructListeners.delete(name);\n\t  });\n\t}\n\t\n\tsetUpEventEmitter(PouchDB$5);\n\t\n\tPouchDB$5.adapter = function (id, obj, addToPreferredAdapters) {\n\t  /* istanbul ignore else */\n\t  if (obj.valid()) {\n\t    PouchDB$5.adapters[id] = obj;\n\t    if (addToPreferredAdapters) {\n\t      PouchDB$5.preferredAdapters.push(id);\n\t    }\n\t  }\n\t};\n\t\n\tPouchDB$5.plugin = function (obj) {\n\t  if (typeof obj === 'function') { // function style for plugins\n\t    obj(PouchDB$5);\n\t  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0){\n\t    throw new Error('Invalid plugin: got \\\"' + obj + '\\\", expected an object or a function');\n\t  } else {\n\t    Object.keys(obj).forEach(function (id) { // object style for plugins\n\t      PouchDB$5.prototype[id] = obj[id];\n\t    });\n\t  }\n\t  return PouchDB$5;\n\t};\n\t\n\tPouchDB$5.defaults = function (defaultOpts) {\n\t  function PouchAlt(name, opts) {\n\t    if (!(this instanceof PouchAlt)) {\n\t      return new PouchAlt(name, opts);\n\t    }\n\t\n\t    opts = opts || {};\n\t\n\t    if (name && typeof name === 'object') {\n\t      opts = name;\n\t      name = opts.name;\n\t      delete opts.name;\n\t    }\n\t\n\t    opts = assign$1({}, PouchAlt.__defaults, opts);\n\t    PouchDB$5.call(this, name, opts);\n\t  }\n\t\n\t  inherits(PouchAlt, PouchDB$5);\n\t\n\t  PouchAlt.preferredAdapters = PouchDB$5.preferredAdapters.slice();\n\t  Object.keys(PouchDB$5).forEach(function (key) {\n\t    if (!(key in PouchAlt)) {\n\t      PouchAlt[key] = PouchDB$5[key];\n\t    }\n\t  });\n\t\n\t  // make default options transitive\n\t  // https://github.com/pouchdb/pouchdb/issues/5922\n\t  PouchAlt.__defaults = assign$1({}, this.__defaults, defaultOpts);\n\t\n\t  return PouchAlt;\n\t};\n\t\n\t// managed automatically by set-version.js\n\tvar version = \"6.1.1\";\n\t\n\tPouchDB$5.version = version;\n\t\n\tfunction toObject(array) {\n\t  return array.reduce(function (obj, item) {\n\t    obj[item] = true;\n\t    return obj;\n\t  }, {});\n\t}\n\t// List of top level reserved words for doc\n\tvar reservedWords = toObject([\n\t  '_id',\n\t  '_rev',\n\t  '_attachments',\n\t  '_deleted',\n\t  '_revisions',\n\t  '_revs_info',\n\t  '_conflicts',\n\t  '_deleted_conflicts',\n\t  '_local_seq',\n\t  '_rev_tree',\n\t  //replication documents\n\t  '_replication_id',\n\t  '_replication_state',\n\t  '_replication_state_time',\n\t  '_replication_state_reason',\n\t  '_replication_stats',\n\t  // Specific to Couchbase Sync Gateway\n\t  '_removed'\n\t]);\n\t\n\t// List of reserved words that should end up the document\n\tvar dataWords = toObject([\n\t  '_attachments',\n\t  //replication documents\n\t  '_replication_id',\n\t  '_replication_state',\n\t  '_replication_state_time',\n\t  '_replication_state_reason',\n\t  '_replication_stats'\n\t]);\n\t\n\tfunction parseRevisionInfo(rev) {\n\t  if (!/^\\d+\\-./.test(rev)) {\n\t    return createError(INVALID_REV);\n\t  }\n\t  var idx = rev.indexOf('-');\n\t  var left = rev.substring(0, idx);\n\t  var right = rev.substring(idx + 1);\n\t  return {\n\t    prefix: parseInt(left, 10),\n\t    id: right\n\t  };\n\t}\n\t\n\tfunction makeRevTreeFromRevisions(revisions, opts) {\n\t  var pos = revisions.start - revisions.ids.length + 1;\n\t\n\t  var revisionIds = revisions.ids;\n\t  var ids = [revisionIds[0], opts, []];\n\t\n\t  for (var i = 1, len = revisionIds.length; i < len; i++) {\n\t    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n\t  }\n\t\n\t  return [{\n\t    pos: pos,\n\t    ids: ids\n\t  }];\n\t}\n\t\n\t// Preprocess documents, parse their revisions, assign an id and a\n\t// revision for new writes that are missing them, etc\n\tfunction parseDoc(doc, newEdits) {\n\t\n\t  var nRevNum;\n\t  var newRevId;\n\t  var revInfo;\n\t  var opts = {status: 'available'};\n\t  if (doc._deleted) {\n\t    opts.deleted = true;\n\t  }\n\t\n\t  if (newEdits) {\n\t    if (!doc._id) {\n\t      doc._id = uuid();\n\t    }\n\t    newRevId = uuid(32, 16).toLowerCase();\n\t    if (doc._rev) {\n\t      revInfo = parseRevisionInfo(doc._rev);\n\t      if (revInfo.error) {\n\t        return revInfo;\n\t      }\n\t      doc._rev_tree = [{\n\t        pos: revInfo.prefix,\n\t        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n\t      }];\n\t      nRevNum = revInfo.prefix + 1;\n\t    } else {\n\t      doc._rev_tree = [{\n\t        pos: 1,\n\t        ids : [newRevId, opts, []]\n\t      }];\n\t      nRevNum = 1;\n\t    }\n\t  } else {\n\t    if (doc._revisions) {\n\t      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n\t      nRevNum = doc._revisions.start;\n\t      newRevId = doc._revisions.ids[0];\n\t    }\n\t    if (!doc._rev_tree) {\n\t      revInfo = parseRevisionInfo(doc._rev);\n\t      if (revInfo.error) {\n\t        return revInfo;\n\t      }\n\t      nRevNum = revInfo.prefix;\n\t      newRevId = revInfo.id;\n\t      doc._rev_tree = [{\n\t        pos: nRevNum,\n\t        ids: [newRevId, opts, []]\n\t      }];\n\t    }\n\t  }\n\t\n\t  invalidIdError(doc._id);\n\t\n\t  doc._rev = nRevNum + '-' + newRevId;\n\t\n\t  var result = {metadata : {}, data : {}};\n\t  for (var key in doc) {\n\t    /* istanbul ignore else */\n\t    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n\t      var specialKey = key[0] === '_';\n\t      if (specialKey && !reservedWords[key]) {\n\t        var error = createError(DOC_VALIDATION, key);\n\t        error.message = DOC_VALIDATION.message + ': ' + key;\n\t        throw error;\n\t      } else if (specialKey && !dataWords[key]) {\n\t        result.metadata[key.slice(1)] = doc[key];\n\t      } else {\n\t        result.data[key] = doc[key];\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tvar thisAtob = function (str) {\n\t  return atob(str);\n\t};\n\t\n\tvar thisBtoa = function (str) {\n\t  return btoa(str);\n\t};\n\t\n\t// Abstracts constructing a Blob object, so it also works in older\n\t// browsers that don't support the native Blob constructor (e.g.\n\t// old QtWebKit versions, Android < 4.4).\n\tfunction createBlob(parts, properties) {\n\t  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n\t  parts = parts || [];\n\t  properties = properties || {};\n\t  try {\n\t    return new Blob(parts, properties);\n\t  } catch (e) {\n\t    if (e.name !== \"TypeError\") {\n\t      throw e;\n\t    }\n\t    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n\t                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n\t                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n\t                  WebKitBlobBuilder;\n\t    var builder = new Builder();\n\t    for (var i = 0; i < parts.length; i += 1) {\n\t      builder.append(parts[i]);\n\t    }\n\t    return builder.getBlob(properties.type);\n\t  }\n\t}\n\t\n\t// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n\t// encode-decode-image-with-base64-breaks-image (2013-04-21)\n\tfunction binaryStringToArrayBuffer(bin) {\n\t  var length = bin.length;\n\t  var buf = new ArrayBuffer(length);\n\t  var arr = new Uint8Array(buf);\n\t  for (var i = 0; i < length; i++) {\n\t    arr[i] = bin.charCodeAt(i);\n\t  }\n\t  return buf;\n\t}\n\t\n\tfunction binStringToBluffer(binString, type) {\n\t  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n\t}\n\t\n\tfunction b64ToBluffer(b64, type) {\n\t  return binStringToBluffer(thisAtob(b64), type);\n\t}\n\t\n\t//Can't find original post, but this is close\n\t//http://stackoverflow.com/questions/6965107/ (continues on next line)\n\t//converting-between-strings-and-arraybuffers\n\tfunction arrayBufferToBinaryString(buffer) {\n\t  var binary = '';\n\t  var bytes = new Uint8Array(buffer);\n\t  var length = bytes.byteLength;\n\t  for (var i = 0; i < length; i++) {\n\t    binary += String.fromCharCode(bytes[i]);\n\t  }\n\t  return binary;\n\t}\n\t\n\t// shim for browsers that don't support it\n\tfunction readAsBinaryString(blob, callback) {\n\t  if (typeof FileReader === 'undefined') {\n\t    // fix for Firefox in a web worker\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n\t    return callback(arrayBufferToBinaryString(\n\t      new FileReaderSync().readAsArrayBuffer(blob)));\n\t  }\n\t\n\t  var reader = new FileReader();\n\t  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n\t  reader.onloadend = function (e) {\n\t    var result = e.target.result || '';\n\t    if (hasBinaryString) {\n\t      return callback(result);\n\t    }\n\t    callback(arrayBufferToBinaryString(result));\n\t  };\n\t  if (hasBinaryString) {\n\t    reader.readAsBinaryString(blob);\n\t  } else {\n\t    reader.readAsArrayBuffer(blob);\n\t  }\n\t}\n\t\n\tfunction blobToBinaryString(blobOrBuffer, callback) {\n\t  readAsBinaryString(blobOrBuffer, function (bin) {\n\t    callback(bin);\n\t  });\n\t}\n\t\n\tfunction blobToBase64(blobOrBuffer, callback) {\n\t  blobToBinaryString(blobOrBuffer, function (base64) {\n\t    callback(thisBtoa(base64));\n\t  });\n\t}\n\t\n\t// simplified API. universal browser support is assumed\n\tfunction readAsArrayBuffer(blob, callback) {\n\t  if (typeof FileReader === 'undefined') {\n\t    // fix for Firefox in a web worker:\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n\t    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n\t  }\n\t\n\t  var reader = new FileReader();\n\t  reader.onloadend = function (e) {\n\t    var result = e.target.result || new ArrayBuffer(0);\n\t    callback(result);\n\t  };\n\t  reader.readAsArrayBuffer(blob);\n\t}\n\t\n\t// this is not used in the browser\n\t\n\tvar setImmediateShim = global.setImmediate || global.setTimeout;\n\tvar MD5_CHUNK_SIZE = 32768;\n\t\n\tfunction rawToBase64(raw) {\n\t  return thisBtoa(raw);\n\t}\n\t\n\tfunction sliceBlob(blob$$1, start, end) {\n\t  if (blob$$1.webkitSlice) {\n\t    return blob$$1.webkitSlice(start, end);\n\t  }\n\t  return blob$$1.slice(start, end);\n\t}\n\t\n\tfunction appendBlob(buffer, blob$$1, start, end, callback) {\n\t  if (start > 0 || end < blob$$1.size) {\n\t    // only slice blob if we really need to\n\t    blob$$1 = sliceBlob(blob$$1, start, end);\n\t  }\n\t  readAsArrayBuffer(blob$$1, function (arrayBuffer) {\n\t    buffer.append(arrayBuffer);\n\t    callback();\n\t  });\n\t}\n\t\n\tfunction appendString(buffer, string, start, end, callback) {\n\t  if (start > 0 || end < string.length) {\n\t    // only create a substring if we really need to\n\t    string = string.substring(start, end);\n\t  }\n\t  buffer.appendBinary(string);\n\t  callback();\n\t}\n\t\n\tfunction binaryMd5(data, callback) {\n\t  var inputIsString = typeof data === 'string';\n\t  var len = inputIsString ? data.length : data.size;\n\t  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n\t  var chunks = Math.ceil(len / chunkSize);\n\t  var currentChunk = 0;\n\t  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\t\n\t  var append = inputIsString ? appendString : appendBlob;\n\t\n\t  function next() {\n\t    setImmediateShim(loadNextChunk);\n\t  }\n\t\n\t  function done() {\n\t    var raw = buffer.end(true);\n\t    var base64 = rawToBase64(raw);\n\t    callback(base64);\n\t    buffer.destroy();\n\t  }\n\t\n\t  function loadNextChunk() {\n\t    var start = currentChunk * chunkSize;\n\t    var end = start + chunkSize;\n\t    currentChunk++;\n\t    if (currentChunk < chunks) {\n\t      append(buffer, data, start, end, next);\n\t    } else {\n\t      append(buffer, data, start, end, done);\n\t    }\n\t  }\n\t  loadNextChunk();\n\t}\n\t\n\tfunction stringMd5(string) {\n\t  return Md5.hash(string);\n\t}\n\t\n\tfunction parseBase64(data) {\n\t  try {\n\t    return thisAtob(data);\n\t  } catch (e) {\n\t    var err = createError(BAD_ARG,\n\t      'Attachment is not a valid base64 string');\n\t    return {error: err};\n\t  }\n\t}\n\t\n\tfunction preprocessString(att, blobType, callback) {\n\t  var asBinary = parseBase64(att.data);\n\t  if (asBinary.error) {\n\t    return callback(asBinary.error);\n\t  }\n\t\n\t  att.length = asBinary.length;\n\t  if (blobType === 'blob') {\n\t    att.data = binStringToBluffer(asBinary, att.content_type);\n\t  } else if (blobType === 'base64') {\n\t    att.data = thisBtoa(asBinary);\n\t  } else { // binary\n\t    att.data = asBinary;\n\t  }\n\t  binaryMd5(asBinary, function (result) {\n\t    att.digest = 'md5-' + result;\n\t    callback();\n\t  });\n\t}\n\t\n\tfunction preprocessBlob(att, blobType, callback) {\n\t  binaryMd5(att.data, function (md5) {\n\t    att.digest = 'md5-' + md5;\n\t    // size is for blobs (browser), length is for buffers (node)\n\t    att.length = att.data.size || att.data.length || 0;\n\t    if (blobType === 'binary') {\n\t      blobToBinaryString(att.data, function (binString) {\n\t        att.data = binString;\n\t        callback();\n\t      });\n\t    } else if (blobType === 'base64') {\n\t      blobToBase64(att.data, function (b64) {\n\t        att.data = b64;\n\t        callback();\n\t      });\n\t    } else {\n\t      callback();\n\t    }\n\t  });\n\t}\n\t\n\tfunction preprocessAttachment(att, blobType, callback) {\n\t  if (att.stub) {\n\t    return callback();\n\t  }\n\t  if (typeof att.data === 'string') { // input is a base64 string\n\t    preprocessString(att, blobType, callback);\n\t  } else { // input is a blob\n\t    preprocessBlob(att, blobType, callback);\n\t  }\n\t}\n\t\n\tfunction preprocessAttachments(docInfos, blobType, callback) {\n\t\n\t  if (!docInfos.length) {\n\t    return callback();\n\t  }\n\t\n\t  var docv = 0;\n\t  var overallErr;\n\t\n\t  docInfos.forEach(function (docInfo) {\n\t    var attachments = docInfo.data && docInfo.data._attachments ?\n\t      Object.keys(docInfo.data._attachments) : [];\n\t    var recv = 0;\n\t\n\t    if (!attachments.length) {\n\t      return done();\n\t    }\n\t\n\t    function processedAttachment(err) {\n\t      overallErr = err;\n\t      recv++;\n\t      if (recv === attachments.length) {\n\t        done();\n\t      }\n\t    }\n\t\n\t    for (var key in docInfo.data._attachments) {\n\t      if (docInfo.data._attachments.hasOwnProperty(key)) {\n\t        preprocessAttachment(docInfo.data._attachments[key],\n\t          blobType, processedAttachment);\n\t      }\n\t    }\n\t  });\n\t\n\t  function done() {\n\t    docv++;\n\t    if (docInfos.length === docv) {\n\t      if (overallErr) {\n\t        callback(overallErr);\n\t      } else {\n\t        callback();\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction updateDoc(revLimit, prev, docInfo, results,\n\t                   i, cb, writeDoc, newEdits) {\n\t\n\t  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n\t    results[i] = docInfo;\n\t    return cb();\n\t  }\n\t\n\t  // sometimes this is pre-calculated. historically not always\n\t  var previousWinningRev = prev.winningRev || winningRev(prev);\n\t  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n\t    isDeleted(prev, previousWinningRev);\n\t  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n\t    isDeleted(docInfo.metadata);\n\t  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\t\n\t  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n\t    var newDoc = docInfo.data;\n\t    newDoc._rev = previousWinningRev;\n\t    newDoc._id = docInfo.metadata.id;\n\t    docInfo = parseDoc(newDoc, newEdits);\n\t  }\n\t\n\t  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\t\n\t  var inConflict = newEdits && (((previouslyDeleted && deleted) ||\n\t    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n\t    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\t\n\t  if (inConflict) {\n\t    var err = createError(REV_CONFLICT);\n\t    results[i] = err;\n\t    return cb();\n\t  }\n\t\n\t  var newRev = docInfo.metadata.rev;\n\t  docInfo.metadata.rev_tree = merged.tree;\n\t  docInfo.stemmedRevs = merged.stemmedRevs || [];\n\t  /* istanbul ignore else */\n\t  if (prev.rev_map) {\n\t    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n\t  }\n\t\n\t  // recalculate\n\t  var winningRev$$1 = winningRev(docInfo.metadata);\n\t  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\t\n\t  // calculate the total number of documents that were added/removed,\n\t  // from the perspective of total_rows/doc_count\n\t  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n\t    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\t\n\t  var newRevIsDeleted;\n\t  if (newRev === winningRev$$1) {\n\t    // if the new rev is the same as the winning rev, we can reuse that value\n\t    newRevIsDeleted = winningRevIsDeleted;\n\t  } else {\n\t    // if they're not the same, then we need to recalculate\n\t    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n\t  }\n\t\n\t  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n\t    true, delta, i, cb);\n\t}\n\t\n\tfunction rootIsMissing(docInfo) {\n\t  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n\t}\n\t\n\tfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n\t                     writeDoc, opts, overallCallback) {\n\t\n\t  // Default to 1000 locally\n\t  revLimit = revLimit || 1000;\n\t\n\t  function insertDoc(docInfo, resultsIdx, callback) {\n\t    // Cant insert new deleted documents\n\t    var winningRev$$1 = winningRev(docInfo.metadata);\n\t    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n\t    if ('was_delete' in opts && deleted) {\n\t      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n\t      return callback();\n\t    }\n\t\n\t    // 4712 - detect whether a new document was inserted with a _rev\n\t    var inConflict = newEdits && rootIsMissing(docInfo);\n\t\n\t    if (inConflict) {\n\t      var err = createError(REV_CONFLICT);\n\t      results[resultsIdx] = err;\n\t      return callback();\n\t    }\n\t\n\t    var delta = deleted ? 0 : 1;\n\t\n\t    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n\t      delta, resultsIdx, callback);\n\t  }\n\t\n\t  var newEdits = opts.new_edits;\n\t  var idsToDocs = new ExportedMap();\n\t\n\t  var docsDone = 0;\n\t  var docsToDo = docInfos.length;\n\t\n\t  function checkAllDocsDone() {\n\t    if (++docsDone === docsToDo && overallCallback) {\n\t      overallCallback();\n\t    }\n\t  }\n\t\n\t  docInfos.forEach(function (currentDoc, resultsIdx) {\n\t\n\t    if (currentDoc._id && isLocalId(currentDoc._id)) {\n\t      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n\t      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n\t        results[resultsIdx] = err || res;\n\t        checkAllDocsDone();\n\t      });\n\t      return;\n\t    }\n\t\n\t    var id = currentDoc.metadata.id;\n\t    if (idsToDocs.has(id)) {\n\t      docsToDo--; // duplicate\n\t      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n\t    } else {\n\t      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n\t    }\n\t  });\n\t\n\t  // in the case of new_edits, the user can provide multiple docs\n\t  // with the same id. these need to be processed sequentially\n\t  idsToDocs.forEach(function (docs, id) {\n\t    var numDone = 0;\n\t\n\t    function docWritten() {\n\t      if (++numDone < docs.length) {\n\t        nextDoc();\n\t      } else {\n\t        checkAllDocsDone();\n\t      }\n\t    }\n\t    function nextDoc() {\n\t      var value = docs[numDone];\n\t      var currentDoc = value[0];\n\t      var resultsIdx = value[1];\n\t\n\t      if (fetchedDocs.has(id)) {\n\t        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n\t          resultsIdx, docWritten, writeDoc, newEdits);\n\t      } else {\n\t        // Ensure stemming applies to new writes as well\n\t        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n\t        currentDoc.metadata.rev_tree = merged.tree;\n\t        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n\t        insertDoc(currentDoc, resultsIdx, docWritten);\n\t      }\n\t    }\n\t    nextDoc();\n\t  });\n\t}\n\t\n\t// IndexedDB requires a versioned database structure, so we use the\n\t// version here to manage migrations.\n\tvar ADAPTER_VERSION = 5;\n\t\n\t// The object stores created for each database\n\t// DOC_STORE stores the document meta data, its revision history and state\n\t// Keyed by document id\n\tvar DOC_STORE = 'document-store';\n\t// BY_SEQ_STORE stores a particular version of a document, keyed by its\n\t// sequence id\n\tvar BY_SEQ_STORE = 'by-sequence';\n\t// Where we store attachments\n\tvar ATTACH_STORE = 'attach-store';\n\t// Where we store many-to-many relations\n\t// between attachment digests and seqs\n\tvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\t\n\t// Where we store database-wide meta data in a single record\n\t// keyed by id: META_STORE\n\tvar META_STORE = 'meta-store';\n\t// Where we store local documents\n\tvar LOCAL_STORE = 'local-store';\n\t// Where we detect blob support\n\tvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\t\n\tfunction safeJsonParse(str) {\n\t  // This try/catch guards against stack overflow errors.\n\t  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n\t  // cannot overflow.\n\t  try {\n\t    return JSON.parse(str);\n\t  } catch (e) {\n\t    /* istanbul ignore next */\n\t    return vuvuzela.parse(str);\n\t  }\n\t}\n\t\n\tfunction safeJsonStringify(json) {\n\t  try {\n\t    return JSON.stringify(json);\n\t  } catch (e) {\n\t    /* istanbul ignore next */\n\t    return vuvuzela.stringify(json);\n\t  }\n\t}\n\t\n\tfunction idbError(callback) {\n\t  return function (evt) {\n\t    var message = 'unknown_error';\n\t    if (evt.target && evt.target.error) {\n\t      message = evt.target.error.name || evt.target.error.message;\n\t    }\n\t    callback(createError(IDB_ERROR, message, evt.type));\n\t  };\n\t}\n\t\n\t// Unfortunately, the metadata has to be stringified\n\t// when it is put into the database, because otherwise\n\t// IndexedDB can throw errors for deeply-nested objects.\n\t// Originally we just used JSON.parse/JSON.stringify; now\n\t// we use this custom vuvuzela library that avoids recursion.\n\t// If we could do it all over again, we'd probably use a\n\t// format for the revision trees other than JSON.\n\tfunction encodeMetadata(metadata, winningRev, deleted) {\n\t  return {\n\t    data: safeJsonStringify(metadata),\n\t    winningRev: winningRev,\n\t    deletedOrLocal: deleted ? '1' : '0',\n\t    seq: metadata.seq, // highest seq for this doc\n\t    id: metadata.id\n\t  };\n\t}\n\t\n\tfunction decodeMetadata(storedObject) {\n\t  if (!storedObject) {\n\t    return null;\n\t  }\n\t  var metadata = safeJsonParse(storedObject.data);\n\t  metadata.winningRev = storedObject.winningRev;\n\t  metadata.deleted = storedObject.deletedOrLocal === '1';\n\t  metadata.seq = storedObject.seq;\n\t  return metadata;\n\t}\n\t\n\t// read the doc back out from the database. we don't store the\n\t// _id or _rev because we already have _doc_id_rev.\n\tfunction decodeDoc(doc) {\n\t  if (!doc) {\n\t    return doc;\n\t  }\n\t  var idx = doc._doc_id_rev.lastIndexOf(':');\n\t  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n\t  doc._rev = doc._doc_id_rev.substring(idx + 1);\n\t  delete doc._doc_id_rev;\n\t  return doc;\n\t}\n\t\n\t// Read a blob from the database, encoding as necessary\n\t// and translating from base64 if the IDB doesn't support\n\t// native Blobs\n\tfunction readBlobData(body, type, asBlob, callback) {\n\t  if (asBlob) {\n\t    if (!body) {\n\t      callback(createBlob([''], {type: type}));\n\t    } else if (typeof body !== 'string') { // we have blob support\n\t      callback(body);\n\t    } else { // no blob support\n\t      callback(b64ToBluffer(body, type));\n\t    }\n\t  } else { // as base64 string\n\t    if (!body) {\n\t      callback('');\n\t    } else if (typeof body !== 'string') { // we have blob support\n\t      readAsBinaryString(body, function (binary) {\n\t        callback(thisBtoa(binary));\n\t      });\n\t    } else { // no blob support\n\t      callback(body);\n\t    }\n\t  }\n\t}\n\t\n\tfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n\t  var attachments = Object.keys(doc._attachments || {});\n\t  if (!attachments.length) {\n\t    return cb && cb();\n\t  }\n\t  var numDone = 0;\n\t\n\t  function checkDone() {\n\t    if (++numDone === attachments.length && cb) {\n\t      cb();\n\t    }\n\t  }\n\t\n\t  function fetchAttachment(doc, att) {\n\t    var attObj = doc._attachments[att];\n\t    var digest = attObj.digest;\n\t    var req = txn.objectStore(ATTACH_STORE).get(digest);\n\t    req.onsuccess = function (e) {\n\t      attObj.body = e.target.result.body;\n\t      checkDone();\n\t    };\n\t  }\n\t\n\t  attachments.forEach(function (att) {\n\t    if (opts.attachments && opts.include_docs) {\n\t      fetchAttachment(doc, att);\n\t    } else {\n\t      doc._attachments[att].stub = true;\n\t      checkDone();\n\t    }\n\t  });\n\t}\n\t\n\t// IDB-specific postprocessing necessary because\n\t// we don't know whether we stored a true Blob or\n\t// a base64-encoded string, and if it's a Blob it\n\t// needs to be read outside of the transaction context\n\tfunction postProcessAttachments(results, asBlob) {\n\t  return PouchPromise$1.all(results.map(function (row) {\n\t    if (row.doc && row.doc._attachments) {\n\t      var attNames = Object.keys(row.doc._attachments);\n\t      return PouchPromise$1.all(attNames.map(function (att) {\n\t        var attObj = row.doc._attachments[att];\n\t        if (!('body' in attObj)) { // already processed\n\t          return;\n\t        }\n\t        var body = attObj.body;\n\t        var type = attObj.content_type;\n\t        return new PouchPromise$1(function (resolve) {\n\t          readBlobData(body, type, asBlob, function (data) {\n\t            row.doc._attachments[att] = assign$1(\n\t              pick(attObj, ['digest', 'content_type']),\n\t              {data: data}\n\t            );\n\t            resolve();\n\t          });\n\t        });\n\t      }));\n\t    }\n\t  }));\n\t}\n\t\n\tfunction compactRevs(revs, docId, txn) {\n\t\n\t  var possiblyOrphanedDigests = [];\n\t  var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t  var attStore = txn.objectStore(ATTACH_STORE);\n\t  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t  var count = revs.length;\n\t\n\t  function checkDone() {\n\t    count--;\n\t    if (!count) { // done processing all revs\n\t      deleteOrphanedAttachments();\n\t    }\n\t  }\n\t\n\t  function deleteOrphanedAttachments() {\n\t    if (!possiblyOrphanedDigests.length) {\n\t      return;\n\t    }\n\t    possiblyOrphanedDigests.forEach(function (digest) {\n\t      var countReq = attAndSeqStore.index('digestSeq').count(\n\t        IDBKeyRange.bound(\n\t          digest + '::', digest + '::\\uffff', false, false));\n\t      countReq.onsuccess = function (e) {\n\t        var count = e.target.result;\n\t        if (!count) {\n\t          // orphaned\n\t          attStore.delete(digest);\n\t        }\n\t      };\n\t    });\n\t  }\n\t\n\t  revs.forEach(function (rev) {\n\t    var index = seqStore.index('_doc_id_rev');\n\t    var key = docId + \"::\" + rev;\n\t    index.getKey(key).onsuccess = function (e) {\n\t      var seq = e.target.result;\n\t      if (typeof seq !== 'number') {\n\t        return checkDone();\n\t      }\n\t      seqStore.delete(seq);\n\t\n\t      var cursor = attAndSeqStore.index('seq')\n\t        .openCursor(IDBKeyRange.only(seq));\n\t\n\t      cursor.onsuccess = function (event) {\n\t        var cursor = event.target.result;\n\t        if (cursor) {\n\t          var digest = cursor.value.digestSeq.split('::')[0];\n\t          possiblyOrphanedDigests.push(digest);\n\t          attAndSeqStore.delete(cursor.primaryKey);\n\t          cursor.continue();\n\t        } else { // done\n\t          checkDone();\n\t        }\n\t      };\n\t    };\n\t  });\n\t}\n\t\n\tfunction openTransactionSafely(idb, stores, mode) {\n\t  try {\n\t    return {\n\t      txn: idb.transaction(stores, mode)\n\t    };\n\t  } catch (err) {\n\t    return {\n\t      error: err\n\t    };\n\t  }\n\t}\n\t\n\tvar changesHandler$$1 = new Changes();\n\t\n\tfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n\t  var docInfos = req.docs;\n\t  var txn;\n\t  var docStore;\n\t  var bySeqStore;\n\t  var attachStore;\n\t  var attachAndSeqStore;\n\t  var metaStore;\n\t  var docInfoError;\n\t  var metaDoc;\n\t\n\t  for (var i = 0, len = docInfos.length; i < len; i++) {\n\t    var doc = docInfos[i];\n\t    if (doc._id && isLocalId(doc._id)) {\n\t      continue;\n\t    }\n\t    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n\t    if (doc.error && !docInfoError) {\n\t      docInfoError = doc;\n\t    }\n\t  }\n\t\n\t  if (docInfoError) {\n\t    return callback(docInfoError);\n\t  }\n\t\n\t  var allDocsProcessed = false;\n\t  var docCountDelta = 0;\n\t  var results = new Array(docInfos.length);\n\t  var fetchedDocs = new ExportedMap();\n\t  var preconditionErrored = false;\n\t  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\t\n\t  preprocessAttachments(docInfos, blobType, function (err) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    startTransaction();\n\t  });\n\t\n\t  function startTransaction() {\n\t\n\t    var stores = [\n\t      DOC_STORE, BY_SEQ_STORE,\n\t      ATTACH_STORE,\n\t      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n\t      META_STORE\n\t    ];\n\t    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    txn = txnResult.txn;\n\t    txn.onabort = idbError(callback);\n\t    txn.ontimeout = idbError(callback);\n\t    txn.oncomplete = complete;\n\t    docStore = txn.objectStore(DOC_STORE);\n\t    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t    attachStore = txn.objectStore(ATTACH_STORE);\n\t    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t    metaStore = txn.objectStore(META_STORE);\n\t\n\t    metaStore.get(META_STORE).onsuccess = function (e) {\n\t      metaDoc = e.target.result;\n\t      updateDocCountIfReady();\n\t    };\n\t\n\t    verifyAttachments(function (err) {\n\t      if (err) {\n\t        preconditionErrored = true;\n\t        return callback(err);\n\t      }\n\t      fetchExistingDocs();\n\t    });\n\t  }\n\t\n\t  function onAllDocsProcessed() {\n\t    allDocsProcessed = true;\n\t    updateDocCountIfReady();\n\t  }\n\t\n\t  function idbProcessDocs() {\n\t    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n\t                txn, results, writeDoc, opts, onAllDocsProcessed);\n\t  }\n\t\n\t  function updateDocCountIfReady() {\n\t    if (!metaDoc || !allDocsProcessed) {\n\t      return;\n\t    }\n\t    // caching the docCount saves a lot of time in allDocs() and\n\t    // info(), which is why we go to all the trouble of doing this\n\t    metaDoc.docCount += docCountDelta;\n\t    metaStore.put(metaDoc);\n\t  }\n\t\n\t  function fetchExistingDocs() {\n\t\n\t    if (!docInfos.length) {\n\t      return;\n\t    }\n\t\n\t    var numFetched = 0;\n\t\n\t    function checkDone() {\n\t      if (++numFetched === docInfos.length) {\n\t        idbProcessDocs();\n\t      }\n\t    }\n\t\n\t    function readMetadata(event) {\n\t      var metadata = decodeMetadata(event.target.result);\n\t\n\t      if (metadata) {\n\t        fetchedDocs.set(metadata.id, metadata);\n\t      }\n\t      checkDone();\n\t    }\n\t\n\t    for (var i = 0, len = docInfos.length; i < len; i++) {\n\t      var docInfo = docInfos[i];\n\t      if (docInfo._id && isLocalId(docInfo._id)) {\n\t        checkDone(); // skip local docs\n\t        continue;\n\t      }\n\t      var req = docStore.get(docInfo.metadata.id);\n\t      req.onsuccess = readMetadata;\n\t    }\n\t  }\n\t\n\t  function complete() {\n\t    if (preconditionErrored) {\n\t      return;\n\t    }\n\t\n\t    changesHandler$$1.notify(api._meta.name);\n\t    callback(null, results);\n\t  }\n\t\n\t  function verifyAttachment(digest, callback) {\n\t\n\t    var req = attachStore.get(digest);\n\t    req.onsuccess = function (e) {\n\t      if (!e.target.result) {\n\t        var err = createError(MISSING_STUB,\n\t          'unknown stub attachment with digest ' +\n\t          digest);\n\t        err.status = 412;\n\t        callback(err);\n\t      } else {\n\t        callback();\n\t      }\n\t    };\n\t  }\n\t\n\t  function verifyAttachments(finish) {\n\t\n\t\n\t    var digests = [];\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo.data && docInfo.data._attachments) {\n\t        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n\t          var att = docInfo.data._attachments[filename];\n\t          if (att.stub) {\n\t            digests.push(att.digest);\n\t          }\n\t        });\n\t      }\n\t    });\n\t    if (!digests.length) {\n\t      return finish();\n\t    }\n\t    var numDone = 0;\n\t    var err;\n\t\n\t    function checkDone() {\n\t      if (++numDone === digests.length) {\n\t        finish(err);\n\t      }\n\t    }\n\t    digests.forEach(function (digest) {\n\t      verifyAttachment(digest, function (attErr) {\n\t        if (attErr && !err) {\n\t          err = attErr;\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n\t                    isUpdate, delta, resultsIdx, callback) {\n\t\n\t    docInfo.metadata.winningRev = winningRev$$1;\n\t    docInfo.metadata.deleted = winningRevIsDeleted;\n\t\n\t    var doc = docInfo.data;\n\t    doc._id = docInfo.metadata.id;\n\t    doc._rev = docInfo.metadata.rev;\n\t\n\t    if (newRevIsDeleted) {\n\t      doc._deleted = true;\n\t    }\n\t\n\t    var hasAttachments = doc._attachments &&\n\t      Object.keys(doc._attachments).length;\n\t    if (hasAttachments) {\n\t      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n\t        isUpdate, resultsIdx, callback);\n\t    }\n\t\n\t    docCountDelta += delta;\n\t    updateDocCountIfReady();\n\t\n\t    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n\t      isUpdate, resultsIdx, callback);\n\t  }\n\t\n\t  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n\t                     isUpdate, resultsIdx, callback) {\n\t\n\t    var doc = docInfo.data;\n\t    var metadata = docInfo.metadata;\n\t\n\t    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n\t    delete doc._id;\n\t    delete doc._rev;\n\t\n\t    function afterPutDoc(e) {\n\t      var revsToDelete = docInfo.stemmedRevs || [];\n\t\n\t      if (isUpdate && api.auto_compaction) {\n\t        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n\t      }\n\t\n\t      if (revsToDelete && revsToDelete.length) {\n\t        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n\t      }\n\t\n\t      metadata.seq = e.target.result;\n\t      // Current _rev is calculated from _rev_tree on read\n\t      // delete metadata.rev;\n\t      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n\t        winningRevIsDeleted);\n\t      var metaDataReq = docStore.put(metadataToStore);\n\t      metaDataReq.onsuccess = afterPutMetadata;\n\t    }\n\t\n\t    function afterPutDocError(e) {\n\t      // ConstraintError, need to update, not put (see #1638 for details)\n\t      e.preventDefault(); // avoid transaction abort\n\t      e.stopPropagation(); // avoid transaction onerror\n\t      var index = bySeqStore.index('_doc_id_rev');\n\t      var getKeyReq = index.getKey(doc._doc_id_rev);\n\t      getKeyReq.onsuccess = function (e) {\n\t        var putReq = bySeqStore.put(doc, e.target.result);\n\t        putReq.onsuccess = afterPutDoc;\n\t      };\n\t    }\n\t\n\t    function afterPutMetadata() {\n\t      results[resultsIdx] = {\n\t        ok: true,\n\t        id: metadata.id,\n\t        rev: metadata.rev\n\t      };\n\t      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n\t      insertAttachmentMappings(docInfo, metadata.seq, callback);\n\t    }\n\t\n\t    var putReq = bySeqStore.put(doc);\n\t\n\t    putReq.onsuccess = afterPutDoc;\n\t    putReq.onerror = afterPutDocError;\n\t  }\n\t\n\t  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n\t                            isUpdate, resultsIdx, callback) {\n\t\n\t\n\t    var doc = docInfo.data;\n\t\n\t    var numDone = 0;\n\t    var attachments = Object.keys(doc._attachments);\n\t\n\t    function collectResults() {\n\t      if (numDone === attachments.length) {\n\t        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n\t          isUpdate, resultsIdx, callback);\n\t      }\n\t    }\n\t\n\t    function attachmentSaved() {\n\t      numDone++;\n\t      collectResults();\n\t    }\n\t\n\t    attachments.forEach(function (key) {\n\t      var att = docInfo.data._attachments[key];\n\t      if (!att.stub) {\n\t        var data = att.data;\n\t        delete att.data;\n\t        att.revpos = parseInt(winningRev$$1, 10);\n\t        var digest = att.digest;\n\t        saveAttachment(digest, data, attachmentSaved);\n\t      } else {\n\t        numDone++;\n\t        collectResults();\n\t      }\n\t    });\n\t  }\n\t\n\t  // map seqs to attachment digests, which\n\t  // we will need later during compaction\n\t  function insertAttachmentMappings(docInfo, seq, callback) {\n\t\n\t    var attsAdded = 0;\n\t    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\t\n\t    if (!attsToAdd.length) {\n\t      return callback();\n\t    }\n\t\n\t    function checkDone() {\n\t      if (++attsAdded === attsToAdd.length) {\n\t        callback();\n\t      }\n\t    }\n\t\n\t    function add(att) {\n\t      var digest = docInfo.data._attachments[att].digest;\n\t      var req = attachAndSeqStore.put({\n\t        seq: seq,\n\t        digestSeq: digest + '::' + seq\n\t      });\n\t\n\t      req.onsuccess = checkDone;\n\t      req.onerror = function (e) {\n\t        // this callback is for a constaint error, which we ignore\n\t        // because this docid/rev has already been associated with\n\t        // the digest (e.g. when new_edits == false)\n\t        e.preventDefault(); // avoid transaction abort\n\t        e.stopPropagation(); // avoid transaction onerror\n\t        checkDone();\n\t      };\n\t    }\n\t    for (var i = 0; i < attsToAdd.length; i++) {\n\t      add(attsToAdd[i]); // do in parallel\n\t    }\n\t  }\n\t\n\t  function saveAttachment(digest, data, callback) {\n\t\n\t\n\t    var getKeyReq = attachStore.count(digest);\n\t    getKeyReq.onsuccess = function (e) {\n\t      var count = e.target.result;\n\t      if (count) {\n\t        return callback(); // already exists\n\t      }\n\t      var newAtt = {\n\t        digest: digest,\n\t        body: data\n\t      };\n\t      var putReq = attachStore.put(newAtt);\n\t      putReq.onsuccess = callback;\n\t    };\n\t  }\n\t}\n\t\n\t// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n\t// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n\t// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n\t// we're not processing each document one-at-a-time.\n\tfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\t\n\t  // Bail out of getAll()/getAllKeys() in the following cases:\n\t  // 1) either method is unsupported - we need both\n\t  // 2) batchSize is 1 (might as well use IDBCursor), or batchSize is -1 (i.e. batchSize unlimited,\n\t  //    not really clear the user wants a batched approach where the entire DB is read into memory,\n\t  //    perhaps they are filtering on a per-doc basis)\n\t  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\t\n\t  var useGetAll = typeof objectStore.getAll === 'function' &&\n\t    typeof objectStore.getAllKeys === 'function' &&\n\t    batchSize > 1 && !descending;\n\t\n\t  var keysBatch;\n\t  var valuesBatch;\n\t  var pseudoCursor;\n\t\n\t  function onGetAll(e) {\n\t    valuesBatch = e.target.result;\n\t    if (keysBatch) {\n\t      onBatch(keysBatch, valuesBatch, pseudoCursor);\n\t    }\n\t  }\n\t\n\t  function onGetAllKeys(e) {\n\t    keysBatch = e.target.result;\n\t    if (valuesBatch) {\n\t      onBatch(keysBatch, valuesBatch, pseudoCursor);\n\t    }\n\t  }\n\t\n\t  function continuePseudoCursor() {\n\t    if (!keysBatch.length) { // no more results\n\t      return onBatch();\n\t    }\n\t    // fetch next batch, exclusive start\n\t    var lastKey = keysBatch[keysBatch.length - 1];\n\t    var newKeyRange;\n\t    if (keyRange && keyRange.upper) {\n\t      try {\n\t        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n\t          true, keyRange.upperOpen);\n\t      } catch (e) {\n\t        if (e.name === \"DataError\" && e.code === 0) {\n\t          return onBatch(); // we're done, startkey and endkey are equal\n\t        }\n\t      }\n\t    } else {\n\t      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n\t    }\n\t    keyRange = newKeyRange;\n\t    keysBatch = null;\n\t    valuesBatch = null;\n\t    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n\t    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n\t  }\n\t\n\t  function onCursor(e) {\n\t    var cursor = e.target.result;\n\t    if (!cursor) { // done\n\t      return onBatch();\n\t    }\n\t    // regular IDBCursor acts like a batch where batch size is always 1\n\t    onBatch([cursor.key], [cursor.value], cursor);\n\t  }\n\t\n\t  if (useGetAll) {\n\t    pseudoCursor = {\"continue\": continuePseudoCursor};\n\t    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n\t    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n\t  } else if (descending) {\n\t    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n\t  } else {\n\t    objectStore.openCursor(keyRange).onsuccess = onCursor;\n\t  }\n\t}\n\t\n\t// simple shim for objectStore.getAll(), falling back to IDBCursor\n\tfunction getAll(objectStore, keyRange, onSuccess) {\n\t  if (typeof objectStore.getAll === 'function') {\n\t    // use native getAll\n\t    objectStore.getAll(keyRange).onsuccess = onSuccess;\n\t    return;\n\t  }\n\t  // fall back to cursors\n\t  var values = [];\n\t\n\t  function onCursor(e) {\n\t    var cursor = e.target.result;\n\t    if (cursor) {\n\t      values.push(cursor.value);\n\t      cursor.continue();\n\t    } else {\n\t      onSuccess({\n\t        target: {\n\t          result: values\n\t        }\n\t      });\n\t    }\n\t  }\n\t\n\t  objectStore.openCursor(keyRange).onsuccess = onCursor;\n\t}\n\t\n\tfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n\t  try {\n\t    if (start && end) {\n\t      if (descending) {\n\t        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n\t      } else {\n\t        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n\t      }\n\t    } else if (start) {\n\t      if (descending) {\n\t        return IDBKeyRange.upperBound(start);\n\t      } else {\n\t        return IDBKeyRange.lowerBound(start);\n\t      }\n\t    } else if (end) {\n\t      if (descending) {\n\t        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n\t      } else {\n\t        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n\t      }\n\t    } else if (key) {\n\t      return IDBKeyRange.only(key);\n\t    }\n\t  } catch (e) {\n\t    return {error: e};\n\t  }\n\t  return null;\n\t}\n\t\n\tfunction idbAllDocs(opts, idb, callback) {\n\t  var start = 'startkey' in opts ? opts.startkey : false;\n\t  var end = 'endkey' in opts ? opts.endkey : false;\n\t  var key = 'key' in opts ? opts.key : false;\n\t  var skip = opts.skip || 0;\n\t  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n\t  var inclusiveEnd = opts.inclusive_end !== false;\n\t\n\t  var keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n\t  var keyRangeError = keyRange && keyRange.error;\n\t  if (keyRangeError && !(keyRangeError.name === \"DataError\" &&\n\t      keyRangeError.code === 0)) {\n\t    // DataError with error code 0 indicates start is less than end, so\n\t    // can just do an empty query. Else need to throw\n\t    return callback(createError(IDB_ERROR,\n\t      keyRangeError.name, keyRangeError.message));\n\t  }\n\t\n\t  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\t\n\t  if (opts.attachments) {\n\t    stores.push(ATTACH_STORE);\n\t  }\n\t  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n\t  if (txnResult.error) {\n\t    return callback(txnResult.error);\n\t  }\n\t  var txn = txnResult.txn;\n\t  txn.oncomplete = onTxnComplete;\n\t  txn.onabort = idbError(callback);\n\t  var docStore = txn.objectStore(DOC_STORE);\n\t  var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t  var metaStore = txn.objectStore(META_STORE);\n\t  var docIdRevIndex = seqStore.index('_doc_id_rev');\n\t  var results = [];\n\t  var docCount;\n\t\n\t  metaStore.get(META_STORE).onsuccess = function (e) {\n\t    docCount = e.target.result.docCount;\n\t  };\n\t\n\t  // if the user specifies include_docs=true, then we don't\n\t  // want to block the main cursor while we're fetching the doc\n\t  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n\t    var key = metadata.id + \"::\" + winningRev$$1;\n\t    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n\t      row.doc = decodeDoc(e.target.result);\n\t      if (opts.conflicts) {\n\t        var conflicts = collectConflicts(metadata);\n\t        if (conflicts.length) {\n\t          row.doc._conflicts = conflicts;\n\t        }\n\t      }\n\t      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n\t    };\n\t  }\n\t\n\t  function allDocsInner(winningRev$$1, metadata) {\n\t    var row = {\n\t      id: metadata.id,\n\t      key: metadata.id,\n\t      value: {\n\t        rev: winningRev$$1\n\t      }\n\t    };\n\t    var deleted = metadata.deleted;\n\t    if (opts.deleted === 'ok') {\n\t      results.push(row);\n\t      // deleted docs are okay with \"keys\" requests\n\t      if (deleted) {\n\t        row.value.deleted = true;\n\t        row.doc = null;\n\t      } else if (opts.include_docs) {\n\t        fetchDocAsynchronously(metadata, row, winningRev$$1);\n\t      }\n\t    } else if (!deleted && skip-- <= 0) {\n\t      results.push(row);\n\t      if (opts.include_docs) {\n\t        fetchDocAsynchronously(metadata, row, winningRev$$1);\n\t      }\n\t    }\n\t  }\n\t\n\t  function processBatch(batchValues) {\n\t    for (var i = 0, len = batchValues.length; i < len; i++) {\n\t      if (results.length === limit) {\n\t        break;\n\t      }\n\t      var batchValue = batchValues[i];\n\t      var metadata = decodeMetadata(batchValue);\n\t      var winningRev$$1 = metadata.winningRev;\n\t      allDocsInner(winningRev$$1, metadata);\n\t    }\n\t  }\n\t\n\t  function onBatch(batchKeys, batchValues, cursor) {\n\t    if (!cursor) {\n\t      return;\n\t    }\n\t    processBatch(batchValues);\n\t    if (results.length < limit) {\n\t      cursor.continue();\n\t    }\n\t  }\n\t\n\t  function onGetAll(e) {\n\t    var values = e.target.result;\n\t    if (opts.descending) {\n\t      values = values.reverse();\n\t    }\n\t    processBatch(values);\n\t  }\n\t\n\t  function onResultsReady() {\n\t    callback(null, {\n\t      total_rows: docCount,\n\t      offset: opts.skip,\n\t      rows: results\n\t    });\n\t  }\n\t\n\t  function onTxnComplete() {\n\t    if (opts.attachments) {\n\t      postProcessAttachments(results, opts.binary).then(onResultsReady);\n\t    } else {\n\t      onResultsReady();\n\t    }\n\t  }\n\t\n\t  // don't bother doing any requests if start > end or limit === 0\n\t  if (keyRangeError || limit === 0) {\n\t    return;\n\t  }\n\t  if (limit === -1) { // just fetch everything\n\t    return getAll(docStore, keyRange, onGetAll);\n\t  }\n\t  // else do a cursor\n\t  // choose a batch size based on the skip, since we'll need to skip that many\n\t  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n\t}\n\t\n\t//\n\t// Blobs are not supported in all versions of IndexedDB, notably\n\t// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n\t//\n\t// Various other blob bugs exist in Chrome v37-42 (inclusive).\n\t// Detecting them is expensive and confusing to users, and Chrome 37-42\n\t// is at very low usage worldwide, so we do a hacky userAgent check instead.\n\t//\n\t// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n\t// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n\t// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n\t//\n\tfunction checkBlobSupport(txn) {\n\t  return new PouchPromise$1(function (resolve) {\n\t    var blob$$1 = createBlob(['']);\n\t    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\t\n\t    req.onsuccess = function () {\n\t      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n\t      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n\t      // MS Edge pretends to be Chrome 42:\n\t      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\t      resolve(matchedEdge || !matchedChrome ||\n\t        parseInt(matchedChrome[1], 10) >= 43);\n\t    };\n\t\n\t    txn.onabort = function (e) {\n\t      // If the transaction aborts now its due to not being able to\n\t      // write to the database, likely due to the disk being full\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t      resolve(false);\n\t    };\n\t  }).catch(function () {\n\t    return false; // error, so assume unsupported\n\t  });\n\t}\n\t\n\tfunction countDocs(txn, cb) {\n\t  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n\t  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n\t    cb(e.target.result);\n\t  };\n\t}\n\t\n\t// This task queue ensures that IDB open calls are done in their own tick\n\t// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n\t// before calling the next one. This works around IE/Edge race conditions in IDB.\n\t\n\tvar running = false;\n\tvar queue = [];\n\t\n\tfunction tryCode(fun, err, res, PouchDB) {\n\t  try {\n\t    fun(err, res);\n\t  } catch (err) {\n\t    // Shouldn't happen, but in some odd cases\n\t    // IndexedDB implementations might throw a sync\n\t    // error, in which case this will at least log it.\n\t    PouchDB.emit('error', err);\n\t  }\n\t}\n\t\n\tfunction applyNext() {\n\t  if (running || !queue.length) {\n\t    return;\n\t  }\n\t  running = true;\n\t  queue.shift()();\n\t}\n\t\n\tfunction enqueueTask(action, callback, PouchDB) {\n\t  queue.push(function runAction() {\n\t    action(function runCallback(err, res) {\n\t      tryCode(callback, err, res, PouchDB);\n\t      running = false;\n\t      nextTick(function runNext() {\n\t        applyNext(PouchDB);\n\t      });\n\t    });\n\t  });\n\t  applyNext();\n\t}\n\t\n\tfunction changes(opts, api, dbName, idb) {\n\t  opts = clone(opts);\n\t\n\t  if (opts.continuous) {\n\t    var id = dbName + ':' + uuid();\n\t    changesHandler$$1.addListener(dbName, id, api, opts);\n\t    changesHandler$$1.notify(dbName);\n\t    return {\n\t      cancel: function () {\n\t        changesHandler$$1.removeListener(dbName, id);\n\t      }\n\t    };\n\t  }\n\t\n\t  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\t\n\t  opts.since = opts.since || 0;\n\t  var lastSeq = opts.since;\n\t\n\t  var limit = 'limit' in opts ? opts.limit : -1;\n\t  if (limit === 0) {\n\t    limit = 1; // per CouchDB _changes spec\n\t  }\n\t  var returnDocs;\n\t  if ('return_docs' in opts) {\n\t    returnDocs = opts.return_docs;\n\t  } else if ('returnDocs' in opts) {\n\t    // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t    returnDocs = opts.returnDocs;\n\t  } else {\n\t    returnDocs = true;\n\t  }\n\t\n\t  var results = [];\n\t  var numResults = 0;\n\t  var filter = filterChange(opts);\n\t  var docIdsToMetadata = new ExportedMap();\n\t\n\t  var txn;\n\t  var bySeqStore;\n\t  var docStore;\n\t  var docIdRevIndex;\n\t\n\t  function onBatch(batchKeys, batchValues, cursor) {\n\t    if (!cursor || !batchKeys.length) { // done\n\t      return;\n\t    }\n\t\n\t    var winningDocs = new Array(batchKeys.length);\n\t    var metadatas = new Array(batchKeys.length);\n\t\n\t    function processMetadataAndWinningDoc(metadata, winningDoc) {\n\t      var change = opts.processChange(winningDoc, metadata, opts);\n\t      lastSeq = change.seq = metadata.seq;\n\t\n\t      var filtered = filter(change);\n\t      if (typeof filtered === 'object') { // anything but true/false indicates error\n\t        return opts.complete(filtered);\n\t      }\n\t\n\t      if (filtered) {\n\t        numResults++;\n\t        if (returnDocs) {\n\t          results.push(change);\n\t        }\n\t        // process the attachment immediately\n\t        // for the benefit of live listeners\n\t        if (opts.attachments && opts.include_docs) {\n\t          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n\t            postProcessAttachments([change], opts.binary).then(function () {\n\t              opts.onChange(change);\n\t            });\n\t          });\n\t        } else {\n\t          opts.onChange(change);\n\t        }\n\t      }\n\t    }\n\t\n\t    function onBatchDone() {\n\t      for (var i = 0, len = winningDocs.length; i < len; i++) {\n\t        if (numResults === limit) {\n\t          break;\n\t        }\n\t        var winningDoc = winningDocs[i];\n\t        if (!winningDoc) {\n\t          continue;\n\t        }\n\t        var metadata = metadatas[i];\n\t        processMetadataAndWinningDoc(metadata, winningDoc);\n\t      }\n\t\n\t      if (numResults !== limit) {\n\t        cursor.continue();\n\t      }\n\t    }\n\t\n\t    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n\t    // them all only once all data has been collected. This is done in parallel\n\t    // because it's faster than doing it one-at-a-time.\n\t    var numDone = 0;\n\t    batchValues.forEach(function (value, i) {\n\t      var doc = decodeDoc(value);\n\t      var seq = batchKeys[i];\n\t      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n\t        metadatas[i] = metadata;\n\t        winningDocs[i] = winningDoc;\n\t        if (++numDone === batchKeys.length) {\n\t          onBatchDone();\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  function onGetMetadata(doc, seq, metadata, cb) {\n\t    if (metadata.seq !== seq) {\n\t      // some other seq is later\n\t      return cb();\n\t    }\n\t\n\t    if (metadata.winningRev === doc._rev) {\n\t      // this is the winning doc\n\t      return cb(metadata, doc);\n\t    }\n\t\n\t    // fetch winning doc in separate request\n\t    var docIdRev = doc._id + '::' + metadata.winningRev;\n\t    var req = docIdRevIndex.get(docIdRev);\n\t    req.onsuccess = function (e) {\n\t      cb(metadata, decodeDoc(e.target.result));\n\t    };\n\t  }\n\t\n\t  function fetchWinningDocAndMetadata(doc, seq, cb) {\n\t    if (docIds && !docIds.has(doc._id)) {\n\t      return cb();\n\t    }\n\t\n\t    var metadata = docIdsToMetadata.get(doc._id);\n\t    if (metadata) { // cached\n\t      return onGetMetadata(doc, seq, metadata, cb);\n\t    }\n\t    // metadata not cached, have to go fetch it\n\t    docStore.get(doc._id).onsuccess = function (e) {\n\t      metadata = decodeMetadata(e.target.result);\n\t      docIdsToMetadata.set(doc._id, metadata);\n\t      onGetMetadata(doc, seq, metadata, cb);\n\t    };\n\t  }\n\t\n\t  function finish() {\n\t    opts.complete(null, {\n\t      results: results,\n\t      last_seq: lastSeq\n\t    });\n\t  }\n\t\n\t  function onTxnComplete() {\n\t    if (!opts.continuous && opts.attachments) {\n\t      // cannot guarantee that postProcessing was already done,\n\t      // so do it again\n\t      postProcessAttachments(results).then(finish);\n\t    } else {\n\t      finish();\n\t    }\n\t  }\n\t\n\t  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n\t  if (opts.attachments) {\n\t    objectStores.push(ATTACH_STORE);\n\t  }\n\t  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n\t  if (txnResult.error) {\n\t    return opts.complete(txnResult.error);\n\t  }\n\t  txn = txnResult.txn;\n\t  txn.onabort = idbError(opts.complete);\n\t  txn.oncomplete = onTxnComplete;\n\t\n\t  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t  docStore = txn.objectStore(DOC_STORE);\n\t  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\t\n\t  var keyRange = (opts.since && !opts.descending) ?\n\t    IDBKeyRange.lowerBound(opts.since, true) : null;\n\t\n\t  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n\t}\n\t\n\tvar cachedDBs = new ExportedMap();\n\tvar blobSupportPromise;\n\tvar openReqList = new ExportedMap();\n\t\n\tfunction IdbPouch(opts, callback) {\n\t  var api = this;\n\t\n\t  enqueueTask(function (thisCallback) {\n\t    init(api, opts, thisCallback);\n\t  }, callback, api.constructor);\n\t}\n\t\n\tfunction init(api, opts, callback) {\n\t\n\t  var dbName = opts.name;\n\t\n\t  var idb = null;\n\t  api._meta = null;\n\t\n\t  // called when creating a fresh new database\n\t  function createSchema(db) {\n\t    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n\t    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n\t      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n\t    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n\t    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n\t    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\t\n\t    // added in v2\n\t    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\t\n\t    // added in v3\n\t    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\t\n\t    // added in v4\n\t    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n\t      {autoIncrement: true});\n\t    attAndSeqStore.createIndex('seq', 'seq');\n\t    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n\t  }\n\t\n\t  // migration to version 2\n\t  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n\t  // store local docs in the main doc-store, but whaddyagonnado\n\t  function addDeletedOrLocalIndex(txn, callback) {\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\t\n\t    docStore.openCursor().onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      if (cursor) {\n\t        var metadata = cursor.value;\n\t        var deleted = isDeleted(metadata);\n\t        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n\t        docStore.put(metadata);\n\t        cursor.continue();\n\t      } else {\n\t        callback();\n\t      }\n\t    };\n\t  }\n\t\n\t  // migration to version 3 (part 1)\n\t  function createLocalStoreSchema(db) {\n\t    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n\t      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n\t  }\n\t\n\t  // migration to version 3 (part 2)\n\t  function migrateLocalStore(txn, cb) {\n\t    var localStore = txn.objectStore(LOCAL_STORE);\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t\n\t    var cursor = docStore.openCursor();\n\t    cursor.onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      if (cursor) {\n\t        var metadata = cursor.value;\n\t        var docId = metadata.id;\n\t        var local = isLocalId(docId);\n\t        var rev = winningRev(metadata);\n\t        if (local) {\n\t          var docIdRev = docId + \"::\" + rev;\n\t          // remove all seq entries\n\t          // associated with this docId\n\t          var start = docId + \"::\";\n\t          var end = docId + \"::~\";\n\t          var index = seqStore.index('_doc_id_rev');\n\t          var range = IDBKeyRange.bound(start, end, false, false);\n\t          var seqCursor = index.openCursor(range);\n\t          seqCursor.onsuccess = function (e) {\n\t            seqCursor = e.target.result;\n\t            if (!seqCursor) {\n\t              // done\n\t              docStore.delete(cursor.primaryKey);\n\t              cursor.continue();\n\t            } else {\n\t              var data = seqCursor.value;\n\t              if (data._doc_id_rev === docIdRev) {\n\t                localStore.put(data);\n\t              }\n\t              seqStore.delete(seqCursor.primaryKey);\n\t              seqCursor.continue();\n\t            }\n\t          };\n\t        } else {\n\t          cursor.continue();\n\t        }\n\t      } else if (cb) {\n\t        cb();\n\t      }\n\t    };\n\t  }\n\t\n\t  // migration to version 4 (part 1)\n\t  function addAttachAndSeqStore(db) {\n\t    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n\t      {autoIncrement: true});\n\t    attAndSeqStore.createIndex('seq', 'seq');\n\t    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n\t  }\n\t\n\t  // migration to version 4 (part 2)\n\t  function migrateAttsAndSeqs(txn, callback) {\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var attStore = txn.objectStore(ATTACH_STORE);\n\t    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t\n\t    // need to actually populate the table. this is the expensive part,\n\t    // so as an optimization, check first that this database even\n\t    // contains attachments\n\t    var req = attStore.count();\n\t    req.onsuccess = function (e) {\n\t      var count = e.target.result;\n\t      if (!count) {\n\t        return callback(); // done\n\t      }\n\t\n\t      seqStore.openCursor().onsuccess = function (e) {\n\t        var cursor = e.target.result;\n\t        if (!cursor) {\n\t          return callback(); // done\n\t        }\n\t        var doc = cursor.value;\n\t        var seq = cursor.primaryKey;\n\t        var atts = Object.keys(doc._attachments || {});\n\t        var digestMap = {};\n\t        for (var j = 0; j < atts.length; j++) {\n\t          var att = doc._attachments[atts[j]];\n\t          digestMap[att.digest] = true; // uniq digests, just in case\n\t        }\n\t        var digests = Object.keys(digestMap);\n\t        for (j = 0; j < digests.length; j++) {\n\t          var digest = digests[j];\n\t          attAndSeqStore.put({\n\t            seq: seq,\n\t            digestSeq: digest + '::' + seq\n\t          });\n\t        }\n\t        cursor.continue();\n\t      };\n\t    };\n\t  }\n\t\n\t  // migration to version 5\n\t  // Instead of relying on on-the-fly migration of metadata,\n\t  // this brings the doc-store to its modern form:\n\t  // - metadata.winningrev\n\t  // - metadata.seq\n\t  // - stringify the metadata when storing it\n\t  function migrateMetadata(txn) {\n\t\n\t    function decodeMetadataCompat(storedObject) {\n\t      if (!storedObject.data) {\n\t        // old format, when we didn't store it stringified\n\t        storedObject.deleted = storedObject.deletedOrLocal === '1';\n\t        return storedObject;\n\t      }\n\t      return decodeMetadata(storedObject);\n\t    }\n\t\n\t    // ensure that every metadata has a winningRev and seq,\n\t    // which was previously created on-the-fly but better to migrate\n\t    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var cursor = docStore.openCursor();\n\t    cursor.onsuccess = function (e) {\n\t      var cursor = e.target.result;\n\t      if (!cursor) {\n\t        return; // done\n\t      }\n\t      var metadata = decodeMetadataCompat(cursor.value);\n\t\n\t      metadata.winningRev = metadata.winningRev ||\n\t        winningRev(metadata);\n\t\n\t      function fetchMetadataSeq() {\n\t        // metadata.seq was added post-3.2.0, so if it's missing,\n\t        // we need to fetch it manually\n\t        var start = metadata.id + '::';\n\t        var end = metadata.id + '::\\uffff';\n\t        var req = bySeqStore.index('_doc_id_rev').openCursor(\n\t          IDBKeyRange.bound(start, end));\n\t\n\t        var metadataSeq = 0;\n\t        req.onsuccess = function (e) {\n\t          var cursor = e.target.result;\n\t          if (!cursor) {\n\t            metadata.seq = metadataSeq;\n\t            return onGetMetadataSeq();\n\t          }\n\t          var seq = cursor.primaryKey;\n\t          if (seq > metadataSeq) {\n\t            metadataSeq = seq;\n\t          }\n\t          cursor.continue();\n\t        };\n\t      }\n\t\n\t      function onGetMetadataSeq() {\n\t        var metadataToStore = encodeMetadata(metadata,\n\t          metadata.winningRev, metadata.deleted);\n\t\n\t        var req = docStore.put(metadataToStore);\n\t        req.onsuccess = function () {\n\t          cursor.continue();\n\t        };\n\t      }\n\t\n\t      if (metadata.seq) {\n\t        return onGetMetadataSeq();\n\t      }\n\t\n\t      fetchMetadataSeq();\n\t    };\n\t\n\t  }\n\t\n\t  api.type = function () {\n\t    return 'idb';\n\t  };\n\t\n\t  api._id = toPromise(function (callback) {\n\t    callback(null, api._meta.instanceId);\n\t  });\n\t\n\t  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n\t    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n\t  };\n\t\n\t  // First we look up the metadata in the ids database, then we fetch the\n\t  // current revision(s) from the by sequence store\n\t  api._get = function idb_get(id, opts, callback) {\n\t    var doc;\n\t    var metadata;\n\t    var err;\n\t    var txn = opts.ctx;\n\t    if (!txn) {\n\t      var txnResult = openTransactionSafely(idb,\n\t        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t    }\n\t\n\t    function finish() {\n\t      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n\t    }\n\t\n\t    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n\t      metadata = decodeMetadata(e.target.result);\n\t      // we can determine the result here if:\n\t      // 1. there is no such document\n\t      // 2. the document is deleted and we don't ask about specific rev\n\t      // When we ask with opts.rev we expect the answer to be either\n\t      // doc (possibly with _deleted=true) or missing error\n\t      if (!metadata) {\n\t        err = createError(MISSING_DOC, 'missing');\n\t        return finish();\n\t      }\n\t\n\t      var rev;\n\t      if(!opts.rev) {\n\t        rev = metadata.winningRev;\n\t        var deleted = isDeleted(metadata);\n\t        if (deleted) {\n\t          err = createError(MISSING_DOC, \"deleted\");\n\t          return finish();\n\t        }\n\t      } else {\n\t        rev = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n\t      }\n\t\n\t      var objectStore = txn.objectStore(BY_SEQ_STORE);\n\t      var key = metadata.id + '::' + rev;\n\t\n\t      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n\t        doc = e.target.result;\n\t        if (doc) {\n\t          doc = decodeDoc(doc);\n\t        }\n\t        if (!doc) {\n\t          err = createError(MISSING_DOC, 'missing');\n\t          return finish();\n\t        }\n\t        finish();\n\t      };\n\t    };\n\t  };\n\t\n\t  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n\t    var txn;\n\t    if (opts.ctx) {\n\t      txn = opts.ctx;\n\t    } else {\n\t      var txnResult = openTransactionSafely(idb,\n\t        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t    }\n\t    var digest = attachment.digest;\n\t    var type = attachment.content_type;\n\t\n\t    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n\t      var body = e.target.result.body;\n\t      readBlobData(body, type, opts.binary, function (blobData) {\n\t        callback(null, blobData);\n\t      });\n\t    };\n\t  };\n\t\n\t  api._info = function idb_info(callback) {\n\t    var updateSeq;\n\t    var docCount;\n\t\n\t    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n\t      docCount = e.target.result.docCount;\n\t    };\n\t    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n\t      var cursor = e.target.result;\n\t      updateSeq = cursor ? cursor.key : 0;\n\t    };\n\t\n\t    txn.oncomplete = function () {\n\t      callback(null, {\n\t        doc_count: docCount,\n\t        update_seq: updateSeq,\n\t        // for debugging\n\t        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n\t      });\n\t    };\n\t  };\n\t\n\t  api._allDocs = function idb_allDocs(opts, callback) {\n\t    idbAllDocs(opts, idb, callback);\n\t  };\n\t\n\t  api._changes = function idbChanges(opts) {\n\t    changes(opts, api, dbName, idb);\n\t  };\n\t\n\t  api._close = function (callback) {\n\t    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n\t    // \"Returns immediately and closes the connection in a separate thread...\"\n\t    idb.close();\n\t    cachedDBs.delete(dbName);\n\t    callback();\n\t  };\n\t\n\t  api._getRevisionTree = function (docId, callback) {\n\t    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    var req = txn.objectStore(DOC_STORE).get(docId);\n\t    req.onsuccess = function (event) {\n\t      var doc = decodeMetadata(event.target.result);\n\t      if (!doc) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        callback(null, doc.rev_tree);\n\t      }\n\t    };\n\t  };\n\t\n\t  // This function removes revisions of document docId\n\t  // which are listed in revs and sets this document\n\t  // revision to to rev_tree\n\t  api._doCompaction = function (docId, revs, callback) {\n\t    var stores = [\n\t      DOC_STORE,\n\t      BY_SEQ_STORE,\n\t      ATTACH_STORE,\n\t      ATTACH_AND_SEQ_STORE\n\t    ];\n\t    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t\n\t    docStore.get(docId).onsuccess = function (event) {\n\t      var metadata = decodeMetadata(event.target.result);\n\t      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                                         revHash, ctx, opts) {\n\t        var rev = pos + '-' + revHash;\n\t        if (revs.indexOf(rev) !== -1) {\n\t          opts.status = 'missing';\n\t        }\n\t      });\n\t      compactRevs(revs, docId, txn);\n\t      var winningRev$$1 = metadata.winningRev;\n\t      var deleted = metadata.deleted;\n\t      txn.objectStore(DOC_STORE).put(\n\t        encodeMetadata(metadata, winningRev$$1, deleted));\n\t    };\n\t    txn.onabort = idbError(callback);\n\t    txn.oncomplete = function () {\n\t      callback();\n\t    };\n\t  };\n\t\n\t\n\t  api._getLocal = function (id, callback) {\n\t    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var tx = txnResult.txn;\n\t    var req = tx.objectStore(LOCAL_STORE).get(id);\n\t\n\t    req.onerror = idbError(callback);\n\t    req.onsuccess = function (e) {\n\t      var doc = e.target.result;\n\t      if (!doc) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        delete doc['_doc_id_rev']; // for backwards compat\n\t        callback(null, doc);\n\t      }\n\t    };\n\t  };\n\t\n\t  api._putLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    delete doc._revisions; // ignore this, trust the rev\n\t    var oldRev = doc._rev;\n\t    var id = doc._id;\n\t    if (!oldRev) {\n\t      doc._rev = '0-1';\n\t    } else {\n\t      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n\t    }\n\t\n\t    var tx = opts.ctx;\n\t    var ret;\n\t    if (!tx) {\n\t      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      tx = txnResult.txn;\n\t      tx.onerror = idbError(callback);\n\t      tx.oncomplete = function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t\n\t    var oStore = tx.objectStore(LOCAL_STORE);\n\t    var req;\n\t    if (oldRev) {\n\t      req = oStore.get(id);\n\t      req.onsuccess = function (e) {\n\t        var oldDoc = e.target.result;\n\t        if (!oldDoc || oldDoc._rev !== oldRev) {\n\t          callback(createError(REV_CONFLICT));\n\t        } else { // update\n\t          var req = oStore.put(doc);\n\t          req.onsuccess = function () {\n\t            ret = {ok: true, id: doc._id, rev: doc._rev};\n\t            if (opts.ctx) { // return immediately\n\t              callback(null, ret);\n\t            }\n\t          };\n\t        }\n\t      };\n\t    } else { // new doc\n\t      req = oStore.add(doc);\n\t      req.onerror = function (e) {\n\t        // constraint error, already exists\n\t        callback(createError(REV_CONFLICT));\n\t        e.preventDefault(); // avoid transaction abort\n\t        e.stopPropagation(); // avoid transaction onerror\n\t      };\n\t      req.onsuccess = function () {\n\t        ret = {ok: true, id: doc._id, rev: doc._rev};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  api._removeLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var tx = opts.ctx;\n\t    if (!tx) {\n\t      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      tx = txnResult.txn;\n\t      tx.oncomplete = function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t    var ret;\n\t    var id = doc._id;\n\t    var oStore = tx.objectStore(LOCAL_STORE);\n\t    var req = oStore.get(id);\n\t\n\t    req.onerror = idbError(callback);\n\t    req.onsuccess = function (e) {\n\t      var oldDoc = e.target.result;\n\t      if (!oldDoc || oldDoc._rev !== doc._rev) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        oStore.delete(id);\n\t        ret = {ok: true, id: id, rev: '0-0'};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  api._destroy = function (opts, callback) {\n\t    changesHandler$$1.removeAllListeners(dbName);\n\t\n\t    //Close open request for \"dbName\" database to fix ie delay.\n\t    var openReq = openReqList.get(dbName);\n\t    if (openReq && openReq.result) {\n\t      openReq.result.close();\n\t      cachedDBs.delete(dbName);\n\t    }\n\t    var req = indexedDB.deleteDatabase(dbName);\n\t\n\t    req.onsuccess = function () {\n\t      //Remove open request from the list.\n\t      openReqList.delete(dbName);\n\t      if (hasLocalStorage() && (dbName in localStorage)) {\n\t        delete localStorage[dbName];\n\t      }\n\t      callback(null, { 'ok': true });\n\t    };\n\t\n\t    req.onerror = idbError(callback);\n\t  };\n\t\n\t  var cached = cachedDBs.get(dbName);\n\t\n\t  if (cached) {\n\t    idb = cached.idb;\n\t    api._meta = cached.global;\n\t    return nextTick(function () {\n\t      callback(null, api);\n\t    });\n\t  }\n\t\n\t  var req;\n\t  if (opts.storage) {\n\t    req = tryStorageOption(dbName, opts.storage);\n\t  } else {\n\t    req = indexedDB.open(dbName, ADAPTER_VERSION);\n\t  }\n\t\n\t  openReqList.set(dbName, req);\n\t\n\t  req.onupgradeneeded = function (e) {\n\t    var db = e.target.result;\n\t    if (e.oldVersion < 1) {\n\t      return createSchema(db); // new db, initial schema\n\t    }\n\t    // do migrations\n\t\n\t    var txn = e.currentTarget.transaction;\n\t    // these migrations have to be done in this function, before\n\t    // control is returned to the event loop, because IndexedDB\n\t\n\t    if (e.oldVersion < 3) {\n\t      createLocalStoreSchema(db); // v2 -> v3\n\t    }\n\t    if (e.oldVersion < 4) {\n\t      addAttachAndSeqStore(db); // v3 -> v4\n\t    }\n\t\n\t    var migrations = [\n\t      addDeletedOrLocalIndex, // v1 -> v2\n\t      migrateLocalStore,      // v2 -> v3\n\t      migrateAttsAndSeqs,     // v3 -> v4\n\t      migrateMetadata         // v4 -> v5\n\t    ];\n\t\n\t    var i = e.oldVersion;\n\t\n\t    function next() {\n\t      var migration = migrations[i - 1];\n\t      i++;\n\t      if (migration) {\n\t        migration(txn, next);\n\t      }\n\t    }\n\t\n\t    next();\n\t  };\n\t\n\t  req.onsuccess = function (e) {\n\t\n\t    idb = e.target.result;\n\t\n\t    idb.onversionchange = function () {\n\t      idb.close();\n\t      cachedDBs.delete(dbName);\n\t    };\n\t\n\t    idb.onabort = function (e) {\n\t      guardedConsole('error', 'Database has a global failure', e.target.error);\n\t      idb.close();\n\t      cachedDBs.delete(dbName);\n\t    };\n\t\n\t    // Do a few setup operations (in parallel as much as possible):\n\t    // 1. Fetch meta doc\n\t    // 2. Check blob support\n\t    // 3. Calculate docCount\n\t    // 4. Generate an instanceId if necessary\n\t    // 5. Store docCount and instanceId on meta doc\n\t\n\t    var txn = idb.transaction([\n\t      META_STORE,\n\t      DETECT_BLOB_SUPPORT_STORE,\n\t      DOC_STORE\n\t    ], 'readwrite');\n\t\n\t    var storedMetaDoc = false;\n\t    var metaDoc;\n\t    var docCount;\n\t    var blobSupport;\n\t    var instanceId;\n\t\n\t    function completeSetup() {\n\t      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n\t        return;\n\t      }\n\t      api._meta = {\n\t        name: dbName,\n\t        instanceId: instanceId,\n\t        blobSupport: blobSupport\n\t      };\n\t\n\t      cachedDBs.set(dbName, {\n\t        idb: idb,\n\t        global: api._meta\n\t      });\n\t      callback(null, api);\n\t    }\n\t\n\t    function storeMetaDocIfReady() {\n\t      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n\t        return;\n\t      }\n\t      var instanceKey = dbName + '_id';\n\t      if (instanceKey in metaDoc) {\n\t        instanceId = metaDoc[instanceKey];\n\t      } else {\n\t        metaDoc[instanceKey] = instanceId = uuid();\n\t      }\n\t      metaDoc.docCount = docCount;\n\t      txn.objectStore(META_STORE).put(metaDoc);\n\t    }\n\t\n\t    //\n\t    // fetch or generate the instanceId\n\t    //\n\t    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n\t      metaDoc = e.target.result || { id: META_STORE };\n\t      storeMetaDocIfReady();\n\t    };\n\t\n\t    //\n\t    // countDocs\n\t    //\n\t    countDocs(txn, function (count) {\n\t      docCount = count;\n\t      storeMetaDocIfReady();\n\t    });\n\t\n\t    //\n\t    // check blob support\n\t    //\n\t    if (!blobSupportPromise) {\n\t      // make sure blob support is only checked once\n\t      blobSupportPromise = checkBlobSupport(txn);\n\t    }\n\t\n\t    blobSupportPromise.then(function (val) {\n\t      blobSupport = val;\n\t      completeSetup();\n\t    });\n\t\n\t    // only when the metadata put transaction has completed,\n\t    // consider the setup done\n\t    txn.oncomplete = function () {\n\t      storedMetaDoc = true;\n\t      completeSetup();\n\t    };\n\t  };\n\t\n\t  req.onerror = function () {\n\t    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n\t    guardedConsole('error', msg);\n\t    callback(createError(IDB_ERROR, msg));\n\t  };\n\t}\n\t\n\tIdbPouch.valid = function () {\n\t  // Issue #2533, we finally gave up on doing bug\n\t  // detection instead of browser sniffing. Safari brought us\n\t  // to our knees.\n\t  var isSafari = typeof openDatabase !== 'undefined' &&\n\t    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n\t    !/Chrome/.test(navigator.userAgent) &&\n\t    !/BlackBerry/.test(navigator.platform);\n\t\n\t  // some outdated implementations of IDB that appear on Samsung\n\t  // and HTC Android devices <4.4 are missing IDBKeyRange\n\t  return !isSafari && typeof indexedDB !== 'undefined' &&\n\t    typeof IDBKeyRange !== 'undefined';\n\t};\n\t\n\tfunction tryStorageOption(dbName, storage) {\n\t  try { // option only available in Firefox 26+\n\t    return indexedDB.open(dbName, {\n\t      version: ADAPTER_VERSION,\n\t      storage: storage\n\t    });\n\t  } catch(err) {\n\t      return indexedDB.open(dbName, ADAPTER_VERSION);\n\t  }\n\t}\n\t\n\tvar IDBPouch = function (PouchDB) {\n\t  PouchDB.adapter('idb', IdbPouch, true);\n\t};\n\t\n\t//\n\t// Parsing hex strings. Yeah.\n\t//\n\t// So basically we need this because of a bug in WebSQL:\n\t// https://code.google.com/p/chromium/issues/detail?id=422690\n\t// https://bugs.webkit.org/show_bug.cgi?id=137637\n\t//\n\t// UTF-8 and UTF-16 are provided as separate functions\n\t// for meager performance improvements\n\t//\n\t\n\tfunction decodeUtf8(str) {\n\t  return decodeURIComponent(escape(str));\n\t}\n\t\n\tfunction hexToInt(charCode) {\n\t  // '0'-'9' is 48-57\n\t  // 'A'-'F' is 65-70\n\t  // SQLite will only give us uppercase hex\n\t  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n\t}\n\t\n\t\n\t// Example:\n\t// pragma encoding=utf8;\n\t// select hex('A');\n\t// returns '41'\n\tfunction parseHexUtf8(str, start, end) {\n\t  var result = '';\n\t  while (start < end) {\n\t    result += String.fromCharCode(\n\t      (hexToInt(str.charCodeAt(start++)) << 4) |\n\t        hexToInt(str.charCodeAt(start++)));\n\t  }\n\t  return result;\n\t}\n\t\n\t// Example:\n\t// pragma encoding=utf16;\n\t// select hex('A');\n\t// returns '4100'\n\t// notice that the 00 comes after the 41 (i.e. it's swizzled)\n\tfunction parseHexUtf16(str, start, end) {\n\t  var result = '';\n\t  while (start < end) {\n\t    // UTF-16, so swizzle the bytes\n\t    result += String.fromCharCode(\n\t      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n\t        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n\t        (hexToInt(str.charCodeAt(start)) << 4) |\n\t        hexToInt(str.charCodeAt(start + 1)));\n\t    start += 4;\n\t  }\n\t  return result;\n\t}\n\t\n\tfunction parseHexString(str, encoding) {\n\t  if (encoding === 'UTF-8') {\n\t    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n\t  } else {\n\t    return parseHexUtf16(str, 0, str.length);\n\t  }\n\t}\n\t\n\tfunction quote(str) {\n\t  return \"'\" + str + \"'\";\n\t}\n\t\n\tvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\t\n\t// The object stores created for each database\n\t// DOC_STORE stores the document meta data, its revision history and state\n\tvar DOC_STORE$1 = quote('document-store');\n\t// BY_SEQ_STORE stores a particular version of a document, keyed by its\n\t// sequence id\n\tvar BY_SEQ_STORE$1 = quote('by-sequence');\n\t// Where we store attachments\n\tvar ATTACH_STORE$1 = quote('attach-store');\n\tvar LOCAL_STORE$1 = quote('local-store');\n\tvar META_STORE$1 = quote('metadata-store');\n\t// where we store many-to-many relations between attachment\n\t// digests and seqs\n\tvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\t\n\t// escapeBlob and unescapeBlob are workarounds for a websql bug:\n\t// https://code.google.com/p/chromium/issues/detail?id=422690\n\t// https://bugs.webkit.org/show_bug.cgi?id=137637\n\t// The goal is to never actually insert the \\u0000 character\n\t// in the database.\n\tfunction escapeBlob(str) {\n\t  return str\n\t    .replace(/\\u0002/g, '\\u0002\\u0002')\n\t    .replace(/\\u0001/g, '\\u0001\\u0002')\n\t    .replace(/\\u0000/g, '\\u0001\\u0001');\n\t}\n\t\n\tfunction unescapeBlob(str) {\n\t  return str\n\t    .replace(/\\u0001\\u0001/g, '\\u0000')\n\t    .replace(/\\u0001\\u0002/g, '\\u0001')\n\t    .replace(/\\u0002\\u0002/g, '\\u0002');\n\t}\n\t\n\tfunction stringifyDoc(doc) {\n\t  // don't bother storing the id/rev. it uses lots of space,\n\t  // in persistent map/reduce especially\n\t  delete doc._id;\n\t  delete doc._rev;\n\t  return JSON.stringify(doc);\n\t}\n\t\n\tfunction unstringifyDoc(doc, id, rev) {\n\t  doc = JSON.parse(doc);\n\t  doc._id = id;\n\t  doc._rev = rev;\n\t  return doc;\n\t}\n\t\n\t// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\n\tfunction qMarks(num) {\n\t  var s = '(';\n\t  while (num--) {\n\t    s += '?';\n\t    if (num) {\n\t      s += ',';\n\t    }\n\t  }\n\t  return s + ')';\n\t}\n\t\n\tfunction select(selector, table, joiner, where, orderBy) {\n\t  return 'SELECT ' + selector + ' FROM ' +\n\t    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n\t    (joiner ? (' ON ' + joiner) : '') +\n\t    (where ? (' WHERE ' +\n\t    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n\t    (orderBy ? (' ORDER BY ' + orderBy) : '');\n\t}\n\t\n\tfunction compactRevs$1(revs, docId, tx) {\n\t\n\t  if (!revs.length) {\n\t    return;\n\t  }\n\t\n\t  var numDone = 0;\n\t  var seqs = [];\n\t\n\t  function checkDone() {\n\t    if (++numDone === revs.length) { // done\n\t      deleteOrphans();\n\t    }\n\t  }\n\t\n\t  function deleteOrphans() {\n\t    // find orphaned attachment digests\n\t\n\t    if (!seqs.length) {\n\t      return;\n\t    }\n\t\n\t    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n\t      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\t\n\t    tx.executeSql(sql, seqs, function (tx, res) {\n\t\n\t      var digestsToCheck = [];\n\t      for (var i = 0; i < res.rows.length; i++) {\n\t        digestsToCheck.push(res.rows.item(i).digest);\n\t      }\n\t      if (!digestsToCheck.length) {\n\t        return;\n\t      }\n\t\n\t      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n\t        ' WHERE seq IN (' +\n\t        seqs.map(function () { return '?'; }).join(',') +\n\t        ')';\n\t      tx.executeSql(sql, seqs, function (tx) {\n\t\n\t        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n\t          ' WHERE digest IN (' +\n\t          digestsToCheck.map(function () { return '?'; }).join(',') +\n\t          ')';\n\t        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n\t          var nonOrphanedDigests = new ExportedSet();\n\t          for (var i = 0; i < res.rows.length; i++) {\n\t            nonOrphanedDigests.add(res.rows.item(i).digest);\n\t          }\n\t          digestsToCheck.forEach(function (digest) {\n\t            if (nonOrphanedDigests.has(digest)) {\n\t              return;\n\t            }\n\t            tx.executeSql(\n\t              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n\t              [digest]);\n\t            tx.executeSql(\n\t              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // update by-seq and attach stores in parallel\n\t  revs.forEach(function (rev) {\n\t    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n\t      ' WHERE doc_id=? AND rev=?';\n\t\n\t    tx.executeSql(sql, [docId, rev], function (tx, res) {\n\t      if (!res.rows.length) { // already deleted\n\t        return checkDone();\n\t      }\n\t      var seq = res.rows.item(0).seq;\n\t      seqs.push(seq);\n\t\n\t      tx.executeSql(\n\t        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n\t    });\n\t  });\n\t}\n\t\n\tfunction websqlError(callback) {\n\t  return function (event) {\n\t    guardedConsole('error', 'WebSQL threw an error', event);\n\t    // event may actually be a SQLError object, so report is as such\n\t    var errorNameMatch = event && event.constructor.toString()\n\t        .match(/function ([^\\(]+)/);\n\t    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n\t    var errorReason = event.target || event.message;\n\t    callback(createError(WSQ_ERROR, errorReason, errorName));\n\t  };\n\t}\n\t\n\tfunction getSize(opts) {\n\t  if ('size' in opts) {\n\t    // triggers immediate popup in iOS, fixes #2347\n\t    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n\t    return opts.size * 1000000;\n\t  }\n\t  // In iOS, doesn't matter as long as it's <= 5000000.\n\t  // Except that if you request too much, our tests fail\n\t  // because of the native \"do you accept?\" popup.\n\t  // In Android <=4.3, this value is actually used as an\n\t  // honest-to-god ceiling for data, so we need to\n\t  // set it to a decently high number.\n\t  var isAndroid = typeof navigator !== 'undefined' &&\n\t    /Android/.test(navigator.userAgent);\n\t  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n\t}\n\t\n\tfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n\t  var newEdits = opts.new_edits;\n\t  var userDocs = req.docs;\n\t\n\t  // Parse the docs, give them a sequence number for the result\n\t  var docInfos = userDocs.map(function (doc) {\n\t    if (doc._id && isLocalId(doc._id)) {\n\t      return doc;\n\t    }\n\t    var newDoc = parseDoc(doc, newEdits);\n\t    return newDoc;\n\t  });\n\t\n\t  var docInfoErrors = docInfos.filter(function (docInfo) {\n\t    return docInfo.error;\n\t  });\n\t  if (docInfoErrors.length) {\n\t    return callback(docInfoErrors[0]);\n\t  }\n\t\n\t  var tx;\n\t  var results = new Array(docInfos.length);\n\t  var fetchedDocs = new ExportedMap();\n\t\n\t  var preconditionErrored;\n\t  function complete() {\n\t    if (preconditionErrored) {\n\t      return callback(preconditionErrored);\n\t    }\n\t    websqlChanges.notify(api._name);\n\t    callback(null, results);\n\t  }\n\t\n\t  function verifyAttachment(digest, callback) {\n\t    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n\t      ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      if (result.rows.item(0).cnt === 0) {\n\t        var err = createError(MISSING_STUB,\n\t          'unknown stub attachment with digest ' +\n\t          digest);\n\t        callback(err);\n\t      } else {\n\t        callback();\n\t      }\n\t    });\n\t  }\n\t\n\t  function verifyAttachments(finish) {\n\t    var digests = [];\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo.data && docInfo.data._attachments) {\n\t        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n\t          var att = docInfo.data._attachments[filename];\n\t          if (att.stub) {\n\t            digests.push(att.digest);\n\t          }\n\t        });\n\t      }\n\t    });\n\t    if (!digests.length) {\n\t      return finish();\n\t    }\n\t    var numDone = 0;\n\t    var err;\n\t\n\t    function checkDone() {\n\t      if (++numDone === digests.length) {\n\t        finish(err);\n\t      }\n\t    }\n\t    digests.forEach(function (digest) {\n\t      verifyAttachment(digest, function (attErr) {\n\t        if (attErr && !err) {\n\t          err = attErr;\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n\t                    isUpdate, delta, resultsIdx, callback) {\n\t\n\t    function finish() {\n\t      var data = docInfo.data;\n\t      var deletedInt = newRevIsDeleted ? 1 : 0;\n\t\n\t      var id = data._id;\n\t      var rev = data._rev;\n\t      var json = stringifyDoc(data);\n\t      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n\t        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n\t      var sqlArgs = [id, rev, json, deletedInt];\n\t\n\t      // map seqs to attachment digests, which\n\t      // we will need later during compaction\n\t      function insertAttachmentMappings(seq, callback) {\n\t        var attsAdded = 0;\n\t        var attsToAdd = Object.keys(data._attachments || {});\n\t\n\t        if (!attsToAdd.length) {\n\t          return callback();\n\t        }\n\t        function checkDone() {\n\t          if (++attsAdded === attsToAdd.length) {\n\t            callback();\n\t          }\n\t          return false; // ack handling a constraint error\n\t        }\n\t        function add(att) {\n\t          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n\t            ' (digest, seq) VALUES (?,?)';\n\t          var sqlArgs = [data._attachments[att].digest, seq];\n\t          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n\t          // second callback is for a constaint error, which we ignore\n\t          // because this docid/rev has already been associated with\n\t          // the digest (e.g. when new_edits == false)\n\t        }\n\t        for (var i = 0; i < attsToAdd.length; i++) {\n\t          add(attsToAdd[i]); // do in parallel\n\t        }\n\t      }\n\t\n\t      tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t        var seq = result.insertId;\n\t        insertAttachmentMappings(seq, function () {\n\t          dataWritten(tx, seq);\n\t        });\n\t      }, function () {\n\t        // constraint error, recover by updating instead (see #1638)\n\t        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n\t          'doc_id=? AND rev=?');\n\t        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n\t          var seq = res.rows.item(0).seq;\n\t          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n\t            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n\t          var sqlArgs = [json, deletedInt, id, rev];\n\t          tx.executeSql(sql, sqlArgs, function (tx) {\n\t            insertAttachmentMappings(seq, function () {\n\t              dataWritten(tx, seq);\n\t            });\n\t          });\n\t        });\n\t        return false; // ack that we've handled the error\n\t      });\n\t    }\n\t\n\t    function collectResults(attachmentErr) {\n\t      if (!err) {\n\t        if (attachmentErr) {\n\t          err = attachmentErr;\n\t          callback(err);\n\t        } else if (recv === attachments.length) {\n\t          finish();\n\t        }\n\t      }\n\t    }\n\t\n\t    var err = null;\n\t    var recv = 0;\n\t\n\t    docInfo.data._id = docInfo.metadata.id;\n\t    docInfo.data._rev = docInfo.metadata.rev;\n\t    var attachments = Object.keys(docInfo.data._attachments || {});\n\t\n\t\n\t    if (newRevIsDeleted) {\n\t      docInfo.data._deleted = true;\n\t    }\n\t\n\t    function attachmentSaved(err) {\n\t      recv++;\n\t      collectResults(err);\n\t    }\n\t\n\t    attachments.forEach(function (key) {\n\t      var att = docInfo.data._attachments[key];\n\t      if (!att.stub) {\n\t        var data = att.data;\n\t        delete att.data;\n\t        att.revpos = parseInt(winningRev$$1, 10);\n\t        var digest = att.digest;\n\t        saveAttachment(digest, data, attachmentSaved);\n\t      } else {\n\t        recv++;\n\t        collectResults();\n\t      }\n\t    });\n\t\n\t    if (!attachments.length) {\n\t      finish();\n\t    }\n\t\n\t    function dataWritten(tx, seq) {\n\t      var id = docInfo.metadata.id;\n\t\n\t      var revsToCompact = docInfo.stemmedRevs || [];\n\t      if (isUpdate && api.auto_compaction) {\n\t        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n\t      }\n\t      if (revsToCompact.length) {\n\t        compactRevs$1(revsToCompact, id, tx);\n\t      }\n\t\n\t      docInfo.metadata.seq = seq;\n\t      var rev = docInfo.metadata.rev;\n\t      delete docInfo.metadata.rev;\n\t\n\t      var sql = isUpdate ?\n\t      'UPDATE ' + DOC_STORE$1 +\n\t      ' SET json=?, max_seq=?, winningseq=' +\n\t      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n\t      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n\t        : 'INSERT INTO ' + DOC_STORE$1 +\n\t      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n\t      var metadataStr = safeJsonStringify(docInfo.metadata);\n\t      var params = isUpdate ?\n\t        [metadataStr, seq, winningRev$$1, id] :\n\t        [id, seq, seq, metadataStr];\n\t      tx.executeSql(sql, params, function () {\n\t        results[resultsIdx] = {\n\t          ok: true,\n\t          id: docInfo.metadata.id,\n\t          rev: rev\n\t        };\n\t        fetchedDocs.set(id, docInfo.metadata);\n\t        callback();\n\t      });\n\t    }\n\t  }\n\t\n\t  function websqlProcessDocs() {\n\t    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n\t                results, writeDoc, opts);\n\t  }\n\t\n\t  function fetchExistingDocs(callback) {\n\t    if (!docInfos.length) {\n\t      return callback();\n\t    }\n\t\n\t    var numFetched = 0;\n\t\n\t    function checkDone() {\n\t      if (++numFetched === docInfos.length) {\n\t        callback();\n\t      }\n\t    }\n\t\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo._id && isLocalId(docInfo._id)) {\n\t        return checkDone(); // skip local docs\n\t      }\n\t      var id = docInfo.metadata.id;\n\t      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n\t      ' WHERE id = ?', [id], function (tx, result) {\n\t        if (result.rows.length) {\n\t          var metadata = safeJsonParse(result.rows.item(0).json);\n\t          fetchedDocs.set(id, metadata);\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function saveAttachment(digest, data, callback) {\n\t    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      if (result.rows.length) { // attachment already exists\n\t        return callback();\n\t      }\n\t      // we could just insert before selecting and catch the error,\n\t      // but my hunch is that it's cheaper not to serialize the blob\n\t      // from JS to C if we don't have to (TODO: confirm this)\n\t      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n\t      ' (digest, body, escaped) VALUES (?,?,1)';\n\t      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n\t        callback();\n\t      }, function () {\n\t        // ignore constaint errors, means it already exists\n\t        callback();\n\t        return false; // ack we handled the error\n\t      });\n\t    });\n\t  }\n\t\n\t  preprocessAttachments(docInfos, 'binary', function (err) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    db.transaction(function (txn) {\n\t      tx = txn;\n\t      verifyAttachments(function (err) {\n\t        if (err) {\n\t          preconditionErrored = err;\n\t        } else {\n\t          fetchExistingDocs(websqlProcessDocs);\n\t        }\n\t      });\n\t    }, websqlError(callback), complete);\n\t  });\n\t}\n\t\n\tvar cachedDatabases = new ExportedMap();\n\t\n\t// openDatabase passed in through opts (e.g. for node-websql)\n\tfunction openDatabaseWithOpts(opts) {\n\t  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n\t}\n\t\n\tfunction openDBSafely(opts) {\n\t  try {\n\t    return {\n\t      db: openDatabaseWithOpts(opts)\n\t    };\n\t  } catch (err) {\n\t    return {\n\t      error: err\n\t    };\n\t  }\n\t}\n\t\n\tfunction openDB$1(opts) {\n\t  var cachedResult = cachedDatabases.get(opts.name);\n\t  if (!cachedResult) {\n\t    cachedResult = openDBSafely(opts);\n\t    cachedDatabases.set(opts.name, cachedResult);\n\t  }\n\t  return cachedResult;\n\t}\n\t\n\tvar websqlChanges = new Changes();\n\t\n\tfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n\t  var attachments = Object.keys(doc._attachments || {});\n\t  if (!attachments.length) {\n\t    return cb && cb();\n\t  }\n\t  var numDone = 0;\n\t\n\t  function checkDone() {\n\t    if (++numDone === attachments.length && cb) {\n\t      cb();\n\t    }\n\t  }\n\t\n\t  function fetchAttachment(doc, att) {\n\t    var attObj = doc._attachments[att];\n\t    var attOpts = {binary: opts.binary, ctx: txn};\n\t    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n\t      doc._attachments[att] = assign$1(\n\t        pick(attObj, ['digest', 'content_type']),\n\t        { data: data }\n\t      );\n\t      checkDone();\n\t    });\n\t  }\n\t\n\t  attachments.forEach(function (att) {\n\t    if (opts.attachments && opts.include_docs) {\n\t      fetchAttachment(doc, att);\n\t    } else {\n\t      doc._attachments[att].stub = true;\n\t      checkDone();\n\t    }\n\t  });\n\t}\n\t\n\tvar POUCH_VERSION = 1;\n\t\n\t// these indexes cover the ground for most allDocs queries\n\tvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n\t  BY_SEQ_STORE$1 + ' (seq, deleted)';\n\tvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n\t  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n\t    BY_SEQ_STORE$1 + ' (doc_id, rev)';\n\tvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n\t  DOC_STORE$1 + ' (winningseq)';\n\tvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n\t    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\n\tvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n\t  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n\t    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\t\n\tvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n\t  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\t\n\tvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n\t  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n\t  BY_SEQ_STORE$1 + '.json AS data, ' +\n\t  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n\t  DOC_STORE$1 + '.json AS metadata';\n\t\n\tfunction WebSqlPouch$1(opts, callback) {\n\t  var api = this;\n\t  var instanceId = null;\n\t  var size = getSize(opts);\n\t  var idRequests = [];\n\t  var encoding;\n\t\n\t  api._name = opts.name;\n\t\n\t  // extend the options here, because sqlite plugin has a ton of options\n\t  // and they are constantly changing, so it's more prudent to allow anything\n\t  var websqlOpts = assign$1({}, opts, {\n\t    version: POUCH_VERSION,\n\t    description: opts.name,\n\t    size: size\n\t  });\n\t  var openDBResult = openDB$1(websqlOpts);\n\t  if (openDBResult.error) {\n\t    return websqlError(callback)(openDBResult.error);\n\t  }\n\t  var db = openDBResult.db;\n\t  if (typeof db.readTransaction !== 'function') {\n\t    // doesn't exist in sqlite plugin\n\t    db.readTransaction = db.transaction;\n\t  }\n\t\n\t  function dbCreated() {\n\t    // note the db name in case the browser upgrades to idb\n\t    if (hasLocalStorage()) {\n\t      window.localStorage['_pouch__websqldb_' + api._name] = true;\n\t    }\n\t    callback(null, api);\n\t  }\n\t\n\t  // In this migration, we added the 'deleted' and 'local' columns to the\n\t  // by-seq and doc store tables.\n\t  // To preserve existing user data, we re-process all the existing JSON\n\t  // and add these values.\n\t  // Called migration2 because it corresponds to adapter version (db_version) #2\n\t  function runMigration2(tx, callback) {\n\t    // index used for the join in the allDocs query\n\t    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\t\n\t    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n\t      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n\t      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n\t      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n\t        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n\t        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n\t          DOC_STORE$1 + ' (local, id)');\n\t\n\t        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n\t          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n\t          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\t\n\t        tx.executeSql(sql, [], function (tx, result) {\n\t\n\t          var deleted = [];\n\t          var local = [];\n\t\n\t          for (var i = 0; i < result.rows.length; i++) {\n\t            var item = result.rows.item(i);\n\t            var seq = item.seq;\n\t            var metadata = JSON.parse(item.metadata);\n\t            if (isDeleted(metadata)) {\n\t              deleted.push(seq);\n\t            }\n\t            if (isLocalId(metadata.id)) {\n\t              local.push(metadata.id);\n\t            }\n\t          }\n\t          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n\t            qMarks(local.length), local, function () {\n\t            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n\t              ' SET deleted = 1 WHERE seq IN ' +\n\t              qMarks(deleted.length), deleted, callback);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we make all the local docs unversioned\n\t  function runMigration3(tx, callback) {\n\t    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n\t      ' (id UNIQUE, rev, json)';\n\t    tx.executeSql(local, [], function () {\n\t      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n\t        BY_SEQ_STORE$1 + '.json AS data ' +\n\t        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n\t        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n\t        DOC_STORE$1 + '.winningseq WHERE local = 1';\n\t      tx.executeSql(sql, [], function (tx, res) {\n\t        var rows = [];\n\t        for (var i = 0; i < res.rows.length; i++) {\n\t          rows.push(res.rows.item(i));\n\t        }\n\t        function doNext() {\n\t          if (!rows.length) {\n\t            return callback(tx);\n\t          }\n\t          var row = rows.shift();\n\t          var rev = JSON.parse(row.data)._rev;\n\t          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n\t              ' (id, rev, json) VALUES (?,?,?)',\n\t              [row.id, rev, row.data], function (tx) {\n\t            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n\t                [row.id], function (tx) {\n\t              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n\t                  [row.seq], function () {\n\t                doNext();\n\t              });\n\t            });\n\t          });\n\t        }\n\t        doNext();\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we remove doc_id_rev and just use rev\n\t  function runMigration4(tx, callback) {\n\t\n\t    function updateRows(rows) {\n\t      function doNext() {\n\t        if (!rows.length) {\n\t          return callback(tx);\n\t        }\n\t        var row = rows.shift();\n\t        var doc_id_rev = parseHexString(row.hex, encoding);\n\t        var idx = doc_id_rev.lastIndexOf('::');\n\t        var doc_id = doc_id_rev.substring(0, idx);\n\t        var rev = doc_id_rev.substring(idx + 2);\n\t        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n\t          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n\t        tx.executeSql(sql, [doc_id, rev, doc_id_rev], function () {\n\t          doNext();\n\t        });\n\t      }\n\t      doNext();\n\t    }\n\t\n\t    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n\t    tx.executeSql(sql, [], function (tx) {\n\t      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n\t      tx.executeSql(sql, [], function (tx) {\n\t        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n\t          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n\t          tx.executeSql(sql, [], function (tx, res) {\n\t            var rows = [];\n\t            for (var i = 0; i < res.rows.length; i++) {\n\t              rows.push(res.rows.item(i));\n\t            }\n\t            updateRows(rows);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we add the attach_and_seq table\n\t  // for issue #2818\n\t  function runMigration5(tx, callback) {\n\t\n\t    function migrateAttsAndSeqs(tx) {\n\t      // need to actually populate the table. this is the expensive part,\n\t      // so as an optimization, check first that this database even\n\t      // contains attachments\n\t      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n\t      tx.executeSql(sql, [], function (tx, res) {\n\t        var count = res.rows.item(0).cnt;\n\t        if (!count) {\n\t          return callback(tx);\n\t        }\n\t\n\t        var offset = 0;\n\t        var pageSize = 10;\n\t        function nextPage() {\n\t          var sql = select(\n\t            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n\t            [DOC_STORE$1, BY_SEQ_STORE$1],\n\t            DOC_STORE_AND_BY_SEQ_JOINER,\n\t            null,\n\t            DOC_STORE$1 + '.id '\n\t          );\n\t          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n\t          offset += pageSize;\n\t          tx.executeSql(sql, [], function (tx, res) {\n\t            if (!res.rows.length) {\n\t              return callback(tx);\n\t            }\n\t            var digestSeqs = {};\n\t            function addDigestSeq(digest, seq) {\n\t              // uniq digest/seq pairs, just in case there are dups\n\t              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n\t              if (seqs.indexOf(seq) === -1) {\n\t                seqs.push(seq);\n\t              }\n\t            }\n\t            for (var i = 0; i < res.rows.length; i++) {\n\t              var row = res.rows.item(i);\n\t              var doc = unstringifyDoc(row.data, row.id, row.rev);\n\t              var atts = Object.keys(doc._attachments || {});\n\t              for (var j = 0; j < atts.length; j++) {\n\t                var att = doc._attachments[atts[j]];\n\t                addDigestSeq(att.digest, row.seq);\n\t              }\n\t            }\n\t            var digestSeqPairs = [];\n\t            Object.keys(digestSeqs).forEach(function (digest) {\n\t              var seqs = digestSeqs[digest];\n\t              seqs.forEach(function (seq) {\n\t                digestSeqPairs.push([digest, seq]);\n\t              });\n\t            });\n\t            if (!digestSeqPairs.length) {\n\t              return nextPage();\n\t            }\n\t            var numDone = 0;\n\t            digestSeqPairs.forEach(function (pair) {\n\t              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n\t                ' (digest, seq) VALUES (?,?)';\n\t              tx.executeSql(sql, pair, function () {\n\t                if (++numDone === digestSeqPairs.length) {\n\t                  nextPage();\n\t                }\n\t              });\n\t            });\n\t          });\n\t        }\n\t        nextPage();\n\t      });\n\t    }\n\t\n\t    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n\t      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n\t    tx.executeSql(attachAndRev, [], function (tx) {\n\t      tx.executeSql(\n\t        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n\t          tx.executeSql(\n\t            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n\t            migrateAttsAndSeqs);\n\t        });\n\t    });\n\t  }\n\t\n\t  // in this migration, we use escapeBlob() and unescapeBlob()\n\t  // instead of reading out the binary as HEX, which is slow\n\t  function runMigration6(tx, callback) {\n\t    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n\t      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n\t    tx.executeSql(sql, [], callback);\n\t  }\n\t\n\t  // issue #3136, in this migration we need a \"latest seq\" as well\n\t  // as the \"winning seq\" in the doc store\n\t  function runMigration7(tx, callback) {\n\t    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n\t      ' ADD COLUMN max_seq INTEGER';\n\t    tx.executeSql(sql, [], function (tx) {\n\t      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n\t        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n\t      tx.executeSql(sql, [], function (tx) {\n\t        // add unique index after filling, else we'll get a constraint\n\t        // error when we do the ALTER TABLE\n\t        var sql =\n\t          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n\t          DOC_STORE$1 + ' (max_seq)';\n\t        tx.executeSql(sql, [], callback);\n\t      });\n\t    });\n\t  }\n\t\n\t  function checkEncoding(tx, cb) {\n\t    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n\t    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n\t        var hex = res.rows.item(0).hex;\n\t        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n\t        cb();\n\t      }\n\t    );\n\t  }\n\t\n\t  function onGetInstanceId() {\n\t    while (idRequests.length > 0) {\n\t      var idCallback = idRequests.pop();\n\t      idCallback(null, instanceId);\n\t    }\n\t  }\n\t\n\t  function onGetVersion(tx, dbVersion) {\n\t    if (dbVersion === 0) {\n\t      // initial schema\n\t\n\t      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n\t        ' (dbid, db_version INTEGER)';\n\t      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n\t        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n\t      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n\t        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n\t      // TODO: migrate winningseq to INTEGER\n\t      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n\t        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n\t      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n\t        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n\t        'json, deleted TINYINT(1), doc_id, rev)';\n\t      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n\t        ' (id UNIQUE, rev, json)';\n\t\n\t      // creates\n\t      tx.executeSql(attach);\n\t      tx.executeSql(local);\n\t      tx.executeSql(attachAndRev, [], function () {\n\t        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n\t        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n\t      });\n\t      tx.executeSql(doc, [], function () {\n\t        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\t        tx.executeSql(seq, [], function () {\n\t          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n\t          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n\t          tx.executeSql(meta, [], function () {\n\t            // mark the db version, and new dbid\n\t            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n\t              ' (db_version, dbid) VALUES (?,?)';\n\t            instanceId = uuid();\n\t            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n\t            tx.executeSql(initSeq, initSeqArgs, function () {\n\t              onGetInstanceId();\n\t            });\n\t          });\n\t        });\n\t      });\n\t    } else { // version > 0\n\t\n\t      var setupDone = function () {\n\t        var migrated = dbVersion < ADAPTER_VERSION$1;\n\t        if (migrated) {\n\t          // update the db version within this transaction\n\t          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n\t            ADAPTER_VERSION$1);\n\t        }\n\t        // notify db.id() callers\n\t        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n\t        tx.executeSql(sql, [], function (tx, result) {\n\t          instanceId = result.rows.item(0).dbid;\n\t          onGetInstanceId();\n\t        });\n\t      };\n\t\n\t      // would love to use promises here, but then websql\n\t      // ends the transaction early\n\t      var tasks = [\n\t        runMigration2,\n\t        runMigration3,\n\t        runMigration4,\n\t        runMigration5,\n\t        runMigration6,\n\t        runMigration7,\n\t        setupDone\n\t      ];\n\t\n\t      // run each migration sequentially\n\t      var i = dbVersion;\n\t      var nextMigration = function (tx) {\n\t        tasks[i - 1](tx, nextMigration);\n\t        i++;\n\t      };\n\t      nextMigration(tx);\n\t    }\n\t  }\n\t\n\t  function setup() {\n\t    db.transaction(function (tx) {\n\t      // first check the encoding\n\t      checkEncoding(tx, function () {\n\t        // then get the version\n\t        fetchVersion(tx);\n\t      });\n\t    }, websqlError(callback), dbCreated);\n\t  }\n\t\n\t  function fetchVersion(tx) {\n\t    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n\t    tx.executeSql(sql, [], function (tx, result) {\n\t      if (!result.rows.length) {\n\t        // database hasn't even been created yet (version 0)\n\t        onGetVersion(tx, 0);\n\t      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n\t        // table was created, but without the new db_version column,\n\t        // so add it.\n\t        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n\t          ' ADD COLUMN db_version INTEGER', [], function () {\n\t          // before version 2, this column didn't even exist\n\t          onGetVersion(tx, 1);\n\t        });\n\t      } else { // column exists, we can safely get it\n\t        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n\t          [], function (tx, result) {\n\t          var dbVersion = result.rows.item(0).db_version;\n\t          onGetVersion(tx, dbVersion);\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  setup();\n\t\n\t  function getMaxSeq(tx, callback) {\n\t    var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n\t    tx.executeSql(sql, [], function (tx, res) {\n\t      var updateSeq = res.rows.item(0).seq || 0;\n\t      callback(updateSeq);\n\t    });\n\t  }\n\t\n\t  function countDocs(tx, callback) {\n\t    // count the total rows\n\t    var sql = select(\n\t      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n\t      [DOC_STORE$1, BY_SEQ_STORE$1],\n\t      DOC_STORE_AND_BY_SEQ_JOINER,\n\t      BY_SEQ_STORE$1 + '.deleted=0');\n\t\n\t    tx.executeSql(sql, [], function (tx, result) {\n\t      callback(result.rows.item(0).num);\n\t    });\n\t  }\n\t\n\t  api.type = function () {\n\t    return 'websql';\n\t  };\n\t\n\t  api._id = toPromise(function (callback) {\n\t    callback(null, instanceId);\n\t  });\n\t\n\t  api._info = function (callback) {\n\t    var seq;\n\t    var docCount;\n\t    db.readTransaction(function (tx) {\n\t      getMaxSeq(tx, function (theSeq) {\n\t        seq = theSeq;\n\t      });\n\t      countDocs(tx, function (theDocCount) {\n\t        docCount = theDocCount;\n\t      });\n\t    }, websqlError(callback), function () {\n\t      callback(null, {\n\t        doc_count: docCount,\n\t        update_seq: seq,\n\t        websql_encoding: encoding\n\t      });\n\t    });\n\t  };\n\t\n\t  api._bulkDocs = function (req, reqOpts, callback) {\n\t    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n\t  };\n\t\n\t  function latest$$1(tx, id, rev, callback, finish) {\n\t    var sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE_AND_BY_SEQ_JOINER,\n\t        DOC_STORE$1 + '.id=?');\n\t    var sqlArgs = [id];\n\t\n\t    tx.executeSql(sql, sqlArgs, function (a, results) {\n\t      if (!results.rows.length) {\n\t        var err = createError(MISSING_DOC, 'missing');\n\t        return finish(err);\n\t      }\n\t      var item = results.rows.item(0);\n\t      var metadata = safeJsonParse(item.metadata);\n\t      callback(latest(rev, metadata));\n\t    });\n\t  }\n\t\n\t  api._get = function (id, opts, callback) {\n\t    var doc;\n\t    var metadata;\n\t    var tx = opts.ctx;\n\t    if (!tx) {\n\t      return db.readTransaction(function (txn) {\n\t        api._get(id, assign$1({ctx: txn}, opts), callback);\n\t      });\n\t    }\n\t\n\t    function finish(err) {\n\t      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n\t    }\n\t\n\t    var sql;\n\t    var sqlArgs;\n\t\n\t    if(!opts.rev) {\n\t      sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE_AND_BY_SEQ_JOINER,\n\t        DOC_STORE$1 + '.id=?');\n\t      sqlArgs = [id];\n\t    } else if (opts.latest) {\n\t      latest$$1(tx, id, opts.rev, function (latestRev) {\n\t        opts.latest = false;\n\t        opts.rev = latestRev;\n\t        api._get(id, opts, callback);\n\t      }, finish);\n\t      return;\n\t    } else {\n\t      sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n\t        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n\t      sqlArgs = [id, opts.rev];\n\t    }\n\t\n\t    tx.executeSql(sql, sqlArgs, function (a, results) {\n\t      if (!results.rows.length) {\n\t        var missingErr = createError(MISSING_DOC, 'missing');\n\t        return finish(missingErr);\n\t      }\n\t      var item = results.rows.item(0);\n\t      metadata = safeJsonParse(item.metadata);\n\t      if (item.deleted && !opts.rev) {\n\t        var deletedErr = createError(MISSING_DOC, 'deleted');\n\t        return finish(deletedErr);\n\t      }\n\t      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n\t      finish();\n\t    });\n\t  };\n\t\n\t  api._allDocs = function (opts, callback) {\n\t    var results = [];\n\t    var totalRows;\n\t\n\t    var start = 'startkey' in opts ? opts.startkey : false;\n\t    var end = 'endkey' in opts ? opts.endkey : false;\n\t    var key = 'key' in opts ? opts.key : false;\n\t    var descending = 'descending' in opts ? opts.descending : false;\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    var offset = 'skip' in opts ? opts.skip : 0;\n\t    var inclusiveEnd = opts.inclusive_end !== false;\n\t\n\t    var sqlArgs = [];\n\t    var criteria = [];\n\t\n\t    if (key !== false) {\n\t      criteria.push(DOC_STORE$1 + '.id = ?');\n\t      sqlArgs.push(key);\n\t    } else if (start !== false || end !== false) {\n\t      if (start !== false) {\n\t        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n\t        sqlArgs.push(start);\n\t      }\n\t      if (end !== false) {\n\t        var comparator = descending ? '>' : '<';\n\t        if (inclusiveEnd) {\n\t          comparator += '=';\n\t        }\n\t        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n\t        sqlArgs.push(end);\n\t      }\n\t      if (key !== false) {\n\t        criteria.push(DOC_STORE$1 + '.id = ?');\n\t        sqlArgs.push(key);\n\t      }\n\t    }\n\t\n\t    if (opts.deleted !== 'ok') {\n\t      // report deleted if keys are specified\n\t      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n\t    }\n\t\n\t    db.readTransaction(function (tx) {\n\t      // count the docs in parallel to other operations\n\t      countDocs(tx, function (docCount) {\n\t        totalRows = docCount;\n\t      });\n\t\n\t      if (limit === 0) {\n\t        return;\n\t      }\n\t\n\t      // do a single query to fetch the documents\n\t      var sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE_AND_BY_SEQ_JOINER,\n\t        criteria,\n\t        DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n\t        );\n\t      sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\t\n\t      tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t        for (var i = 0, l = result.rows.length; i < l; i++) {\n\t          var item = result.rows.item(i);\n\t          var metadata = safeJsonParse(item.metadata);\n\t          var id = metadata.id;\n\t          var data = unstringifyDoc(item.data, id, item.rev);\n\t          var winningRev$$1 = data._rev;\n\t          var doc = {\n\t            id: id,\n\t            key: id,\n\t            value: {rev: winningRev$$1}\n\t          };\n\t          if (opts.include_docs) {\n\t            doc.doc = data;\n\t            doc.doc._rev = winningRev$$1;\n\t            if (opts.conflicts) {\n\t              var conflicts = collectConflicts(metadata);\n\t              if (conflicts.length) {\n\t                doc.doc._conflicts = conflicts;\n\t              }\n\t            }\n\t            fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n\t          }\n\t          if (item.deleted) {\n\t            if (opts.deleted === 'ok') {\n\t              doc.value.deleted = true;\n\t              doc.doc = null;\n\t            } else {\n\t              continue;\n\t            }\n\t          }\n\t          results.push(doc);\n\t        }\n\t      });\n\t    }, websqlError(callback), function () {\n\t      callback(null, {\n\t        total_rows: totalRows,\n\t        offset: opts.skip,\n\t        rows: results\n\t      });\n\t    });\n\t  };\n\t\n\t  api._changes = function (opts) {\n\t    opts = clone(opts);\n\t\n\t    if (opts.continuous) {\n\t      var id = api._name + ':' + uuid();\n\t      websqlChanges.addListener(api._name, id, api, opts);\n\t      websqlChanges.notify(api._name);\n\t      return {\n\t        cancel: function () {\n\t          websqlChanges.removeListener(api._name, id);\n\t        }\n\t      };\n\t    }\n\t\n\t    var descending = opts.descending;\n\t\n\t    // Ignore the `since` parameter when `descending` is true\n\t    opts.since = opts.since && !descending ? opts.since : 0;\n\t\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    if (limit === 0) {\n\t      limit = 1; // per CouchDB _changes spec\n\t    }\n\t\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t    var results = [];\n\t    var numResults = 0;\n\t\n\t    function fetchChanges() {\n\t\n\t      var selectStmt =\n\t        DOC_STORE$1 + '.json AS metadata, ' +\n\t        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n\t        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n\t        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\t\n\t      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\t\n\t      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n\t        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\t\n\t      var criteria = ['maxSeq > ?'];\n\t      var sqlArgs = [opts.since];\n\t\n\t      if (opts.doc_ids) {\n\t        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n\t        sqlArgs = sqlArgs.concat(opts.doc_ids);\n\t      }\n\t\n\t      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\t\n\t      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\t\n\t      var filter = filterChange(opts);\n\t      if (!opts.view && !opts.filter) {\n\t        // we can just limit in the query\n\t        sql += ' LIMIT ' + limit;\n\t      }\n\t\n\t      var lastSeq = opts.since || 0;\n\t      db.readTransaction(function (tx) {\n\t        tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t          function reportChange(change) {\n\t            return function () {\n\t              opts.onChange(change);\n\t            };\n\t          }\n\t          for (var i = 0, l = result.rows.length; i < l; i++) {\n\t            var item = result.rows.item(i);\n\t            var metadata = safeJsonParse(item.metadata);\n\t            lastSeq = item.maxSeq;\n\t\n\t            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n\t              item.winningRev);\n\t            var change = opts.processChange(doc, metadata, opts);\n\t            change.seq = item.maxSeq;\n\t\n\t            var filtered = filter(change);\n\t            if (typeof filtered === 'object') {\n\t              return opts.complete(filtered);\n\t            }\n\t\n\t            if (filtered) {\n\t              numResults++;\n\t              if (returnDocs) {\n\t                results.push(change);\n\t              }\n\t              // process the attachment immediately\n\t              // for the benefit of live listeners\n\t              if (opts.attachments && opts.include_docs) {\n\t                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n\t                  reportChange(change));\n\t              } else {\n\t                reportChange(change)();\n\t              }\n\t            }\n\t            if (numResults === limit) {\n\t              break;\n\t            }\n\t          }\n\t        });\n\t      }, websqlError(opts.complete), function () {\n\t        if (!opts.continuous) {\n\t          opts.complete(null, {\n\t            results: results,\n\t            last_seq: lastSeq\n\t          });\n\t        }\n\t      });\n\t    }\n\t\n\t    fetchChanges();\n\t  };\n\t\n\t  api._close = function (callback) {\n\t    //WebSQL databases do not need to be closed\n\t    callback();\n\t  };\n\t\n\t  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n\t    var res;\n\t    var tx = opts.ctx;\n\t    var digest = attachment.digest;\n\t    var type = attachment.content_type;\n\t    var sql = 'SELECT escaped, ' +\n\t      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n\t      ATTACH_STORE$1 + ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      // websql has a bug where \\u0000 causes early truncation in strings\n\t      // and blobs. to work around this, we used to use the hex() function,\n\t      // but that's not performant. after migration 6, we remove \\u0000\n\t      // and add it back in afterwards\n\t      var item = result.rows.item(0);\n\t      var data = item.escaped ? unescapeBlob(item.body) :\n\t        parseHexString(item.body, encoding);\n\t      if (opts.binary) {\n\t        res = binStringToBluffer(data, type);\n\t      } else {\n\t        res = thisBtoa(data);\n\t      }\n\t      callback(null, res);\n\t    });\n\t  };\n\t\n\t  api._getRevisionTree = function (docId, callback) {\n\t    db.readTransaction(function (tx) {\n\t      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n\t      tx.executeSql(sql, [docId], function (tx, result) {\n\t        if (!result.rows.length) {\n\t          callback(createError(MISSING_DOC));\n\t        } else {\n\t          var data = safeJsonParse(result.rows.item(0).metadata);\n\t          callback(null, data.rev_tree);\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  api._doCompaction = function (docId, revs, callback) {\n\t    if (!revs.length) {\n\t      return callback();\n\t    }\n\t    db.transaction(function (tx) {\n\t\n\t      // update doc store\n\t      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n\t      tx.executeSql(sql, [docId], function (tx, result) {\n\t        var metadata = safeJsonParse(result.rows.item(0).metadata);\n\t        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                                           revHash, ctx, opts) {\n\t          var rev = pos + '-' + revHash;\n\t          if (revs.indexOf(rev) !== -1) {\n\t            opts.status = 'missing';\n\t          }\n\t        });\n\t\n\t        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n\t        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n\t      });\n\t\n\t      compactRevs$1(revs, docId, tx);\n\t    }, websqlError(callback), function () {\n\t      callback();\n\t    });\n\t  };\n\t\n\t  api._getLocal = function (id, callback) {\n\t    db.readTransaction(function (tx) {\n\t      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n\t      tx.executeSql(sql, [id], function (tx, res) {\n\t        if (res.rows.length) {\n\t          var item = res.rows.item(0);\n\t          var doc = unstringifyDoc(item.json, id, item.rev);\n\t          callback(null, doc);\n\t        } else {\n\t          callback(createError(MISSING_DOC));\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  api._putLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    delete doc._revisions; // ignore this, trust the rev\n\t    var oldRev = doc._rev;\n\t    var id = doc._id;\n\t    var newRev;\n\t    if (!oldRev) {\n\t      newRev = doc._rev = '0-1';\n\t    } else {\n\t      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n\t    }\n\t    var json = stringifyDoc(doc);\n\t\n\t    var ret;\n\t    function putLocal(tx) {\n\t      var sql;\n\t      var values;\n\t      if (oldRev) {\n\t        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n\t          'WHERE id=? AND rev=?';\n\t        values = [newRev, json, id, oldRev];\n\t      } else {\n\t        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n\t        values = [id, newRev, json];\n\t      }\n\t      tx.executeSql(sql, values, function (tx, res) {\n\t        if (res.rowsAffected) {\n\t          ret = {ok: true, id: id, rev: newRev};\n\t          if (opts.ctx) { // return immediately\n\t            callback(null, ret);\n\t          }\n\t        } else {\n\t          callback(createError(REV_CONFLICT));\n\t        }\n\t      }, function () {\n\t        callback(createError(REV_CONFLICT));\n\t        return false; // ack that we handled the error\n\t      });\n\t    }\n\t\n\t    if (opts.ctx) {\n\t      putLocal(opts.ctx);\n\t    } else {\n\t      db.transaction(putLocal, websqlError(callback), function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  api._removeLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var ret;\n\t\n\t    function removeLocal(tx) {\n\t      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n\t      var params = [doc._id, doc._rev];\n\t      tx.executeSql(sql, params, function (tx, res) {\n\t        if (!res.rowsAffected) {\n\t          return callback(createError(MISSING_DOC));\n\t        }\n\t        ret = {ok: true, id: doc._id, rev: '0-0'};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t\n\t    if (opts.ctx) {\n\t      removeLocal(opts.ctx);\n\t    } else {\n\t      db.transaction(removeLocal, websqlError(callback), function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  api._destroy = function (opts, callback) {\n\t    websqlChanges.removeAllListeners(api._name);\n\t    db.transaction(function (tx) {\n\t      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n\t        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n\t      stores.forEach(function (store) {\n\t        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n\t      });\n\t    }, websqlError(callback), function () {\n\t      if (hasLocalStorage()) {\n\t        delete window.localStorage['_pouch__websqldb_' + api._name];\n\t        delete window.localStorage[api._name];\n\t      }\n\t      callback(null, {'ok': true});\n\t    });\n\t  };\n\t}\n\t\n\tfunction canOpenTestDB() {\n\t  try {\n\t    openDatabase('_pouch_validate_websql', 1, '', 1);\n\t    return true;\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\t// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n\t// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n\t// https://github.com/pouchdb/pouchdb/issues/5079)\n\t// This has been fixed in latest WebKit, so we try to detect it here.\n\tfunction isValidWebSQL() {\n\t  // WKWebView UA:\n\t  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n\t  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n\t  // Chrome for iOS UA:\n\t  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n\t  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n\t  //   Mobile/9B206 Safari/7534.48.3\n\t  // Firefox for iOS UA:\n\t  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n\t  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\t\n\t  // indexedDB is null on some UIWebViews and undefined in others\n\t  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n\t  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n\t      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n\t    // definitely not WKWebView, avoid creating an unnecessary database\n\t    return true;\n\t  }\n\t  // Cache the result in LocalStorage. Reason we do this is because if we\n\t  // call openDatabase() too many times, Safari craps out in SauceLabs and\n\t  // starts throwing DOM Exception 14s.\n\t  var hasLS = hasLocalStorage();\n\t  // Include user agent in the hash, so that if Safari is upgraded, we don't\n\t  // continually think it's broken.\n\t  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n\t  if (hasLS && localStorage[localStorageKey]) {\n\t    return localStorage[localStorageKey] === '1';\n\t  }\n\t  var openedTestDB = canOpenTestDB();\n\t  if (hasLS) {\n\t    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n\t  }\n\t  return openedTestDB;\n\t}\n\t\n\tfunction valid() {\n\t  if (typeof openDatabase !== 'function') {\n\t    return false;\n\t  }\n\t  return isValidWebSQL();\n\t}\n\t\n\tfunction openDB(name, version, description, size) {\n\t  // Traditional WebSQL API\n\t  return openDatabase(name, version, description, size);\n\t}\n\t\n\tfunction WebSQLPouch(opts, callback) {\n\t  var _opts = assign$1({\n\t    websql: openDB\n\t  }, opts);\n\t\n\t  WebSqlPouch$1.call(this, _opts, callback);\n\t}\n\t\n\tWebSQLPouch.valid = valid;\n\t\n\tWebSQLPouch.use_prefix = true;\n\t\n\tvar WebSqlPouch = function (PouchDB) {\n\t  PouchDB.adapter('websql', WebSQLPouch, true);\n\t};\n\t\n\t/* global fetch */\n\t/* global Headers */\n\tfunction wrappedFetch() {\n\t  var wrappedPromise = {};\n\t\n\t  var promise = new PouchPromise$1(function (resolve, reject) {\n\t    wrappedPromise.resolve = resolve;\n\t    wrappedPromise.reject = reject;\n\t  });\n\t\n\t  var args = new Array(arguments.length);\n\t\n\t  for (var i = 0; i < args.length; i++) {\n\t    args[i] = arguments[i];\n\t  }\n\t\n\t  wrappedPromise.promise = promise;\n\t\n\t  PouchPromise$1.resolve().then(function () {\n\t    return fetch.apply(null, args);\n\t  }).then(function (response) {\n\t    wrappedPromise.resolve(response);\n\t  }).catch(function (error) {\n\t    wrappedPromise.reject(error);\n\t  });\n\t\n\t  return wrappedPromise;\n\t}\n\t\n\tfunction fetchRequest(options, callback) {\n\t  var wrappedPromise, timer, response;\n\t\n\t  var headers = new Headers();\n\t\n\t  var fetchOptions = {\n\t    method: options.method,\n\t    credentials: 'include',\n\t    headers: headers\n\t  };\n\t\n\t  if (options.json) {\n\t    headers.set('Accept', 'application/json');\n\t    headers.set('Content-Type', options.headers['Content-Type'] ||\n\t      'application/json');\n\t  }\n\t\n\t  if (options.body &&\n\t      options.processData &&\n\t      typeof options.body !== 'string') {\n\t    fetchOptions.body = JSON.stringify(options.body);\n\t  } else if ('body' in options) {\n\t    fetchOptions.body = options.body;\n\t  } else {\n\t    fetchOptions.body = null;\n\t  }\n\t\n\t  Object.keys(options.headers).forEach(function (key) {\n\t    if (options.headers.hasOwnProperty(key)) {\n\t      headers.set(key, options.headers[key]);\n\t    }\n\t  });\n\t\n\t  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\t\n\t  if (options.timeout > 0) {\n\t    timer = setTimeout(function () {\n\t      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n\t        options.url));\n\t    }, options.timeout);\n\t  }\n\t\n\t  wrappedPromise.promise.then(function (fetchResponse) {\n\t    response = {\n\t      statusCode: fetchResponse.status\n\t    };\n\t\n\t    if (options.timeout > 0) {\n\t      clearTimeout(timer);\n\t    }\n\t\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n\t    }\n\t\n\t    return fetchResponse.json();\n\t  }).then(function (result) {\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      callback(null, response, result);\n\t    } else {\n\t      result.status = response.statusCode;\n\t      callback(result);\n\t    }\n\t  }).catch(function (error) {\n\t    if (!error) {\n\t      // this happens when the listener is canceled\n\t      error = new Error('canceled');\n\t    }\n\t    callback(error);\n\t  });\n\t\n\t  return {abort: wrappedPromise.reject};\n\t}\n\t\n\tfunction xhRequest(options, callback) {\n\t\n\t  var xhr, timer;\n\t  var timedout = false;\n\t\n\t  var abortReq = function () {\n\t    xhr.abort();\n\t    cleanUp();\n\t  };\n\t\n\t  var timeoutReq = function () {\n\t    timedout = true;\n\t    xhr.abort();\n\t    cleanUp();\n\t  };\n\t\n\t  var ret = {abort: abortReq};\n\t\n\t  var cleanUp = function () {\n\t    clearTimeout(timer);\n\t    ret.abort = function () {};\n\t    if (xhr) {\n\t      xhr.onprogress = undefined;\n\t      if (xhr.upload) {\n\t        xhr.upload.onprogress = undefined;\n\t      }\n\t      xhr.onreadystatechange = undefined;\n\t      xhr = undefined;\n\t    }\n\t  };\n\t\n\t  if (options.xhr) {\n\t    xhr = new options.xhr();\n\t  } else {\n\t    xhr = new XMLHttpRequest();\n\t  }\n\t\n\t  try {\n\t    xhr.open(options.method, options.url);\n\t  } catch (exception) {\n\t    return callback(new Error(exception.name || 'Url is invalid'));\n\t  }\n\t\n\t  xhr.withCredentials = ('withCredentials' in options) ?\n\t    options.withCredentials : true;\n\t\n\t  if (options.method === 'GET') {\n\t    delete options.headers['Content-Type'];\n\t  } else if (options.json) {\n\t    options.headers.Accept = 'application/json';\n\t    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n\t      'application/json';\n\t    if (options.body &&\n\t        options.processData &&\n\t        typeof options.body !== \"string\") {\n\t      options.body = JSON.stringify(options.body);\n\t    }\n\t  }\n\t\n\t  if (options.binary) {\n\t    xhr.responseType = 'arraybuffer';\n\t  }\n\t\n\t  if (!('body' in options)) {\n\t    options.body = null;\n\t  }\n\t\n\t  for (var key in options.headers) {\n\t    if (options.headers.hasOwnProperty(key)) {\n\t      xhr.setRequestHeader(key, options.headers[key]);\n\t    }\n\t  }\n\t\n\t  if (options.timeout > 0) {\n\t    timer = setTimeout(timeoutReq, options.timeout);\n\t    xhr.onprogress = function () {\n\t      clearTimeout(timer);\n\t      if(xhr.readyState !== 4) {\n\t        timer = setTimeout(timeoutReq, options.timeout);\n\t      }\n\t    };\n\t    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n\t      xhr.upload.onprogress = xhr.onprogress;\n\t    }\n\t  }\n\t\n\t  xhr.onreadystatechange = function () {\n\t    if (xhr.readyState !== 4) {\n\t      return;\n\t    }\n\t\n\t    var response = {\n\t      statusCode: xhr.status\n\t    };\n\t\n\t    if (xhr.status >= 200 && xhr.status < 300) {\n\t      var data;\n\t      if (options.binary) {\n\t        data = createBlob([xhr.response || ''], {\n\t          type: xhr.getResponseHeader('Content-Type')\n\t        });\n\t      } else {\n\t        data = xhr.responseText;\n\t      }\n\t      callback(null, response, data);\n\t    } else {\n\t      var err = {};\n\t      if (timedout) {\n\t        err = new Error('ETIMEDOUT');\n\t        err.code = 'ETIMEDOUT';\n\t      } else if (typeof xhr.response === 'string') {\n\t        try {\n\t          err = JSON.parse(xhr.response);\n\t        } catch(e) {}\n\t      }\n\t      err.status = xhr.status;\n\t      callback(err);\n\t    }\n\t    cleanUp();\n\t  };\n\t\n\t  if (options.body && (options.body instanceof Blob)) {\n\t    readAsArrayBuffer(options.body, function (arrayBuffer) {\n\t      xhr.send(arrayBuffer);\n\t    });\n\t  } else {\n\t    xhr.send(options.body);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction testXhr() {\n\t  try {\n\t    new XMLHttpRequest();\n\t    return true;\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\tvar hasXhr = testXhr();\n\t\n\tfunction ajax$1(options, callback) {\n\t  if (!false && (hasXhr || options.xhr)) {\n\t    return xhRequest(options, callback);\n\t  } else {\n\t    return fetchRequest(options, callback);\n\t  }\n\t}\n\t\n\t// the blob already has a type; do nothing\n\tvar res$2 = function () {};\n\t\n\tfunction defaultBody() {\n\t  return '';\n\t}\n\t\n\tfunction ajaxCore$1(options, callback) {\n\t\n\t  options = clone(options);\n\t\n\t  var defaultOptions = {\n\t    method : \"GET\",\n\t    headers: {},\n\t    json: true,\n\t    processData: true,\n\t    timeout: 10000,\n\t    cache: false\n\t  };\n\t\n\t  options = assign$1(defaultOptions, options);\n\t\n\t  function onSuccess(obj, resp, cb) {\n\t    if (!options.binary && options.json && typeof obj === 'string') {\n\t      /* istanbul ignore next */\n\t      try {\n\t        obj = JSON.parse(obj);\n\t      } catch (e) {\n\t        // Probably a malformed JSON from server\n\t        return cb(e);\n\t      }\n\t    }\n\t    if (Array.isArray(obj)) {\n\t      obj = obj.map(function (v) {\n\t        if (v.error || v.missing) {\n\t          return generateErrorFromResponse(v);\n\t        } else {\n\t          return v;\n\t        }\n\t      });\n\t    }\n\t    if (options.binary) {\n\t      res$2(obj, resp);\n\t    }\n\t    cb(null, obj, resp);\n\t  }\n\t\n\t  if (options.json) {\n\t    if (!options.binary) {\n\t      options.headers.Accept = 'application/json';\n\t    }\n\t    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n\t      'application/json';\n\t  }\n\t\n\t  if (options.binary) {\n\t    options.encoding = null;\n\t    options.json = false;\n\t  }\n\t\n\t  if (!options.processData) {\n\t    options.json = false;\n\t  }\n\t\n\t  return ajax$1(options, function (err, response, body) {\n\t\n\t    if (err) {\n\t      return callback(generateErrorFromResponse(err));\n\t    }\n\t\n\t    var error;\n\t    var content_type = response.headers && response.headers['content-type'];\n\t    var data = body || defaultBody();\n\t\n\t    // CouchDB doesn't always return the right content-type for JSON data, so\n\t    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n\t    if (!options.binary && (options.json || !options.processData) &&\n\t        typeof data !== 'object' &&\n\t        (/json/.test(content_type) ||\n\t         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n\t      try {\n\t        data = JSON.parse(data.toString());\n\t      } catch (e) {}\n\t    }\n\t\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      onSuccess(data, response, callback);\n\t    } else {\n\t      error = generateErrorFromResponse(data);\n\t      error.status = response.statusCode;\n\t      callback(error);\n\t    }\n\t  });\n\t}\n\t\n\tfunction ajax(opts, callback) {\n\t\n\t  // cache-buster, specifically designed to work around IE's aggressive caching\n\t  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n\t  // Also Safari caches POSTs, so we need to cache-bust those too.\n\t  var ua = (navigator && navigator.userAgent) ?\n\t    navigator.userAgent.toLowerCase() : '';\n\t\n\t  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n\t  var isIE = ua.indexOf('msie') !== -1;\n\t  var isEdge = ua.indexOf('edge') !== -1;\n\t\n\t  // it appears the new version of safari also caches GETs,\n\t  // see https://github.com/pouchdb/pouchdb/issues/5010\n\t  var shouldCacheBust = (isSafari ||\n\t    ((isIE || isEdge) && opts.method === 'GET'));\n\t\n\t  var cache = 'cache' in opts ? opts.cache : true;\n\t\n\t  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\t\n\t  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n\t    var hasArgs = opts.url.indexOf('?') !== -1;\n\t    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n\t  }\n\t\n\t  return ajaxCore$1(opts, callback);\n\t}\n\t\n\t// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n\t// but much smaller in code size. limits the number of concurrent promises that are executed\n\t\n\tfunction pool(promiseFactories, limit) {\n\t  return new PouchPromise$1(function (resolve, reject) {\n\t    var running = 0;\n\t    var current = 0;\n\t    var done = 0;\n\t    var len = promiseFactories.length;\n\t    var err;\n\t\n\t    function runNext() {\n\t      running++;\n\t      promiseFactories[current++]().then(onSuccess, onError);\n\t    }\n\t\n\t    function doNext() {\n\t      if (++done === len) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          reject(err);\n\t        } else {\n\t          resolve();\n\t        }\n\t      } else {\n\t        runNextBatch();\n\t      }\n\t    }\n\t\n\t    function onSuccess() {\n\t      running--;\n\t      doNext();\n\t    }\n\t\n\t    /* istanbul ignore next */\n\t    function onError(thisErr) {\n\t      running--;\n\t      err = err || thisErr;\n\t      doNext();\n\t    }\n\t\n\t    function runNextBatch() {\n\t      while (running < limit && current < len) {\n\t        runNext();\n\t      }\n\t    }\n\t\n\t    runNextBatch();\n\t  });\n\t}\n\t\n\tvar CHANGES_BATCH_SIZE = 25;\n\tvar MAX_SIMULTANEOUS_REVS = 50;\n\t\n\tvar supportsBulkGetMap = {};\n\t\n\tvar log$1 = debug('pouchdb:http');\n\t\n\tfunction readAttachmentsAsBlobOrBuffer(row) {\n\t  var atts = row.doc && row.doc._attachments;\n\t  if (!atts) {\n\t    return;\n\t  }\n\t  Object.keys(atts).forEach(function (filename) {\n\t    var att = atts[filename];\n\t    att.data = b64ToBluffer(att.data, att.content_type);\n\t  });\n\t}\n\t\n\tfunction encodeDocId(id) {\n\t  if (/^_design/.test(id)) {\n\t    return '_design/' + encodeURIComponent(id.slice(8));\n\t  }\n\t  if (/^_local/.test(id)) {\n\t    return '_local/' + encodeURIComponent(id.slice(7));\n\t  }\n\t  return encodeURIComponent(id);\n\t}\n\t\n\tfunction preprocessAttachments$2(doc) {\n\t  if (!doc._attachments || !Object.keys(doc._attachments)) {\n\t    return PouchPromise$1.resolve();\n\t  }\n\t\n\t  return PouchPromise$1.all(Object.keys(doc._attachments).map(function (key) {\n\t    var attachment = doc._attachments[key];\n\t    if (attachment.data && typeof attachment.data !== 'string') {\n\t      return new PouchPromise$1(function (resolve) {\n\t        blobToBase64(attachment.data, resolve);\n\t      }).then(function (b64) {\n\t        attachment.data = b64;\n\t      });\n\t    }\n\t  }));\n\t}\n\t\n\tfunction hasUrlPrefix(opts) {\n\t  if (!opts.prefix) {\n\t    return false;\n\t  }\n\t\n\t  var protocol = parseUri(opts.prefix).protocol;\n\t\n\t  return protocol === 'http' || protocol === 'https';\n\t}\n\t\n\t// Get all the information you possibly can about the URI given by name and\n\t// return it as a suitable object.\n\tfunction getHost(name, opts) {\n\t\n\t  // encode db name if opts.prefix is a url (#5574)\n\t  if (hasUrlPrefix(opts)) {\n\t    var dbName = opts.name.substr(opts.prefix.length);\n\t    name = opts.prefix + encodeURIComponent(dbName);\n\t  }\n\t\n\t  // Prase the URI into all its little bits\n\t  var uri = parseUri(name);\n\t\n\t  // Store the user and password as a separate auth object\n\t  if (uri.user || uri.password) {\n\t    uri.auth = {username: uri.user, password: uri.password};\n\t  }\n\t\n\t  // Split the path part of the URI into parts using '/' as the delimiter\n\t  // after removing any leading '/' and any trailing '/'\n\t  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\t\n\t  // Store the first part as the database name and remove it from the parts\n\t  // array\n\t  uri.db = parts.pop();\n\t  // Prevent double encoding of URI component\n\t  if (uri.db.indexOf('%') === -1) {\n\t    uri.db = encodeURIComponent(uri.db);\n\t  }\n\t\n\t  // Restore the path by joining all the remaining parts (all the parts\n\t  // except for the database name) with '/'s\n\t  uri.path = parts.join('/');\n\t\n\t  return uri;\n\t}\n\t\n\t// Generate a URL with the host data given by opts and the given path\n\tfunction genDBUrl(opts, path) {\n\t  return genUrl(opts, opts.db + '/' + path);\n\t}\n\t\n\t// Generate a URL with the host data given by opts and the given path\n\tfunction genUrl(opts, path) {\n\t  // If the host already has a path, then we need to have a path delimiter\n\t  // Otherwise, the path delimiter is the empty string\n\t  var pathDel = !opts.path ? '' : '/';\n\t\n\t  // If the host already has a path, then we need to have a path delimiter\n\t  // Otherwise, the path delimiter is the empty string\n\t  return opts.protocol + '://' + opts.host +\n\t         (opts.port ? (':' + opts.port) : '') +\n\t         '/' + opts.path + pathDel + path;\n\t}\n\t\n\tfunction paramsToStr(params) {\n\t  return '?' + Object.keys(params).map(function (k) {\n\t    return k + '=' + encodeURIComponent(params[k]);\n\t  }).join('&');\n\t}\n\t\n\t// Implements the PouchDB API for dealing with CouchDB instances over HTTP\n\tfunction HttpPouch(opts, callback) {\n\t\n\t  // The functions that will be publicly available for HttpPouch\n\t  var api = this;\n\t\n\t  var host = getHost(opts.name, opts);\n\t  var dbUrl = genDBUrl(host, '');\n\t\n\t  opts = clone(opts);\n\t  var ajaxOpts = opts.ajax || {};\n\t\n\t  if (opts.auth || host.auth) {\n\t    var nAuth = opts.auth || host.auth;\n\t    var str = nAuth.username + ':' + nAuth.password;\n\t    var token = thisBtoa(unescape(encodeURIComponent(str)));\n\t    ajaxOpts.headers = ajaxOpts.headers || {};\n\t    ajaxOpts.headers.Authorization = 'Basic ' + token;\n\t  }\n\t\n\t  // Not strictly necessary, but we do this because numerous tests\n\t  // rely on swapping ajax in and out.\n\t  api._ajax = ajax;\n\t\n\t  function ajax$$1(userOpts, options, callback) {\n\t    var reqAjax = userOpts.ajax || {};\n\t    var reqOpts = assign$1(clone(ajaxOpts), reqAjax, options);\n\t    log$1(reqOpts.method + ' ' + reqOpts.url);\n\t    return api._ajax(reqOpts, callback);\n\t  }\n\t\n\t  function ajaxPromise(userOpts, opts) {\n\t    return new PouchPromise$1(function (resolve, reject) {\n\t      ajax$$1(userOpts, opts, function (err, res) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          return reject(err);\n\t        }\n\t        resolve(res);\n\t      });\n\t    });\n\t  }\n\t\n\t  function adapterFun$$1(name, fun) {\n\t    return adapterFun(name, getArguments(function (args) {\n\t      setup().then(function () {\n\t        return fun.apply(this, args);\n\t      }).catch(function (e) {\n\t        var callback = args.pop();\n\t        callback(e);\n\t      });\n\t    }));\n\t  }\n\t\n\t  var setupPromise;\n\t\n\t  function setup() {\n\t    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n\t    if (opts.skipSetup || opts.skip_setup) {\n\t      return PouchPromise$1.resolve();\n\t    }\n\t\n\t    // If there is a setup in process or previous successful setup\n\t    // done then we will use that\n\t    // If previous setups have been rejected we will try again\n\t    if (setupPromise) {\n\t      return setupPromise;\n\t    }\n\t\n\t    var checkExists = {method: 'GET', url: dbUrl};\n\t    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n\t      if (err && err.status && err.status === 404) {\n\t        // Doesnt exist, create it\n\t        explainError(404, 'PouchDB is just detecting if the remote exists.');\n\t        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n\t      } else {\n\t        return PouchPromise$1.reject(err);\n\t      }\n\t    }).catch(function (err) {\n\t      // If we try to create a database that already exists, skipped in\n\t      // istanbul since its catching a race condition.\n\t      /* istanbul ignore if */\n\t      if (err && err.status && err.status === 412) {\n\t        return true;\n\t      }\n\t      return PouchPromise$1.reject(err);\n\t    });\n\t\n\t    setupPromise.catch(function () {\n\t      setupPromise = null;\n\t    });\n\t\n\t    return setupPromise;\n\t  }\n\t\n\t  nextTick(function () {\n\t    callback(null, api);\n\t  });\n\t\n\t  api.type = function () {\n\t    return 'http';\n\t  };\n\t\n\t  api.id = adapterFun$$1('id', function (callback) {\n\t    ajax$$1({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n\t      var uuid$$1 = (result && result.uuid) ?\n\t        (result.uuid + host.db) : genDBUrl(host, '');\n\t      callback(null, uuid$$1);\n\t    });\n\t  });\n\t\n\t  api.request = adapterFun$$1('request', function (options, callback) {\n\t    options.url = genDBUrl(host, options.url);\n\t    ajax$$1({}, options, callback);\n\t  });\n\t\n\t  // Sends a POST request to the host calling the couchdb _compact function\n\t  //    version: The version of CouchDB it is running\n\t  api.compact = adapterFun$$1('compact', function (opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t    ajax$$1(opts, {\n\t      url: genDBUrl(host, '_compact'),\n\t      method: 'POST'\n\t    }, function () {\n\t      function ping() {\n\t        api.info(function (err, res) {\n\t          if (res && !res.compact_running) {\n\t            callback(null, {ok: true});\n\t          } else {\n\t            setTimeout(ping, opts.interval || 200);\n\t          }\n\t        });\n\t      }\n\t      // Ping the http if it's finished compaction\n\t      ping();\n\t    });\n\t  });\n\t\n\t  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n\t    var self = this;\n\t\n\t    function doBulkGet(cb) {\n\t      var params = {};\n\t      if (opts.revs) {\n\t        params.revs = true;\n\t      }\n\t      if (opts.attachments) {\n\t        /* istanbul ignore next */\n\t        params.attachments = true;\n\t      }\n\t      if (opts.latest) {\n\t        params.latest = true;\n\t      }\n\t      ajax$$1(opts, {\n\t        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n\t        method: 'POST',\n\t        body: { docs: opts.docs}\n\t      }, cb);\n\t    }\n\t\n\t    function doBulkGetShim() {\n\t      // avoid \"url too long error\" by splitting up into multiple requests\n\t      var batchSize = MAX_SIMULTANEOUS_REVS;\n\t      var numBatches = Math.ceil(opts.docs.length / batchSize);\n\t      var numDone = 0;\n\t      var results = new Array(numBatches);\n\t\n\t      function onResult(batchNum) {\n\t        return function (err, res) {\n\t          // err is impossible because shim returns a list of errs in that case\n\t          results[batchNum] = res.results;\n\t          if (++numDone === numBatches) {\n\t            callback(null, {results: flatten(results)});\n\t          }\n\t        };\n\t      }\n\t\n\t      for (var i = 0; i < numBatches; i++) {\n\t        var subOpts = pick(opts, ['revs', 'attachments', 'latest']);\n\t        subOpts.ajax = ajaxOpts;\n\t        subOpts.docs = opts.docs.slice(i * batchSize,\n\t          Math.min(opts.docs.length, (i + 1) * batchSize));\n\t        bulkGet(self, subOpts, onResult(i));\n\t      }\n\t    }\n\t\n\t    // mark the whole database as either supporting or not supporting _bulk_get\n\t    var dbUrl = genUrl(host, '');\n\t    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\t\n\t    if (typeof supportsBulkGet !== 'boolean') {\n\t      // check if this database supports _bulk_get\n\t      doBulkGet(function (err, res) {\n\t        /* istanbul ignore else */\n\t        if (err) {\n\t          supportsBulkGetMap[dbUrl] = false;\n\t          explainError(\n\t            err.status,\n\t            'PouchDB is just detecting if the remote ' +\n\t            'supports the _bulk_get API.'\n\t          );\n\t          doBulkGetShim();\n\t        } else {\n\t          supportsBulkGetMap[dbUrl] = true;\n\t          callback(null, res);\n\t        }\n\t      });\n\t    } else if (supportsBulkGet) {\n\t      /* istanbul ignore next */\n\t      doBulkGet(callback);\n\t    } else {\n\t      doBulkGetShim();\n\t    }\n\t  });\n\t\n\t  // Calls GET on the host, which gets back a JSON string containing\n\t  //    couchdb: A welcome string\n\t  //    version: The version of CouchDB it is running\n\t  api._info = function (callback) {\n\t    setup().then(function () {\n\t      ajax$$1({}, {\n\t        method: 'GET',\n\t        url: genDBUrl(host, '')\n\t      }, function (err, res) {\n\t        /* istanbul ignore next */\n\t        if (err) {\n\t        return callback(err);\n\t        }\n\t        res.host = genDBUrl(host, '');\n\t        callback(null, res);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t  // Get the document with the given id from the database given by host.\n\t  // The id could be solely the _id in the database, or it may be a\n\t  // _design/ID or _local/ID path\n\t  api.get = adapterFun$$1('get', function (id, opts, callback) {\n\t    // If no options were given, set the callback to the second parameter\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t\n\t    // List of parameters to add to the GET request\n\t    var params = {};\n\t\n\t    if (opts.revs) {\n\t      params.revs = true;\n\t    }\n\t\n\t    if (opts.revs_info) {\n\t      params.revs_info = true;\n\t    }\n\t\n\t    if (opts.latest) {\n\t      params.latest = true;\n\t    }\n\t\n\t    if (opts.open_revs) {\n\t      if (opts.open_revs !== \"all\") {\n\t        opts.open_revs = JSON.stringify(opts.open_revs);\n\t      }\n\t      params.open_revs = opts.open_revs;\n\t    }\n\t\n\t    if (opts.rev) {\n\t      params.rev = opts.rev;\n\t    }\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = opts.conflicts;\n\t    }\n\t\n\t    id = encodeDocId(id);\n\t\n\t    // Set the options for the ajax call\n\t    var options = {\n\t      method: 'GET',\n\t      url: genDBUrl(host, id + paramsToStr(params))\n\t    };\n\t\n\t    function fetchAttachments(doc) {\n\t      var atts = doc._attachments;\n\t      var filenames = atts && Object.keys(atts);\n\t      if (!atts || !filenames.length) {\n\t        return;\n\t      }\n\t      // we fetch these manually in separate XHRs, because\n\t      // Sync Gateway would normally send it back as multipart/mixed,\n\t      // which we cannot parse. Also, this is more efficient than\n\t      // receiving attachments as base64-encoded strings.\n\t      function fetch(filename) {\n\t        var att = atts[filename];\n\t        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n\t          '?rev=' + doc._rev;\n\t        return ajaxPromise(opts, {\n\t          method: 'GET',\n\t          url: genDBUrl(host, path),\n\t          binary: true\n\t        }).then(function (blob$$1) {\n\t          if (opts.binary) {\n\t            return blob$$1;\n\t          }\n\t          return new PouchPromise$1(function (resolve) {\n\t            blobToBase64(blob$$1, resolve);\n\t          });\n\t        }).then(function (data) {\n\t          delete att.stub;\n\t          delete att.length;\n\t          att.data = data;\n\t        });\n\t      }\n\t\n\t      var promiseFactories = filenames.map(function (filename) {\n\t        return function () {\n\t          return fetch(filename);\n\t        };\n\t      });\n\t\n\t      // This limits the number of parallel xhr requests to 5 any time\n\t      // to avoid issues with maximum browser request limits\n\t      return pool(promiseFactories, 5);\n\t    }\n\t\n\t    function fetchAllAttachments(docOrDocs) {\n\t      if (Array.isArray(docOrDocs)) {\n\t        return PouchPromise$1.all(docOrDocs.map(function (doc) {\n\t          if (doc.ok) {\n\t            return fetchAttachments(doc.ok);\n\t          }\n\t        }));\n\t      }\n\t      return fetchAttachments(docOrDocs);\n\t    }\n\t\n\t    ajaxPromise(opts, options).then(function (res) {\n\t      return PouchPromise$1.resolve().then(function () {\n\t        if (opts.attachments) {\n\t          return fetchAllAttachments(res);\n\t        }\n\t      }).then(function () {\n\t        callback(null, res);\n\t      });\n\t    }).catch(callback);\n\t  });\n\t\n\t  // Delete the document given by doc from the database given by host.\n\t  api.remove = adapterFun$$1('remove',\n\t      function (docOrId, optsOrRev, opts, callback) {\n\t    var doc;\n\t    if (typeof optsOrRev === 'string') {\n\t      // id, rev, opts, callback style\n\t      doc = {\n\t        _id: docOrId,\n\t        _rev: optsOrRev\n\t      };\n\t      if (typeof opts === 'function') {\n\t        callback = opts;\n\t        opts = {};\n\t      }\n\t    } else {\n\t      // doc, opts, callback style\n\t      doc = docOrId;\n\t      if (typeof optsOrRev === 'function') {\n\t        callback = optsOrRev;\n\t        opts = {};\n\t      } else {\n\t        callback = opts;\n\t        opts = optsOrRev;\n\t      }\n\t    }\n\t\n\t    var rev = (doc._rev || opts.rev);\n\t\n\t    // Delete the document\n\t    ajax$$1(opts, {\n\t      method: 'DELETE',\n\t      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev\n\t    }, callback);\n\t  });\n\t\n\t  function encodeAttachmentId(attachmentId) {\n\t    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n\t  }\n\t\n\t  // Get the attachment\n\t  api.getAttachment =\n\t    adapterFun$$1('getAttachment', function (docId, attachmentId, opts,\n\t                                                callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n\t    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n\t      encodeAttachmentId(attachmentId) + params;\n\t    ajax$$1(opts, {\n\t      method: 'GET',\n\t      url: url,\n\t      binary: true\n\t    }, callback);\n\t  });\n\t\n\t  // Remove the attachment given by the id and rev\n\t  api.removeAttachment =\n\t    adapterFun$$1('removeAttachment', function (docId, attachmentId, rev,\n\t                                                   callback) {\n\t\n\t    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n\t      encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n\t\n\t    ajax$$1({}, {\n\t      method: 'DELETE',\n\t      url: url\n\t    }, callback);\n\t  });\n\t\n\t  // Add the attachment given by blob and its contentType property\n\t  // to the document with the given id, the revision given by rev, and\n\t  // add it to the database given by host.\n\t  api.putAttachment =\n\t    adapterFun$$1('putAttachment', function (docId, attachmentId, rev, blob$$1,\n\t                                                type, callback) {\n\t    if (typeof type === 'function') {\n\t      callback = type;\n\t      type = blob$$1;\n\t      blob$$1 = rev;\n\t      rev = null;\n\t    }\n\t    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n\t    var url = genDBUrl(host, id);\n\t    if (rev) {\n\t      url += '?rev=' + rev;\n\t    }\n\t\n\t    if (typeof blob$$1 === 'string') {\n\t      // input is assumed to be a base64 string\n\t      var binary;\n\t      try {\n\t        binary = thisAtob(blob$$1);\n\t      } catch (err) {\n\t        return callback(createError(BAD_ARG,\n\t                        'Attachment is not a valid base64 string'));\n\t      }\n\t      blob$$1 = binary ? binStringToBluffer(binary, type) : '';\n\t    }\n\t\n\t    var opts = {\n\t      headers: {'Content-Type': type},\n\t      method: 'PUT',\n\t      url: url,\n\t      processData: false,\n\t      body: blob$$1,\n\t      timeout: ajaxOpts.timeout || 60000\n\t    };\n\t    // Add the attachment\n\t    ajax$$1({}, opts, callback);\n\t  });\n\t\n\t  // Update/create multiple documents given by req in the database\n\t  // given by host.\n\t  api._bulkDocs = function (req, opts, callback) {\n\t    // If new_edits=false then it prevents the database from creating\n\t    // new revision numbers for the documents. Instead it just uses\n\t    // the old ones. This is used in database replication.\n\t    req.new_edits = opts.new_edits;\n\t\n\t    setup().then(function () {\n\t      return PouchPromise$1.all(req.docs.map(preprocessAttachments$2));\n\t    }).then(function () {\n\t      // Update/create the documents\n\t      ajax$$1(opts, {\n\t        method: 'POST',\n\t        url: genDBUrl(host, '_bulk_docs'),\n\t        timeout: opts.timeout,\n\t        body: req\n\t      }, function (err, results) {\n\t        if (err) {\n\t          return callback(err);\n\t        }\n\t        results.forEach(function (result) {\n\t          result.ok = true; // smooths out cloudant not adding this\n\t        });\n\t        callback(null, results);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t\n\t  // Update/create document\n\t  api._put = function (doc, opts, callback) {\n\t    setup().then(function () {\n\t      return preprocessAttachments$2(doc);\n\t    }).then(function () {\n\t      // Update/create the document\n\t      ajax$$1(opts, {\n\t        method: 'PUT',\n\t        url: genDBUrl(host, encodeDocId(doc._id)),\n\t        body: doc\n\t      }, function (err, result) {\n\t        if (err) {\n\t          return callback(err);\n\t        }\n\t        callback(null, result);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t\n\t  // Get a listing of the documents in the database given\n\t  // by host and ordered by increasing id.\n\t  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t\n\t    // List of parameters to add to the GET request\n\t    var params = {};\n\t    var body;\n\t    var method = 'GET';\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = true;\n\t    }\n\t\n\t    if (opts.descending) {\n\t      params.descending = true;\n\t    }\n\t\n\t    if (opts.include_docs) {\n\t      params.include_docs = true;\n\t    }\n\t\n\t    // added in CouchDB 1.6.0\n\t    if (opts.attachments) {\n\t      params.attachments = true;\n\t    }\n\t\n\t    if (opts.key) {\n\t      params.key = JSON.stringify(opts.key);\n\t    }\n\t\n\t    if (opts.start_key) {\n\t      opts.startkey = opts.start_key;\n\t    }\n\t\n\t    if (opts.startkey) {\n\t      params.startkey = JSON.stringify(opts.startkey);\n\t    }\n\t\n\t    if (opts.end_key) {\n\t      opts.endkey = opts.end_key;\n\t    }\n\t\n\t    if (opts.endkey) {\n\t      params.endkey = JSON.stringify(opts.endkey);\n\t    }\n\t\n\t    if (typeof opts.inclusive_end !== 'undefined') {\n\t      params.inclusive_end = !!opts.inclusive_end;\n\t    }\n\t\n\t    if (typeof opts.limit !== 'undefined') {\n\t      params.limit = opts.limit;\n\t    }\n\t\n\t    if (typeof opts.skip !== 'undefined') {\n\t      params.skip = opts.skip;\n\t    }\n\t\n\t    var paramStr = paramsToStr(params);\n\t\n\t    if (typeof opts.keys !== 'undefined') {\n\t      method = 'POST';\n\t      body = {keys: opts.keys};\n\t    }\n\t\n\t    // Get the document listing\n\t    ajaxPromise(opts, {\n\t      method: method,\n\t      url: genDBUrl(host, '_all_docs' + paramStr),\n\t      body: body\n\t    }).then(function (res) {\n\t      if (opts.include_docs && opts.attachments && opts.binary) {\n\t        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n\t      }\n\t      callback(null, res);\n\t    }).catch(callback);\n\t  });\n\t\n\t  // Get a list of changes made to documents in the database given by host.\n\t  // TODO According to the README, there should be two other methods here,\n\t  // api.changes.addListener and api.changes.removeListener.\n\t  api._changes = function (opts) {\n\t\n\t    // We internally page the results of a changes request, this means\n\t    // if there is a large set of changes to be returned we can start\n\t    // processing them quicker instead of waiting on the entire\n\t    // set of changes to return and attempting to process them at once\n\t    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\t\n\t    opts = clone(opts);\n\t    opts.timeout = ('timeout' in opts) ? opts.timeout :\n\t      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n\t      30 * 1000;\n\t\n\t    // We give a 5 second buffer for CouchDB changes to respond with\n\t    // an ok timeout (if a timeout it set)\n\t    var params = opts.timeout ? {timeout: opts.timeout - (5 * 1000)} : {};\n\t    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t    //\n\t    var leftToFetch = limit;\n\t\n\t    if (opts.style) {\n\t      params.style = opts.style;\n\t    }\n\t\n\t    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n\t      params.include_docs = true;\n\t    }\n\t\n\t    if (opts.attachments) {\n\t      params.attachments = true;\n\t    }\n\t\n\t    if (opts.continuous) {\n\t      params.feed = 'longpoll';\n\t    }\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = true;\n\t    }\n\t\n\t    if (opts.descending) {\n\t      params.descending = true;\n\t    }\n\t\n\t    if ('heartbeat' in opts) {\n\t      // If the heartbeat value is false, it disables the default heartbeat\n\t      if (opts.heartbeat) {\n\t        params.heartbeat = opts.heartbeat;\n\t      }\n\t    } else if (opts.continuous) {\n\t      // Default heartbeat to 10 seconds\n\t      params.heartbeat = 10000;\n\t    }\n\t\n\t    if (opts.filter && typeof opts.filter === 'string') {\n\t      params.filter = opts.filter;\n\t    }\n\t\n\t    if (opts.view && typeof opts.view === 'string') {\n\t      params.filter = '_view';\n\t      params.view = opts.view;\n\t    }\n\t\n\t    // If opts.query_params exists, pass it through to the changes request.\n\t    // These parameters may be used by the filter on the source database.\n\t    if (opts.query_params && typeof opts.query_params === 'object') {\n\t      for (var param_name in opts.query_params) {\n\t        /* istanbul ignore else */\n\t        if (opts.query_params.hasOwnProperty(param_name)) {\n\t          params[param_name] = opts.query_params[param_name];\n\t        }\n\t      }\n\t    }\n\t\n\t    var method = 'GET';\n\t    var body;\n\t\n\t    if (opts.doc_ids) {\n\t      // set this automagically for the user; it's annoying that couchdb\n\t      // requires both a \"filter\" and a \"doc_ids\" param.\n\t      params.filter = '_doc_ids';\n\t      method = 'POST';\n\t      body = {doc_ids: opts.doc_ids };\n\t    }\n\t\n\t    var xhr;\n\t    var lastFetchedSeq;\n\t\n\t    // Get all the changes starting wtih the one immediately after the\n\t    // sequence number given by since.\n\t    var fetch = function (since, callback) {\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t      params.since = since;\n\t      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n\t      /* istanbul ignore next */\n\t      if (typeof params.since === \"object\") {\n\t        params.since = JSON.stringify(params.since);\n\t      }\n\t\n\t      if (opts.descending) {\n\t        if (limit) {\n\t          params.limit = leftToFetch;\n\t        }\n\t      } else {\n\t        params.limit = (!limit || leftToFetch > batchSize) ?\n\t          batchSize : leftToFetch;\n\t      }\n\t\n\t      // Set the options for the ajax call\n\t      var xhrOpts = {\n\t        method: method,\n\t        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n\t        timeout: opts.timeout,\n\t        body: body\n\t      };\n\t      lastFetchedSeq = since;\n\t\n\t      /* istanbul ignore if */\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t\n\t      // Get the changes\n\t      setup().then(function () {\n\t        xhr = ajax$$1(opts, xhrOpts, callback);\n\t      }).catch(callback);\n\t    };\n\t\n\t    // If opts.since exists, get all the changes from the sequence\n\t    // number given by opts.since. Otherwise, get all the changes\n\t    // from the sequence number 0.\n\t    var results = {results: []};\n\t\n\t    var fetched = function (err, res) {\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t      var raw_results_length = 0;\n\t      // If the result of the ajax call (res) contains changes (res.results)\n\t      if (res && res.results) {\n\t        raw_results_length = res.results.length;\n\t        results.last_seq = res.last_seq;\n\t        // For each change\n\t        var req = {};\n\t        req.query = opts.query_params;\n\t        res.results = res.results.filter(function (c) {\n\t          leftToFetch--;\n\t          var ret = filterChange(opts)(c);\n\t          if (ret) {\n\t            if (opts.include_docs && opts.attachments && opts.binary) {\n\t              readAttachmentsAsBlobOrBuffer(c);\n\t            }\n\t            if (returnDocs) {\n\t              results.results.push(c);\n\t            }\n\t            opts.onChange(c);\n\t          }\n\t          return ret;\n\t        });\n\t      } else if (err) {\n\t        // In case of an error, stop listening for changes and call\n\t        // opts.complete\n\t        opts.aborted = true;\n\t        opts.complete(err);\n\t        return;\n\t      }\n\t\n\t      // The changes feed may have timed out with no results\n\t      // if so reuse last update sequence\n\t      if (res && res.last_seq) {\n\t        lastFetchedSeq = res.last_seq;\n\t      }\n\t\n\t      var finished = (limit && leftToFetch <= 0) ||\n\t        (res && raw_results_length < batchSize) ||\n\t        (opts.descending);\n\t\n\t      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n\t        // Queue a call to fetch again with the newest sequence number\n\t        nextTick(function () { fetch(lastFetchedSeq, fetched); });\n\t      } else {\n\t        // We're done, call the callback\n\t        opts.complete(null, results);\n\t      }\n\t    };\n\t\n\t    fetch(opts.since || 0, fetched);\n\t\n\t    // Return a method to cancel this method from processing any more\n\t    return {\n\t      cancel: function () {\n\t        opts.aborted = true;\n\t        if (xhr) {\n\t          xhr.abort();\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  // Given a set of document/revision IDs (given by req), tets the subset of\n\t  // those that do NOT correspond to revisions stored in the database.\n\t  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n\t  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n\t    // If no options were given, set the callback to be the second parameter\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t\n\t    // Get the missing document/revision IDs\n\t    ajax$$1(opts, {\n\t      method: 'POST',\n\t      url: genDBUrl(host, '_revs_diff'),\n\t      body: req\n\t    }, callback);\n\t  });\n\t\n\t  api._close = function (callback) {\n\t    callback();\n\t  };\n\t\n\t  api._destroy = function (options, callback) {\n\t    ajax$$1(options, {\n\t      url: genDBUrl(host, ''),\n\t      method: 'DELETE'\n\t    }, function (err, resp) {\n\t      if (err && err.status && err.status !== 404) {\n\t        return callback(err);\n\t      }\n\t      callback(null, resp);\n\t    });\n\t  };\n\t}\n\t\n\t// HttpPouch is a valid adapter.\n\tHttpPouch.valid = function () {\n\t  return true;\n\t};\n\t\n\tvar HttpPouch$1 = function (PouchDB) {\n\t  PouchDB.adapter('http', HttpPouch, false);\n\t  PouchDB.adapter('https', HttpPouch, false);\n\t};\n\t\n\tfunction pad(str, padWith, upToLength) {\n\t  var padding = '';\n\t  var targetLength = upToLength - str.length;\n\t  /* istanbul ignore next */\n\t  while (padding.length < targetLength) {\n\t    padding += padWith;\n\t  }\n\t  return padding;\n\t}\n\t\n\tfunction padLeft(str, padWith, upToLength) {\n\t  var padding = pad(str, padWith, upToLength);\n\t  return padding + str;\n\t}\n\t\n\tvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\n\tvar MAGNITUDE_DIGITS = 3; // ditto\n\tvar SEP = ''; // set to '_' for easier debugging \n\t\n\tfunction collate(a, b) {\n\t\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t\n\t  a = normalizeKey(a);\n\t  b = normalizeKey(b);\n\t\n\t  var ai = collationIndex(a);\n\t  var bi = collationIndex(b);\n\t  if ((ai - bi) !== 0) {\n\t    return ai - bi;\n\t  }\n\t  switch (typeof a) {\n\t    case 'number':\n\t      return a - b;\n\t    case 'boolean':\n\t      return a < b ? -1 : 1;\n\t    case 'string':\n\t      return stringCollate(a, b);\n\t  }\n\t  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n\t}\n\t\n\t// couch considers null/NaN/Infinity/-Infinity === undefined,\n\t// for the purposes of mapreduce indexes. also, dates get stringified.\n\tfunction normalizeKey(key) {\n\t  switch (typeof key) {\n\t    case 'undefined':\n\t      return null;\n\t    case 'number':\n\t      if (key === Infinity || key === -Infinity || isNaN(key)) {\n\t        return null;\n\t      }\n\t      return key;\n\t    case 'object':\n\t      var origKey = key;\n\t      if (Array.isArray(key)) {\n\t        var len = key.length;\n\t        key = new Array(len);\n\t        for (var i = 0; i < len; i++) {\n\t          key[i] = normalizeKey(origKey[i]);\n\t        }\n\t      /* istanbul ignore next */\n\t      } else if (key instanceof Date) {\n\t        return key.toJSON();\n\t      } else if (key !== null) { // generic object\n\t        key = {};\n\t        for (var k in origKey) {\n\t          if (origKey.hasOwnProperty(k)) {\n\t            var val = origKey[k];\n\t            if (typeof val !== 'undefined') {\n\t              key[k] = normalizeKey(val);\n\t            }\n\t          }\n\t        }\n\t      }\n\t  }\n\t  return key;\n\t}\n\t\n\tfunction indexify(key) {\n\t  if (key !== null) {\n\t    switch (typeof key) {\n\t      case 'boolean':\n\t        return key ? 1 : 0;\n\t      case 'number':\n\t        return numToIndexableString(key);\n\t      case 'string':\n\t        // We've to be sure that key does not contain \\u0000\n\t        // Do order-preserving replacements:\n\t        // 0 -> 1, 1\n\t        // 1 -> 1, 2\n\t        // 2 -> 2, 2\n\t        return key\n\t          .replace(/\\u0002/g, '\\u0002\\u0002')\n\t          .replace(/\\u0001/g, '\\u0001\\u0002')\n\t          .replace(/\\u0000/g, '\\u0001\\u0001');\n\t      case 'object':\n\t        var isArray = Array.isArray(key);\n\t        var arr = isArray ? key : Object.keys(key);\n\t        var i = -1;\n\t        var len = arr.length;\n\t        var result = '';\n\t        if (isArray) {\n\t          while (++i < len) {\n\t            result += toIndexableString(arr[i]);\n\t          }\n\t        } else {\n\t          while (++i < len) {\n\t            var objKey = arr[i];\n\t            result += toIndexableString(objKey) +\n\t                toIndexableString(key[objKey]);\n\t          }\n\t        }\n\t        return result;\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t// convert the given key to a string that would be appropriate\n\t// for lexical sorting, e.g. within a database, where the\n\t// sorting is the same given by the collate() function.\n\tfunction toIndexableString(key) {\n\t  var zero = '\\u0000';\n\t  key = normalizeKey(key);\n\t  return collationIndex(key) + SEP + indexify(key) + zero;\n\t}\n\t\n\tfunction parseNumber(str, i) {\n\t  var originalIdx = i;\n\t  var num;\n\t  var zero = str[i] === '1';\n\t  if (zero) {\n\t    num = 0;\n\t    i++;\n\t  } else {\n\t    var neg = str[i] === '0';\n\t    i++;\n\t    var numAsString = '';\n\t    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n\t    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n\t    /* istanbul ignore next */\n\t    if (neg) {\n\t      magnitude = -magnitude;\n\t    }\n\t    i += MAGNITUDE_DIGITS;\n\t    while (true) {\n\t      var ch = str[i];\n\t      if (ch === '\\u0000') {\n\t        break;\n\t      } else {\n\t        numAsString += ch;\n\t      }\n\t      i++;\n\t    }\n\t    numAsString = numAsString.split('.');\n\t    if (numAsString.length === 1) {\n\t      num = parseInt(numAsString, 10);\n\t    } else {\n\t      /* istanbul ignore next */\n\t      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n\t    }\n\t    /* istanbul ignore next */\n\t    if (neg) {\n\t      num = num - 10;\n\t    }\n\t    /* istanbul ignore next */\n\t    if (magnitude !== 0) {\n\t      // parseFloat is more reliable than pow due to rounding errors\n\t      // e.g. Number.MAX_VALUE would return Infinity if we did\n\t      // num * Math.pow(10, magnitude);\n\t      num = parseFloat(num + 'e' + magnitude);\n\t    }\n\t  }\n\t  return {num: num, length : i - originalIdx};\n\t}\n\t\n\t// move up the stack while parsing\n\t// this function moved outside of parseIndexableString for performance\n\tfunction pop(stack, metaStack) {\n\t  var obj = stack.pop();\n\t\n\t  if (metaStack.length) {\n\t    var lastMetaElement = metaStack[metaStack.length - 1];\n\t    if (obj === lastMetaElement.element) {\n\t      // popping a meta-element, e.g. an object whose value is another object\n\t      metaStack.pop();\n\t      lastMetaElement = metaStack[metaStack.length - 1];\n\t    }\n\t    var element = lastMetaElement.element;\n\t    var lastElementIndex = lastMetaElement.index;\n\t    if (Array.isArray(element)) {\n\t      element.push(obj);\n\t    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n\t      var key = stack.pop();\n\t      element[key] = obj;\n\t    } else {\n\t      stack.push(obj); // obj with key only\n\t    }\n\t  }\n\t}\n\t\n\tfunction parseIndexableString(str) {\n\t  var stack = [];\n\t  var metaStack = []; // stack for arrays and objects\n\t  var i = 0;\n\t\n\t  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\t  while (true) {\n\t    var collationIndex = str[i++];\n\t    if (collationIndex === '\\u0000') {\n\t      if (stack.length === 1) {\n\t        return stack.pop();\n\t      } else {\n\t        pop(stack, metaStack);\n\t        continue;\n\t      }\n\t    }\n\t    switch (collationIndex) {\n\t      case '1':\n\t        stack.push(null);\n\t        break;\n\t      case '2':\n\t        stack.push(str[i] === '1');\n\t        i++;\n\t        break;\n\t      case '3':\n\t        var parsedNum = parseNumber(str, i);\n\t        stack.push(parsedNum.num);\n\t        i += parsedNum.length;\n\t        break;\n\t      case '4':\n\t        var parsedStr = '';\n\t        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\t        while (true) {\n\t          var ch = str[i];\n\t          if (ch === '\\u0000') {\n\t            break;\n\t          }\n\t          parsedStr += ch;\n\t          i++;\n\t        }\n\t        // perform the reverse of the order-preserving replacement\n\t        // algorithm (see above)\n\t        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n\t          .replace(/\\u0001\\u0002/g, '\\u0001')\n\t          .replace(/\\u0002\\u0002/g, '\\u0002');\n\t        stack.push(parsedStr);\n\t        break;\n\t      case '5':\n\t        var arrayElement = { element: [], index: stack.length };\n\t        stack.push(arrayElement.element);\n\t        metaStack.push(arrayElement);\n\t        break;\n\t      case '6':\n\t        var objElement = { element: {}, index: stack.length };\n\t        stack.push(objElement.element);\n\t        metaStack.push(objElement);\n\t        break;\n\t      /* istanbul ignore next */\n\t      default:\n\t        throw new Error(\n\t          'bad collationIndex or unexpectedly reached end of input: ' +\n\t            collationIndex);\n\t    }\n\t  }\n\t}\n\t\n\tfunction arrayCollate(a, b) {\n\t  var len = Math.min(a.length, b.length);\n\t  for (var i = 0; i < len; i++) {\n\t    var sort = collate(a[i], b[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t  }\n\t  return (a.length === b.length) ? 0 :\n\t    (a.length > b.length) ? 1 : -1;\n\t}\n\tfunction stringCollate(a, b) {\n\t  // See: https://github.com/daleharvey/pouchdb/issues/40\n\t  // This is incompatible with the CouchDB implementation, but its the\n\t  // best we can do for now\n\t  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n\t}\n\tfunction objectCollate(a, b) {\n\t  var ak = Object.keys(a), bk = Object.keys(b);\n\t  var len = Math.min(ak.length, bk.length);\n\t  for (var i = 0; i < len; i++) {\n\t    // First sort the keys\n\t    var sort = collate(ak[i], bk[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t    // if the keys are equal sort the values\n\t    sort = collate(a[ak[i]], b[bk[i]]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t\n\t  }\n\t  return (ak.length === bk.length) ? 0 :\n\t    (ak.length > bk.length) ? 1 : -1;\n\t}\n\t// The collation is defined by erlangs ordered terms\n\t// the atoms null, true, false come first, then numbers, strings,\n\t// arrays, then objects\n\t// null/undefined/NaN/Infinity/-Infinity are all considered null\n\tfunction collationIndex(x) {\n\t  var id = ['boolean', 'number', 'string', 'object'];\n\t  var idx = id.indexOf(typeof x);\n\t  //false if -1 otherwise true, but fast!!!!1\n\t  if (~idx) {\n\t    if (x === null) {\n\t      return 1;\n\t    }\n\t    if (Array.isArray(x)) {\n\t      return 5;\n\t    }\n\t    return idx < 3 ? (idx + 2) : (idx + 3);\n\t  }\n\t  /* istanbul ignore next */\n\t  if (Array.isArray(x)) {\n\t    return 5;\n\t  }\n\t}\n\t\n\t// conversion:\n\t// x yyy zz...zz\n\t// x = 0 for negative, 1 for 0, 2 for positive\n\t// y = exponent (for negative numbers negated) moved so that it's >= 0\n\t// z = mantisse\n\tfunction numToIndexableString(num) {\n\t\n\t  if (num === 0) {\n\t    return '1';\n\t  }\n\t\n\t  // convert number to exponential format for easier and\n\t  // more succinct string sorting\n\t  var expFormat = num.toExponential().split(/e\\+?/);\n\t  var magnitude = parseInt(expFormat[1], 10);\n\t\n\t  var neg = num < 0;\n\t\n\t  var result = neg ? '0' : '2';\n\t\n\t  // first sort by magnitude\n\t  // it's easier if all magnitudes are positive\n\t  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n\t  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\t\n\t  result += SEP + magString;\n\t\n\t  // then sort by the factor\n\t  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n\t  /* istanbul ignore next */\n\t  if (neg) { // for negative reverse ordering\n\t    factor = 10 - factor;\n\t  }\n\t\n\t  var factorStr = factor.toFixed(20);\n\t\n\t  // strip zeros from the end\n\t  factorStr = factorStr.replace(/\\.?0+$/, '');\n\t\n\t  result += SEP + factorStr;\n\t\n\t  return result;\n\t}\n\t\n\t/*\n\t * Simple task queue to sequentialize actions. Assumes\n\t * callbacks will eventually fire (once).\n\t */\n\t\n\tfunction TaskQueue$2() {\n\t  this.promise = new PouchPromise$1(function (fulfill) {fulfill(); });\n\t}\n\tTaskQueue$2.prototype.add = function (promiseFactory) {\n\t  this.promise = this.promise.catch(function () {\n\t    // just recover\n\t  }).then(function () {\n\t    return promiseFactory();\n\t  });\n\t  return this.promise;\n\t};\n\tTaskQueue$2.prototype.finish = function () {\n\t  return this.promise;\n\t};\n\t\n\tfunction createView(opts) {\n\t  var sourceDB = opts.db;\n\t  var viewName = opts.viewName;\n\t  var mapFun = opts.map;\n\t  var reduceFun = opts.reduce;\n\t  var temporary = opts.temporary;\n\t\n\t  // the \"undefined\" part is for backwards compatibility\n\t  var viewSignature = mapFun.toString() + (reduceFun && reduceFun.toString()) +\n\t    'undefined';\n\t\n\t  var cachedViews;\n\t  if (!temporary) {\n\t    // cache this to ensure we don't try to update the same view twice\n\t    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n\t    if (cachedViews[viewSignature]) {\n\t      return cachedViews[viewSignature];\n\t    }\n\t  }\n\t\n\t  var promiseForView = sourceDB.info().then(function (info) {\n\t\n\t    var depDbName = info.db_name + '-mrview-' +\n\t      (temporary ? 'temp' : stringMd5(viewSignature));\n\t\n\t    // save the view name in the source db so it can be cleaned up if necessary\n\t    // (e.g. when the _design doc is deleted, remove all associated view data)\n\t    function diffFunction(doc) {\n\t      doc.views = doc.views || {};\n\t      var fullViewName = viewName;\n\t      if (fullViewName.indexOf('/') === -1) {\n\t        fullViewName = viewName + '/' + viewName;\n\t      }\n\t      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n\t      /* istanbul ignore if */\n\t      if (depDbs[depDbName]) {\n\t        return; // no update necessary\n\t      }\n\t      depDbs[depDbName] = true;\n\t      return doc;\n\t    }\n\t    return upsert(sourceDB, '_local/mrviews', diffFunction).then(function () {\n\t      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n\t        var db = res.db;\n\t        db.auto_compaction = true;\n\t        var view = {\n\t          name: depDbName,\n\t          db: db,\n\t          sourceDB: sourceDB,\n\t          adapter: sourceDB.adapter,\n\t          mapFun: mapFun,\n\t          reduceFun: reduceFun\n\t        };\n\t        return view.db.get('_local/lastSeq').catch(function (err) {\n\t          /* istanbul ignore if */\n\t          if (err.status !== 404) {\n\t            throw err;\n\t          }\n\t        }).then(function (lastSeqDoc) {\n\t          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n\t          if (cachedViews) {\n\t            view.db.once('destroyed', function () {\n\t              delete cachedViews[viewSignature];\n\t            });\n\t          }\n\t          return view;\n\t        });\n\t      });\n\t    });\n\t  });\n\t\n\t  if (cachedViews) {\n\t    cachedViews[viewSignature] = promiseForView;\n\t  }\n\t  return promiseForView;\n\t}\n\t\n\tfunction QueryParseError(message) {\n\t  this.status = 400;\n\t  this.name = 'query_parse_error';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, QueryParseError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(QueryParseError, Error);\n\t\n\tfunction NotFoundError(message) {\n\t  this.status = 404;\n\t  this.name = 'not_found';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, NotFoundError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(NotFoundError, Error);\n\t\n\tfunction BuiltInError(message) {\n\t  this.status = 500;\n\t  this.name = 'invalid_value';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, BuiltInError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(BuiltInError, Error);\n\t\n\tfunction createBuiltInError(name) {\n\t  var message = 'builtin ' + name +\n\t    ' function requires map values to be numbers' +\n\t    ' or number arrays';\n\t  return new BuiltInError(message);\n\t}\n\t\n\tfunction sum(values) {\n\t  var result = 0;\n\t  for (var i = 0, len = values.length; i < len; i++) {\n\t    var num = values[i];\n\t    if (typeof num !== 'number') {\n\t      if (Array.isArray(num)) {\n\t        // lists of numbers are also allowed, sum them separately\n\t        result = typeof result === 'number' ? [result] : result;\n\t        for (var j = 0, jLen = num.length; j < jLen; j++) {\n\t          var jNum = num[j];\n\t          if (typeof jNum !== 'number') {\n\t            throw createBuiltInError('_sum');\n\t          } else if (typeof result[j] === 'undefined') {\n\t            result.push(jNum);\n\t          } else {\n\t            result[j] += jNum;\n\t          }\n\t        }\n\t      } else { // not array/number\n\t        throw createBuiltInError('_sum');\n\t      }\n\t    } else if (typeof result === 'number') {\n\t      result += num;\n\t    } else { // add number to array\n\t      result[0] += num;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tvar log$2 = guardedConsole.bind(null, 'log');\n\tvar isArray = Array.isArray;\n\tvar toJSON = JSON.parse;\n\t\n\tfunction evalFunctionWithEval(func, emit) {\n\t  return scopedEval(\n\t    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n\t    {\n\t      emit: emit,\n\t      sum: sum,\n\t      log: log$2,\n\t      isArray: isArray,\n\t      toJSON: toJSON\n\t    }\n\t  );\n\t}\n\t\n\tfunction promisedCallback(promise, callback) {\n\t  if (callback) {\n\t    promise.then(function (res) {\n\t      nextTick(function () {\n\t        callback(null, res);\n\t      });\n\t    }, function (reason) {\n\t      nextTick(function () {\n\t        callback(reason);\n\t      });\n\t    });\n\t  }\n\t  return promise;\n\t}\n\t\n\tfunction callbackify(fun) {\n\t  return getArguments(function (args) {\n\t    var cb = args.pop();\n\t    var promise = fun.apply(this, args);\n\t    if (typeof cb === 'function') {\n\t      promisedCallback(promise, cb);\n\t    }\n\t    return promise;\n\t  });\n\t}\n\t\n\t// Promise finally util similar to Q.finally\n\tfunction fin(promise, finalPromiseFactory) {\n\t  return promise.then(function (res) {\n\t    return finalPromiseFactory().then(function () {\n\t      return res;\n\t    });\n\t  }, function (reason) {\n\t    return finalPromiseFactory().then(function () {\n\t      throw reason;\n\t    });\n\t  });\n\t}\n\t\n\tfunction sequentialize(queue, promiseFactory) {\n\t  return function () {\n\t    var args = arguments;\n\t    var that = this;\n\t    return queue.add(function () {\n\t      return promiseFactory.apply(that, args);\n\t    });\n\t  };\n\t}\n\t\n\t// uniq an array of strings, order not guaranteed\n\t// similar to underscore/lodash _.uniq\n\tfunction uniq(arr) {\n\t  var theSet = new ExportedSet(arr);\n\t  var result = new Array(theSet.size);\n\t  var index = -1;\n\t  theSet.forEach(function (value) {\n\t    result[++index] = value;\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction mapToKeysArray(map) {\n\t  var result = new Array(map.size);\n\t  var index = -1;\n\t  map.forEach(function (value, key) {\n\t    result[++index] = key;\n\t  });\n\t  return result;\n\t}\n\t\n\tvar persistentQueues = {};\n\tvar tempViewQueue = new TaskQueue$2();\n\tvar CHANGES_BATCH_SIZE$1 = 50;\n\t\n\tfunction parseViewName(name) {\n\t  // can be either 'ddocname/viewname' or just 'viewname'\n\t  // (where the ddoc name is the same)\n\t  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n\t}\n\t\n\tfunction isGenOne(changes) {\n\t  // only return true if the current change is 1-\n\t  // and there are no other leafs\n\t  return changes.length === 1 && /^1-/.test(changes[0].rev);\n\t}\n\t\n\tfunction emitError(db, e) {\n\t  try {\n\t    db.emit('error', e);\n\t  } catch (err) {\n\t    guardedConsole('error',\n\t      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n\t      'You can debug this error by doing:\\n' +\n\t      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n\t      'Please double-check your map/reduce function.');\n\t    guardedConsole('error', e);\n\t  }\n\t}\n\tfunction tryMap(db, fun, doc) {\n\t  // emit an event if there was an error thrown by a map function.\n\t  // putting try/catches in a single function also avoids deoptimizations.\n\t  try {\n\t    fun(doc);\n\t  } catch (e) {\n\t    emitError(db, e);\n\t  }\n\t}\n\t\n\tfunction tryReduce(db, fun, keys, values, rereduce) {\n\t  // same as above, but returning the result or an error. there are two separate\n\t  // functions to avoid extra memory allocations since the tryCode() case is used\n\t  // for custom map functions (common) vs this function, which is only used for\n\t  // custom reduce functions (rare)\n\t  try {\n\t    return {output : fun(keys, values, rereduce)};\n\t  } catch (e) {\n\t    emitError(db, e);\n\t    return {error: e};\n\t  }\n\t}\n\t\n\tfunction sortByKeyThenValue(x, y) {\n\t  var keyCompare = collate(x.key, y.key);\n\t  return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n\t}\n\t\n\tfunction sliceResults(results, limit, skip) {\n\t  skip = skip || 0;\n\t  if (typeof limit === 'number') {\n\t    return results.slice(skip, limit + skip);\n\t  } else if (skip > 0) {\n\t    return results.slice(skip);\n\t  }\n\t  return results;\n\t}\n\t\n\tfunction rowToDocId(row) {\n\t  var val = row.value;\n\t  // Users can explicitly specify a joined doc _id, or it\n\t  // defaults to the doc _id that emitted the key/value.\n\t  var docId = (val && typeof val === 'object' && val._id) || row.id;\n\t  return docId;\n\t}\n\t\n\tfunction readAttachmentsAsBlobOrBuffer$1(res) {\n\t  res.rows.forEach(function (row) {\n\t    var atts = row.doc && row.doc._attachments;\n\t    if (!atts) {\n\t      return;\n\t    }\n\t    Object.keys(atts).forEach(function (filename) {\n\t      var att = atts[filename];\n\t      atts[filename].data = b64ToBluffer(att.data, att.content_type);\n\t    });\n\t  });\n\t}\n\t\n\tfunction postprocessAttachments(opts) {\n\t  return function (res) {\n\t    if (opts.include_docs && opts.attachments && opts.binary) {\n\t      readAttachmentsAsBlobOrBuffer$1(res);\n\t    }\n\t    return res;\n\t  };\n\t}\n\t\n\tvar builtInReduce = {\n\t  _sum: function (keys, values) {\n\t    return sum(values);\n\t  },\n\t\n\t  _count: function (keys, values) {\n\t    return values.length;\n\t  },\n\t\n\t  _stats: function (keys, values) {\n\t    // no need to implement rereduce=true, because Pouch\n\t    // will never call it\n\t    function sumsqr(values) {\n\t      var _sumsqr = 0;\n\t      for (var i = 0, len = values.length; i < len; i++) {\n\t        var num = values[i];\n\t        _sumsqr += (num * num);\n\t      }\n\t      return _sumsqr;\n\t    }\n\t    return {\n\t      sum     : sum(values),\n\t      min     : Math.min.apply(null, values),\n\t      max     : Math.max.apply(null, values),\n\t      count   : values.length,\n\t      sumsqr : sumsqr(values)\n\t    };\n\t  }\n\t};\n\t\n\tfunction addHttpParam(paramName, opts, params, asJson) {\n\t  // add an http param from opts to params, optionally json-encoded\n\t  var val = opts[paramName];\n\t  if (typeof val !== 'undefined') {\n\t    if (asJson) {\n\t      val = encodeURIComponent(JSON.stringify(val));\n\t    }\n\t    params.push(paramName + '=' + val);\n\t  }\n\t}\n\t\n\tfunction coerceInteger(integerCandidate) {\n\t  if (typeof integerCandidate !== 'undefined') {\n\t    var asNumber = Number(integerCandidate);\n\t    // prevents e.g. '1foo' or '1.1' being coerced to 1\n\t    if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n\t      return asNumber;\n\t    } else {\n\t      return integerCandidate;\n\t    }\n\t  }\n\t}\n\t\n\tfunction coerceOptions(opts) {\n\t  opts.group_level = coerceInteger(opts.group_level);\n\t  opts.limit = coerceInteger(opts.limit);\n\t  opts.skip = coerceInteger(opts.skip);\n\t  return opts;\n\t}\n\t\n\tfunction checkPositiveInteger(number) {\n\t  if (number) {\n\t    if (typeof number !== 'number') {\n\t      return  new QueryParseError('Invalid value for integer: \"' +\n\t      number + '\"');\n\t    }\n\t    if (number < 0) {\n\t      return new QueryParseError('Invalid value for positive integer: ' +\n\t        '\"' + number + '\"');\n\t    }\n\t  }\n\t}\n\t\n\tfunction checkQueryParseError(options, fun) {\n\t  var startkeyName = options.descending ? 'endkey' : 'startkey';\n\t  var endkeyName = options.descending ? 'startkey' : 'endkey';\n\t\n\t  if (typeof options[startkeyName] !== 'undefined' &&\n\t    typeof options[endkeyName] !== 'undefined' &&\n\t    collate(options[startkeyName], options[endkeyName]) > 0) {\n\t    throw new QueryParseError('No rows can match your key range, ' +\n\t    'reverse your start_key and end_key or set {descending : true}');\n\t  } else if (fun.reduce && options.reduce !== false) {\n\t    if (options.include_docs) {\n\t      throw new QueryParseError('{include_docs:true} is invalid for reduce');\n\t    } else if (options.keys && options.keys.length > 1 &&\n\t        !options.group && !options.group_level) {\n\t      throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n\t      '{group: true}');\n\t    }\n\t  }\n\t  ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n\t    var error = checkPositiveInteger(options[optionName]);\n\t    if (error) {\n\t      throw error;\n\t    }\n\t  });\n\t}\n\t\n\tfunction httpQuery(db, fun, opts) {\n\t  // List of parameters to add to the PUT request\n\t  var params = [];\n\t  var body;\n\t  var method = 'GET';\n\t\n\t  // If opts.reduce exists and is defined, then add it to the list\n\t  // of parameters.\n\t  // If reduce=false then the results are that of only the map function\n\t  // not the final result of map and reduce.\n\t  addHttpParam('reduce', opts, params);\n\t  addHttpParam('include_docs', opts, params);\n\t  addHttpParam('attachments', opts, params);\n\t  addHttpParam('limit', opts, params);\n\t  addHttpParam('descending', opts, params);\n\t  addHttpParam('group', opts, params);\n\t  addHttpParam('group_level', opts, params);\n\t  addHttpParam('skip', opts, params);\n\t  addHttpParam('stale', opts, params);\n\t  addHttpParam('conflicts', opts, params);\n\t  addHttpParam('startkey', opts, params, true);\n\t  addHttpParam('start_key', opts, params, true);\n\t  addHttpParam('endkey', opts, params, true);\n\t  addHttpParam('end_key', opts, params, true);\n\t  addHttpParam('inclusive_end', opts, params);\n\t  addHttpParam('key', opts, params, true);\n\t\n\t  // Format the list of parameters into a valid URI query string\n\t  params = params.join('&');\n\t  params = params === '' ? '' : '?' + params;\n\t\n\t  // If keys are supplied, issue a POST to circumvent GET query string limits\n\t  // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n\t  if (typeof opts.keys !== 'undefined') {\n\t    var MAX_URL_LENGTH = 2000;\n\t    // according to http://stackoverflow.com/a/417184/680742,\n\t    // the de facto URL length limit is 2000 characters\n\t\n\t    var keysAsString =\n\t      'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n\t    if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n\t      // If the keys are short enough, do a GET. we do this to work around\n\t      // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n\t      params += (params[0] === '?' ? '&' : '?') + keysAsString;\n\t    } else {\n\t      method = 'POST';\n\t      if (typeof fun === 'string') {\n\t        body = {keys: opts.keys};\n\t      } else { // fun is {map : mapfun}, so append to this\n\t        fun.keys = opts.keys;\n\t      }\n\t    }\n\t  }\n\t\n\t  // We are referencing a query defined in the design doc\n\t  if (typeof fun === 'string') {\n\t    var parts = parseViewName(fun);\n\t    return db.request({\n\t      method: method,\n\t      url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n\t      body: body\n\t    }).then(postprocessAttachments(opts));\n\t  }\n\t\n\t  // We are using a temporary view, terrible for performance, good for testing\n\t  body = body || {};\n\t  Object.keys(fun).forEach(function (key) {\n\t    if (Array.isArray(fun[key])) {\n\t      body[key] = fun[key];\n\t    } else {\n\t      body[key] = fun[key].toString();\n\t    }\n\t  });\n\t  return db.request({\n\t    method: 'POST',\n\t    url: '_temp_view' + params,\n\t    body: body\n\t  }).then(postprocessAttachments(opts));\n\t}\n\t\n\t// custom adapters can define their own api._query\n\t// and override the default behavior\n\t/* istanbul ignore next */\n\tfunction customQuery(db, fun, opts) {\n\t  return new PouchPromise$1(function (resolve, reject) {\n\t    db._query(fun, opts, function (err, res) {\n\t      if (err) {\n\t        return reject(err);\n\t      }\n\t      resolve(res);\n\t    });\n\t  });\n\t}\n\t\n\t// custom adapters can define their own api._viewCleanup\n\t// and override the default behavior\n\t/* istanbul ignore next */\n\tfunction customViewCleanup(db) {\n\t  return new PouchPromise$1(function (resolve, reject) {\n\t    db._viewCleanup(function (err, res) {\n\t      if (err) {\n\t        return reject(err);\n\t      }\n\t      resolve(res);\n\t    });\n\t  });\n\t}\n\t\n\tfunction defaultsTo(value) {\n\t  return function (reason) {\n\t    /* istanbul ignore else */\n\t    if (reason.status === 404) {\n\t      return value;\n\t    } else {\n\t      throw reason;\n\t    }\n\t  };\n\t}\n\t\n\t// returns a promise for a list of docs to update, based on the input docId.\n\t// the order doesn't matter, because post-3.2.0, bulkDocs\n\t// is an atomic operation in all three adapters.\n\tfunction getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n\t  var metaDocId = '_local/doc_' + docId;\n\t  var defaultMetaDoc = {_id: metaDocId, keys: []};\n\t  var docData = docIdsToChangesAndEmits.get(docId);\n\t  var indexableKeysToKeyValues = docData[0];\n\t  var changes = docData[1];\n\t\n\t  function getMetaDoc() {\n\t    if (isGenOne(changes)) {\n\t      // generation 1, so we can safely assume initial state\n\t      // for performance reasons (avoids unnecessary GETs)\n\t      return PouchPromise$1.resolve(defaultMetaDoc);\n\t    }\n\t    return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n\t  }\n\t\n\t  function getKeyValueDocs(metaDoc) {\n\t    if (!metaDoc.keys.length) {\n\t      // no keys, no need for a lookup\n\t      return PouchPromise$1.resolve({rows: []});\n\t    }\n\t    return view.db.allDocs({\n\t      keys: metaDoc.keys,\n\t      include_docs: true\n\t    });\n\t  }\n\t\n\t  function processKeyValueDocs(metaDoc, kvDocsRes) {\n\t    var kvDocs = [];\n\t    var oldKeys = new ExportedSet();\n\t\n\t    for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n\t      var row = kvDocsRes.rows[i];\n\t      var doc = row.doc;\n\t      if (!doc) { // deleted\n\t        continue;\n\t      }\n\t      kvDocs.push(doc);\n\t      oldKeys.add(doc._id);\n\t      doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n\t      if (!doc._deleted) {\n\t        var keyValue = indexableKeysToKeyValues.get(doc._id);\n\t        if ('value' in keyValue) {\n\t          doc.value = keyValue.value;\n\t        }\n\t      }\n\t    }\n\t    var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n\t    newKeys.forEach(function (key) {\n\t      if (!oldKeys.has(key)) {\n\t        // new doc\n\t        var kvDoc = {\n\t          _id: key\n\t        };\n\t        var keyValue = indexableKeysToKeyValues.get(key);\n\t        if ('value' in keyValue) {\n\t          kvDoc.value = keyValue.value;\n\t        }\n\t        kvDocs.push(kvDoc);\n\t      }\n\t    });\n\t    metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n\t    kvDocs.push(metaDoc);\n\t\n\t    return kvDocs;\n\t  }\n\t\n\t  return getMetaDoc().then(function (metaDoc) {\n\t    return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n\t      return processKeyValueDocs(metaDoc, kvDocsRes);\n\t    });\n\t  });\n\t}\n\t\n\t// updates all emitted key/value docs and metaDocs in the mrview database\n\t// for the given batch of documents from the source database\n\tfunction saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n\t  var seqDocId = '_local/lastSeq';\n\t  return view.db.get(seqDocId)\n\t  .catch(defaultsTo({_id: seqDocId, seq: 0}))\n\t  .then(function (lastSeqDoc) {\n\t    var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n\t    return PouchPromise$1.all(docIds.map(function (docId) {\n\t      return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n\t    })).then(function (listOfDocsToPersist) {\n\t      var docsToPersist = flatten(listOfDocsToPersist);\n\t      lastSeqDoc.seq = seq;\n\t      docsToPersist.push(lastSeqDoc);\n\t      // write all docs in a single operation, update the seq once\n\t      return view.db.bulkDocs({docs : docsToPersist});\n\t    });\n\t  });\n\t}\n\t\n\tfunction getQueue(view) {\n\t  var viewName = typeof view === 'string' ? view : view.name;\n\t  var queue = persistentQueues[viewName];\n\t  if (!queue) {\n\t    queue = persistentQueues[viewName] = new TaskQueue$2();\n\t  }\n\t  return queue;\n\t}\n\t\n\tfunction updateView(view) {\n\t  return sequentialize(getQueue(view), function () {\n\t    return updateViewInQueue(view);\n\t  })();\n\t}\n\t\n\tfunction updateViewInQueue(view) {\n\t  // bind the emit function once\n\t  var mapResults;\n\t  var doc;\n\t\n\t  function emit(key, value) {\n\t    var output = {id: doc._id, key: normalizeKey(key)};\n\t    // Don't explicitly store the value unless it's defined and non-null.\n\t    // This saves on storage space, because often people don't use it.\n\t    if (typeof value !== 'undefined' && value !== null) {\n\t      output.value = normalizeKey(value);\n\t    }\n\t    mapResults.push(output);\n\t  }\n\t\n\t  var mapFun;\n\t  // for temp_views one can use emit(doc, emit), see #38\n\t  if (typeof view.mapFun === \"function\" && view.mapFun.length === 2) {\n\t    var origMap = view.mapFun;\n\t    mapFun = function (doc) {\n\t      return origMap(doc, emit);\n\t    };\n\t  } else {\n\t    mapFun = evalFunctionWithEval(view.mapFun.toString(), emit);\n\t  }\n\t\n\t  var currentSeq = view.seq || 0;\n\t\n\t  function processChange(docIdsToChangesAndEmits, seq) {\n\t    return function () {\n\t      return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n\t    };\n\t  }\n\t\n\t  var queue = new TaskQueue$2();\n\t\n\t  function processNextBatch() {\n\t    return view.sourceDB.changes({\n\t      conflicts: true,\n\t      include_docs: true,\n\t      style: 'all_docs',\n\t      since: currentSeq,\n\t      limit: CHANGES_BATCH_SIZE$1\n\t    }).then(processBatch);\n\t  }\n\t\n\t  function processBatch(response) {\n\t    var results = response.results;\n\t    if (!results.length) {\n\t      return;\n\t    }\n\t    var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n\t    queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n\t    if (results.length < CHANGES_BATCH_SIZE$1) {\n\t      return;\n\t    }\n\t    return processNextBatch();\n\t  }\n\t\n\t  function createDocIdsToChangesAndEmits(results) {\n\t    var docIdsToChangesAndEmits = new ExportedMap();\n\t    for (var i = 0, len = results.length; i < len; i++) {\n\t      var change = results[i];\n\t      if (change.doc._id[0] !== '_') {\n\t        mapResults = [];\n\t        doc = change.doc;\n\t\n\t        if (!doc._deleted) {\n\t          tryMap(view.sourceDB, mapFun, doc);\n\t        }\n\t        mapResults.sort(sortByKeyThenValue);\n\t\n\t        var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n\t        docIdsToChangesAndEmits.set(change.doc._id, [\n\t          indexableKeysToKeyValues,\n\t          change.changes\n\t        ]);\n\t      }\n\t      currentSeq = change.seq;\n\t    }\n\t    return docIdsToChangesAndEmits;\n\t  }\n\t\n\t  function createIndexableKeysToKeyValues(mapResults) {\n\t    var indexableKeysToKeyValues = new ExportedMap();\n\t    var lastKey;\n\t    for (var i = 0, len = mapResults.length; i < len; i++) {\n\t      var emittedKeyValue = mapResults[i];\n\t      var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n\t      if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n\t        complexKey.push(i); // dup key+id, so make it unique\n\t      }\n\t      indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n\t      lastKey = emittedKeyValue.key;\n\t    }\n\t    return indexableKeysToKeyValues;\n\t  }\n\t\n\t  return processNextBatch().then(function () {\n\t    return queue.finish();\n\t  }).then(function () {\n\t    view.seq = currentSeq;\n\t  });\n\t}\n\t\n\tfunction reduceView(view, results, options) {\n\t  if (options.group_level === 0) {\n\t    delete options.group_level;\n\t  }\n\t\n\t  var shouldGroup = options.group || options.group_level;\n\t\n\t  var reduceFun;\n\t  if (builtInReduce[view.reduceFun]) {\n\t    reduceFun = builtInReduce[view.reduceFun];\n\t  } else {\n\t    reduceFun = evalFunctionWithEval(view.reduceFun.toString());\n\t  }\n\t\n\t  var groups = [];\n\t  var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n\t    options.group_level;\n\t  results.forEach(function (e) {\n\t    var last = groups[groups.length - 1];\n\t    var groupKey = shouldGroup ? e.key : null;\n\t\n\t    // only set group_level for array keys\n\t    if (shouldGroup && Array.isArray(groupKey)) {\n\t      groupKey = groupKey.slice(0, lvl);\n\t    }\n\t\n\t    if (last && collate(last.groupKey, groupKey) === 0) {\n\t      last.keys.push([e.key, e.id]);\n\t      last.values.push(e.value);\n\t      return;\n\t    }\n\t    groups.push({\n\t      keys: [[e.key, e.id]],\n\t      values: [e.value],\n\t      groupKey: groupKey\n\t    });\n\t  });\n\t  results = [];\n\t  for (var i = 0, len = groups.length; i < len; i++) {\n\t    var e = groups[i];\n\t    var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n\t    if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n\t      // CouchDB returns an error if a built-in errors out\n\t      throw reduceTry.error;\n\t    }\n\t    results.push({\n\t      // CouchDB just sets the value to null if a non-built-in errors out\n\t      value: reduceTry.error ? null : reduceTry.output,\n\t      key: e.groupKey\n\t    });\n\t  }\n\t  // no total_rows/offset when reducing\n\t  return {rows: sliceResults(results, options.limit, options.skip)};\n\t}\n\t\n\tfunction queryView(view, opts) {\n\t  return sequentialize(getQueue(view), function () {\n\t    return queryViewInQueue(view, opts);\n\t  })();\n\t}\n\t\n\tfunction queryViewInQueue(view, opts) {\n\t  var totalRows;\n\t  var shouldReduce = view.reduceFun && opts.reduce !== false;\n\t  var skip = opts.skip || 0;\n\t  if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n\t    // equivalent query\n\t    opts.limit = 0;\n\t    delete opts.keys;\n\t  }\n\t\n\t  function fetchFromView(viewOpts) {\n\t    viewOpts.include_docs = true;\n\t    return view.db.allDocs(viewOpts).then(function (res) {\n\t      totalRows = res.total_rows;\n\t      return res.rows.map(function (result) {\n\t\n\t        // implicit migration - in older versions of PouchDB,\n\t        // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n\t        // this is tested in a migration test\n\t        /* istanbul ignore next */\n\t        if ('value' in result.doc && typeof result.doc.value === 'object' &&\n\t            result.doc.value !== null) {\n\t          var keys = Object.keys(result.doc.value).sort();\n\t          // this detection method is not perfect, but it's unlikely the user\n\t          // emitted a value which was an object with these 3 exact keys\n\t          var expectedKeys = ['id', 'key', 'value'];\n\t          if (!(keys < expectedKeys || keys > expectedKeys)) {\n\t            return result.doc.value;\n\t          }\n\t        }\n\t\n\t        var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n\t        return {\n\t          key: parsedKeyAndDocId[0],\n\t          id: parsedKeyAndDocId[1],\n\t          value: ('value' in result.doc ? result.doc.value : null)\n\t        };\n\t      });\n\t    });\n\t  }\n\t\n\t  function onMapResultsReady(rows) {\n\t    var finalResults;\n\t    if (shouldReduce) {\n\t      finalResults = reduceView(view, rows, opts);\n\t    } else {\n\t      finalResults = {\n\t        total_rows: totalRows,\n\t        offset: skip,\n\t        rows: rows\n\t      };\n\t    }\n\t    if (opts.include_docs) {\n\t      var docIds = uniq(rows.map(rowToDocId));\n\t\n\t      return view.sourceDB.allDocs({\n\t        keys: docIds,\n\t        include_docs: true,\n\t        conflicts: opts.conflicts,\n\t        attachments: opts.attachments,\n\t        binary: opts.binary\n\t      }).then(function (allDocsRes) {\n\t        var docIdsToDocs = new ExportedMap();\n\t        allDocsRes.rows.forEach(function (row) {\n\t          docIdsToDocs.set(row.id, row.doc);\n\t        });\n\t        rows.forEach(function (row) {\n\t          var docId = rowToDocId(row);\n\t          var doc = docIdsToDocs.get(docId);\n\t          if (doc) {\n\t            row.doc = doc;\n\t          }\n\t        });\n\t        return finalResults;\n\t      });\n\t    } else {\n\t      return finalResults;\n\t    }\n\t  }\n\t\n\t  if (typeof opts.keys !== 'undefined') {\n\t    var keys = opts.keys;\n\t    var fetchPromises = keys.map(function (key) {\n\t      var viewOpts = {\n\t        startkey : toIndexableString([key]),\n\t        endkey   : toIndexableString([key, {}])\n\t      };\n\t      return fetchFromView(viewOpts);\n\t    });\n\t    return PouchPromise$1.all(fetchPromises).then(flatten).then(onMapResultsReady);\n\t  } else { // normal query, no 'keys'\n\t    var viewOpts = {\n\t      descending : opts.descending\n\t    };\n\t    if (opts.start_key) {\n\t        opts.startkey = opts.start_key;\n\t    }\n\t    if (opts.end_key) {\n\t        opts.endkey = opts.end_key;\n\t    }\n\t    if (typeof opts.startkey !== 'undefined') {\n\t      viewOpts.startkey = opts.descending ?\n\t        toIndexableString([opts.startkey, {}]) :\n\t        toIndexableString([opts.startkey]);\n\t    }\n\t    if (typeof opts.endkey !== 'undefined') {\n\t      var inclusiveEnd = opts.inclusive_end !== false;\n\t      if (opts.descending) {\n\t        inclusiveEnd = !inclusiveEnd;\n\t      }\n\t\n\t      viewOpts.endkey = toIndexableString(\n\t        inclusiveEnd ? [opts.endkey, {}] : [opts.endkey]);\n\t    }\n\t    if (typeof opts.key !== 'undefined') {\n\t      var keyStart = toIndexableString([opts.key]);\n\t      var keyEnd = toIndexableString([opts.key, {}]);\n\t      if (viewOpts.descending) {\n\t        viewOpts.endkey = keyStart;\n\t        viewOpts.startkey = keyEnd;\n\t      } else {\n\t        viewOpts.startkey = keyStart;\n\t        viewOpts.endkey = keyEnd;\n\t      }\n\t    }\n\t    if (!shouldReduce) {\n\t      if (typeof opts.limit === 'number') {\n\t        viewOpts.limit = opts.limit;\n\t      }\n\t      viewOpts.skip = skip;\n\t    }\n\t    return fetchFromView(viewOpts).then(onMapResultsReady);\n\t  }\n\t}\n\t\n\tfunction httpViewCleanup(db) {\n\t  return db.request({\n\t    method: 'POST',\n\t    url: '_view_cleanup'\n\t  });\n\t}\n\t\n\tfunction localViewCleanup(db) {\n\t  return db.get('_local/mrviews').then(function (metaDoc) {\n\t    var docsToViews = new ExportedMap();\n\t    Object.keys(metaDoc.views).forEach(function (fullViewName) {\n\t      var parts = parseViewName(fullViewName);\n\t      var designDocName = '_design/' + parts[0];\n\t      var viewName = parts[1];\n\t      var views = docsToViews.get(designDocName);\n\t      if (!views) {\n\t        views = new ExportedSet();\n\t        docsToViews.set(designDocName, views);\n\t      }\n\t      views.add(viewName);\n\t    });\n\t    var opts = {\n\t      keys : mapToKeysArray(docsToViews),\n\t      include_docs : true\n\t    };\n\t    return db.allDocs(opts).then(function (res) {\n\t      var viewsToStatus = {};\n\t      res.rows.forEach(function (row) {\n\t        var ddocName = row.key.substring(8); // cuts off '_design/'\n\t        docsToViews.get(row.key).forEach(function (viewName) {\n\t          var fullViewName = ddocName + '/' + viewName;\n\t          /* istanbul ignore if */\n\t          if (!metaDoc.views[fullViewName]) {\n\t            // new format, without slashes, to support PouchDB 2.2.0\n\t            // migration test in pouchdb's browser.migration.js verifies this\n\t            fullViewName = viewName;\n\t          }\n\t          var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n\t          // design doc deleted, or view function nonexistent\n\t          var statusIsGood = row.doc && row.doc.views &&\n\t            row.doc.views[viewName];\n\t          viewDBNames.forEach(function (viewDBName) {\n\t            viewsToStatus[viewDBName] =\n\t              viewsToStatus[viewDBName] || statusIsGood;\n\t          });\n\t        });\n\t      });\n\t      var dbsToDelete = Object.keys(viewsToStatus).filter(\n\t        function (viewDBName) { return !viewsToStatus[viewDBName]; });\n\t      var destroyPromises = dbsToDelete.map(function (viewDBName) {\n\t        return sequentialize(getQueue(viewDBName), function () {\n\t          return new db.constructor(viewDBName, db.__opts).destroy();\n\t        })();\n\t      });\n\t      return PouchPromise$1.all(destroyPromises).then(function () {\n\t        return {ok: true};\n\t      });\n\t    });\n\t  }, defaultsTo({ok: true}));\n\t}\n\t\n\tvar viewCleanup = callbackify(function () {\n\t  var db = this;\n\t  if (db.type() === 'http') {\n\t    return httpViewCleanup(db);\n\t  }\n\t  /* istanbul ignore next */\n\t  if (typeof db._viewCleanup === 'function') {\n\t    return customViewCleanup(db);\n\t  }\n\t  return localViewCleanup(db);\n\t});\n\t\n\tfunction queryPromised(db, fun, opts) {\n\t  if (db.type() === 'http') {\n\t    return httpQuery(db, fun, opts);\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  if (typeof db._query === 'function') {\n\t    return customQuery(db, fun, opts);\n\t  }\n\t\n\t  if (typeof fun !== 'string') {\n\t    // temp_view\n\t    checkQueryParseError(opts, fun);\n\t\n\t    var createViewOpts = {\n\t      db : db,\n\t      viewName : 'temp_view/temp_view',\n\t      map : fun.map,\n\t      reduce : fun.reduce,\n\t      temporary : true\n\t    };\n\t    tempViewQueue.add(function () {\n\t      return createView(createViewOpts).then(function (view) {\n\t        function cleanup() {\n\t          return view.db.destroy();\n\t        }\n\t        return fin(updateView(view).then(function () {\n\t          return queryView(view, opts);\n\t        }), cleanup);\n\t      });\n\t    });\n\t    return tempViewQueue.finish();\n\t  } else {\n\t    // persistent view\n\t    var fullViewName = fun;\n\t    var parts = parseViewName(fullViewName);\n\t    var designDocName = parts[0];\n\t    var viewName = parts[1];\n\t    return db.get('_design/' + designDocName).then(function (doc) {\n\t      var fun = doc.views && doc.views[viewName];\n\t\n\t      if (!fun || typeof fun.map !== 'string') {\n\t        throw new NotFoundError('ddoc ' + designDocName +\n\t        ' has no view named ' + viewName);\n\t      }\n\t      checkQueryParseError(opts, fun);\n\t\n\t      var createViewOpts = {\n\t        db : db,\n\t        viewName : fullViewName,\n\t        map : fun.map,\n\t        reduce : fun.reduce\n\t      };\n\t      return createView(createViewOpts).then(function (view) {\n\t        if (opts.stale === 'ok' || opts.stale === 'update_after') {\n\t          if (opts.stale === 'update_after') {\n\t            nextTick(function () {\n\t              updateView(view);\n\t            });\n\t          }\n\t          return queryView(view, opts);\n\t        } else { // stale not ok\n\t          return updateView(view).then(function () {\n\t            return queryView(view, opts);\n\t          });\n\t        }\n\t      });\n\t    });\n\t  }\n\t}\n\t\n\tvar query = function (fun, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  opts = opts ? coerceOptions(opts) : {};\n\t\n\t  if (typeof fun === 'function') {\n\t    fun = {map : fun};\n\t  }\n\t\n\t  var db = this;\n\t  var promise = PouchPromise$1.resolve().then(function () {\n\t    return queryPromised(db, fun, opts);\n\t  });\n\t  promisedCallback(promise, callback);\n\t  return promise;\n\t};\n\t\n\t\n\tvar mapreduce = {\n\t  query: query,\n\t  viewCleanup: viewCleanup\n\t};\n\t\n\tfunction isGenOne$1(rev) {\n\t  return /^1-/.test(rev);\n\t}\n\t\n\tfunction fileHasChanged(localDoc, remoteDoc, filename) {\n\t  return !localDoc._attachments ||\n\t         !localDoc._attachments[filename] ||\n\t         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n\t}\n\t\n\tfunction getDocAttachments(db, doc) {\n\t  var filenames = Object.keys(doc._attachments);\n\t  return PouchPromise$1.all(filenames.map(function (filename) {\n\t    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n\t  }));\n\t}\n\t\n\tfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n\t  var doCheckForLocalAttachments = src.type() === 'http' && target.type() !== 'http';\n\t  var filenames = Object.keys(doc._attachments);\n\t\n\t  if (!doCheckForLocalAttachments) {\n\t    return getDocAttachments(src, doc);\n\t  }\n\t\n\t  return target.get(doc._id).then(function (localDoc) {\n\t    return PouchPromise$1.all(filenames.map(function (filename) {\n\t      if (fileHasChanged(localDoc, doc, filename)) {\n\t        return src.getAttachment(doc._id, filename);\n\t      }\n\t\n\t      return target.getAttachment(localDoc._id, filename);\n\t    }));\n\t  }).catch(function (error) {\n\t    /* istanbul ignore if */\n\t    if (error.status !== 404) {\n\t      throw error;\n\t    }\n\t\n\t    return getDocAttachments(src, doc);\n\t  });\n\t}\n\t\n\tfunction createBulkGetOpts(diffs) {\n\t  var requests = [];\n\t  Object.keys(diffs).forEach(function (id) {\n\t    var missingRevs = diffs[id].missing;\n\t    missingRevs.forEach(function (missingRev) {\n\t      requests.push({\n\t        id: id,\n\t        rev: missingRev\n\t      });\n\t    });\n\t  });\n\t\n\t  return {\n\t    docs: requests,\n\t    revs: true,\n\t    latest: true\n\t  };\n\t}\n\t\n\t//\n\t// Fetch all the documents from the src as described in the \"diffs\",\n\t// which is a mapping of docs IDs to revisions. If the state ever\n\t// changes to \"cancelled\", then the returned promise will be rejected.\n\t// Else it will be resolved with a list of fetched documents.\n\t//\n\tfunction getDocs(src, target, diffs, state) {\n\t  diffs = clone(diffs); // we do not need to modify this\n\t\n\t  var resultDocs = [],\n\t      ok = true;\n\t\n\t  function getAllDocs() {\n\t\n\t    var bulkGetOpts = createBulkGetOpts(diffs);\n\t\n\t    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n\t      return;\n\t    }\n\t\n\t    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n\t      /* istanbul ignore if */\n\t      if (state.cancelled) {\n\t        throw new Error('cancelled');\n\t      }\n\t      return PouchPromise$1.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n\t        return PouchPromise$1.all(bulkGetInfo.docs.map(function (doc) {\n\t          var remoteDoc = doc.ok;\n\t\n\t          if (doc.error) {\n\t            // when AUTO_COMPACTION is set, docs can be returned which look\n\t            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n\t            ok = false;\n\t          }\n\t\n\t          if (!remoteDoc || !remoteDoc._attachments) {\n\t            return remoteDoc;\n\t          }\n\t\n\t          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc).then(function (attachments) {\n\t            var filenames = Object.keys(remoteDoc._attachments);\n\t            attachments.forEach(function (attachment, i) {\n\t              var att = remoteDoc._attachments[filenames[i]];\n\t              delete att.stub;\n\t              delete att.length;\n\t              att.data = attachment;\n\t            });\n\t\n\t            return remoteDoc;\n\t          });\n\t        }));\n\t      }))\n\t\n\t      .then(function (results) {\n\t        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n\t      });\n\t    });\n\t  }\n\t\n\t  function hasAttachments(doc) {\n\t    return doc._attachments && Object.keys(doc._attachments).length > 0;\n\t  }\n\t\n\t  function hasConflicts(doc) {\n\t    return doc._conflicts && doc._conflicts.length > 0;\n\t  }\n\t\n\t  function fetchRevisionOneDocs(ids) {\n\t    // Optimization: fetch gen-1 docs and attachments in\n\t    // a single request using _all_docs\n\t    return src.allDocs({\n\t      keys: ids,\n\t      include_docs: true,\n\t      conflicts: true\n\t    }).then(function (res) {\n\t      if (state.cancelled) {\n\t        throw new Error('cancelled');\n\t      }\n\t      res.rows.forEach(function (row) {\n\t        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n\t            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n\t          // if any of these conditions apply, we need to fetch using get()\n\t          return;\n\t        }\n\t\n\t        // strip _conflicts array to appease CSG (#5793)\n\t        /* istanbul ignore if */\n\t        if (row.doc._conflicts) {\n\t          delete row.doc._conflicts;\n\t        }\n\t\n\t        // the doc we got back from allDocs() is sufficient\n\t        resultDocs.push(row.doc);\n\t        delete diffs[row.id];\n\t      });\n\t    });\n\t  }\n\t\n\t  function getRevisionOneDocs() {\n\t    // filter out the generation 1 docs and get them\n\t    // leaving the non-generation one docs to be got otherwise\n\t    var ids = Object.keys(diffs).filter(function (id) {\n\t      var missing = diffs[id].missing;\n\t      return missing.length === 1 && isGenOne$1(missing[0]);\n\t    });\n\t    if (ids.length > 0) {\n\t      return fetchRevisionOneDocs(ids);\n\t    }\n\t  }\n\t\n\t  function returnResult() {\n\t    return { ok:ok, docs:resultDocs };\n\t  }\n\t\n\t  return PouchPromise$1.resolve()\n\t    .then(getRevisionOneDocs)\n\t    .then(getAllDocs)\n\t    .then(returnResult);\n\t}\n\t\n\tvar CHECKPOINT_VERSION = 1;\n\tvar REPLICATOR = \"pouchdb\";\n\t// This is an arbitrary number to limit the\n\t// amount of replication history we save in the checkpoint.\n\t// If we save too much, the checkpoing docs will become very big,\n\t// if we save fewer, we'll run a greater risk of having to\n\t// read all the changes from 0 when checkpoint PUTs fail\n\t// CouchDB 2.0 has a more involved history pruning,\n\t// but let's go for the simple version for now.\n\tvar CHECKPOINT_HISTORY_SIZE = 5;\n\tvar LOWEST_SEQ = 0;\n\t\n\tfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n\t  return db.get(id).catch(function (err) {\n\t    if (err.status === 404) {\n\t      if (db.type() === 'http') {\n\t        explainError(\n\t          404, 'PouchDB is just checking if a remote checkpoint exists.'\n\t        );\n\t      }\n\t      return {\n\t        session_id: session,\n\t        _id: id,\n\t        history: [],\n\t        replicator: REPLICATOR,\n\t        version: CHECKPOINT_VERSION\n\t      };\n\t    }\n\t    throw err;\n\t  }).then(function (doc) {\n\t    if (returnValue.cancelled) {\n\t      return;\n\t    }\n\t\n\t    // if the checkpoint has not changed, do not update\n\t    if (doc.last_seq === checkpoint) {\n\t      return;\n\t    }\n\t\n\t    // Filter out current entry for this replication\n\t    doc.history = (doc.history || []).filter(function (item) {\n\t      return item.session_id !== session;\n\t    });\n\t\n\t    // Add the latest checkpoint to history\n\t    doc.history.unshift({\n\t      last_seq: checkpoint,\n\t      session_id: session\n\t    });\n\t\n\t    // Just take the last pieces in history, to\n\t    // avoid really big checkpoint docs.\n\t    // see comment on history size above\n\t    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\t\n\t    doc.version = CHECKPOINT_VERSION;\n\t    doc.replicator = REPLICATOR;\n\t\n\t    doc.session_id = session;\n\t    doc.last_seq = checkpoint;\n\t\n\t    return db.put(doc).catch(function (err) {\n\t      if (err.status === 409) {\n\t        // retry; someone is trying to write a checkpoint simultaneously\n\t        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n\t      }\n\t      throw err;\n\t    });\n\t  });\n\t}\n\t\n\tfunction Checkpointer(src, target, id, returnValue) {\n\t  this.src = src;\n\t  this.target = target;\n\t  this.id = id;\n\t  this.returnValue = returnValue;\n\t}\n\t\n\tCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n\t  var self = this;\n\t  return this.updateTarget(checkpoint, session).then(function () {\n\t    return self.updateSource(checkpoint, session);\n\t  });\n\t};\n\t\n\tCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n\t  return updateCheckpoint(this.target, this.id, checkpoint,\n\t    session, this.returnValue);\n\t};\n\t\n\tCheckpointer.prototype.updateSource = function (checkpoint, session) {\n\t  var self = this;\n\t  if (this.readOnlySource) {\n\t    return PouchPromise$1.resolve(true);\n\t  }\n\t  return updateCheckpoint(this.src, this.id, checkpoint,\n\t    session, this.returnValue)\n\t    .catch(function (err) {\n\t      if (isForbiddenError(err)) {\n\t        self.readOnlySource = true;\n\t        return true;\n\t      }\n\t      throw err;\n\t    });\n\t};\n\t\n\tvar comparisons = {\n\t  \"undefined\": function (targetDoc, sourceDoc) {\n\t    // This is the previous comparison function\n\t    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n\t      return sourceDoc.last_seq;\n\t    }\n\t    /* istanbul ignore next */\n\t    return 0;\n\t  },\n\t  \"1\": function (targetDoc, sourceDoc) {\n\t    // This is the comparison function ported from CouchDB\n\t    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n\t  }\n\t};\n\t\n\tCheckpointer.prototype.getCheckpoint = function () {\n\t  var self = this;\n\t  return self.target.get(self.id).then(function (targetDoc) {\n\t    if (self.readOnlySource) {\n\t      return PouchPromise$1.resolve(targetDoc.last_seq);\n\t    }\n\t\n\t    return self.src.get(self.id).then(function (sourceDoc) {\n\t      // Since we can't migrate an old version doc to a new one\n\t      // (no session id), we just go with the lowest seq in this case\n\t      /* istanbul ignore if */\n\t      if (targetDoc.version !== sourceDoc.version) {\n\t        return LOWEST_SEQ;\n\t      }\n\t\n\t      var version;\n\t      if (targetDoc.version) {\n\t        version = targetDoc.version.toString();\n\t      } else {\n\t        version = \"undefined\";\n\t      }\n\t\n\t      if (version in comparisons) {\n\t        return comparisons[version](targetDoc, sourceDoc);\n\t      }\n\t      /* istanbul ignore next */\n\t      return LOWEST_SEQ;\n\t    }, function (err) {\n\t      if (err.status === 404 && targetDoc.last_seq) {\n\t        return self.src.put({\n\t          _id: self.id,\n\t          last_seq: LOWEST_SEQ\n\t        }).then(function () {\n\t          return LOWEST_SEQ;\n\t        }, function (err) {\n\t          if (isForbiddenError(err)) {\n\t            self.readOnlySource = true;\n\t            return targetDoc.last_seq;\n\t          }\n\t          /* istanbul ignore next */\n\t          return LOWEST_SEQ;\n\t        });\n\t      }\n\t      throw err;\n\t    });\n\t  }).catch(function (err) {\n\t    if (err.status !== 404) {\n\t      throw err;\n\t    }\n\t    return LOWEST_SEQ;\n\t  });\n\t};\n\t// This checkpoint comparison is ported from CouchDBs source\n\t// they come from here:\n\t// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\t\n\tfunction compareReplicationLogs(srcDoc, tgtDoc) {\n\t  if (srcDoc.session_id === tgtDoc.session_id) {\n\t    return {\n\t      last_seq: srcDoc.last_seq,\n\t      history: srcDoc.history\n\t    };\n\t  }\n\t\n\t  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n\t}\n\t\n\tfunction compareReplicationHistory(sourceHistory, targetHistory) {\n\t  // the erlang loop via function arguments is not so easy to repeat in JS\n\t  // therefore, doing this as recursion\n\t  var S = sourceHistory[0];\n\t  var sourceRest = sourceHistory.slice(1);\n\t  var T = targetHistory[0];\n\t  var targetRest = targetHistory.slice(1);\n\t\n\t  if (!S || targetHistory.length === 0) {\n\t    return {\n\t      last_seq: LOWEST_SEQ,\n\t      history: []\n\t    };\n\t  }\n\t\n\t  var sourceId = S.session_id;\n\t  /* istanbul ignore if */\n\t  if (hasSessionId(sourceId, targetHistory)) {\n\t    return {\n\t      last_seq: S.last_seq,\n\t      history: sourceHistory\n\t    };\n\t  }\n\t\n\t  var targetId = T.session_id;\n\t  if (hasSessionId(targetId, sourceRest)) {\n\t    return {\n\t      last_seq: T.last_seq,\n\t      history: targetRest\n\t    };\n\t  }\n\t\n\t  return compareReplicationHistory(sourceRest, targetRest);\n\t}\n\t\n\tfunction hasSessionId(sessionId, history) {\n\t  var props = history[0];\n\t  var rest = history.slice(1);\n\t\n\t  if (!sessionId || history.length === 0) {\n\t    return false;\n\t  }\n\t\n\t  if (sessionId === props.session_id) {\n\t    return true;\n\t  }\n\t\n\t  return hasSessionId(sessionId, rest);\n\t}\n\t\n\tfunction isForbiddenError(err) {\n\t  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n\t}\n\t\n\tvar STARTING_BACK_OFF = 0;\n\t\n\tfunction backOff(opts, returnValue, error, callback) {\n\t  if (opts.retry === false) {\n\t    returnValue.emit('error', error);\n\t    returnValue.removeAllListeners();\n\t    return;\n\t  }\n\t  if (typeof opts.back_off_function !== 'function') {\n\t    opts.back_off_function = defaultBackOff;\n\t  }\n\t  returnValue.emit('requestError', error);\n\t  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n\t    returnValue.emit('paused', error);\n\t    returnValue.state = 'stopped';\n\t    var backOffSet = function backoffTimeSet() {\n\t      opts.current_back_off = STARTING_BACK_OFF;\n\t    };\n\t    var removeBackOffSetter = function removeBackOffTimeSet() {\n\t      returnValue.removeListener('active', backOffSet);\n\t    };\n\t    returnValue.once('paused', removeBackOffSetter);\n\t    returnValue.once('active', backOffSet);\n\t  }\n\t\n\t  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n\t  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n\t  setTimeout(callback, opts.current_back_off);\n\t}\n\t\n\tfunction sortObjectPropertiesByKey(queryParams) {\n\t  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n\t    result[key] = queryParams[key];\n\t    return result;\n\t  }, {});\n\t}\n\t\n\t// Generate a unique id particular to this replication.\n\t// Not guaranteed to align perfectly with CouchDB's rep ids.\n\tfunction generateReplicationId(src, target, opts) {\n\t  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n\t  var filterFun = opts.filter ? opts.filter.toString() : '';\n\t  var queryParams = '';\n\t  var filterViewName =  '';\n\t\n\t  if (opts.filter && opts.query_params) {\n\t    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n\t  }\n\t\n\t  if (opts.filter && opts.filter === '_view') {\n\t    filterViewName = opts.view.toString();\n\t  }\n\t\n\t  return PouchPromise$1.all([src.id(), target.id()]).then(function (res) {\n\t    var queryData = res[0] + res[1] + filterFun + filterViewName +\n\t      queryParams + docIds;\n\t    return new PouchPromise$1(function (resolve) {\n\t      binaryMd5(queryData, resolve);\n\t    });\n\t  }).then(function (md5sum) {\n\t    // can't use straight-up md5 alphabet, because\n\t    // the char '/' is interpreted as being for attachments,\n\t    // and + is also not url-safe\n\t    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n\t    return '_local/' + md5sum;\n\t  });\n\t}\n\t\n\tfunction replicate(src, target, opts, returnValue, result) {\n\t  var batches = [];               // list of batches to be processed\n\t  var currentBatch;               // the batch currently being processed\n\t  var pendingBatch = {\n\t    seq: 0,\n\t    changes: [],\n\t    docs: []\n\t  }; // next batch, not yet ready to be processed\n\t  var writingCheckpoint = false;  // true while checkpoint is being written\n\t  var changesCompleted = false;   // true when all changes received\n\t  var replicationCompleted = false; // true when replication has completed\n\t  var last_seq = 0;\n\t  var continuous = opts.continuous || opts.live || false;\n\t  var batch_size = opts.batch_size || 100;\n\t  var batches_limit = opts.batches_limit || 10;\n\t  var changesPending = false;     // true while src.changes is running\n\t  var doc_ids = opts.doc_ids;\n\t  var repId;\n\t  var checkpointer;\n\t  var changedDocs = [];\n\t  // Like couchdb, every replication gets a unique session id\n\t  var session = uuid();\n\t\n\t  result = result || {\n\t    ok: true,\n\t    start_time: new Date(),\n\t    docs_read: 0,\n\t    docs_written: 0,\n\t    doc_write_failures: 0,\n\t    errors: []\n\t  };\n\t\n\t  var changesOpts = {};\n\t  returnValue.ready(src, target);\n\t\n\t  function initCheckpointer() {\n\t    if (checkpointer) {\n\t      return PouchPromise$1.resolve();\n\t    }\n\t    return generateReplicationId(src, target, opts).then(function (res) {\n\t      repId = res;\n\t      checkpointer = new Checkpointer(src, target, repId, returnValue);\n\t    });\n\t  }\n\t\n\t  function writeDocs() {\n\t    changedDocs = [];\n\t\n\t    if (currentBatch.docs.length === 0) {\n\t      return;\n\t    }\n\t    var docs = currentBatch.docs;\n\t    var bulkOpts = {timeout: opts.timeout};\n\t    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t\n\t      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n\t      // (id -> error), and check for errors while iterating over `docs`\n\t      var errorsById = Object.create(null);\n\t      res.forEach(function (res) {\n\t        if (res.error) {\n\t          errorsById[res.id] = res;\n\t        }\n\t      });\n\t\n\t      var errorsNo = Object.keys(errorsById).length;\n\t      result.doc_write_failures += errorsNo;\n\t      result.docs_written += docs.length - errorsNo;\n\t\n\t      docs.forEach(function (doc) {\n\t        var error = errorsById[doc._id];\n\t        if (error) {\n\t          result.errors.push(error);\n\t          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n\t            returnValue.emit('denied', clone(error));\n\t          } else {\n\t            throw error;\n\t          }\n\t        } else {\n\t          changedDocs.push(doc);\n\t        }\n\t      });\n\t\n\t    }, function (err) {\n\t      result.doc_write_failures += docs.length;\n\t      throw err;\n\t    });\n\t  }\n\t\n\t  function finishBatch() {\n\t    if (currentBatch.error) {\n\t      throw new Error('There was a problem getting docs.');\n\t    }\n\t    result.last_seq = last_seq = currentBatch.seq;\n\t    var outResult = clone(result);\n\t    if (changedDocs.length) {\n\t      outResult.docs = changedDocs;\n\t      returnValue.emit('change', outResult);\n\t    }\n\t    writingCheckpoint = true;\n\t    return checkpointer.writeCheckpoint(currentBatch.seq,\n\t        session).then(function () {\n\t      writingCheckpoint = false;\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t      currentBatch = undefined;\n\t      getChanges();\n\t    }).catch(function (err) {\n\t      onCheckpointError(err);\n\t      throw err;\n\t    });\n\t  }\n\t\n\t  function getDiffs() {\n\t    var diff = {};\n\t    currentBatch.changes.forEach(function (change) {\n\t      // Couchbase Sync Gateway emits these, but we can ignore them\n\t      /* istanbul ignore if */\n\t      if (change.id === \"_user/\") {\n\t        return;\n\t      }\n\t      diff[change.id] = change.changes.map(function (x) {\n\t        return x.rev;\n\t      });\n\t    });\n\t    return target.revsDiff(diff).then(function (diffs) {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t      // currentBatch.diffs elements are deleted as the documents are written\n\t      currentBatch.diffs = diffs;\n\t    });\n\t  }\n\t\n\t  function getBatchDocs() {\n\t    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n\t      currentBatch.error = !got.ok;\n\t      got.docs.forEach(function (doc) {\n\t        delete currentBatch.diffs[doc._id];\n\t        result.docs_read++;\n\t        currentBatch.docs.push(doc);\n\t      });\n\t    });\n\t  }\n\t\n\t  function startNextBatch() {\n\t    if (returnValue.cancelled || currentBatch) {\n\t      return;\n\t    }\n\t    if (batches.length === 0) {\n\t      processPendingBatch(true);\n\t      return;\n\t    }\n\t    currentBatch = batches.shift();\n\t    getDiffs()\n\t      .then(getBatchDocs)\n\t      .then(writeDocs)\n\t      .then(finishBatch)\n\t      .then(startNextBatch)\n\t      .catch(function (err) {\n\t        abortReplication('batch processing terminated with error', err);\n\t      });\n\t  }\n\t\n\t\n\t  function processPendingBatch(immediate) {\n\t    if (pendingBatch.changes.length === 0) {\n\t      if (batches.length === 0 && !currentBatch) {\n\t        if ((continuous && changesOpts.live) || changesCompleted) {\n\t          returnValue.state = 'pending';\n\t          returnValue.emit('paused');\n\t        }\n\t        if (changesCompleted) {\n\t          completeReplication();\n\t        }\n\t      }\n\t      return;\n\t    }\n\t    if (\n\t      immediate ||\n\t      changesCompleted ||\n\t      pendingBatch.changes.length >= batch_size\n\t    ) {\n\t      batches.push(pendingBatch);\n\t      pendingBatch = {\n\t        seq: 0,\n\t        changes: [],\n\t        docs: []\n\t      };\n\t      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n\t        returnValue.state = 'active';\n\t        returnValue.emit('active');\n\t      }\n\t      startNextBatch();\n\t    }\n\t  }\n\t\n\t\n\t  function abortReplication(reason, err) {\n\t    if (replicationCompleted) {\n\t      return;\n\t    }\n\t    if (!err.message) {\n\t      err.message = reason;\n\t    }\n\t    result.ok = false;\n\t    result.status = 'aborting';\n\t    batches = [];\n\t    pendingBatch = {\n\t      seq: 0,\n\t      changes: [],\n\t      docs: []\n\t    };\n\t    completeReplication(err);\n\t  }\n\t\n\t\n\t  function completeReplication(fatalError) {\n\t    if (replicationCompleted) {\n\t      return;\n\t    }\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      result.status = 'cancelled';\n\t      if (writingCheckpoint) {\n\t        return;\n\t      }\n\t    }\n\t    result.status = result.status || 'complete';\n\t    result.end_time = new Date();\n\t    result.last_seq = last_seq;\n\t    replicationCompleted = true;\n\t\n\t    if (fatalError) {\n\t      fatalError.result = result;\n\t\n\t      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n\t        returnValue.emit('error', fatalError);\n\t        returnValue.removeAllListeners();\n\t      } else {\n\t        backOff(opts, returnValue, fatalError, function () {\n\t          replicate(src, target, opts, returnValue);\n\t        });\n\t      }\n\t    } else {\n\t      returnValue.emit('complete', result);\n\t      returnValue.removeAllListeners();\n\t    }\n\t  }\n\t\n\t\n\t  function onChange(change) {\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t    var filter = filterChange(opts)(change);\n\t    if (!filter) {\n\t      return;\n\t    }\n\t    pendingBatch.seq = change.seq;\n\t    pendingBatch.changes.push(change);\n\t    processPendingBatch(batches.length === 0 && changesOpts.live);\n\t  }\n\t\n\t\n\t  function onChangesComplete(changes) {\n\t    changesPending = false;\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t\n\t    // if no results were returned then we're done,\n\t    // else fetch more\n\t    if (changes.results.length > 0) {\n\t      changesOpts.since = changes.last_seq;\n\t      getChanges();\n\t      processPendingBatch(true);\n\t    } else {\n\t\n\t      var complete = function () {\n\t        if (continuous) {\n\t          changesOpts.live = true;\n\t          getChanges();\n\t        } else {\n\t          changesCompleted = true;\n\t        }\n\t        processPendingBatch(true);\n\t      };\n\t\n\t      // update the checkpoint so we start from the right seq next time\n\t      if (!currentBatch && changes.results.length === 0) {\n\t        writingCheckpoint = true;\n\t        checkpointer.writeCheckpoint(changes.last_seq,\n\t            session).then(function () {\n\t          writingCheckpoint = false;\n\t          result.last_seq = last_seq = changes.last_seq;\n\t          complete();\n\t        })\n\t        .catch(onCheckpointError);\n\t      } else {\n\t        complete();\n\t      }\n\t    }\n\t  }\n\t\n\t\n\t  function onChangesError(err) {\n\t    changesPending = false;\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t    abortReplication('changes rejected', err);\n\t  }\n\t\n\t\n\t  function getChanges() {\n\t    if (!(\n\t      !changesPending &&\n\t      !changesCompleted &&\n\t      batches.length < batches_limit\n\t      )) {\n\t      return;\n\t    }\n\t    changesPending = true;\n\t    function abortChanges() {\n\t      changes.cancel();\n\t    }\n\t    function removeListener() {\n\t      returnValue.removeListener('cancel', abortChanges);\n\t    }\n\t\n\t    if (returnValue._changes) { // remove old changes() and listeners\n\t      returnValue.removeListener('cancel', returnValue._abortChanges);\n\t      returnValue._changes.cancel();\n\t    }\n\t    returnValue.once('cancel', abortChanges);\n\t\n\t    var changes = src.changes(changesOpts)\n\t      .on('change', onChange);\n\t    changes.then(removeListener, removeListener);\n\t    changes.then(onChangesComplete)\n\t      .catch(onChangesError);\n\t\n\t    if (opts.retry) {\n\t      // save for later so we can cancel if necessary\n\t      returnValue._changes = changes;\n\t      returnValue._abortChanges = abortChanges;\n\t    }\n\t  }\n\t\n\t\n\t  function startChanges() {\n\t    initCheckpointer().then(function () {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        return;\n\t      }\n\t      return checkpointer.getCheckpoint().then(function (checkpoint) {\n\t        last_seq = checkpoint;\n\t        changesOpts = {\n\t          since: last_seq,\n\t          limit: batch_size,\n\t          batch_size: batch_size,\n\t          style: 'all_docs',\n\t          doc_ids: doc_ids,\n\t          return_docs: true // required so we know when we're done\n\t        };\n\t        if (opts.filter) {\n\t          if (typeof opts.filter !== 'string') {\n\t            // required for the client-side filter in onChange\n\t            changesOpts.include_docs = true;\n\t          } else { // ddoc filter\n\t            changesOpts.filter = opts.filter;\n\t          }\n\t        }\n\t        if ('heartbeat' in opts) {\n\t          changesOpts.heartbeat = opts.heartbeat;\n\t        }\n\t        if ('timeout' in opts) {\n\t          changesOpts.timeout = opts.timeout;\n\t        }\n\t        if (opts.query_params) {\n\t          changesOpts.query_params = opts.query_params;\n\t        }\n\t        if (opts.view) {\n\t          changesOpts.view = opts.view;\n\t        }\n\t        getChanges();\n\t      });\n\t    }).catch(function (err) {\n\t      abortReplication('getCheckpoint rejected with ', err);\n\t    });\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  function onCheckpointError(err) {\n\t    writingCheckpoint = false;\n\t    abortReplication('writeCheckpoint completed with error', err);\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (returnValue.cancelled) { // cancelled immediately\n\t    completeReplication();\n\t    return;\n\t  }\n\t\n\t  if (!returnValue._addedListeners) {\n\t    returnValue.once('cancel', completeReplication);\n\t\n\t    if (typeof opts.complete === 'function') {\n\t      returnValue.once('error', opts.complete);\n\t      returnValue.once('complete', function (result) {\n\t        opts.complete(null, result);\n\t      });\n\t    }\n\t    returnValue._addedListeners = true;\n\t  }\n\t\n\t  if (typeof opts.since === 'undefined') {\n\t    startChanges();\n\t  } else {\n\t    initCheckpointer().then(function () {\n\t      writingCheckpoint = true;\n\t      return checkpointer.writeCheckpoint(opts.since, session);\n\t    }).then(function () {\n\t      writingCheckpoint = false;\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        return;\n\t      }\n\t      last_seq = opts.since;\n\t      startChanges();\n\t    }).catch(onCheckpointError);\n\t  }\n\t}\n\t\n\t// We create a basic promise so the caller can cancel the replication possibly\n\t// before we have actually started listening to changes etc\n\tinherits(Replication, events.EventEmitter);\n\tfunction Replication() {\n\t  events.EventEmitter.call(this);\n\t  this.cancelled = false;\n\t  this.state = 'pending';\n\t  var self = this;\n\t  var promise = new PouchPromise$1(function (fulfill, reject) {\n\t    self.once('complete', fulfill);\n\t    self.once('error', reject);\n\t  });\n\t  self.then = function (resolve, reject) {\n\t    return promise.then(resolve, reject);\n\t  };\n\t  self.catch = function (reject) {\n\t    return promise.catch(reject);\n\t  };\n\t  // As we allow error handling via \"error\" event as well,\n\t  // put a stub in here so that rejecting never throws UnhandledError.\n\t  self.catch(function () {});\n\t}\n\t\n\tReplication.prototype.cancel = function () {\n\t  this.cancelled = true;\n\t  this.state = 'cancelled';\n\t  this.emit('cancel');\n\t};\n\t\n\tReplication.prototype.ready = function (src, target) {\n\t  var self = this;\n\t  if (self._readyCalled) {\n\t    return;\n\t  }\n\t  self._readyCalled = true;\n\t\n\t  function onDestroy() {\n\t    self.cancel();\n\t  }\n\t  src.once('destroyed', onDestroy);\n\t  target.once('destroyed', onDestroy);\n\t  function cleanup() {\n\t    src.removeListener('destroyed', onDestroy);\n\t    target.removeListener('destroyed', onDestroy);\n\t  }\n\t  self.once('complete', cleanup);\n\t};\n\t\n\tfunction toPouch(db, opts) {\n\t  var PouchConstructor = opts.PouchConstructor;\n\t  if (typeof db === 'string') {\n\t    return new PouchConstructor(db, opts);\n\t  } else {\n\t    return db;\n\t  }\n\t}\n\t\n\tfunction replicateWrapper(src, target, opts, callback) {\n\t\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof opts === 'undefined') {\n\t    opts = {};\n\t  }\n\t\n\t  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n\t    throw createError(BAD_REQUEST,\n\t                       \"`doc_ids` filter parameter is not a list.\");\n\t  }\n\t\n\t  opts.complete = callback;\n\t  opts = clone(opts);\n\t  opts.continuous = opts.continuous || opts.live;\n\t  opts.retry = ('retry' in opts) ? opts.retry : false;\n\t  /*jshint validthis:true */\n\t  opts.PouchConstructor = opts.PouchConstructor || this;\n\t  var replicateRet = new Replication(opts);\n\t  var srcPouch = toPouch(src, opts);\n\t  var targetPouch = toPouch(target, opts);\n\t  replicate(srcPouch, targetPouch, opts, replicateRet);\n\t  return replicateRet;\n\t}\n\t\n\tinherits(Sync, events.EventEmitter);\n\tfunction sync$1(src, target, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof opts === 'undefined') {\n\t    opts = {};\n\t  }\n\t  opts = clone(opts);\n\t  /*jshint validthis:true */\n\t  opts.PouchConstructor = opts.PouchConstructor || this;\n\t  src = toPouch(src, opts);\n\t  target = toPouch(target, opts);\n\t  return new Sync(src, target, opts, callback);\n\t}\n\t\n\tfunction Sync(src, target, opts, callback) {\n\t  var self = this;\n\t  this.canceled = false;\n\t\n\t  var optsPush = opts.push ? assign$1({}, opts, opts.push) : opts;\n\t  var optsPull = opts.pull ? assign$1({}, opts, opts.pull) : opts;\n\t\n\t  this.push = replicateWrapper(src, target, optsPush);\n\t  this.pull = replicateWrapper(target, src, optsPull);\n\t\n\t  this.pushPaused = true;\n\t  this.pullPaused = true;\n\t\n\t  function pullChange(change) {\n\t    self.emit('change', {\n\t      direction: 'pull',\n\t      change: change\n\t    });\n\t  }\n\t  function pushChange(change) {\n\t    self.emit('change', {\n\t      direction: 'push',\n\t      change: change\n\t    });\n\t  }\n\t  function pushDenied(doc) {\n\t    self.emit('denied', {\n\t      direction: 'push',\n\t      doc: doc\n\t    });\n\t  }\n\t  function pullDenied(doc) {\n\t    self.emit('denied', {\n\t      direction: 'pull',\n\t      doc: doc\n\t    });\n\t  }\n\t  function pushPaused() {\n\t    self.pushPaused = true;\n\t    /* istanbul ignore if */\n\t    if (self.pullPaused) {\n\t      self.emit('paused');\n\t    }\n\t  }\n\t  function pullPaused() {\n\t    self.pullPaused = true;\n\t    /* istanbul ignore if */\n\t    if (self.pushPaused) {\n\t      self.emit('paused');\n\t    }\n\t  }\n\t  function pushActive() {\n\t    self.pushPaused = false;\n\t    /* istanbul ignore if */\n\t    if (self.pullPaused) {\n\t      self.emit('active', {\n\t        direction: 'push'\n\t      });\n\t    }\n\t  }\n\t  function pullActive() {\n\t    self.pullPaused = false;\n\t    /* istanbul ignore if */\n\t    if (self.pushPaused) {\n\t      self.emit('active', {\n\t        direction: 'pull'\n\t      });\n\t    }\n\t  }\n\t\n\t  var removed = {};\n\t\n\t  function removeAll(type) { // type is 'push' or 'pull'\n\t    return function (event, func) {\n\t      var isChange = event === 'change' &&\n\t        (func === pullChange || func === pushChange);\n\t      var isDenied = event === 'denied' &&\n\t        (func === pullDenied || func === pushDenied);\n\t      var isPaused = event === 'paused' &&\n\t        (func === pullPaused || func === pushPaused);\n\t      var isActive = event === 'active' &&\n\t        (func === pullActive || func === pushActive);\n\t\n\t      if (isChange || isDenied || isPaused || isActive) {\n\t        if (!(event in removed)) {\n\t          removed[event] = {};\n\t        }\n\t        removed[event][type] = true;\n\t        if (Object.keys(removed[event]).length === 2) {\n\t          // both push and pull have asked to be removed\n\t          self.removeAllListeners(event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (opts.live) {\n\t    this.push.on('complete', self.pull.cancel.bind(self.pull));\n\t    this.pull.on('complete', self.push.cancel.bind(self.push));\n\t  }\n\t\n\t  function addOneListener(ee, event, listener) {\n\t    if (ee.listeners(event).indexOf(listener) == -1) {\n\t      ee.on(event, listener);\n\t    }\n\t  }\n\t\n\t  this.on('newListener', function (event) {\n\t    if (event === 'change') {\n\t      addOneListener(self.pull, 'change', pullChange);\n\t      addOneListener(self.push, 'change', pushChange);\n\t    } else if (event === 'denied') {\n\t      addOneListener(self.pull, 'denied', pullDenied);\n\t      addOneListener(self.push, 'denied', pushDenied);\n\t    } else if (event === 'active') {\n\t      addOneListener(self.pull, 'active', pullActive);\n\t      addOneListener(self.push, 'active', pushActive);\n\t    } else if (event === 'paused') {\n\t      addOneListener(self.pull, 'paused', pullPaused);\n\t      addOneListener(self.push, 'paused', pushPaused);\n\t    }\n\t  });\n\t\n\t  this.on('removeListener', function (event) {\n\t    if (event === 'change') {\n\t      self.pull.removeListener('change', pullChange);\n\t      self.push.removeListener('change', pushChange);\n\t    } else if (event === 'denied') {\n\t      self.pull.removeListener('denied', pullDenied);\n\t      self.push.removeListener('denied', pushDenied);\n\t    } else if (event === 'active') {\n\t      self.pull.removeListener('active', pullActive);\n\t      self.push.removeListener('active', pushActive);\n\t    } else if (event === 'paused') {\n\t      self.pull.removeListener('paused', pullPaused);\n\t      self.push.removeListener('paused', pushPaused);\n\t    }\n\t  });\n\t\n\t  this.pull.on('removeListener', removeAll('pull'));\n\t  this.push.on('removeListener', removeAll('push'));\n\t\n\t  var promise = PouchPromise$1.all([\n\t    this.push,\n\t    this.pull\n\t  ]).then(function (resp) {\n\t    var out = {\n\t      push: resp[0],\n\t      pull: resp[1]\n\t    };\n\t    self.emit('complete', out);\n\t    if (callback) {\n\t      callback(null, out);\n\t    }\n\t    self.removeAllListeners();\n\t    return out;\n\t  }, function (err) {\n\t    self.cancel();\n\t    if (callback) {\n\t      // if there's a callback, then the callback can receive\n\t      // the error event\n\t      callback(err);\n\t    } else {\n\t      // if there's no callback, then we're safe to emit an error\n\t      // event, which would otherwise throw an unhandled error\n\t      // due to 'error' being a special event in EventEmitters\n\t      self.emit('error', err);\n\t    }\n\t    self.removeAllListeners();\n\t    if (callback) {\n\t      // no sense throwing if we're already emitting an 'error' event\n\t      throw err;\n\t    }\n\t  });\n\t\n\t  this.then = function (success, err) {\n\t    return promise.then(success, err);\n\t  };\n\t\n\t  this.catch = function (err) {\n\t    return promise.catch(err);\n\t  };\n\t}\n\t\n\tSync.prototype.cancel = function () {\n\t  if (!this.canceled) {\n\t    this.canceled = true;\n\t    this.push.cancel();\n\t    this.pull.cancel();\n\t  }\n\t};\n\t\n\tfunction replication(PouchDB) {\n\t  PouchDB.replicate = replicateWrapper;\n\t  PouchDB.sync = sync$1;\n\t\n\t  Object.defineProperty(PouchDB.prototype, 'replicate', {\n\t    get: function () {\n\t      var self = this;\n\t      return {\n\t        from: function (other, opts, callback) {\n\t          return self.constructor.replicate(other, self, opts, callback);\n\t        },\n\t        to: function (other, opts, callback) {\n\t          return self.constructor.replicate(self, other, opts, callback);\n\t        }\n\t      };\n\t    }\n\t  });\n\t\n\t  PouchDB.prototype.sync = function (dbName, opts, callback) {\n\t    return this.constructor.sync(this, dbName, opts, callback);\n\t  };\n\t}\n\t\n\tPouchDB$5.plugin(IDBPouch)\n\t  .plugin(WebSqlPouch)\n\t  .plugin(HttpPouch$1)\n\t  .plugin(mapreduce)\n\t  .plugin(replication);\n\t\n\t// Pull from src because pouchdb-node/pouchdb-browser themselves\n\t// are aggressively optimized and jsnext:main would normally give us this\n\t// aggressive bundle.\n\t\n\tmodule.exports = PouchDB$5;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (factory) {\n\t    if (true) {\n\t        // Node/CommonJS\n\t        module.exports = factory();\n\t    } else if (typeof define === 'function' && define.amd) {\n\t        // AMD\n\t        define(factory);\n\t    } else {\n\t        // Browser globals (with support for web workers)\n\t        var glob;\n\t\n\t        try {\n\t            glob = window;\n\t        } catch (e) {\n\t            glob = self;\n\t        }\n\t\n\t        glob.SparkMD5 = factory();\n\t    }\n\t}(function (undefined) {\n\t\n\t    'use strict';\n\t\n\t    /*\n\t     * Fastest md5 implementation around (JKM md5).\n\t     * Credits: Joseph Myers\n\t     *\n\t     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n\t     * @see http://jsperf.com/md5-shootout/7\n\t     */\n\t\n\t    /* this function is much faster,\n\t      so if possible we use it. Some IEs\n\t      are the only ones I know of that\n\t      need the idiotic second function,\n\t      generated by an if clause.  */\n\t    var add32 = function (a, b) {\n\t        return (a + b) & 0xFFFFFFFF;\n\t    },\n\t        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\t\n\t\n\t    function cmn(q, a, b, x, s, t) {\n\t        a = add32(add32(a, q), add32(x, t));\n\t        return add32((a << s) | (a >>> (32 - s)), b);\n\t    }\n\t\n\t    function md5cycle(x, k) {\n\t        var a = x[0],\n\t            b = x[1],\n\t            c = x[2],\n\t            d = x[3];\n\t\n\t        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t\n\t        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t\n\t        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t\n\t        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n\t        b  = (b << 21 |b >>> 11) + c | 0;\n\t        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n\t        b  = (b << 21 |b >>> 11) + c | 0;\n\t        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n\t        b  = (b << 21 |b >>> 11) + c | 0;\n\t        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n\t        b  = (b << 21 | b >>> 11) + c | 0;\n\t\n\t        x[0] = a + x[0] | 0;\n\t        x[1] = b + x[1] | 0;\n\t        x[2] = c + x[2] | 0;\n\t        x[3] = d + x[3] | 0;\n\t    }\n\t\n\t    function md5blk(s) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\t\n\t    function md5blk_array(a) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\t\n\t    function md51(s) {\n\t        var n = s.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk(s.substring(i - 64, i)));\n\t        }\n\t        s = s.substring(i - 64);\n\t        length = s.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t        return state;\n\t    }\n\t\n\t    function md51_array(a) {\n\t        var n = a.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n\t        }\n\t\n\t        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n\t        // containing the last element of the parent array if the sub array specified starts\n\t        // beyond the length of the parent array - weird.\n\t        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n\t        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\t\n\t        length = a.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t\n\t        return state;\n\t    }\n\t\n\t    function rhex(n) {\n\t        var s = '',\n\t            j;\n\t        for (j = 0; j < 4; j += 1) {\n\t            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n\t        }\n\t        return s;\n\t    }\n\t\n\t    function hex(x) {\n\t        var i;\n\t        for (i = 0; i < x.length; i += 1) {\n\t            x[i] = rhex(x[i]);\n\t        }\n\t        return x.join('');\n\t    }\n\t\n\t    // In some cases the fast add32 function cannot be used..\n\t    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n\t        add32 = function (x, y) {\n\t            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n\t                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t            return (msw << 16) | (lsw & 0xFFFF);\n\t        };\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * ArrayBuffer slice polyfill.\n\t     *\n\t     * @see https://github.com/ttaubert/node-arraybuffer-slice\n\t     */\n\t\n\t    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n\t        (function () {\n\t            function clamp(val, length) {\n\t                val = (val | 0) || 0;\n\t\n\t                if (val < 0) {\n\t                    return Math.max(val + length, 0);\n\t                }\n\t\n\t                return Math.min(val, length);\n\t            }\n\t\n\t            ArrayBuffer.prototype.slice = function (from, to) {\n\t                var length = this.byteLength,\n\t                    begin = clamp(from, length),\n\t                    end = length,\n\t                    num,\n\t                    target,\n\t                    targetArray,\n\t                    sourceArray;\n\t\n\t                if (to !== undefined) {\n\t                    end = clamp(to, length);\n\t                }\n\t\n\t                if (begin > end) {\n\t                    return new ArrayBuffer(0);\n\t                }\n\t\n\t                num = end - begin;\n\t                target = new ArrayBuffer(num);\n\t                targetArray = new Uint8Array(target);\n\t\n\t                sourceArray = new Uint8Array(this, begin, num);\n\t                targetArray.set(sourceArray);\n\t\n\t                return target;\n\t            };\n\t        })();\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * Helpers.\n\t     */\n\t\n\t    function toUtf8(str) {\n\t        if (/[\\u0080-\\uFFFF]/.test(str)) {\n\t            str = unescape(encodeURIComponent(str));\n\t        }\n\t\n\t        return str;\n\t    }\n\t\n\t    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n\t        var length = str.length,\n\t           buff = new ArrayBuffer(length),\n\t           arr = new Uint8Array(buff),\n\t           i;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            arr[i] = str.charCodeAt(i);\n\t        }\n\t\n\t        return returnUInt8Array ? arr : buff;\n\t    }\n\t\n\t    function arrayBuffer2Utf8Str(buff) {\n\t        return String.fromCharCode.apply(null, new Uint8Array(buff));\n\t    }\n\t\n\t    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n\t        var result = new Uint8Array(first.byteLength + second.byteLength);\n\t\n\t        result.set(new Uint8Array(first));\n\t        result.set(new Uint8Array(second), first.byteLength);\n\t\n\t        return returnUInt8Array ? result : result.buffer;\n\t    }\n\t\n\t    function hexToBinaryString(hex) {\n\t        var bytes = [],\n\t            length = hex.length,\n\t            x;\n\t\n\t        for (x = 0; x < length - 1; x += 2) {\n\t            bytes.push(parseInt(hex.substr(x, 2), 16));\n\t        }\n\t\n\t        return String.fromCharCode.apply(String, bytes);\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation.\n\t     *\n\t     * Use this class to perform an incremental md5, otherwise use the\n\t     * static methods instead.\n\t     */\n\t\n\t    function SparkMD5() {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    }\n\t\n\t    /**\n\t     * Appends a string.\n\t     * A conversion will be applied if an utf8 string is detected.\n\t     *\n\t     * @param {String} str The string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.append = function (str) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then append as binary\n\t        this.appendBinary(toUtf8(str));\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Appends a binary string.\n\t     *\n\t     * @param {String} contents The binary string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.appendBinary = function (contents) {\n\t        this._buff += contents;\n\t        this._length += contents.length;\n\t\n\t        var length = this._buff.length,\n\t            i;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n\t        }\n\t\n\t        this._buff = this._buff.substring(i - 64);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            i,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\t\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.reset = function () {\n\t        this._buff = '';\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.prototype.getState = function () {\n\t        return {\n\t            buff: this._buff,\n\t            length: this._length,\n\t            hash: this._hash\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.setState = function (state) {\n\t        this._buff = state.buff;\n\t        this._length = state.length;\n\t        this._hash = state.hash;\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Releases memory used by the incremental buffer and other additional\n\t     * resources. If you plan to use the instance again, use reset instead.\n\t     */\n\t    SparkMD5.prototype.destroy = function () {\n\t        delete this._hash;\n\t        delete this._buff;\n\t        delete this._length;\n\t    };\n\t\n\t    /**\n\t     * Finish the final calculation based on the tail.\n\t     *\n\t     * @param {Array}  tail   The tail (will be modified)\n\t     * @param {Number} length The length of the remaining buffer\n\t     */\n\t    SparkMD5.prototype._finish = function (tail, length) {\n\t        var i = length,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(this._hash, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Do the final computation based on the tail and length\n\t        // Beware that the final length may not fit in 32 bits so we take care of that\n\t        tmp = this._length * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t        md5cycle(this._hash, tail);\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on a string.\n\t     * A conversion will be applied if utf8 string is detected.\n\t     *\n\t     * @param {String}  str The string\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hash = function (str, raw) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then compute it using the binary function\n\t        return SparkMD5.hashBinary(toUtf8(str), raw);\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on a binary string.\n\t     *\n\t     * @param {String}  content The binary string\n\t     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hashBinary = function (content, raw) {\n\t        var hash = md51(content),\n\t            ret = hex(hash);\n\t\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation for array buffers.\n\t     *\n\t     * Use this class to perform an incremental md5 ONLY for array buffers.\n\t     */\n\t    SparkMD5.ArrayBuffer = function () {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    };\n\t\n\t    /**\n\t     * Appends an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array to be appended\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n\t        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n\t            length = buff.length,\n\t            i;\n\t\n\t        this._length += arr.byteLength;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n\t        }\n\t\n\t        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            i,\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\t\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.reset = function () {\n\t        this._buff = new Uint8Array(0);\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.getState = function () {\n\t        var state = SparkMD5.prototype.getState.call(this);\n\t\n\t        // Convert buffer to a string\n\t        state.buff = arrayBuffer2Utf8Str(state.buff);\n\t\n\t        return state;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n\t        // Convert string to buffer\n\t        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\t\n\t        return SparkMD5.prototype.setState.call(this, state);\n\t    };\n\t\n\t    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\t\n\t    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\t\n\t    /**\n\t     * Performs the md5 hash on an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array buffer\n\t     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n\t        var hash = md51_array(new Uint8Array(arr)),\n\t            ret = hex(hash);\n\t\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\t\n\t    return SparkMD5;\n\t}));\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\t// Generated by CoffeeScript 1.9.2\n\t(function() {\n\t  var hasProp = {}.hasOwnProperty,\n\t    slice = [].slice;\n\t\n\t  module.exports = function(source, scope) {\n\t    var key, keys, value, values;\n\t    keys = [];\n\t    values = [];\n\t    for (key in scope) {\n\t      if (!hasProp.call(scope, key)) continue;\n\t      value = scope[key];\n\t      if (key === 'this') {\n\t        continue;\n\t      }\n\t      keys.push(key);\n\t      values.push(value);\n\t    }\n\t    return Function.apply(null, slice.call(keys).concat([source])).apply(scope[\"this\"], values);\n\t  };\n\t\n\t}).call(this);\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Stringify/parse functions that don't operate\n\t * recursively, so they avoid call stack exceeded\n\t * errors.\n\t */\n\texports.stringify = function stringify(input) {\n\t  var queue = [];\n\t  queue.push({obj: input});\n\t\n\t  var res = '';\n\t  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n\t  while ((next = queue.pop())) {\n\t    obj = next.obj;\n\t    prefix = next.prefix || '';\n\t    val = next.val || '';\n\t    res += prefix;\n\t    if (val) {\n\t      res += val;\n\t    } else if (typeof obj !== 'object') {\n\t      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n\t    } else if (obj === null) {\n\t      res += 'null';\n\t    } else if (Array.isArray(obj)) {\n\t      queue.push({val: ']'});\n\t      for (i = obj.length - 1; i >= 0; i--) {\n\t        arrayPrefix = i === 0 ? '' : ',';\n\t        queue.push({obj: obj[i], prefix: arrayPrefix});\n\t      }\n\t      queue.push({val: '['});\n\t    } else { // object\n\t      keys = [];\n\t      for (k in obj) {\n\t        if (obj.hasOwnProperty(k)) {\n\t          keys.push(k);\n\t        }\n\t      }\n\t      queue.push({val: '}'});\n\t      for (i = keys.length - 1; i >= 0; i--) {\n\t        key = keys[i];\n\t        value = obj[key];\n\t        objPrefix = (i > 0 ? ',' : '');\n\t        objPrefix += JSON.stringify(key) + ':';\n\t        queue.push({obj: value, prefix: objPrefix});\n\t      }\n\t      queue.push({val: '{'});\n\t    }\n\t  }\n\t  return res;\n\t};\n\t\n\t// Convenience function for the parse function.\n\t// This pop function is basically copied from\n\t// pouchCollate.parseIndexableString\n\tfunction pop(obj, stack, metaStack) {\n\t  var lastMetaElement = metaStack[metaStack.length - 1];\n\t  if (obj === lastMetaElement.element) {\n\t    // popping a meta-element, e.g. an object whose value is another object\n\t    metaStack.pop();\n\t    lastMetaElement = metaStack[metaStack.length - 1];\n\t  }\n\t  var element = lastMetaElement.element;\n\t  var lastElementIndex = lastMetaElement.index;\n\t  if (Array.isArray(element)) {\n\t    element.push(obj);\n\t  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n\t    var key = stack.pop();\n\t    element[key] = obj;\n\t  } else {\n\t    stack.push(obj); // obj with key only\n\t  }\n\t}\n\t\n\texports.parse = function (str) {\n\t  var stack = [];\n\t  var metaStack = []; // stack for arrays and objects\n\t  var i = 0;\n\t  var collationIndex,parsedNum,numChar;\n\t  var parsedString,lastCh,numConsecutiveSlashes,ch;\n\t  var arrayElement, objElement;\n\t  while (true) {\n\t    collationIndex = str[i++];\n\t    if (collationIndex === '}' ||\n\t        collationIndex === ']' ||\n\t        typeof collationIndex === 'undefined') {\n\t      if (stack.length === 1) {\n\t        return stack.pop();\n\t      } else {\n\t        pop(stack.pop(), stack, metaStack);\n\t        continue;\n\t      }\n\t    }\n\t    switch (collationIndex) {\n\t      case ' ':\n\t      case '\\t':\n\t      case '\\n':\n\t      case ':':\n\t      case ',':\n\t        break;\n\t      case 'n':\n\t        i += 3; // 'ull'\n\t        pop(null, stack, metaStack);\n\t        break;\n\t      case 't':\n\t        i += 3; // 'rue'\n\t        pop(true, stack, metaStack);\n\t        break;\n\t      case 'f':\n\t        i += 4; // 'alse'\n\t        pop(false, stack, metaStack);\n\t        break;\n\t      case '0':\n\t      case '1':\n\t      case '2':\n\t      case '3':\n\t      case '4':\n\t      case '5':\n\t      case '6':\n\t      case '7':\n\t      case '8':\n\t      case '9':\n\t      case '-':\n\t        parsedNum = '';\n\t        i--;\n\t        while (true) {\n\t          numChar = str[i++];\n\t          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n\t            parsedNum += numChar;\n\t          } else {\n\t            i--;\n\t            break;\n\t          }\n\t        }\n\t        pop(parseFloat(parsedNum), stack, metaStack);\n\t        break;\n\t      case '\"':\n\t        parsedString = '';\n\t        lastCh = void 0;\n\t        numConsecutiveSlashes = 0;\n\t        while (true) {\n\t          ch = str[i++];\n\t          if (ch !== '\"' || (lastCh === '\\\\' &&\n\t              numConsecutiveSlashes % 2 === 1)) {\n\t            parsedString += ch;\n\t            lastCh = ch;\n\t            if (lastCh === '\\\\') {\n\t              numConsecutiveSlashes++;\n\t            } else {\n\t              numConsecutiveSlashes = 0;\n\t            }\n\t          } else {\n\t            break;\n\t          }\n\t        }\n\t        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n\t        break;\n\t      case '[':\n\t        arrayElement = { element: [], index: stack.length };\n\t        stack.push(arrayElement.element);\n\t        metaStack.push(arrayElement);\n\t        break;\n\t      case '{':\n\t        objElement = { element: {}, index: stack.length };\n\t        stack.push(objElement.element);\n\t        metaStack.push(objElement);\n\t        break;\n\t      default:\n\t        throw new Error(\n\t          'unexpectedly reached end of input: ' + collationIndex);\n\t    }\n\t  }\n\t};\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t    } else if (Array.isArray(headers)) {\n\t      headers.forEach(function(header) {\n\t        this.append(header[0], header[1])\n\t      }, this)\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 63 */\n62\n/******/ ])))\n});\n;\n\n\n// WEBPACK FOOTER //\n// cozy-client.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 456c183d2f5f992e066d","/* global fetch */\nimport {refreshToken, AccessToken} from './auth_v3'\nimport {retry, encodeQuery} from './utils'\nimport jsonapi from './jsonapi'\n\nexport function cozyFetch (cozy, path, options = {}) {\n  return cozy.fullpath(path).then((fullpath) => {\n    let resp\n    if (options.disableAuth) {\n      resp = fetch(fullpath, options)\n    } else if (options.manualAuthCredentials) {\n      resp = cozyFetchWithAuth(cozy, fullpath, options, options.manualAuthCredentials)\n    } else {\n      resp = cozy.authorize().then((credentials) =>\n        cozyFetchWithAuth(cozy, fullpath, options, credentials))\n    }\n    return resp.then(res => handleResponse(res, cozy._invalidTokenErrorHandler))\n  })\n}\n\nfunction cozyFetchWithAuth (cozy, fullpath, options, credentials) {\n  if (credentials) {\n    options.headers = options.headers || {}\n    options.headers['Authorization'] = credentials.token.toAuthHeader()\n  }\n\n  // the option credentials:include tells fetch to include the cookies in the\n  // request even for cross-origin requests\n  options.credentials = 'include'\n\n  return Promise.all([\n    cozy.isV2(),\n    fetch(fullpath, options)\n  ]).then(([isV2, res]) => {\n    if ((res.status !== 400 && res.status !== 401) || isV2 || !credentials || options.dontRetry) {\n      return res\n    }\n    // we try to refresh the token only for OAuth, ie, the client defined\n    // and the token is an instance of AccessToken.\n    const { client, token } = credentials\n    if (!client || !(token instanceof AccessToken)) {\n      return res\n    }\n    options.dontRetry = true\n    return retry(() => refreshToken(cozy, client, token), 3)()\n      .then((newToken) => cozy.saveCredentials(client, newToken))\n      .then((credentials) => cozyFetchWithAuth(cozy, fullpath, options, credentials))\n  })\n}\n\nexport function cozyFetchJSON (cozy, method, path, body, options = {}) {\n  const processJSONAPI = typeof options.processJSONAPI === 'undefined' || options.processJSONAPI\n  return fetchJSON(cozy, method, path, body, options)\n    .then(response => handleJSONResponse(response, processJSONAPI))\n}\n\nexport function cozyFetchRawJSON (cozy, method, path, body, options = {}) {\n  return fetchJSON(cozy, method, path, body, options)\n    .then(response => handleJSONResponse(response, false))\n}\n\nfunction fetchJSON (cozy, method, path, body, options = {}) {\n  options.method = method\n\n  const headers = options.headers = options.headers || {}\n\n  headers['Accept'] = 'application/json'\n\n  if (method !== 'GET' && method !== 'HEAD' && body !== undefined) {\n    if (headers['Content-Type']) {\n      options.body = body\n    } else {\n      headers['Content-Type'] = 'application/json'\n      options.body = JSON.stringify(body)\n    }\n  }\n\n  return cozyFetch(cozy, path, options)\n}\n\nfunction handleResponse (res, invalidTokenErrorHandler) {\n  if (res.ok) {\n    return res\n  }\n  let data\n  const contentType = res.headers.get('content-type')\n  if (contentType && contentType.indexOf('json') >= 0) {\n    data = res.json()\n  } else {\n    data = res.text()\n  }\n  return data.then(err => {\n    const error = new FetchError(res, err)\n    if (FetchError.isInvalidToken(error) && invalidTokenErrorHandler) {\n      invalidTokenErrorHandler(error)\n    }\n    throw error\n  })\n}\n\nfunction handleJSONResponse (res, processJSONAPI = true) {\n  const contentType = res.headers.get('content-type')\n  if (!contentType || contentType.indexOf('json') < 0) {\n    return res.text((data) => {\n      throw new FetchError(res, new Error('Response is not JSON: ' + data))\n    })\n  }\n\n  const json = res.json()\n  if (contentType.indexOf('application/vnd.api+json') === 0 && processJSONAPI) {\n    return json.then(jsonapi)\n  } else {\n    return json\n  }\n}\n\nexport function handleInvalidTokenError (error) {\n  try {\n    const currentOrigin = window.location.origin\n    const requestUrl = error.url\n\n    if (requestUrl.indexOf(currentOrigin.replace(/^(https?:\\/\\/\\w+)-\\w+\\./, '$1.')) === 0) {\n      const redirectURL = `${currentOrigin}?${encodeQuery({ 'disconnect': 1 })}`\n      window.location = redirectURL\n    }\n  } catch (e) {\n    console.warn('Unable to handle invalid token error', e, error)\n  }\n}\n\nexport class FetchError extends Error {\n  constructor (res, reason) {\n    super()\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n    // XXX We have to hardcode this because babel doesn't play nice when extending Error\n    this.name = 'FetchError'\n    this.response = res\n    this.url = res.url\n    this.status = res.status\n    this.reason = reason\n\n    Object.defineProperty(this, 'message', {\n      value: reason.message ||\n        (typeof reason === 'string' ? reason : JSON.stringify(reason))\n    })\n  }\n}\n\nFetchError.isUnauthorized = function (err) {\n  // XXX We can't use err instanceof FetchError because of the caveats of babel\n  return err.name === 'FetchError' && err.status === 401\n}\n\nFetchError.isNotFound = function (err) {\n  // XXX We can't use err instanceof FetchError because of the caveats of babel\n  return err.name === 'FetchError' && err.status === 404\n}\n\nFetchError.isInvalidToken = function (err) {\n  // XXX We can't use err instanceof FetchError because of the caveats of babel\n  return err.name === 'FetchError' && err.status === 400 && err.reason && (err.reason.error === 'Invalid JWT token' || err.reason.error === 'Expired token')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fetch.js","'use strict';\n\nvar Promise = require('pouchdb-promise');\n\n/* istanbul ignore next */\nexports.once = function (fun) {\n  var called = false;\n  return exports.getArguments(function (args) {\n    if (called) {\n      console.trace();\n      throw new Error('once called  more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n};\n/* istanbul ignore next */\nexports.getArguments = function (fun) {\n  return function () {\n    var len = arguments.length;\n    var args = new Array(len);\n    var i = -1;\n    while (++i < len) {\n      args[i] = arguments[i];\n    }\n    return fun.call(this, args);\n  };\n};\n/* istanbul ignore next */\nexports.toPromise = function (func) {\n  //create the function we will be returning\n  return exports.getArguments(function (args) {\n    var self = this;\n    var tempCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    // if the last argument is a function, assume its a callback\n    var usedCB;\n    if (tempCB) {\n      // if it was a callback, create a new callback which calls it,\n      // but do so async so we don't trap any errors\n      usedCB = function (err, resp) {\n        process.nextTick(function () {\n          tempCB(err, resp);\n        });\n      };\n    }\n    var promise = new Promise(function (fulfill, reject) {\n      try {\n        var callback = exports.once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        func.apply(self, args);\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    promise.cancel = function () {\n      return this;\n    };\n    return promise;\n  });\n};\n\nexports.inherits = require('inherits');\nexports.Promise = Promise;\n\nexports.clone = function (obj) {\n  return exports.extend(true, {}, obj);\n};\n\nexports.extend = require('pouchdb-extend');\n\nexports.callbackify = function (fun) {\n  return exports.getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    exports.promisedCallback(promise, cb);\n    return promise;\n  });\n};\n\nexports.promisedCallback = function (promise, callback) {\n  promise.then(function (res) {\n    process.nextTick(function () {\n      callback(null, res);\n    });\n  }, function (reason) {\n    process.nextTick(function () {\n      callback(reason);\n    });\n  });\n  return promise;\n};\n\nvar crypto = require('crypto');\nvar Md5 = require('spark-md5');\n\nexports.MD5 = function (string) {\n  /* istanbul ignore else */\n  if (!process.browser) {\n    return crypto.createHash('md5').update(string).digest('hex');\n  } else {\n    return Md5.hash(string);\n  }\n};\n\nexports.flatten = exports.getArguments(function (args) {\n  var res = [];\n  for (var i = 0, len = args.length; i < len; i++) {\n    var subArr = args[i];\n    if (Array.isArray(subArr)) {\n      res = res.concat(exports.flatten.apply(null, subArr));\n    } else {\n      res.push(subArr);\n    }\n  }\n  return res;\n});\n\nexports.mergeObjects = function (arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res = exports.extend(true, res, arr[i]);\n  }\n  return res;\n};\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nexports.getFieldFromDoc = function (doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n};\n\nexports.setFieldInDoc = function (doc, parsedField, value) {\n  for (var i = 0, len = parsedField.length; i < len-1; i++) {\n    var elem = parsedField[i];\n    doc = doc[elem] = {};\n  }\n  doc[parsedField[len-1]] = value;\n};\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nexports.parseField = function (fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n};\n\n// Selects a list of fields defined in dot notation from one doc\n// and copies them to a new doc. Like underscore _.pick but supports nesting.\nexports.pick = function (obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var parsedField = exports.parseField(arr[i]);\n    var value = exports.getFieldFromDoc(obj, parsedField);\n    if(typeof value !== 'undefined') {\n      exports.setFieldInDoc(res, parsedField, value);\n    }\n  }\n  return res;\n};\n\n// e.g. ['a'], ['a', 'b'] is true, but ['b'], ['a', 'b'] is false\nexports.oneArrayIsSubArrayOfOther = function (left, right) {\n\n  for (var i = 0, len = Math.min(left.length, right.length); i < len; i++) {\n    if (left[i] !== right[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// e.g.['a', 'b', 'c'], ['a', 'b'] is false\nexports.oneArrayIsStrictSubArrayOfOther = function (left, right) {\n\n  if (left.length > right.length) {\n    return false;\n  }\n\n  return exports.oneArrayIsSubArrayOfOther(left, right);\n};\n\n// same as above, but treat the left array as an unordered set\n// e.g. ['b', 'a'], ['a', 'b', 'c'] is true, but ['c'], ['a', 'b', 'c'] is false\nexports.oneSetIsSubArrayOfOther = function (left, right) {\n  left = left.slice();\n  for (var i = 0, len = right.length; i < len; i++) {\n    var field = right[i];\n    if (!left.length) {\n      break;\n    }\n    var leftIdx = left.indexOf(field);\n    if (leftIdx === -1) {\n      return false;\n    } else {\n      left.splice(leftIdx, 1);\n    }\n  }\n  return true;\n};\n\nexports.compare = function (left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n};\n\nexports.arrayToObject = function (arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res[arr[i]] = true;\n  }\n  return res;\n};\n\nexports.max = function (arr, fun) {\n  var max = null;\n  var maxScore = -1;\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var element = arr[i];\n    var score = fun(element);\n    if (score > maxScore) {\n      maxScore = score;\n      max = element;\n    }\n  }\n  return max;\n};\n\nexports.arrayEquals = function (arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (var i = 0, len = arr1.length; i < len; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.uniq = function(arr) {\n  var obj = {};\n  for (var i = 0; i < arr.length; i++) {\n    obj['$' + arr[i]] = true;\n  }\n  return Object.keys(obj).map(function (key) {\n    return key.substring(1);\n  });\n};\n\nexports.log = require('debug')('pouchdb:find');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/utils.js\n// module id = 2\n// module chunks = 0","/* global navigator */\nconst FuzzFactor = 0.3\n\nexport function unpromiser (fn) {\n  return function (...args) {\n    const value = fn.apply(this, args)\n    if (!isPromise(value)) {\n      return value\n    }\n    const l = args.length\n    if (l === 0 || typeof args[l - 1] !== 'function') {\n      return\n    }\n    const cb = args[l - 1]\n    value.then(\n      (res) => cb(null, res),\n      (err) => cb(err, null)\n    )\n  }\n}\n\nexport function isPromise (value) {\n  return !!value && typeof value.then === 'function'\n}\n\nexport function isOnline () {\n  return typeof navigator !== 'undefined' ? navigator.onLine : true\n}\n\nexport function isOffline () {\n  return !isOnline()\n}\n\nexport function sleep (time, args) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, time, args)\n  })\n}\n\nexport function retry (fn, count, delay = 300) {\n  return function doTry (...args) {\n    return fn(...args).catch((err) => {\n      if (--count < 0) {\n        throw err\n      }\n      return sleep(getBackedoffDelay(delay, count))\n        .then(() => doTry(...args))\n    })\n  }\n}\n\nexport function getFuzzedDelay (retryDelay) {\n  const fuzzingFactor = ((Math.random() * 2) - 1) * FuzzFactor\n  return retryDelay * (1.0 + fuzzingFactor)\n}\n\nexport function getBackedoffDelay (retryDelay, retryCount = 1) {\n  return getFuzzedDelay(retryDelay * Math.pow(2, retryCount - 1))\n}\n\nexport function createPath (cozy, isV2, doctype, id = '', query = null) {\n  let route = '/data/'\n  if (!isV2) {\n    route += `${encodeURIComponent(doctype)}/`\n  }\n  if (id !== '') {\n    route += encodeURIComponent(id)\n  }\n  const q = encodeQuery(query)\n  if (q !== '') {\n    route += '?' + q\n  }\n  return route\n}\n\nexport function encodeQuery (query) {\n  if (!query) {\n    return ''\n  }\n  let q = ''\n  for (const qname in query) {\n    if (q !== '') {\n      q += '&'\n    }\n    q += `${encodeURIComponent(qname)}=${encodeURIComponent(query[qname])}`\n  }\n  return q\n}\n\nexport function decodeQuery (url) {\n  let queryIndex = url.indexOf('?')\n  if (queryIndex < 0) {\n    queryIndex = url.length\n  }\n  const queries = {}\n  let fragIndex = url.indexOf('#')\n  if (fragIndex < 0) {\n    fragIndex = url.length\n  }\n  if (fragIndex < queryIndex) {\n    return queries\n  }\n  const queryStr = url.slice(queryIndex + 1, fragIndex)\n  if (queryStr === '') {\n    return queries\n  }\n  const parts = queryStr.split('&')\n  for (let i = 0; i < parts.length; i++) {\n    let pair = parts[i].split('=')\n    if (pair.length === 0 || pair[0] === '') {\n      continue\n    }\n    const qname = decodeURIComponent(pair[0])\n    if (queries.hasOwnProperty(qname)) {\n      continue\n    }\n    if (pair.length === 1) {\n      queries[qname] = true\n    } else if (pair.length === 2) {\n      queries[qname] = decodeURIComponent(pair[1])\n    } else {\n      throw new Error('Malformed URL')\n    }\n  }\n  return queries\n}\n\nconst warned = []\nexport function warn (text) {\n  if (warned.indexOf(text) === -1) {\n    warned.push(text)\n    console.warn('cozy-client-js', text)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","'use strict';\n\nvar utils = require('../../utils');\nvar collate = require('pouchdb-collate');\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n// normalize the \"sort\" value\nfunction massageSort(sort) {\n  if (!Array.isArray(sort)) {\n    throw new Error('invalid sort json - should be an array');\n  }\n  return sort.map(function (sorting) {\n    if (typeof sorting === 'string') {\n      var obj = {};\n      obj[sorting] = 'asc';\n      return obj;\n    } else {\n      return sorting;\n    }\n  });\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField (field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = utils.clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\n\nfunction massageIndexDef(indexDef) {\n  indexDef.fields = indexDef.fields.map(function (field) {\n    if (typeof field === 'string') {\n      var obj = {};\n      obj[field] = 'asc';\n      return obj;\n    }\n    return field;\n  });\n  return indexDef;\n}\n\nfunction getKeyFromDoc(doc, index) {\n  var res = [];\n  for (var i = 0; i < index.def.fields.length; i++) {\n    var field = getKey(index.def.fields[i]);\n    res.push(doc[field]);\n  }\n  return res;\n}\n\n// have to do this manually because REASONS. I don't know why\n// CouchDB didn't implement inclusive_start\nfunction filterInclusiveStart(rows, targetValue, index) {\n  var indexFields = index.def.fields;\n  for (var i = 0, len = rows.length; i < len; i++) {\n    var row = rows[i];\n\n    // shave off any docs at the beginning that are <= the\n    // target value\n\n    var docKey = getKeyFromDoc(row.doc, index);\n    if (indexFields.length === 1) {\n      docKey = docKey[0]; // only one field, not multi-field\n    } else { // more than one field in index\n      // in the case where e.g. the user is searching {$gt: {a: 1}}\n      // but the index is [a, b], then we need to shorten the doc key\n      while (docKey.length > targetValue.length) {\n        docKey.pop();\n      }\n    }\n    //ABS as we just looking for values that don't match\n    if (Math.abs(collate.collate(docKey, targetValue)) > 0) {\n      // no need to filter any further; we're past the key\n      break;\n    }\n  }\n  return i > 0 ? rows.slice(i) : rows;\n}\n\nfunction reverseOptions(opts) {\n  var newOpts = utils.clone(opts);\n  delete newOpts.startkey;\n  delete newOpts.endkey;\n  delete newOpts.inclusive_start;\n  delete newOpts.inclusive_end;\n\n  if ('endkey' in opts) {\n    newOpts.startkey = opts.endkey;\n  }\n  if ('startkey' in opts) {\n    newOpts.endkey = opts.startkey;\n  }\n  if ('inclusive_start' in opts) {\n    newOpts.inclusive_end = opts.inclusive_start;\n  }\n  if ('inclusive_end' in opts) {\n    newOpts.inclusive_start = opts.inclusive_end;\n  }\n  return newOpts;\n}\n\nfunction validateIndex(index) {\n  var ascFields = index.fields.filter(function (field) {\n    return getValue(field) === 'asc';\n  });\n  if (ascFields.length !== 0 && ascFields.length !== index.fields.length) {\n    throw new Error('unsupported mixed sorting');\n  }\n}\n\nfunction validateSort (requestDef, index) {\n  if (index.defaultUsed && requestDef.sort) {\n    var noneIdSorts = requestDef.sort.filter(function (sortItem) {\n      return Object.keys(sortItem)[0] !== '_id';\n    }).map(function (sortItem) {\n      return Object.keys(sortItem)[0];\n    });\n\n    if (noneIdSorts.length > 0) {\n      throw new Error('Cannot sort on field(s) \"' + noneIdSorts.join(',') +\n      '\" when using the default index');\n    }\n  }\n\n  if (index.defaultUsed) {\n    return;\n  }\n}\n\nfunction validateFindRequest(requestDef) {\n  if (typeof requestDef.selector !== 'object') {\n    throw new Error('you must provide a selector when you find()');\n  }\n\n  /*var selectors = requestDef.selector['$and'] || [requestDef.selector];\n  for (var i = 0; i < selectors.length; i++) {\n    var selector = selectors[i];\n    var keys = Object.keys(selector);\n    if (keys.length === 0) {\n      throw new Error('invalid empty selector');\n    }\n    //var selection = selector[keys[0]];\n    /*if (Object.keys(selection).length !== 1) {\n      throw new Error('invalid selector: ' + JSON.stringify(selection) +\n        ' - it must have exactly one key/value');\n    }\n  }*/\n}\n\n// determine the maximum number of fields\n// we're going to need to query, e.g. if the user\n// has selection ['a'] and sorting ['a', 'b'], then we\n// need to use the longer of the two: ['a', 'b']\nfunction getUserFields(selector, sort) {\n  var selectorFields = Object.keys(selector);\n  var sortFields = sort? sort.map(getKey) : [];\n  var userFields;\n  if (selectorFields.length >= sortFields.length) {\n    userFields = selectorFields;\n  } else {\n    userFields = sortFields;\n  }\n\n  if (sortFields.length === 0) {\n    return {\n      fields: userFields\n    };\n  }\n\n  // sort according to the user's preferred sorting\n  userFields = userFields.sort(function (left, right) {\n    var leftIdx = sortFields.indexOf(left);\n    if (leftIdx === -1) {\n      leftIdx = Number.MAX_VALUE;\n    }\n    var rightIdx = sortFields.indexOf(right);\n    if (rightIdx === -1) {\n      rightIdx = Number.MAX_VALUE;\n    }\n    return leftIdx < rightIdx ? -1 : leftIdx > rightIdx ? 1 : 0;\n  });\n\n  return {\n    fields: userFields,\n    sortOrder: sort.map(getKey)\n  };\n}\n\nmodule.exports = {\n  getKey: getKey,\n  getValue: getValue,\n  massageSort: massageSort,\n  massageSelector: massageSelector,\n  validateIndex: validateIndex,\n  validateFindRequest: validateFindRequest,\n  validateSort: validateSort,\n  reverseOptions: reverseOptions,\n  filterInclusiveStart: filterInclusiveStart,\n  massageIndexDef: massageIndexDef,\n  parseField: utils.parseField,\n  getUserFields: getUserFields,\n  isCombinationalField: isCombinationalField\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/local/utils.js\n// module id = 4\n// module chunks = 0","import {warn} from './utils'\n\nexport const DOCTYPE_FILES = 'io.cozy.files'\n\nconst KNOWN_DOCTYPES = {\n  'files': DOCTYPE_FILES,\n  'folder': DOCTYPE_FILES,\n  'contact': 'io.cozy.contacts',\n  'event': 'io.cozy.events',\n  'track': 'io.cozy.labs.music.track',\n  'playlist': 'io.cozy.labs.music.playlist'\n}\n\nconst REVERSE_KNOWN = {}\nObject.keys(KNOWN_DOCTYPES).forEach(k => {\n  REVERSE_KNOWN[KNOWN_DOCTYPES[k]] = k\n})\n\nexport function normalizeDoctype (cozy, isV2, doctype) {\n  let isQualified = doctype.indexOf('.') !== -1\n  if (isV2 && isQualified) {\n    let known = REVERSE_KNOWN[doctype]\n    if (known) return known\n    return doctype.replace(/\\./g, '-')\n  }\n  if (!isV2 && !isQualified) {\n    let known = KNOWN_DOCTYPES[doctype]\n    if (known) {\n      warn('you are using a non-qualified doctype ' + doctype + ' assumed to be ' + known)\n      return known\n    }\n    throw new Error('Doctype ' + doctype + ' should be qualified.')\n  }\n  return doctype\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/doctypes.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nvar utils = require('./utils');\n\nexports.collate = function (a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = exports.normalizeKey(a);\n  b = exports.normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  if (a === null) {\n    return 0;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a === b ? 0 : (a < b ? -1 : 1);\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n};\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nexports.normalizeKey = function (key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = exports.normalizeKey(origKey[i]);\n        }\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = exports.normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n};\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += exports.toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += exports.toIndexableString(objKey) +\n                exports.toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nexports.toIndexableString = function (key) {\n  var zero = '\\u0000';\n  key = exports.normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n};\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    if (neg) {\n      num = num - 10;\n    }\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nexports.parseIndexableString = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = exports.collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = exports.collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = exports.collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = utils.padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-collate/lib/index.js\n// module id = 7\n// module chunks = 0","/* global btoa */\nimport {encodeQuery, decodeQuery, isOffline} from './utils'\nimport {cozyFetchJSON, FetchError} from './fetch'\n\nconst StateSize = 16\n\nexport const CredsKey = 'creds'\nexport const StateKey = 'state'\n\nexport class Client {\n  constructor (opts) {\n    this.clientID = opts.clientID || opts.client_id || ''\n    this.clientSecret = opts.clientSecret || opts.client_secret || ''\n    this.registrationAccessToken = opts.registrationAccessToken || opts.registration_access_token || ''\n\n    if (opts.redirect_uris) {\n      this.redirectURI = opts.redirect_uris[0] || ''\n    } else {\n      this.redirectURI = opts.redirectURI || ''\n    }\n\n    this.softwareID = opts.softwareID || opts.software_id || ''\n    this.softwareVersion = opts.softwareVersion || opts.software_version || ''\n    this.clientName = opts.clientName || opts.client_name || ''\n    this.clientKind = opts.clientKind || opts.client_kind || ''\n    this.clientURI = opts.clientURI || opts.client_uri || ''\n\n    this.logoURI = opts.logoURI || opts.logo_uri || ''\n    this.policyURI = opts.policyURI || opts.policy_uri || ''\n\n    if (!this.registrationAccessToken) {\n      if (this.redirectURI === '') {\n        throw new Error('Missing redirectURI field')\n      }\n      if (this.softwareID === '') {\n        throw new Error('Missing softwareID field')\n      }\n      if (this.clientName === '') {\n        throw new Error('Missing clientName field')\n      }\n    }\n  }\n\n  isRegistered () {\n    return this.clientID !== ''\n  }\n\n  toRegisterJSON () {\n    return {\n      redirect_uris: [this.redirectURI],\n      software_id: this.softwareID,\n      software_version: this.softwareVersion,\n      client_name: this.clientName,\n      client_kind: this.clientKind,\n      client_uri: this.clientURI,\n      logo_uri: this.logoURI,\n      policy_uri: this.policyURI\n    }\n  }\n\n  toAuthHeader () {\n    return 'Bearer ' + this.registrationAccessToken\n  }\n}\n\nexport class AccessToken {\n  constructor (opts) {\n    this.tokenType = opts.tokenType || opts.token_type\n    this.accessToken = opts.accessToken || opts.access_token\n    this.refreshToken = opts.refreshToken || opts.refresh_token\n    this.scope = opts.scope\n  }\n\n  toAuthHeader () {\n    return 'Bearer ' + this.accessToken\n  }\n\n  toBasicAuth () {\n    return `user:${this.accessToken}@`\n  }\n}\n\nexport class AppToken {\n  constructor (opts) {\n    this.token = opts.token || ''\n  }\n\n  toAuthHeader () {\n    return 'Bearer ' + this.token\n  }\n\n  toBasicAuth () {\n    return `user:${this.token}@`\n  }\n}\n\nexport function client (cozy, clientParams) {\n  if (!clientParams) {\n    clientParams = cozy._clientParams\n  }\n  if (clientParams instanceof Client) {\n    return clientParams\n  }\n  return new Client(clientParams)\n}\n\nexport function registerClient (cozy, clientParams) {\n  const cli = client(cozy, clientParams)\n  if (cli.isRegistered()) {\n    return Promise.reject(new Error('Client already registered'))\n  }\n  return cozyFetchJSON(cozy, 'POST', '/auth/register', cli.toRegisterJSON(), {\n    disableAuth: true\n  })\n    .then((data) => new Client(data))\n}\n\nexport function updateClient (cozy, clientParams, resetSecret = false) {\n  const cli = client(cozy, clientParams)\n  if (!cli.isRegistered()) {\n    return Promise.reject(new Error('Client not registered'))\n  }\n  let data = cli.toRegisterJSON()\n  data.client_id = cli.clientID\n  if (resetSecret) data.client_secret = cli.clientSecret\n\n  return cozyFetchJSON(cozy, 'PUT', `/auth/register/${cli.clientID}`, data, {\n    manualAuthCredentials: {\n      token: cli\n    }\n  }).then((data) => createClient(data, cli))\n}\n\nexport function unregisterClient (cozy, clientParams) {\n  const cli = client(cozy, clientParams)\n  if (!cli.isRegistered()) {\n    return Promise.reject(new Error('Client not registered'))\n  }\n  return cozyFetchJSON(cozy, 'DELETE', `/auth/register/${cli.clientID}`, null, {\n    manualAuthCredentials: {\n      token: cli\n    }\n  })\n}\n\n// getClient will retrive the registered client informations from the server.\nexport function getClient (cozy, clientParams) {\n  const cli = client(cozy, clientParams)\n  if (!cli.isRegistered()) {\n    return Promise.reject(new Error('Client not registered'))\n  }\n  if (isOffline()) {\n    return Promise.resolve(cli)\n  }\n  return cozyFetchJSON(cozy, 'GET', `/auth/register/${cli.clientID}`, null,\n    {\n      manualAuthCredentials: {\n        token: cli\n      }\n    })\n    .then((data) => createClient(data, cli))\n    .catch((err) => {\n      // If we fall into an error while fetching the client (because of a\n      // bad connectivity for instance), we do not bail the whole process\n      // since the client should be able to continue with the persisted\n      // client and token.\n      //\n      // If it is an explicit Unauthorized error though, we bail, clear th\n      // cache and retry.\n      if (FetchError.isUnauthorized(err) || FetchError.isNotFound(err)) {\n        throw new Error('Client has been revoked')\n      }\n      throw err\n    })\n}\n\n// createClient returns a new Client instance given on object containing the\n// data of the client, from the API, and an old instance of the client.\nfunction createClient (data, oldClient) {\n  const newClient = new Client(data)\n  // we need to keep track of the registrationAccessToken since it is send\n  // only on registration. The GET /auth/register/:client-id endpoint does\n  // not return this token.\n  const shouldPassRegistration = (\n    !!oldClient &&\n    oldClient.registrationAccessToken !== '' &&\n    newClient.registrationAccessToken === ''\n  )\n  if (shouldPassRegistration) {\n    newClient.registrationAccessToken = oldClient.registrationAccessToken\n  }\n  return newClient\n}\n\n// getAuthCodeURL returns a pair {authURL,state} given a registered client. The\n// state should be stored in order to be checked against on the user validation\n// phase.\nexport function getAuthCodeURL (cozy, client, scopes = []) {\n  if (!(client instanceof Client)) {\n    client = new Client(client)\n  }\n  if (!client.isRegistered()) {\n    throw new Error('Client not registered')\n  }\n  const state = generateRandomState()\n  const query = {\n    'client_id': client.clientID,\n    'redirect_uri': client.redirectURI,\n    'state': state,\n    'response_type': 'code',\n    'scope': scopes.join(' ')\n  }\n  return {\n    url: cozy._url + `/auth/authorize?${encodeQuery(query)}`,\n    state: state\n  }\n}\n\n// getAccessToken perform a request on the access_token entrypoint with the\n// authorization_code grant type in order to generate a new access token for a\n// newly registered client.\n//\n// This method extracts the access code and state from the given URL. By\n// default it uses window.location.href. Also, it checks the given state with\n// the one specified in the URL query parameter to prevent CSRF attacks.\nexport function getAccessToken (cozy, client, state, pageURL = '') {\n  if (!state) {\n    return Promise.reject(new Error('Missing state value'))\n  }\n  const grantQueries = getGrantCodeFromPageURL(pageURL)\n  if (grantQueries === null) {\n    return Promise.reject(new Error('Missing states from current URL'))\n  }\n  if (state !== grantQueries.state) {\n    return Promise.reject(new Error('Given state does not match url query state'))\n  }\n  return retrieveToken(cozy, client, null, {\n    'grant_type': 'authorization_code',\n    'code': grantQueries.code\n  })\n}\n\n// refreshToken perform a request on the access_token entrypoint with the\n// refresh_token grant type in order to refresh the given token.\nexport function refreshToken (cozy, client, token) {\n  return retrieveToken(cozy, client, token, {\n    'grant_type': 'refresh_token',\n    'refresh_token': token.refreshToken\n  })\n}\n\n// oauthFlow performs the stateful registration and access granting of an OAuth\n// client.\nexport function oauthFlow (cozy, storage, clientParams, onRegistered, ignoreCachedCredentials = false) {\n  if (ignoreCachedCredentials) {\n    return storage.clear().then(() => oauthFlow(cozy, storage, clientParams, onRegistered, false))\n  }\n\n  let tryCount = 0\n\n  function clearAndRetry (err) {\n    if (tryCount++ > 0) {\n      throw err\n    }\n    return storage.clear().then(() =>\n      oauthFlow(cozy, storage, clientParams, onRegistered))\n  }\n\n  function registerNewClient () {\n    return storage.clear()\n      .then(() => registerClient(cozy, clientParams))\n      .then((client) => {\n        const {url, state} = getAuthCodeURL(cozy, client, clientParams.scopes)\n        return storage.save(StateKey, {client, url, state})\n      })\n  }\n\n  return Promise.all([\n    storage.load(CredsKey),\n    storage.load(StateKey)\n  ]).then(([credentials, storedState]) => {\n    // If credentials are cached we re-fetch the registered client with the\n    // said token. Fetching the client, if the token is outdated we should try\n    // the token is refreshed.\n    if (credentials) {\n      let oldClient, token\n      try {\n        oldClient = new Client(credentials.client)\n        token = new AccessToken(credentials.token)\n      } catch (err) {\n        // bad cache, we should clear and retry the process\n        return clearAndRetry(err)\n      }\n      return getClient(cozy, oldClient)\n        .then((client) => ({client, token}))\n        .catch((err) => {\n          // If we fall into an error while fetching the client (because of a\n          // bad connectivity for instance), we do not bail the whole process\n          // since the client should be able to continue with the persisted\n          // client and token.\n          //\n          // If it is an explicit Unauthorized error though, we bail, clear th\n          // cache and retry.\n          if (FetchError.isUnauthorized(err) || FetchError.isNotFound(err)) {\n            throw new Error('Client has been revoked')\n          }\n          return { client: oldClient, token }\n        })\n    }\n\n    // Otherwise register a new client if necessary (ie. no client is stored)\n    // and call the onRegistered callback to wait for the user to grant the\n    // access. Finally fetches to access token on success.\n    let statePromise\n    if (!storedState) {\n      statePromise = registerNewClient()\n    } else {\n      statePromise = Promise.resolve(storedState)\n    }\n\n    let client, state, token\n    return statePromise\n      .then((data) => {\n        client = data.client\n        state = data.state\n        return Promise.resolve(onRegistered(client, data.url))\n      })\n      .then((pageURL) => getAccessToken(cozy, client, state, pageURL))\n      .then((t) => { token = t })\n      .then(() => storage.delete(StateKey))\n      .then(() => ({client, token}))\n  })\n  .then(\n    (creds) => storage.save(CredsKey, creds),\n    (err) => {\n      if (FetchError.isUnauthorized(err)) {\n        return clearAndRetry(err)\n      } else {\n        throw err\n      }\n    })\n}\n\n// retrieveToken perform a request on the access_token entrypoint in order to\n// fetch a token.\nfunction retrieveToken (cozy, client, token, query) {\n  if (!(client instanceof Client)) {\n    client = new Client(client)\n  }\n  if (!client.isRegistered()) {\n    return Promise.reject(new Error('Client not registered'))\n  }\n  const body = encodeQuery(Object.assign({}, query, {\n    'client_id': client.clientID,\n    'client_secret': client.clientSecret\n  }))\n  return cozyFetchJSON(cozy, 'POST', '/auth/access_token', body, {\n    disableAuth: (token === null),\n    dontRetry: true,\n    manualAuthCredentials: { client, token },\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n  })\n    .then((data) => {\n      data.refreshToken = data.refreshToken || query.refresh_token\n      return new AccessToken(data)\n    })\n}\n\n// getGrantCodeFromPageURL extract the state and access_code query parameters\n// from the given url\nfunction getGrantCodeFromPageURL (pageURL = '') {\n  if (pageURL === '' && typeof window !== 'undefined') {\n    pageURL = window.location.href\n  }\n  const queries = decodeQuery(pageURL)\n  if (!queries.hasOwnProperty('state')) {\n    return null\n  }\n  return {\n    state: queries['state'],\n    code: queries['access_code']\n  }\n}\n\n// generateRandomState will try to generate a 128bits random value from a secure\n// pseudo random generator. It will fallback on Math.random if it cannot find\n// such generator.\nfunction generateRandomState () {\n  let buffer\n  if (typeof window !== 'undefined' &&\n      typeof window.crypto !== 'undefined' &&\n      typeof window.crypto.getRandomValues === 'function') {\n    buffer = new Uint8Array(StateSize)\n    window.crypto.getRandomValues(buffer)\n  } else {\n    try {\n      buffer = require('crypto').randomBytes(StateSize)\n    } catch (e) {}\n  }\n  if (!buffer) {\n    buffer = new Array(StateSize)\n    for (let i = 0; i < buffer.length; i++) {\n      buffer[i] = Math.floor((Math.random() * 255))\n    }\n  }\n  return btoa(String.fromCharCode.apply(null, buffer))\n    .replace(/=+$/, '')\n    .replace(/\\//g, '_')\n    .replace(/\\+/g, '-')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/auth_v3.js","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/immediate/lib/browser.js\n// module id = 9\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 10\n// module chunks = 0","'use strict';\n/* istanbul ignore if */\nexports.Promise = require('pouchdb-promise');\n\nexports.inherits = require('inherits');\nexports.extend = require('pouchdb-extend');\nvar argsarray = require('argsarray');\n\n/* istanbul ignore next */\nexports.promisedCallback = function (promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      process.nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      process.nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n};\n\n/* istanbul ignore next */\nexports.callbackify = function (fun) {\n  return argsarray(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      exports.promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n};\n\n// Promise finally util similar to Q.finally\n/* istanbul ignore next */\nexports.fin = function (promise, cb) {\n  return promise.then(function (res) {\n    var promise2 = cb();\n    if (typeof promise2.then === 'function') {\n      return promise2.then(function () {\n        return res;\n      });\n    }\n    return res;\n  }, function (reason) {\n    var promise2 = cb();\n    if (typeof promise2.then === 'function') {\n      return promise2.then(function () {\n        throw reason;\n      });\n    }\n    throw reason;\n  });\n};\n\nexports.sequentialize = function (queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n};\n\nexports.flatten = function (arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n};\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nexports.uniq = function (arr) {\n  var map = {};\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    map['$' + arr[i]] = true;\n  }\n\n  var keys = Object.keys(map);\n  var output = new Array(keys.length);\n\n  for (i = 0, len = keys.length; i < len; i++) {\n    output[i] = keys[i].substring(1);\n  }\n  return output;\n};\n\nvar crypto = require('crypto');\nvar Md5 = require('spark-md5');\n\nexports.MD5 = function (string) {\n  /* istanbul ignore else */\n  if (!process.browser) {\n    return crypto.createHash('md5').update(string).digest('hex');\n  } else {\n    return Md5.hash(string);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/abstract-mapreduce/utils.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nvar localUtils = require('./utils');\nvar abstractMapReduce = require('../../abstract-mapreduce');\nvar parseField = localUtils.parseField;\n\n//\n// One thing about these mappers:\n//\n// Per the advice of John-David Dalton (http://youtu.be/NthmeLEhDDM),\n// what you want to do in this case is optimize for the smallest possible\n// function, since that's the thing that gets run over and over again.\n//\n// This code would be a lot simpler if all the if/elses were inside\n// the function, but it would also be a lot less performant.\n//\n\n\nfunction createDeepMultiMapper(fields, emit) {\n  return function (doc) {\n    var toEmit = [];\n    for (var i = 0, iLen = fields.length; i < iLen; i++) {\n      var parsedField = parseField(fields[i]);\n      var value = doc;\n      for (var j = 0, jLen = parsedField.length; j < jLen; j++) {\n        var key = parsedField[j];\n        value = value[key];\n        if (!value) {\n          break;\n        }\n      }\n      toEmit.push(value);\n    }\n    emit(toEmit);\n  };\n}\n\nfunction createDeepSingleMapper(field, emit) {\n  var parsedField = parseField(field);\n  return function (doc) {\n    var value = doc;\n    for (var i = 0, len = parsedField.length; i < len; i++) {\n      var key = parsedField[i];\n      value = value[key];\n      if (!value) {\n        return; // do nothing\n      }\n    }\n    emit(value);\n  };\n}\n\nfunction createShallowSingleMapper(field, emit) {\n  return function (doc) {\n    emit(doc[field]);\n  };\n}\n\nfunction createShallowMultiMapper(fields, emit) {\n  return function (doc) {\n    var toEmit = [];\n    for (var i = 0, len = fields.length; i < len; i++) {\n      toEmit.push(doc[fields[i]]);\n    }\n    emit(toEmit);\n  };\n}\n\nfunction checkShallow(fields) {\n  for (var i = 0, len = fields.length; i < len; i++) {\n    var field = fields[i];\n    if (field.indexOf('.') !== -1) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createMapper(fields, emit) {\n  var isShallow = checkShallow(fields);\n  var isSingle = fields.length === 1;\n\n  // notice we try to optimize for the most common case,\n  // i.e. single shallow indexes\n  if (isShallow) {\n    if (isSingle) {\n      return createShallowSingleMapper(fields[0], emit);\n    } else { // multi\n      return createShallowMultiMapper(fields, emit);\n    }\n  } else { // deep\n    if (isSingle) {\n      return createDeepSingleMapper(fields[0], emit);\n    } else { // multi\n      return createDeepMultiMapper(fields, emit);\n    }\n  }\n}\n\nfunction mapper(mapFunDef, emit) {\n  // mapFunDef is a list of fields\n\n  var fields = Object.keys(mapFunDef.fields);\n\n  return createMapper(fields, emit);\n}\n\n/* istanbul ignore next */\nfunction reducer(/*reduceFunDef*/) {\n  throw new Error('reduce not supported');\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var view = ddoc.views[viewName];\n  // This doesn't actually need to be here apparently, but\n  // I feel safer keeping it.\n  /* istanbul ignore if */\n  if (!view.map || !view.map.fields) {\n    throw new Error('ddoc ' + ddoc._id +' with view ' + viewName +\n      ' doesn\\'t have map.fields defined. ' +\n      'maybe it wasn\\'t created by this plugin?');\n  }\n}\n\nvar abstractMapper = abstractMapReduce({\n  name: 'indexes',\n  mapper: mapper,\n  reducer: reducer,\n  ddocValidator: ddocValidator\n});\n\nmodule.exports = abstractMapper;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/local/abstract-mapper.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/argsarray/index.js\n// module id = 13\n// module chunks = 0","function indexKey (doc) {\n  return doc.type + '/' + doc.id\n}\n\nfunction findByRef (resources, ref) {\n  return resources[indexKey(ref)]\n}\n\nfunction handleResource (rawResource, resources, links) {\n  let resource = {\n    _id: rawResource.id,\n    _type: rawResource.type,\n    _rev: (rawResource.meta && rawResource.meta.rev),\n    links: Object.assign({}, rawResource.links, links),\n    attributes: rawResource.attributes,\n    relations: (name) => {\n      let rels = rawResource.relationships[name]\n      if (rels === undefined || rels.data === undefined) return undefined\n      if (rels.data === null) return null\n      if (!Array.isArray(rels.data)) return findByRef(resources, rels.data)\n      return rels.data.map(ref => findByRef(resources, ref))\n    }\n  }\n  if (rawResource.relationships) {\n    resource.relationships = rawResource.relationships\n  }\n\n  resources[indexKey(rawResource)] = resource\n\n  return resource\n}\n\nfunction handleTopLevel (doc, resources = {}) {\n  // build an index of included resource by Type & ID\n  const included = doc.included\n\n  if (Array.isArray(included)) {\n    included.forEach((r) => handleResource(r, resources, doc.links))\n  }\n\n  if (Array.isArray(doc.data)) {\n    return doc.data.map((r) => handleResource(r, resources, doc.links))\n  } else {\n    return handleResource(doc.data, resources, doc.links)\n  }\n}\n\nexport default handleTopLevel\n\n\n\n// WEBPACK FOOTER //\n// ./src/jsonapi.js","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lie/lib/browser.js\n// module id = 15\n// module chunks = 0","\"use strict\";\n\n// Extends method\n// (taken from http://code.jquery.com/jquery-1.9.0.js)\n// Populate the class2type map\nvar class2type = {};\n\nvar types = [\n  \"Boolean\", \"Number\", \"String\", \"Function\", \"Array\",\n  \"Date\", \"RegExp\", \"Object\", \"Error\"\n];\nfor (var i = 0; i < types.length; i++) {\n  var typename = types[i];\n  class2type[\"[object \" + typename + \"]\"] = typename.toLowerCase();\n}\n\nvar core_toString = class2type.toString;\nvar core_hasOwn = class2type.hasOwnProperty;\n\nfunction type(obj) {\n  if (obj === null) {\n    return String(obj);\n  }\n  return typeof obj === \"object\" || typeof obj === \"function\" ?\n    class2type[core_toString.call(obj)] || \"object\" :\n    typeof obj;\n}\n\nfunction isWindow(obj) {\n  return obj !== null && obj === obj.window;\n}\n\nfunction isPlainObject(obj) {\n  // Must be an Object.\n  // Because of IE, we also have to check the presence of\n  // the constructor property.\n  // Make sure that DOM nodes and window objects don't pass through, as well\n  if (!obj || type(obj) !== \"object\" || obj.nodeType || isWindow(obj)) {\n    return false;\n  }\n\n  try {\n    // Not own constructor property must be Object\n    if (obj.constructor &&\n      !core_hasOwn.call(obj, \"constructor\") &&\n      !core_hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n      return false;\n    }\n  } catch ( e ) {\n    // IE8,9 Will throw exceptions on certain host objects #9897\n    return false;\n  }\n\n  // Own properties are enumerated firstly, so to speed up,\n  // if last one is own, then all properties are own.\n  var key;\n  for (key in obj) {}\n\n  return key === undefined || core_hasOwn.call(obj, key);\n}\n\n\nfunction isFunction(obj) {\n  return type(obj) === \"function\";\n}\n\nvar isArray = Array.isArray || function (obj) {\n  return type(obj) === \"array\";\n};\n\nfunction extend() {\n  // originally extend() was recursive, but this ended up giving us\n  // \"call stack exceeded\", so it's been unrolled to use a literal stack\n  // (see https://github.com/pouchdb/pouchdb/issues/2543)\n  var stack = [];\n  var i = -1;\n  var len = arguments.length;\n  var args = new Array(len);\n  while (++i < len) {\n    args[i] = arguments[i];\n  }\n  var container = {};\n  stack.push({args: args, result: {container: container, key: 'key'}});\n  var next;\n  while ((next = stack.pop())) {\n    extendInner(stack, next.args, next.result);\n  }\n  return container.key;\n}\n\nfunction extendInner(stack, args, result) {\n  var options, name, src, copy, copyIsArray, clone,\n    target = args[0] || {},\n    i = 1,\n    length = args.length,\n    deep = false,\n    numericStringRegex = /\\d+/,\n    optionsIsArray;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n    target = args[1] || {};\n    // skip the boolean and the target\n    i = 2;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !isFunction(target)) {\n    target = {};\n  }\n\n  // extend jQuery itself if only one argument is passed\n  if (length === i) {\n    /* jshint validthis: true */\n    target = this;\n    --i;\n  }\n\n  for (; i < length; i++) {\n    // Only deal with non-null/undefined values\n    if ((options = args[i]) != null) {\n      optionsIsArray = isArray(options);\n      // Extend the base object\n      for (name in options) {\n        //if (options.hasOwnProperty(name)) {\n        if (!(name in Object.prototype)) {\n          if (optionsIsArray && !numericStringRegex.test(name)) {\n            continue;\n          }\n\n          src = target[name];\n          copy = options[name];\n\n          // Prevent never-ending loop\n          if (target === copy) {\n            continue;\n          }\n\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (isPlainObject(copy) ||\n              (copyIsArray = isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = src && isArray(src) ? src : [];\n\n            } else {\n              clone = src && isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            stack.push({\n              args: [deep, clone, copy],\n              result: {\n                container: target,\n                key: name\n              }\n            });\n\n          // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            if (!(isArray(options) && isFunction(copy))) {\n              target[name] = copy;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // \"Return\" the modified object by setting the key\n  // on the given container\n  result.container[result.key] = target;\n}\n\n\nmodule.exports = extend;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-extend/index.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nvar upsert = require('pouchdb-upsert').upsert;\n\nmodule.exports = function (db, doc, diffFun) {\n  return upsert.apply(db, [doc, diffFun]);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/abstract-mapreduce/upsert.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nvar utils = require('../../../utils');\n\nvar localUtils = require('../utils');\nvar massageIndexDef = localUtils.massageIndexDef;\n\nfunction getIndexes(db) {\n  // just search through all the design docs and filter in-memory.\n  // hopefully there aren't that many ddocs.\n  return db.allDocs({\n    startkey: '_design/',\n    endkey: '_design/\\uffff',\n    include_docs: true\n  }).then(function (allDocsRes) {\n    var res = {\n      indexes: [{\n        ddoc: null,\n        name: '_all_docs',\n        type: 'special',\n        def: {\n          fields: [{_id: 'asc'}]\n        }\n      }]\n    };\n\n    res.indexes = utils.flatten(res.indexes, allDocsRes.rows.filter(function (row) {\n      return row.doc.language === 'query';\n    }).map(function (row) {\n      var viewNames = row.doc.views !== undefined ? Object.keys(row.doc.views) : [];\n\n      return viewNames.map(function (viewName) {\n        var view = row.doc.views[viewName];\n        return {\n          ddoc: row.id,\n          name: viewName,\n          type: 'json',\n          def: massageIndexDef(view.options.def)\n        };\n      });\n    }));\n\n    // these are sorted by view name for some reason\n    res.indexes.sort(function (left, right) {\n      return utils.compare(left.name, right.name);\n    });\n    res.total_rows = res.indexes.length;\n    return res;\n  });\n}\n\nmodule.exports = getIndexes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/local/get-indexes/index.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\nvar clone = utils.clone;\n\n// we restucture the supplied JSON considerably, because the official\n// Mango API is very particular about a lot of this stuff, but we like\n// to be liberal with what we accept in order to prevent mental\n// breakdowns in our users\nmodule.exports = function (requestDef) {\n  requestDef = clone(requestDef);\n\n  if (!requestDef.index) {\n    requestDef.index = {};\n  }\n\n  ['type', 'name', 'ddoc'].forEach(function (key) {\n    if (requestDef.index[key]) {\n      requestDef[key] = requestDef.index[key];\n      delete requestDef.index[key];\n    }\n  });\n\n  if (requestDef.fields) {\n    requestDef.index.fields = requestDef.fields;\n    delete requestDef.fields;\n  }\n\n  if (!requestDef.type) {\n    requestDef.type = 'json';\n  }\n  return requestDef;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/massageCreateIndexRequest.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar lie = _interopDefault(require('lie'));\n\n/* istanbul ignore next */\nvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\nmodule.exports = PouchPromise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-promise/lib/index.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nvar PouchPromise = require('pouchdb-promise');\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsertInner(db, docId, diffFun) {\n  if (typeof docId !== 'string') {\n    return PouchPromise.reject(new Error('doc id is required'));\n  }\n\n  return db.get(docId).catch(function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 404) {\n      throw err;\n    }\n    return {};\n  }).then(function (doc) {\n    // the user might change the _rev, so save it for posterity\n    var docRev = doc._rev;\n    var newDoc = diffFun(doc);\n\n    if (!newDoc) {\n      // if the diffFun returns falsy, we short-circuit as\n      // an optimization\n      return { updated: false, rev: docRev };\n    }\n\n    // users aren't allowed to modify these values,\n    // so reset them here\n    newDoc._id = docId;\n    newDoc._rev = docRev;\n    return tryAndPut(db, newDoc, diffFun);\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsertInner(db, doc._id, diffFun);\n  });\n}\n\nexports.upsert = function upsert(docId, diffFun, cb) {\n  var db = this;\n  var promise = upsertInner(db, docId, diffFun);\n  if (typeof cb !== 'function') {\n    return promise;\n  }\n  promise.then(function (resp) {\n    cb(null, resp);\n  }, cb);\n};\n\nexports.putIfNotExists = function putIfNotExists(docId, doc, cb) {\n  var db = this;\n\n  if (typeof docId !== 'string') {\n    cb = doc;\n    doc = docId;\n    docId = doc._id;\n  }\n\n  var diffFun = function (existingDoc) {\n    if (existingDoc._rev) {\n      return false; // do nothing\n    }\n    return doc;\n  };\n\n  var promise = upsertInner(db, docId, diffFun);\n  if (typeof cb !== 'function') {\n    return promise;\n  }\n  promise.then(function (resp) {\n    cb(null, resp);\n  }, cb);\n};\n\n\n/* istanbul ignore next */\nif (typeof window !== 'undefined' && window.PouchDB) {\n  window.PouchDB.plugin(exports);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-upsert/index.js\n// module id = 21\n// module chunks = 0","/*jshint bitwise:false*/\n/*global unescape*/\n\n(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    ////////////////////////////////////////////////////////////////////////////\n\n    /*\n     * Fastest md5 implementation around (JKM md5)\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n\n    cmn = function (q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    },\n\n    ff = function (a, b, c, d, x, s, t) {\n        return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    },\n\n    gg = function (a, b, c, d, x, s, t) {\n        return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    },\n\n    hh = function (a, b, c, d, x, s, t) {\n        return cmn(b ^ c ^ d, a, b, x, s, t);\n    },\n\n    ii = function (a, b, c, d, x, s, t) {\n        return cmn(c ^ (b | (~d)), a, b, x, s, t);\n    },\n\n    md5cycle = function (x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a = ff(a, b, c, d, k[0], 7, -680876936);\n        d = ff(d, a, b, c, k[1], 12, -389564586);\n        c = ff(c, d, a, b, k[2], 17, 606105819);\n        b = ff(b, c, d, a, k[3], 22, -1044525330);\n        a = ff(a, b, c, d, k[4], 7, -176418897);\n        d = ff(d, a, b, c, k[5], 12, 1200080426);\n        c = ff(c, d, a, b, k[6], 17, -1473231341);\n        b = ff(b, c, d, a, k[7], 22, -45705983);\n        a = ff(a, b, c, d, k[8], 7, 1770035416);\n        d = ff(d, a, b, c, k[9], 12, -1958414417);\n        c = ff(c, d, a, b, k[10], 17, -42063);\n        b = ff(b, c, d, a, k[11], 22, -1990404162);\n        a = ff(a, b, c, d, k[12], 7, 1804603682);\n        d = ff(d, a, b, c, k[13], 12, -40341101);\n        c = ff(c, d, a, b, k[14], 17, -1502002290);\n        b = ff(b, c, d, a, k[15], 22, 1236535329);\n\n        a = gg(a, b, c, d, k[1], 5, -165796510);\n        d = gg(d, a, b, c, k[6], 9, -1069501632);\n        c = gg(c, d, a, b, k[11], 14, 643717713);\n        b = gg(b, c, d, a, k[0], 20, -373897302);\n        a = gg(a, b, c, d, k[5], 5, -701558691);\n        d = gg(d, a, b, c, k[10], 9, 38016083);\n        c = gg(c, d, a, b, k[15], 14, -660478335);\n        b = gg(b, c, d, a, k[4], 20, -405537848);\n        a = gg(a, b, c, d, k[9], 5, 568446438);\n        d = gg(d, a, b, c, k[14], 9, -1019803690);\n        c = gg(c, d, a, b, k[3], 14, -187363961);\n        b = gg(b, c, d, a, k[8], 20, 1163531501);\n        a = gg(a, b, c, d, k[13], 5, -1444681467);\n        d = gg(d, a, b, c, k[2], 9, -51403784);\n        c = gg(c, d, a, b, k[7], 14, 1735328473);\n        b = gg(b, c, d, a, k[12], 20, -1926607734);\n\n        a = hh(a, b, c, d, k[5], 4, -378558);\n        d = hh(d, a, b, c, k[8], 11, -2022574463);\n        c = hh(c, d, a, b, k[11], 16, 1839030562);\n        b = hh(b, c, d, a, k[14], 23, -35309556);\n        a = hh(a, b, c, d, k[1], 4, -1530992060);\n        d = hh(d, a, b, c, k[4], 11, 1272893353);\n        c = hh(c, d, a, b, k[7], 16, -155497632);\n        b = hh(b, c, d, a, k[10], 23, -1094730640);\n        a = hh(a, b, c, d, k[13], 4, 681279174);\n        d = hh(d, a, b, c, k[0], 11, -358537222);\n        c = hh(c, d, a, b, k[3], 16, -722521979);\n        b = hh(b, c, d, a, k[6], 23, 76029189);\n        a = hh(a, b, c, d, k[9], 4, -640364487);\n        d = hh(d, a, b, c, k[12], 11, -421815835);\n        c = hh(c, d, a, b, k[15], 16, 530742520);\n        b = hh(b, c, d, a, k[2], 23, -995338651);\n\n        a = ii(a, b, c, d, k[0], 6, -198630844);\n        d = ii(d, a, b, c, k[7], 10, 1126891415);\n        c = ii(c, d, a, b, k[14], 15, -1416354905);\n        b = ii(b, c, d, a, k[5], 21, -57434055);\n        a = ii(a, b, c, d, k[12], 6, 1700485571);\n        d = ii(d, a, b, c, k[3], 10, -1894986606);\n        c = ii(c, d, a, b, k[10], 15, -1051523);\n        b = ii(b, c, d, a, k[1], 21, -2054922799);\n        a = ii(a, b, c, d, k[8], 6, 1873313359);\n        d = ii(d, a, b, c, k[15], 10, -30611744);\n        c = ii(c, d, a, b, k[6], 15, -1560198380);\n        b = ii(b, c, d, a, k[13], 21, 1309151649);\n        a = ii(a, b, c, d, k[4], 6, -145523070);\n        d = ii(d, a, b, c, k[11], 10, -1120210379);\n        c = ii(c, d, a, b, k[2], 15, 718787259);\n        b = ii(b, c, d, a, k[9], 21, -343485551);\n\n        x[0] = add32(a, x[0]);\n        x[1] = add32(b, x[1]);\n        x[2] = add32(c, x[2]);\n        x[3] = add32(d, x[3]);\n    },\n\n    /* there needs to be support for Unicode here,\n       * unless we pretend that we can redefine the MD-5\n       * algorithm for multi-byte characters (perhaps\n       * by adding every four 16-bit characters and\n       * shortening the sum to 32 bits). Otherwise\n       * I suggest performing MD-5 as if every character\n       * was two bytes--e.g., 0040 0025 = @%--but then\n       * how will an ordinary MD-5 sum be matched?\n       * There is no way to standardize text to something\n       * like UTF-8 before transformation; speed cost is\n       * utterly prohibitive. The JavaScript standard\n       * itself needs to look at this: it should start\n       * providing access to strings as preformed UTF-8\n       * 8-bit unsigned value arrays.\n       */\n    md5blk = function (s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    },\n\n    md5blk_array = function (a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    },\n\n    md51 = function (s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    },\n\n    md51_array = function (a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    },\n\n    hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'],\n\n    rhex = function (n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    },\n\n    hex = function (x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    },\n\n    md5 = function (s) {\n        return hex(md51(s));\n    },\n\n\n\n    ////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n    SparkMD5 = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n\n    // In some cases the fast add32 function cannot be used..\n    if (md5('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // converts the string to utf8 bytes if necessary\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        // then append as binary\n        this.appendBinary(str);\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._state, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substr(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     * Use the raw parameter to obtain the raw result instead of the hex one.\n     *\n     * @param {Boolean} raw True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = !!raw ? this._state : hex(this._state);\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._state, tail);\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = \"\";\n        this._length = 0;\n        this._state = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other aditional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._state;\n        delete this._buff;\n        delete this._length;\n    };\n\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // converts the string to utf8 bytes if necessary\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        var hash = md51(str);\n\n        return !!raw ? hash : hex(hash);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content);\n\n        return !!raw ? hash : hex(hash);\n    };\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    ////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        // TODO: we could avoid the concatenation here but the algorithm would be more complex\n        //       if you find yourself needing extra performance, please make a PR.\n        var buff = this._concatArrayBuffer(this._buff, arr),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._state, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        // Avoids IE10 weirdness (documented above)\n        this._buff = (i - 64) < length ? buff.subarray(i - 64) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     * Use the raw parameter to obtain the raw result instead of the hex one.\n     *\n     * @param {Boolean} raw True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = !!raw ? this._state : hex(this._state);\n\n        this.reset();\n\n        return ret;\n    };\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._state = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other aditional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    /**\n     * Concats two array buffers, returning a new one.\n     *\n     * @param  {ArrayBuffer} first  The first array buffer\n     * @param  {ArrayBuffer} second The second array buffer\n     *\n     * @return {ArrayBuffer} The new array buffer\n     */\n    SparkMD5.ArrayBuffer.prototype._concatArrayBuffer = function (first, second) {\n        var firstLength = first.length,\n            result = new Uint8Array(firstLength + second.byteLength);\n\n        result.set(first);\n        result.set(new Uint8Array(second), firstLength);\n\n        return result;\n    };\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr));\n\n        return !!raw ? hash : hex(hash);\n    };\n\n    return SparkMD5;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spark-md5/spark-md5.js\n// module id = 22\n// module chunks = 0","export class LocalStorage {\n  constructor (storage, prefix) {\n    if (!storage && typeof window !== 'undefined') {\n      storage = window.localStorage\n    }\n    this.storage = storage\n    this.prefix = prefix || 'cozy:oauth:'\n  }\n\n  save (key, value) {\n    return new Promise(resolve => {\n      this.storage.setItem(this.prefix + key, JSON.stringify(value))\n      resolve(value)\n    })\n  }\n\n  load (key) {\n    return new Promise(resolve => {\n      const item = this.storage.getItem(this.prefix + key)\n      if (!item) {\n        resolve()\n      } else {\n        resolve(JSON.parse(item))\n      }\n    })\n  }\n\n  delete (key) {\n    return new Promise(resolve => resolve(\n      this.storage.removeItem(this.prefix + key)))\n  }\n\n  clear () {\n    return new Promise(resolve => {\n      const storage = this.storage\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i)\n        if (key.indexOf(this.prefix) === 0) {\n          storage.removeItem(key)\n        }\n      }\n      resolve()\n    })\n  }\n}\n\nexport class MemoryStorage {\n  constructor () {\n    this.hash = Object.create(null)\n  }\n\n  save (key, value) {\n    this.hash[key] = value\n    return Promise.resolve(value)\n  }\n\n  load (key) {\n    return Promise.resolve(this.hash[key])\n  }\n\n  delete (key) {\n    const deleted = delete this.hash[key]\n    return Promise.resolve(deleted)\n  }\n\n  clear () {\n    this.hash = Object.create(null)\n    return Promise.resolve()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/auth_storage.js","/* global btoa */\nconst V2TOKEN_ABORT_TIMEOUT = 3000\n\nexport function getAppToken () {\n  return new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      return reject(new Error('getV2Token should be used in browser'))\n    } else if (!window.parent) {\n      return reject(new Error('getV2Token should be used in iframe'))\n    } else if (!window.parent.postMessage) {\n      return reject(new Error('getV2Token should be used in modern browser'))\n    }\n    const origin = window.location.origin\n    const intent = {action: 'getToken'}\n    let timeout = null\n    const receiver = function (event) {\n      let token\n      try {\n        token = new AppToken({\n          appName: event.data.appName,\n          token: event.data.token\n        })\n      } catch (e) {\n        reject(e)\n        return\n      }\n      window.removeEventListener('message', receiver)\n      clearTimeout(timeout)\n      resolve({ client: null, token })\n    }\n    window.addEventListener('message', receiver, false)\n    window.parent.postMessage(intent, origin)\n    timeout = setTimeout(() => {\n      reject(new Error('No response from parent iframe after 3s'))\n    }, V2TOKEN_ABORT_TIMEOUT)\n  })\n}\n\nexport class AppToken {\n  constructor (opts) {\n    this.appName = opts.appName || ''\n    this.token = opts.token || ''\n  }\n\n  toAuthHeader () {\n    return 'Basic ' + btoa(`${this.appName}:${this.token}`)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/auth_v2.js","import {createPath} from './utils'\nimport {normalizeDoctype} from './doctypes'\nimport {cozyFetchJSON} from './fetch'\n\nconst NOREV = 'stack-v2-no-rev'\n\nexport function create (cozy, doctype, attributes) {\n  return cozy.isV2().then((isV2) => {\n    doctype = normalizeDoctype(cozy, isV2, doctype)\n    if (isV2) {\n      attributes.docType = doctype\n    }\n    const path = createPath(cozy, isV2, doctype, attributes._id)\n    const httpVerb = attributes._id ? 'PUT' : 'POST'\n    delete attributes._id\n    return cozyFetchJSON(cozy, httpVerb, path, attributes).then((resp) => {\n      if (isV2) {\n        return find(cozy, doctype, resp._id)\n      } else {\n        return resp.data\n      }\n    })\n  })\n}\n\nexport function find (cozy, doctype, id) {\n  return cozy.isV2().then((isV2) => {\n    doctype = normalizeDoctype(cozy, isV2, doctype)\n\n    if (!id) {\n      return Promise.reject(new Error('Missing id parameter'))\n    }\n\n    const path = createPath(cozy, isV2, doctype, id)\n    return cozyFetchJSON(cozy, 'GET', path).then((resp) => {\n      if (isV2) {\n        return Object.assign(resp, {_rev: NOREV})\n      } else {\n        return resp\n      }\n    })\n  })\n}\n\nexport function findMany (cozy, doctype, ids) {\n  if (!(ids instanceof Array)) {\n    return Promise.reject(new Error('Parameter ids must be a non-empty array'))\n  }\n  if (ids.length === 0) {\n    // So users don't need to be defensive regarding the array content.\n    // This should not hide issues in user code since the result will be an\n    // empty object anyway.\n    return Promise.resolve({})\n  }\n\n  return cozy.isV2().then((isV2) => {\n    if (isV2) {\n      return Promise.reject(new Error('findMany is not available on v2'))\n    }\n\n    const path = createPath(cozy, isV2, doctype, '_all_docs', {include_docs: true})\n\n    return cozyFetchJSON(cozy, 'POST', path, {keys: ids})\n      .then((resp) => {\n        const docs = {}\n\n        for (const row of resp.rows) {\n          const {key, doc, error} = row\n          docs[key] = error ? {error} : {doc}\n        }\n\n        return docs\n      })\n      .catch((error) => {\n        if (error.status !== 404) return Promise.reject(error)\n\n        // When no doc was ever created and the database does not exist yet,\n        // the response will be a 404 error.\n        const docs = {}\n\n        for (const id of ids) {\n          docs[id] = {error}\n        }\n\n        return docs\n      })\n  })\n}\n\nexport function findAll (cozy, doctype) {\n  return cozy.isV2().then((isV2) => {\n    if (isV2) {\n      return Promise.reject(new Error('findAll is not available on v2'))\n    }\n\n    const path = createPath(cozy, isV2, doctype, '_all_docs', {include_docs: true})\n\n    return cozyFetchJSON(cozy, 'POST', path, {})\n    .then((resp) => {\n      const docs = []\n\n      for (const row of resp.rows) {\n        const { doc } = row\n        // if not couchDB indexes\n        if (!doc._id.match(/_design\\//)) docs.push(doc)\n      }\n      return docs\n    })\n    .catch(error => {\n      // the _all_docs endpoint returns a 404 error if no document with the given\n      // doctype exists.\n      if (error.status === 404) return []\n      throw error\n    })\n  })\n}\n\nexport function changesFeed (cozy, doctype, options) {\n  return cozy.isV2().then((isV2) => {\n    doctype = normalizeDoctype(cozy, isV2, doctype)\n    const path = createPath(cozy, isV2, doctype, '_changes', options)\n    return cozyFetchJSON(cozy, 'GET', path)\n  })\n}\n\nexport function update (cozy, doctype, doc, changes) {\n  return cozy.isV2().then((isV2) => {\n    doctype = normalizeDoctype(cozy, isV2, doctype)\n    const {_id, _rev} = doc\n\n    if (!_id) {\n      return Promise.reject(new Error('Missing _id field in passed document'))\n    }\n\n    if (!isV2 && !_rev) {\n      return Promise.reject(new Error('Missing _rev field in passed document'))\n    }\n\n    if (isV2) {\n      changes = Object.assign({ _id }, changes)\n    } else {\n      changes = Object.assign({ _id, _rev }, changes)\n    }\n\n    const path = createPath(cozy, isV2, doctype, _id)\n    return cozyFetchJSON(cozy, 'PUT', path, changes).then((resp) => {\n      if (isV2) {\n        return find(cozy, doctype, _id)\n      } else {\n        return resp.data\n      }\n    })\n  })\n}\n\nexport function updateAttributes (cozy, doctype, _id, changes, tries = 3) {\n  return cozy.isV2().then((isV2) => {\n    doctype = normalizeDoctype(cozy, isV2, doctype)\n    return find(cozy, doctype, _id)\n      .then((doc) => {\n        return update(cozy, doctype, doc, Object.assign({ _id }, doc, changes))\n      })\n      .catch((err) => {\n        if (tries > 0) {\n          return updateAttributes(cozy, doctype, _id, changes, tries - 1)\n        } else {\n          throw err\n        }\n      })\n  })\n}\n\nexport function _delete (cozy, doctype, doc) {\n  return cozy.isV2().then((isV2) => {\n    doctype = normalizeDoctype(cozy, isV2, doctype)\n    const {_id, _rev} = doc\n\n    if (!_id) {\n      return Promise.reject(new Error('Missing _id field in passed document'))\n    }\n\n    if (!isV2 && !_rev) {\n      return Promise.reject(new Error('Missing _rev field in passed document'))\n    }\n\n    const query = isV2 ? null : { rev: _rev }\n    const path = createPath(cozy, isV2, doctype, _id, query)\n    return cozyFetchJSON(cozy, 'DELETE', path).then((resp) => {\n      if (isV2) {\n        return {id: _id, rev: NOREV}\n      } else {\n        return resp\n      }\n    })\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data.js","/* global Blob, File */\nimport { cozyFetch, cozyFetchJSON } from './fetch'\nimport jsonapi from './jsonapi'\nimport { DOCTYPE_FILES } from './doctypes'\n\n// global variables\nexport const ROOT_DIR_ID = 'io.cozy.files.root-dir'\nexport const TRASH_DIR_ID = 'io.cozy.files.trash-dir'\n\nconst contentTypeOctetStream = 'application/octet-stream'\n\nfunction sanitizeFileName (name) {\n  return name && name.trim()\n}\n\nfunction getFileTypeFromName (name) {\n  if (/\\.heic$/i.test(name)) return 'image/heic'\n  else if (/\\.heif$/i.test(name)) return 'image/heif'\n  else return null\n}\n\nfunction doUpload (cozy, data, method, path, options) {\n  if (!data) {\n    throw new Error('missing data argument')\n  }\n\n  // transform any ArrayBufferView to ArrayBuffer\n  if (data.buffer && data.buffer instanceof ArrayBuffer) {\n    data = data.buffer\n  }\n\n  const isBuffer = (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer)\n  const isFile = (typeof File !== 'undefined' && data instanceof File)\n  const isBlob = (typeof Blob !== 'undefined' && data instanceof Blob)\n  const isStream = (data.readable === true && typeof data.pipe === 'function')\n  const isString = (typeof data === 'string')\n\n  if (!isBuffer && !isFile && !isBlob && !isStream && !isString) {\n    throw new Error('invalid data type')\n  }\n\n  let {contentType, checksum, lastModifiedDate, ifMatch} = options || {}\n  if (!contentType) {\n    if (isBuffer) {\n      contentType = contentTypeOctetStream\n    } else if (isFile) {\n      contentType = data.type || getFileTypeFromName(data.name.toLowerCase()) || contentTypeOctetStream\n      if (!lastModifiedDate) {\n        lastModifiedDate = data.lastModifiedDate\n      }\n    } else if (isBlob) {\n      contentType = data.type || contentTypeOctetStream\n    } else if (isStream) {\n      contentType = contentTypeOctetStream\n    } else if (typeof data === 'string') {\n      contentType = 'text/plain'\n    }\n  }\n\n  if (lastModifiedDate && typeof lastModifiedDate === 'string') {\n    lastModifiedDate = new Date(lastModifiedDate)\n  }\n\n  return cozyFetch(cozy, path, {\n    method: method,\n    headers: {\n      'Content-Type': contentType,\n      'Content-MD5': checksum || '',\n      'Date': lastModifiedDate ? lastModifiedDate.toGMTString() : '',\n      'If-Match': ifMatch || ''\n    },\n    body: data\n  })\n    .then((res) => {\n      const json = res.json()\n      if (!res.ok) {\n        return json.then(err => { throw err })\n      } else {\n        return json.then(jsonapi)\n      }\n    })\n}\n\nexport function create (cozy, data, options) {\n  let {name, dirID, executable} = options || {}\n\n  // handle case where data is a file and contains the name\n  if (!name && typeof data.name === 'string') {\n    name = data.name\n  }\n\n  name = sanitizeFileName(name)\n\n  if (typeof name !== 'string' || name === '') {\n    throw new Error('missing name argument')\n  }\n\n  if (executable === undefined) {\n    executable = false\n  }\n\n  const path = `/files/${encodeURIComponent(dirID || '')}`\n  const query = `?Name=${encodeURIComponent(name)}&Type=file&Executable=${executable}`\n  return doUpload(cozy, data, 'POST', `${path}${query}`, options)\n}\n\nexport function createDirectory (cozy, options) {\n  let {name, dirID, lastModifiedDate} = options || {}\n\n  name = sanitizeFileName(name)\n\n  if (typeof name !== 'string' || name === '') {\n    throw new Error('missing name argument')\n  }\n\n  if (lastModifiedDate && typeof lastModifiedDate === 'string') {\n    lastModifiedDate = new Date(lastModifiedDate)\n  }\n\n  const path = `/files/${encodeURIComponent(dirID || '')}`\n  const query = `?Name=${encodeURIComponent(name)}&Type=directory`\n  return cozyFetchJSON(cozy, 'POST', `${path}${query}`, undefined, {\n    headers: {\n      'Date': lastModifiedDate ? lastModifiedDate.toGMTString() : ''\n    }\n  })\n}\n\nfunction getDirectoryOrCreate (cozy, name, parentDirectory) {\n  if (parentDirectory && !parentDirectory.attributes) throw new Error('Malformed parent directory')\n\n  name = sanitizeFileName(name)\n\n  const path = `${parentDirectory._id === ROOT_DIR_ID ? '' : parentDirectory.attributes.path}/${name}`\n\n  return cozy.files.statByPath(path || '/')\n    .catch(error => {\n      const parsedError = JSON.parse(error.message)\n      const errors = parsedError.errors\n      if (errors && errors.length && errors[0].status === '404') {\n        return cozy.files.createDirectory({\n          name: name,\n          dirID: parentDirectory && parentDirectory._id\n        })\n      }\n\n      throw errors\n    })\n}\n\nexport function createDirectoryByPath (cozy, path, offline) {\n  const parts = path.split('/').filter(part => part !== '')\n\n  const rootDirectoryPromise = cozy.files.statById(ROOT_DIR_ID, offline)\n\n  return parts.length\n    ? parts.reduce((parentDirectoryPromise, part) => {\n      return parentDirectoryPromise\n        .then(parentDirectory => getDirectoryOrCreate(cozy, part, parentDirectory))\n    }, rootDirectoryPromise)\n      : rootDirectoryPromise\n}\n\nexport function updateById (cozy, id, data, options) {\n  return doUpload(cozy, data, 'PUT', `/files/${encodeURIComponent(id)}`, options)\n}\n\nfunction doUpdateAttributes (cozy, attrs, path, options) {\n  if (!attrs || typeof attrs !== 'object') {\n    throw new Error('missing attrs argument')\n  }\n\n  const {ifMatch} = options || {}\n  const body = {\n    data: {\n      attributes: Object.assign(\n        {},\n        attrs,\n        { name: sanitizeFileName(attrs.name) }\n      )\n    }\n  }\n  return cozyFetchJSON(cozy, 'PATCH', path, body, {\n    headers: {\n      'If-Match': ifMatch || ''\n    }\n  })\n}\n\nexport function updateAttributesById (cozy, id, attrs, options) {\n  return doUpdateAttributes(cozy, attrs,\n    `/files/${encodeURIComponent(id)}`, options)\n}\n\nexport function updateAttributesByPath (cozy, path, attrs, options) {\n  return doUpdateAttributes(cozy, attrs,\n    `/files/metadata?Path=${encodeURIComponent(path)}`, options)\n}\n\nexport function trashById (cozy, id, options) {\n  if (typeof id !== 'string' || id === '') {\n    throw new Error('missing id argument')\n  }\n  const {ifMatch} = options || {}\n  return cozyFetchJSON(cozy, 'DELETE', `/files/${encodeURIComponent(id)}`, undefined, {\n    headers: {\n      'If-Match': ifMatch || ''\n    }\n  })\n}\n\nexport function statById (cozy, id, offline = true, options = {}) {\n  if (offline && cozy.offline.hasDatabase(DOCTYPE_FILES)) {\n    let db = cozy.offline.getDatabase(DOCTYPE_FILES)\n    return Promise.all([\n      db.get(id),\n      db.find(Object.assign({ selector: { 'dir_id': id } }, options))\n    ]).then(([doc, children]) => {\n      if (id === ROOT_DIR_ID) {\n        children.docs = children.docs.filter(doc => doc._id !== TRASH_DIR_ID)\n      }\n      children = sortFiles(children.docs.map(doc => addIsDir(toJsonApi(cozy, doc))))\n      return addIsDir(toJsonApi(cozy, doc, children))\n    })\n  }\n  const query = Object.keys(options).length === 0 ? '' : `?${encodePageOptions(options)}`\n  return cozyFetchJSON(cozy, 'GET', `/files/${encodeURIComponent(id)}${query}`)\n    .then(addIsDir)\n}\n\nexport function statByPath (cozy, path) {\n  return cozyFetchJSON(cozy, 'GET', `/files/metadata?Path=${encodeURIComponent(path)}`)\n    .then(addIsDir)\n}\n\nexport function downloadById (cozy, id) {\n  return cozyFetch(cozy, `/files/download/${encodeURIComponent(id)}`)\n}\n\nexport function downloadByPath (cozy, path) {\n  return cozyFetch(cozy, `/files/download?Path=${encodeURIComponent(path)}`)\n}\n\nfunction extractResponseLinkRelated (res) {\n  let href = res.links && res.links.related\n  if (!href) throw new Error('No related link in server response')\n  return href\n}\n\nexport function getDownloadLinkByPath (cozy, path) {\n  return cozyFetchJSON(cozy, 'POST', `/files/downloads?Path=${encodeURIComponent(path)}`)\n    .then(extractResponseLinkRelated)\n}\n\nexport function getDownloadLinkById (cozy, id) {\n  return cozyFetchJSON(cozy, 'POST', `/files/downloads?Id=${encodeURIComponent(id)}`)\n    .then(extractResponseLinkRelated)\n}\n\nexport function getFilePath (cozy, file = {}, folder) {\n  if (!folder || !folder.attributes) {\n    throw Error('Folder should be valid with an attributes.path property')\n  }\n\n  const folderPath = folder.attributes.path.endsWith('/')\n    ? folder.attributes.path\n      : `${folder.attributes.path}/`\n\n  return `${folderPath}${file.name}`\n}\n\nexport function getCollectionShareLink (cozy, id, collectionType) {\n  if (!id) {\n    return Promise.reject(Error('An id should be provided to create a share link'))\n  }\n  return cozyFetchJSON(cozy, 'POST', `/permissions?codes=email`, {\n    data: {\n      type: 'io.cozy.permissions',\n      attributes: {\n        permissions: {\n          files: {\n            type: 'io.cozy.files',\n            verbs: ['GET'],\n            values: [id],\n            selector: 'referenced_by'\n          },\n          collection: {\n            type: collectionType,\n            verbs: ['GET'],\n            values: [id]\n          }\n        }\n      }\n    }\n  }).then(data => ({sharecode: `sharecode=${data.attributes.codes.email}`, id: `id=${id}`}))\n}\n\nexport function getArchiveLinkByPaths (cozy, paths, name = 'files') {\n  const archive = {\n    type: 'io.cozy.archives',\n    attributes: {\n      name: name,\n      files: paths\n    }\n  }\n  return cozyFetchJSON(cozy, 'POST', `/files/archive`, {data: archive})\n  .then(extractResponseLinkRelated)\n}\n\nexport function getArchiveLinkByIds (cozy, ids, name = 'files') {\n  const archive = {\n    type: 'io.cozy.archives',\n    attributes: {\n      name: name,\n      ids: ids\n    }\n  }\n  return cozyFetchJSON(cozy, 'POST', `/files/archive`, {data: archive})\n  .then(extractResponseLinkRelated)\n}\n\nexport function listTrash (cozy) {\n  return cozyFetchJSON(cozy, 'GET', `/files/trash`)\n}\n\nexport function clearTrash (cozy) {\n  return cozyFetchJSON(cozy, 'DELETE', `/files/trash`)\n}\n\nexport function restoreById (cozy, id) {\n  return cozyFetchJSON(cozy, 'POST', `/files/trash/${encodeURIComponent(id)}`)\n}\n\nexport function destroyById (cozy, id, options) {\n  const {ifMatch} = options || {}\n  return cozyFetchJSON(cozy, 'DELETE', `/files/trash/${encodeURIComponent(id)}`, undefined, {\n    headers: {\n      'If-Match': ifMatch || ''\n    }\n  })\n}\n\nfunction addIsDir (obj) {\n  obj.isDir = obj.attributes.type === 'directory'\n  return obj\n}\n\nfunction encodePageOptions (options) {\n  let opts = []\n  for (const name in options) {\n    opts.push(`page[${encodeURIComponent(name)}]=${encodeURIComponent(options[name])}`)\n  }\n  return opts.join('&')\n}\n\nfunction toJsonApi (cozy, doc, contents = []) {\n  let clone = JSON.parse(JSON.stringify(doc))\n  delete clone._id\n  delete clone._rev\n  return {\n    _id: doc._id,\n    _rev: doc._rev,\n    _type: DOCTYPE_FILES,\n    attributes: clone,\n    relationships: {\n      contents: {\n        data: contents,\n        meta: {\n          count: contents.length\n        }\n      }\n    },\n    relations: (name) => {\n      if (name === 'contents') {\n        return contents\n      }\n    }\n  }\n}\n\nfunction sortFiles (allFiles) {\n  const folders = allFiles.filter(f => f.attributes.type === 'directory')\n  const files = allFiles.filter(f => f.attributes.type !== 'directory')\n  const sort = files => files.sort((a, b) => a.attributes.name.localeCompare(b.attributes.name))\n  return sort(folders).concat(sort(files))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/files.js","/* global fetch URL */\n\nimport {unpromiser, retry, warn} from './utils'\nimport {LocalStorage, MemoryStorage} from './auth_storage'\nimport {AppToken as AppTokenV2, getAppToken as getAppTokenV2} from './auth_v2'\nimport * as auth from './auth_v3'\nimport * as data from './data'\nimport * as cozyFetch from './fetch'\nimport * as mango from './mango'\nimport * as files from './files'\nimport * as intents from './intents'\nimport * as jobs from './jobs'\nimport * as offline from './offline'\nimport * as settings from './settings'\nimport * as relations from './relations'\n\nconst {\n  AppToken: AppTokenV3,\n  AccessToken: AccessTokenV3,\n  Client: ClientV3\n} = auth\n\nconst AuthNone = 0\nconst AuthRunning = 1\nconst AuthError = 2\nconst AuthOK = 3\n\nconst defaultClientParams = {\n  softwareID: 'github.com/cozy/cozy-client-js'\n}\n\nconst dataProto = {\n  create: data.create,\n  find: data.find,\n  findMany: data.findMany,\n  findAll: data.findAll,\n  update: data.update,\n  delete: data._delete,\n  updateAttributes: data.updateAttributes,\n  changesFeed: data.changesFeed,\n  defineIndex: mango.defineIndex,\n  query: mango.query,\n  addReferencedFiles: relations.addReferencedFiles,\n  removeReferencedFiles: relations.removeReferencedFiles,\n  listReferencedFiles: relations.listReferencedFiles,\n  fetchReferencedFiles: relations.fetchReferencedFiles,\n  destroy: function (...args) {\n    warn('destroy is deprecated, use cozy.data.delete instead.')\n    return data._delete(...args)\n  }\n}\n\nconst authProto = {\n  client: auth.client,\n  registerClient: auth.registerClient,\n  updateClient: auth.updateClient,\n  unregisterClient: auth.unregisterClient,\n  getClient: auth.getClient,\n  getAuthCodeURL: auth.getAuthCodeURL,\n  getAccessToken: auth.getAccessToken,\n  refreshToken: auth.refreshToken\n}\n\nconst filesProto = {\n  create: files.create,\n  createDirectory: files.createDirectory,\n  createDirectoryByPath: files.createDirectoryByPath,\n  updateById: files.updateById,\n  updateAttributesById: files.updateAttributesById,\n  updateAttributesByPath: files.updateAttributesByPath,\n  trashById: files.trashById,\n  statById: files.statById,\n  statByPath: files.statByPath,\n  downloadById: files.downloadById,\n  downloadByPath: files.downloadByPath,\n  getDownloadLinkById: files.getDownloadLinkById,\n  getDownloadLink: files.getDownloadLinkByPath, // DEPRECATED, should be removed very soon\n  getDownloadLinkByPath: files.getDownloadLinkByPath,\n  getArchiveLink: function (...args) {\n    warn('getArchiveLink is deprecated, use cozy.files.getArchiveLinkByPaths instead.')\n    return files.getArchiveLinkByPaths(...args)\n  },\n  getArchiveLinkByPaths: files.getArchiveLinkByPaths,\n  getArchiveLinkByIds: files.getArchiveLinkByIds,\n  getFilePath: files.getFilePath,\n  getCollectionShareLink: files.getCollectionShareLink,\n  query: mango.queryFiles,\n  listTrash: files.listTrash,\n  clearTrash: files.clearTrash,\n  restoreById: files.restoreById,\n  destroyById: files.destroyById\n}\n\nconst intentsProto = {\n  create: intents.create,\n  createService: intents.createService\n}\n\nconst jobsProto = {\n  create: jobs.create,\n  count: jobs.count,\n  queued: jobs.queued\n}\n\nconst offlineProto = {\n  init: offline.init,\n  getDoctypes: offline.getDoctypes,\n  // database\n  hasDatabase: offline.hasDatabase,\n  getDatabase: offline.getDatabase,\n  createDatabase: offline.createDatabase,\n  destroyDatabase: offline.destroyDatabase,\n  destroyAllDatabase: offline.destroyAllDatabase,\n  // replication\n  hasReplication: offline.hasReplication,\n  replicateFromCozy: offline.replicateFromCozy,\n  stopReplication: offline.stopReplication,\n  stopAllReplication: offline.stopAllReplication,\n  // repeated replication\n  hasRepeatedReplication: offline.hasRepeatedReplication,\n  startRepeatedReplication: offline.startRepeatedReplication,\n  stopRepeatedReplication: offline.stopRepeatedReplication,\n  stopAllRepeatedReplication: offline.stopAllRepeatedReplication\n}\n\nconst settingsProto = {\n  diskUsage: settings.diskUsage,\n  changePassphrase: settings.changePassphrase,\n  getInstance: settings.getInstance,\n  updateInstance: settings.updateInstance,\n  getClients: settings.getClients,\n  deleteClientById: settings.deleteClientById,\n  updateLastSync: settings.updateLastSync\n}\n\nconst ensureHasReconnectParam = _url => {\n  const url = new URL(_url)\n  if (url.searchParams && !url.searchParams.has('reconnect')) {\n    url.searchParams.append('reconnect', 1)\n  } else if (!url.search || url.search.indexOf('reconnect') === -1) {\n    // Some old navigators do not have the searchParams API\n    // and it is not polyfilled by babel-polyfill\n    url.search = url.search + '&reconnect=1'\n  }\n  return url.toString()\n}\n\nclass Client {\n  constructor (options) {\n    this.data = {}\n    this.files = {}\n    this.intents = {}\n    this.jobs = {}\n    this.offline = {}\n    this.settings = {}\n    this.auth = {\n      Client: ClientV3,\n      AccessToken: AccessTokenV3,\n      AppToken: AppTokenV3,\n      AppTokenV2: AppTokenV2,\n      LocalStorage: LocalStorage,\n      MemoryStorage: MemoryStorage\n    }\n    this._inited = false\n    if (options) {\n      this.init(options)\n    }\n  }\n\n  init (options = {}) {\n    this._inited = true\n    this._oauth = false // is oauth activated or not\n    this._token = null  // application token\n    this._authstate = AuthNone\n    this._authcreds = null\n    this._storage = null\n    this._version = options.version || null\n    this._offline = null\n\n    const token = options.token\n    const oauth = options.oauth\n    if (token && oauth) {\n      throw new Error('Cannot specify an application token with a oauth activated')\n    }\n\n    if (token) {\n      this._token = new AppTokenV3({ token })\n    } else if (oauth) {\n      this._oauth = true\n      this._storage = oauth.storage\n      this._clientParams = Object.assign({}, defaultClientParams, oauth.clientParams)\n      this._onRegistered = oauth.onRegistered || nopOnRegistered\n    }\n\n    let url = options.cozyURL || ''\n    while (url[url.length - 1] === '/') {\n      url = url.slice(0, -1)\n    }\n\n    this._url = url\n\n    this._invalidTokenErrorHandler = options.onInvalidTokenError !== undefined ? options.onInvalidTokenError : cozyFetch.handleInvalidTokenError\n\n    const disablePromises = !!options.disablePromises\n    addToProto(this, this.data, dataProto, disablePromises)\n    addToProto(this, this.auth, authProto, disablePromises)\n    addToProto(this, this.files, filesProto, disablePromises)\n    addToProto(this, this.intents, intentsProto, disablePromises)\n    addToProto(this, this.jobs, jobsProto, disablePromises)\n    addToProto(this, this.offline, offlineProto, disablePromises)\n    addToProto(this, this.settings, settingsProto, disablePromises)\n\n    if (options.offline) {\n      this.offline.init(options.offline)\n    }\n\n    // Exposing cozyFetchJSON to make some development easier. Should be temporary.\n    this.fetchJSON = function _fetchJSON () {\n      const args = [this].concat(Array.prototype.slice.call(arguments))\n      return cozyFetch.cozyFetchJSON.apply(this, args)\n    }\n  }\n\n  authorize (forceTokenRefresh = false) {\n    const state = this._authstate\n    if (state === AuthOK || state === AuthRunning) {\n      return this._authcreds\n    }\n\n    this._authstate = AuthRunning\n    this._authcreds = this.isV2().then((isV2) => {\n      if (isV2 && this._oauth) {\n        throw new Error('OAuth is not supported on the V2 stack')\n      }\n      if (this._oauth) {\n        if (forceTokenRefresh && this._clientParams.redirectURI) {\n          this._clientParams.redirectURI = ensureHasReconnectParam(this._clientParams.redirectURI)\n        }\n        return auth.oauthFlow(\n          this,\n          this._storage,\n          this._clientParams,\n          this._onRegistered,\n          forceTokenRefresh\n        )\n      }\n      // we expect to be on a client side application running in a browser\n      // with cookie-based authentication.\n      if (isV2) {\n        return getAppTokenV2()\n      } else if (this._token) {\n        return Promise.resolve({client: null, token: this._token})\n      } else {\n        throw new Error('Missing application token')\n      }\n    })\n\n    this._authcreds.then(\n      () => { this._authstate = AuthOK },\n      () => { this._authstate = AuthError })\n\n    return this._authcreds\n  }\n\n  saveCredentials (client, token) {\n    const creds = {client, token}\n    if (!this._storage || this._authstate === AuthRunning) {\n      return Promise.resolve(creds)\n    }\n    this._storage.save(auth.CredsKey, creds)\n    this._authcreds = Promise.resolve(creds)\n    return this._authcreds\n  }\n\n  fullpath (path) {\n    return this.isV2().then((isV2) => {\n      const pathprefix = isV2 ? '/ds-api' : ''\n      return this._url + pathprefix + path\n    })\n  }\n\n  isV2 () {\n    if (!this._version) {\n      return retry(() => fetch(`${this._url}/status/`), 3)()\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error('Could not fetch cozy status')\n          } else {\n            return res.json()\n          }\n        })\n        .then((status) => {\n          this._version = status.datasystem !== undefined ? 2 : 3\n          return this.isV2()\n        })\n    }\n    return Promise.resolve(this._version === 2)\n  }\n}\n\nfunction nopOnRegistered () {\n  throw new Error('Missing onRegistered callback')\n}\n\nfunction protoify (context, fn) {\n  return function prototyped (...args) {\n    return fn(context, ...args)\n  }\n}\n\nfunction addToProto (ctx, obj, proto, disablePromises) {\n  for (const attr in proto) {\n    let fn = protoify(ctx, proto[attr])\n    if (disablePromises) {\n      fn = unpromiser(fn)\n    }\n    obj[attr] = fn\n  }\n}\n\nmodule.exports = new Client()\nObject.assign(module.exports, {Client, LocalStorage, MemoryStorage})\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import {cozyFetchJSON} from './fetch'\n\nconst intentClass = 'coz-intent'\n\n// helper to serialize/deserialize an error for/from postMessage\nconst errorSerializer = (() => {\n  function mapErrorProperties (from, to) {\n    const result = Object.assign(to, from)\n    const nativeProperties = ['name', 'message']\n    return nativeProperties.reduce((result, property) => {\n      if (from[property]) {\n        to[property] = from[property]\n      }\n      return result\n    }, result)\n  }\n  return {\n    serialize: (error) => mapErrorProperties(error, {}),\n    deserialize: (data) => mapErrorProperties(data, new Error(data.message))\n  }\n})()\n\n// inject iframe for service in given element\nfunction injectService (url, element, intent, data, onReadyCallback) {\n  const document = element.ownerDocument\n  if (!document) throw new Error('Cannot retrieve document object from given element')\n\n  const window = document.defaultView\n  if (!window) throw new Error('Cannot retrieve window object from document')\n\n  const iframe = document.createElement('iframe')\n  // if callback provided for when iframe is loaded\n  if (typeof onReadyCallback === 'function') iframe.onload = onReadyCallback\n  // TODO: implement 'title' attribute\n  iframe.setAttribute('src', url)\n  iframe.classList.add(intentClass)\n  element.appendChild(iframe)\n  iframe.focus()\n\n  // Keeps only http://domain:port/\n  const serviceOrigin = url.split('/', 3).join('/')\n\n  return new Promise((resolve, reject) => {\n    let handshaken = false\n    const messageHandler = (event) => {\n      if (event.origin !== serviceOrigin) return\n\n      if (event.data.type === 'load') {\n        // Safari 9.1 (At least) send a MessageEvent when the iframe loads,\n        // making the handshake fails.\n        console.warn && console.warn('Cozy Client ignored MessageEvent having data.type `load`.')\n        return\n      }\n\n      if (event.data.type === `intent-${intent._id}:ready`) {\n        handshaken = true\n        return event.source.postMessage(data, event.origin)\n      }\n\n      if (handshaken && event.data.type === `intent-${intent._id}:resize`) {\n        ['width', 'height', 'maxWidth', 'maxHeight'].forEach(prop => {\n          if (event.data.transition) element.style.transition = event.data.transition\n          if (event.data.dimensions[prop]) element.style[prop] = `${event.data.dimensions[prop]}px`\n        })\n\n        return true\n      }\n\n      window.removeEventListener('message', messageHandler)\n      const removeIntentFrame = () => {\n        // check if the parent node has not been already removed from the DOM\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\n      }\n\n      if (handshaken && event.data.type === `intent-${intent._id}:exposeFrameRemoval`) {\n        return resolve({removeIntentFrame, doc: event.data.document})\n      }\n\n      removeIntentFrame()\n\n      if (event.data.type === `intent-${intent._id}:error`) {\n        return reject(errorSerializer.deserialize(event.data.error))\n      }\n\n      if (handshaken && event.data.type === `intent-${intent._id}:cancel`) {\n        return resolve(null)\n      }\n\n      if (handshaken && event.data.type === `intent-${intent._id}:done`) {\n        return resolve(event.data.document)\n      }\n\n      if (!handshaken) {\n        return reject(new Error('Unexpected handshake message from intent service'))\n      }\n\n      // We may be in a state where the messageHandler is still attached to then\n      // window, but will not be needed anymore. For example, the service failed\n      // before adding the `unload` listener, so no `intent:cancel` message has\n      // never been sent.\n      // So we simply ignore other messages, and this listener will stay here,\n      // waiting for a message which will never come, forever (almost).\n    }\n\n    window.addEventListener('message', messageHandler)\n  })\n}\n\nexport function create (cozy, action, type, data = {}, permissions = []) {\n  if (!action) throw new Error(`Misformed intent, \"action\" property must be provided`)\n  if (!type) throw new Error(`Misformed intent, \"type\" property must be provided`)\n\n  const createPromise = cozyFetchJSON(cozy, 'POST', '/intents', {\n    data: {\n      type: 'io.cozy.intents',\n      attributes: {\n        action: action,\n        type: type,\n        data: data,\n        permissions: permissions\n      }\n    }\n  })\n\n  createPromise.start = (element, onReadyCallback) => {\n    return createPromise.then(intent => {\n      let service = intent.attributes.services && intent.attributes.services[0]\n\n      if (!service) {\n        return Promise.reject(new Error('Unable to find a service'))\n      }\n\n      return injectService(service.href, element, intent, data, onReadyCallback)\n    })\n  }\n\n  return createPromise\n}\n\nfunction listenClientData (intent, window) {\n  return new Promise((resolve, reject) => {\n    const messageEventListener = (event) => {\n      if (event.origin !== intent.attributes.client) return\n\n      window.removeEventListener('message', messageEventListener)\n      resolve(event.data)\n    }\n\n    window.addEventListener('message', messageEventListener)\n    window.parent.postMessage({\n      type: `intent-${intent._id}:ready`\n    }, intent.attributes.client)\n  })\n}\n\n// returns a service to communicate with intent client\nexport function createService (cozy, intentId, serviceWindow) {\n  serviceWindow = serviceWindow || typeof window !== 'undefined' && window\n  if (!serviceWindow) throw new Error('Intent service should be used in browser')\n\n  intentId = intentId || serviceWindow.location.search.split('=')[1]\n  if (!intentId) throw new Error('Cannot retrieve intent from URL')\n\n  return cozyFetchJSON(cozy, 'GET', `/intents/${intentId}`)\n    .then(intent => {\n      let terminated = false\n\n      const terminate = (message) => {\n        if (terminated) throw new Error('Intent service has already been terminated')\n        terminated = true\n        serviceWindow.parent.postMessage(message, intent.attributes.client)\n      }\n\n      const resizeClient = (dimensions, transitionProperty) => {\n        if (terminated) throw new Error('Intent service has been terminated')\n\n        const message = {\n          type: `intent-${intent._id}:resize`,\n          // if a dom element is passed, calculate its size\n          dimensions: dimensions.element\n            ? Object.assign({}, dimensions, {\n              maxHeight: dimensions.element.clientHeight,\n              maxWidth: dimensions.element.clientWidth\n            })\n              : dimensions,\n          transition: transitionProperty\n        }\n\n        serviceWindow.parent.postMessage(message, intent.attributes.client)\n      }\n\n      const cancel = () => {\n        terminate({type: `intent-${intent._id}:cancel`})\n      }\n\n      // Prevent unfulfilled client promises when this window unloads for a\n      // reason or another.\n      serviceWindow.addEventListener('unload', () => {\n        if (!terminated) cancel()\n      })\n\n      return listenClientData(intent, serviceWindow)\n        .then(data => {\n          return {\n            getData: () => data,\n            getIntent: () => intent,\n            terminate: (doc) => {\n              if (data && data.exposeIntentFrameRemoval) {\n                return terminate({\n                  type: `intent-${intent._id}:exposeFrameRemoval`,\n                  document: doc\n                })\n              } else {\n                return terminate({\n                  type: `intent-${intent._id}:done`,\n                  document: doc\n                })\n              }\n            },\n            throw: error => terminate({\n              type: `intent-${intent._id}:error`,\n              error: errorSerializer.serialize(error)\n            }),\n            resizeClient: resizeClient,\n            cancel: cancel\n          }\n        })\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/intents.js","import {cozyFetchJSON} from './fetch'\n\nexport function count (cozy, workerType) {\n  return cozyFetchJSON(cozy, 'GET', `/jobs/queue/${workerType}`)\n    .then(data => data.length)\n}\n\nexport function queued (cozy, workerType) {\n  return cozyFetchJSON(cozy, 'GET', `/jobs/queue/${workerType}`)\n}\n\nexport function create (cozy, workerType, args, options) {\n  return cozyFetchJSON(cozy, 'POST', `/jobs/queue/${workerType}`, {\n    data: {\n      type: 'io.cozy.jobs',\n      attributes: {\n        arguments: args || {},\n        options: options || {}\n      }\n    }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jobs.js","import {warn, createPath, sleep} from './utils'\nimport {normalizeDoctype} from './doctypes'\nimport {cozyFetchJSON, cozyFetchRawJSON} from './fetch'\n\nexport function defineIndex (cozy, doctype, fields) {\n  return cozy.isV2().then((isV2) => {\n    doctype = normalizeDoctype(cozy, isV2, doctype)\n    if (!Array.isArray(fields) || fields.length === 0) {\n      throw new Error('defineIndex fields should be a non-empty array')\n    }\n    if (isV2) {\n      return defineIndexV2(cozy, doctype, fields)\n    } else {\n      return defineIndexV3(cozy, doctype, fields)\n    }\n  })\n}\n\nexport function query (cozy, indexRef, options) {\n  return cozy.isV2().then((isV2) => {\n    if (!indexRef) {\n      throw new Error('query should be passed the indexRef')\n    }\n    if (isV2) {\n      return queryV2(cozy, indexRef, options)\n    } else {\n      return queryV3(cozy, indexRef, options)\n    }\n  })\n}\n\nexport function queryFiles (cozy, indexRef, options) {\n  const opts = getV3Options(indexRef, options)\n  return cozyFetchRawJSON(cozy, 'POST', '/files/_find', opts)\n    .then((response) => options.wholeResponse ? response : response.docs)\n}\n\n// Internals\n\nconst VALUEOPERATORS = ['$eq', '$gt', '$gte', '$lt', '$lte']\nconst LOGICOPERATORS = ['$or', '$and', '$not']\n\n/* eslint-disable */\nconst MAP_TEMPLATE = (function (doc) {\n  if (doc.docType.toLowerCase() === 'DOCTYPEPLACEHOLDER'){\n    emit(FIELDSPLACEHOLDER, doc)\n  }\n}).toString().replace(/ /g, '').replace(/\\n/g, '')\nconst COUCHDB_INFINITY = {\"\\uFFFF\": \"\\uFFFF\"}\nconst COUCHDB_LOWEST = null\n/* eslint-enable */\n\n// defineIndexV2 is equivalent to defineIndex but only works for V2.\n// It transforms the index fields into a map reduce view.\nfunction defineIndexV2 (cozy, doctype, fields) {\n  let indexName = 'by' + fields.map(capitalize).join('')\n  let indexDefinition = { map: makeMapFunction(doctype, fields), reduce: '_count' }\n  let path = `/request/${doctype}/${indexName}/`\n  return cozyFetchJSON(cozy, 'PUT', path, indexDefinition)\n    .then(() => ({ doctype: doctype, type: 'mapreduce', name: indexName, fields: fields }))\n}\n\nfunction defineIndexV3 (cozy, doctype, fields) {\n  let path = createPath(cozy, false, doctype, '_index')\n  let indexDefinition = {'index': {fields}}\n  return cozyFetchJSON(cozy, 'POST', path, indexDefinition)\n    .then((response) => {\n      const indexResult = { doctype: doctype, type: 'mango', name: response.id, fields }\n\n      if (response.result === 'exists') return indexResult\n\n      // indexes might not be usable right after being created; so we delay the resolving until they are\n      const selector = {}\n      selector[fields[0]] = {'$gt': null}\n\n      const opts = getV3Options(indexResult, {'selector': selector})\n      let path = createPath(cozy, false, indexResult.doctype, '_find')\n      return cozyFetchJSON(cozy, 'POST', path, opts)\n      .then(() => indexResult)\n      .catch(() => { // one retry\n        return sleep(1000)\n        .then(() => cozyFetchJSON(cozy, 'POST', path, opts))\n        .then(() => indexResult)\n        .catch(() => {\n          return sleep(500).then(() => indexResult)\n        })\n      })\n    })\n}\n\n// queryV2 is equivalent to query but only works for V2.\n// It transforms the query into a _views call using makeMapReduceQuery\nfunction queryV2 (cozy, indexRef, options) {\n  if (indexRef.type !== 'mapreduce') {\n    throw new Error('query indexRef should be the return value of defineIndexV2')\n  }\n  if (options.fields) {\n    warn('query fields will be ignored on v2')\n  }\n\n  let path = `/request/${indexRef.doctype}/${indexRef.name}/`\n  let opts = makeMapReduceQuery(indexRef, options)\n  return cozyFetchJSON(cozy, 'POST', path, opts)\n    .then((response) => response.map(r => r.value))\n}\n\n// queryV3 is equivalent to query but only works for V3\nfunction queryV3 (cozy, indexRef, options) {\n  const opts = getV3Options(indexRef, options)\n\n  let path = createPath(cozy, false, indexRef.doctype, '_find')\n  return cozyFetchJSON(cozy, 'POST', path, opts)\n    .then((response) => options.wholeResponse ? response : response.docs)\n}\n\nfunction getV3Options (indexRef, options) {\n  if (indexRef.type !== 'mango') {\n    throw new Error('indexRef should be the return value of defineIndexV3')\n  }\n\n  let opts = {\n    use_index: indexRef.name,\n    fields: options.fields,\n    selector: options.selector,\n    limit: options.limit,\n    skip: options.skip,\n    since: options.since,\n    sort: options.sort\n  }\n\n  if (options.descending) {\n    opts.sort = indexRef.fields.map(f => ({ [f]: 'desc' }))\n  }\n\n  return opts\n}\n\n// misc\nfunction capitalize (name) {\n  return name.charAt(0).toUpperCase() + name.slice(1)\n}\n\nfunction makeMapFunction (doctype, fields) {\n  fields = '[' + fields.map(name => 'doc.' + name).join(',') + ']'\n\n  return MAP_TEMPLATE.replace('DOCTYPEPLACEHOLDER', doctype.toLowerCase())\n                     .replace('FIELDSPLACEHOLDER', fields)\n}\n\n// parseSelector takes a mango selector and returns it as an array of filter\n// a filter is [path, operator, value] array\n// a path is an array of field names\n// This function is only exported so it can be unit tested.\n// Example :\n// parseSelector({\"test\":{\"deep\": {\"$gt\": 3}}})\n// [[['test', 'deep'], '$gt', 3 ]]\nexport function parseSelector (selector, path = [], operator = '$eq') {\n  if ((typeof selector) !== 'object') {\n    return [[path, operator, selector]]\n  }\n\n  let keys = Object.keys(selector)\n  if (keys.length === 0) {\n    throw new Error('empty selector')\n  } else {\n    return keys.reduce(function (acc, k) {\n      if (LOGICOPERATORS.indexOf(k) !== -1) {\n        throw new Error('cozy-client-js does not support mango logic ops')\n      } else if (VALUEOPERATORS.indexOf(k) !== -1) {\n        return acc.concat(parseSelector(selector[k], path, k))\n      } else {\n        return acc.concat(parseSelector(selector[k], path.concat(k), '$eq'))\n      }\n    }, [])\n  }\n}\n\n// normalizeSelector takes a mango selector and returns it as an object\n// normalized.\n// This function is only exported so it can be unit tested.\n// Example :\n// parseSelector({\"test\":{\"deep\": {\"$gt\": 3}}})\n// {\"test.deep\": {\"$gt\": 3}}\nexport function normalizeSelector (selector) {\n  var filters = parseSelector(selector)\n  return filters.reduce(function (acc, filter) {\n    let [path, op, value] = filter\n    let field = path.join('.')\n    acc[field] = acc[field] || {}\n    acc[field][op] = value\n    return acc\n  }, {})\n}\n\n// applySelector takes the normalized selector for the current field\n// and append the proper values to opts.startkey, opts.endkey\nfunction applySelector (selector, opts) {\n  let value = selector['$eq']\n  let lower = COUCHDB_LOWEST\n  let upper = COUCHDB_INFINITY\n  let inclusiveEnd\n\n  if (value) {\n    opts.startkey.push(value)\n    opts.endkey.push(value)\n    return false\n  }\n\n  value = selector['$gt']\n  if (value) {\n    throw new Error('operator $gt (strict greater than) not supported')\n  }\n\n  value = selector['$gte']\n  if (value) {\n    lower = value\n  }\n\n  value = selector['$lte']\n  if (value) {\n    upper = value\n    inclusiveEnd = true\n  }\n\n  value = selector['$lt']\n  if (value) {\n    upper = value\n    inclusiveEnd = false\n  }\n\n  opts.startkey.push(lower)\n  opts.endkey.push(upper)\n  if (inclusiveEnd !== undefined) opts.inclusive_end = inclusiveEnd\n  return true\n}\n\n// makeMapReduceQuery takes a mango query and generate _views call parameters\n// to obtain same results depending on fields in the passed indexRef.\nexport function makeMapReduceQuery (indexRef, query) {\n  let mrquery = {\n    startkey: [],\n    endkey: [],\n    reduce: false\n  }\n  let firstFreeValueField = null\n  let normalizedSelector = normalizeSelector(query.selector)\n\n  indexRef.fields.forEach(function (field) {\n    let selector = normalizedSelector[field]\n\n    if (selector && firstFreeValueField != null) {\n      throw new Error('Selector on field ' + field + ', but not on ' + firstFreeValueField + ' which is higher in index fields.')\n    } else if (selector) {\n      selector.used = true\n      let isFreeValue = applySelector(selector, mrquery)\n      if (isFreeValue) firstFreeValueField = field\n    } else if (firstFreeValueField == null) {\n      firstFreeValueField = field\n      mrquery.endkey.push(COUCHDB_INFINITY)\n    }\n  })\n\n  Object.keys(normalizedSelector).forEach(function (field) {\n    if (!normalizedSelector[field].used) {\n      throw new Error('Cant apply selector on ' + field + ', it is not in index')\n    }\n  })\n\n  if (query.descending) {\n    mrquery = {\n      descending: true,\n      reduce: false,\n      startkey: mrquery.endkey,\n      endkey: mrquery.startkey,\n      inclusive_end: mrquery.inclusive_end\n    }\n  }\n\n  return mrquery\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mango.js","/* global pouchdbAdapterCordovaSqlite */\nimport {DOCTYPE_FILES} from './doctypes'\nimport {refreshToken} from './auth_v3'\nimport {isOffline} from './utils'\nimport PouchDB from 'pouchdb'\nimport pouchdbFind from 'pouchdb-find'\n\nexport const replicationOfflineError = 'Replication abort, your device is actually offline.'\n\nlet pluginLoaded = false\n\n/*\n  For each doctype we have some parameters:\n  cozy._offline[doctype] = {\n    database: pouchdb database\n    replication: the pouchdb replication\n    replicationPromise: promise of replication\n    interval: repeated replication interval\n  }\n*/\n\nexport function init (cozy, { options = {}, doctypes = [] }) {\n  for (let doctype of doctypes) {\n    createDatabase(cozy, doctype, options)\n  }\n}\n\n// helper\n\nfunction getInfo (cozy, doctype) {\n  cozy._offline = cozy._offline || []\n  cozy._offline[doctype] = cozy._offline[doctype] || {}\n  return cozy._offline[doctype]\n}\n\nexport function getDoctypes (cozy) {\n  cozy._offline = cozy._offline || []\n  return Object.keys(cozy._offline)\n}\n\n//\n// DATABASE\n//\n\nexport function hasDatabase (cozy, doctype) {\n  return getDatabase(cozy, doctype) !== undefined\n}\n\nexport function getDatabase (cozy, doctype) {\n  return getInfo(cozy, doctype).database\n}\n\nexport function setDatabase (cozy, doctype, database) {\n  cozy._offline[doctype].database = database\n  return getDatabase(cozy, doctype)\n}\n\nexport function createDatabase (cozy, doctype, options = {}) {\n  if (!pluginLoaded) {\n    PouchDB.plugin(pouchdbFind)\n    if (typeof pouchdbAdapterCordovaSqlite !== 'undefined') PouchDB.plugin(pouchdbAdapterCordovaSqlite)\n    pluginLoaded = true\n  }\n\n  if (hasDatabase(cozy, doctype)) {\n    return Promise.resolve(getDatabase(cozy, doctype))\n  }\n\n  setDatabase(cozy, doctype, new PouchDB(doctype, options))\n  return createIndexes(cozy, doctype).then(() => getDatabase(cozy, doctype))\n}\n\nexport function destroyDatabase (cozy, doctype) {\n  if (!hasDatabase(cozy, doctype)) {\n    return Promise.resolve(false)\n  }\n\n  return stopRepeatedReplication(cozy, doctype)\n    .then(() => stopReplication(cozy, doctype))\n    .then(() => getDatabase(cozy, doctype).destroy())\n    .then(response => {\n      setDatabase(cozy, doctype, undefined)\n      return response\n    })\n}\n\nexport function destroyAllDatabase (cozy) {\n  const doctypes = getDoctypes(cozy)\n  const destroy = (doctype) => destroyDatabase(cozy, doctype)\n  return Promise.all(doctypes.map(destroy))\n}\n\nfunction createIndexes (cozy, doctype) {\n  if (doctype === DOCTYPE_FILES) {\n    return getDatabase(cozy, doctype).createIndex({index: {fields: ['dir_id']}})\n  }\n  return Promise.resolve()\n}\n\n//\n// REPLICATION\n//\n\nexport function hasReplication (cozy, doctype) {\n  return getReplication(cozy, doctype) !== undefined\n}\n\nfunction getReplication (cozy, doctype) {\n  return getInfo(cozy, doctype).replication\n}\n\nfunction setReplication (cozy, doctype, replication) {\n  cozy._offline[doctype].replication = replication\n  return getReplication(cozy, doctype)\n}\n\nfunction getReplicationUrl (cozy, doctype) {\n  return cozy.authorize()\n    .then(credentials => {\n      const basic = credentials.token.toBasicAuth()\n      return (cozy._url + '/data/' + doctype).replace('//', `//${basic}`)\n    })\n}\n\nfunction getReplicationPromise (cozy, doctype) {\n  return getInfo(cozy, doctype).replicationPromise\n}\n\nfunction setReplicationPromise (cozy, doctype, promise) {\n  cozy._offline[doctype].replicationPromise = promise\n  return getReplicationPromise(cozy, doctype)\n}\n\nexport function replicateFromCozy (cozy, doctype, options = {}) {\n  return setReplicationPromise(cozy, doctype, new Promise((resolve, reject) => {\n    if (!hasDatabase(cozy, doctype)) {\n      createDatabase(cozy, doctype)\n    }\n    if (options.live === true) {\n      return reject(new Error('You can\\'t use `live` option with Cozy couchdb.'))\n    }\n\n    if (isOffline()) {\n      reject(replicationOfflineError)\n      options.onError && options.onError(replicationOfflineError)\n      return\n    }\n\n    getReplicationUrl(cozy, doctype)\n      .then(url => setReplication(cozy, doctype,\n        getDatabase(cozy, doctype).replicate.from(url, options).on('complete', (info) => {\n          setReplication(cozy, doctype, undefined)\n          resolve(info)\n          options.onComplete && options.onComplete(info)\n        }).on('error', (err) => {\n          if (err.error === 'code=400, message=Expired token') {\n            cozy.authorize().then(({client, token}) => {\n              refreshToken(cozy, client, token)\n                .then((newToken) => cozy.saveCredentials(client, newToken))\n                .then((credentials) => replicateFromCozy(cozy, doctype, options))\n            })\n          } else {\n            console.warn(`ReplicateFromCozy '${doctype}' Error:`)\n            console.warn(err)\n            setReplication(cozy, doctype, undefined)\n            reject(err)\n            options.onError && options.onError(err)\n          }\n        })\n      ))\n  }))\n}\n\nexport function stopReplication (cozy, doctype) {\n  if (!getDatabase(cozy, doctype) || !hasReplication(cozy, doctype)) {\n    return Promise.resolve()\n  }\n\n  return new Promise(resolve => {\n    try {\n      getReplicationPromise(cozy, doctype).then(() => {\n        resolve()\n      })\n      getReplication(cozy, doctype).cancel()\n      // replication is set to undefined by complete replication\n    } catch (e) {\n      resolve()\n    }\n  })\n}\n\nexport function stopAllReplication (cozy) {\n  const doctypes = getDoctypes(cozy)\n  const stop = (doctype) => stopReplication(cozy, doctype)\n  return Promise.all(doctypes.map(stop))\n}\n\n//\n// REPEATED REPLICATION\n//\n\nfunction getRepeatedReplication (cozy, doctype) {\n  return getInfo(cozy, doctype).interval\n}\n\nfunction setRepeatedReplication (cozy, doctype, interval) {\n  cozy._offline[doctype].interval = interval\n}\n\nexport function hasRepeatedReplication (cozy, doctype) {\n  return getRepeatedReplication(cozy, doctype) !== undefined\n}\n\nexport function startRepeatedReplication (cozy, doctype, timer, options = {}) {\n  // TODO: add timer limitation for not flooding Gozy\n  if (hasRepeatedReplication(cozy, doctype)) {\n    return getRepeatedReplication(cozy, doctype)\n  }\n\n  return setRepeatedReplication(cozy, doctype, setInterval(() => {\n    if (isOffline()) {\n      // network is offline, replication cannot be launched\n      console.info(replicationOfflineError)\n      return\n    }\n    if (!hasReplication(cozy, doctype)) {\n      replicateFromCozy(cozy, doctype, options)\n      // TODO: add replicationToCozy\n    }\n  }, timer * 1000))\n}\n\nexport function stopRepeatedReplication (cozy, doctype) {\n  if (hasRepeatedReplication(cozy, doctype)) {\n    clearInterval(getRepeatedReplication(cozy, doctype))\n    setRepeatedReplication(cozy, doctype, undefined)\n  }\n  if (hasReplication(cozy, doctype)) {\n    return stopReplication(cozy, doctype)\n  }\n\n  return Promise.resolve()\n}\n\nexport function stopAllRepeatedReplication (cozy) {\n  const doctypes = getDoctypes(cozy)\n  const stop = (doctype) => stopRepeatedReplication(cozy, doctype)\n  return Promise.all(doctypes.map(stop))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/offline.js","import { cozyFetchJSON, cozyFetchRawJSON } from './fetch'\nimport { DOCTYPE_FILES } from './doctypes'\n\nfunction updateRelations (verb) {\n  return function (cozy, doc, ids) {\n    if (!doc) throw new Error('missing doc argument')\n    if (!Array.isArray(ids)) ids = [ids]\n\n    const refs = ids.map((id) => ({type: DOCTYPE_FILES, id}))\n\n    return cozyFetchJSON(cozy, verb, makeReferencesPath(doc), {data: refs})\n  }\n}\n\nexport const addReferencedFiles = updateRelations('POST')\nexport const removeReferencedFiles = updateRelations('DELETE')\n\nexport function listReferencedFiles (cozy, doc) {\n  if (!doc) throw new Error('missing doc argument')\n  return cozyFetchJSON(cozy, 'GET', makeReferencesPath(doc))\n    .then((files) => files.map((file) => file._id))\n}\n\nexport function fetchReferencedFiles (cozy, doc, options) {\n  if (!doc) throw new Error('missing doc argument')\n  const params = Object.keys(options).map(key => `&page[${key}]=${options[key]}`).join('')\n  // As datetime is the only sort option available, I see no reason to not have it by default\n  return cozyFetchRawJSON(cozy, 'GET', `${makeReferencesPath(doc)}?include=files&sort=datetime${params}`)\n}\n\nfunction makeReferencesPath (doc) {\n  const type = encodeURIComponent(doc._type)\n  const id = encodeURIComponent(doc._id)\n  return `/data/${type}/${id}/relationships/references`\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/relations.js","import {cozyFetchJSON} from './fetch'\n\nexport function diskUsage (cozy) {\n  return cozyFetchJSON(cozy, 'GET', `/settings/disk-usage`)\n}\n\nexport function changePassphrase (cozy, currentPassPhrase, newPassPhrase) {\n  return cozyFetchJSON(cozy, 'PUT', `/settings/passphrase`, {\n    current_passphrase: currentPassPhrase,\n    new_passphrase: newPassPhrase\n  })\n}\n\nexport function getInstance (cozy) {\n  return cozyFetchJSON(cozy, 'GET', `/settings/instance`)\n}\n\nexport function updateInstance (cozy, instance) {\n  return cozyFetchJSON(cozy, 'PUT', `/settings/instance`, instance)\n}\n\nexport function getClients (cozy) {\n  return cozyFetchJSON(cozy, 'GET', `/settings/clients`)\n}\n\nexport function deleteClientById (cozy, id) {\n  return cozyFetchJSON(cozy, 'DELETE', `/settings/clients/${id}`)\n}\n\nexport function updateLastSync (cozy) {\n  return cozyFetchJSON(cozy, 'POST', '/settings/synchronized')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/settings.js","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  try {\n    return exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (typeof process !== 'undefined' && 'env' in process) {\n    return process.env.DEBUG;\n  }\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/browser.js\n// module id = 34\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug.default = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/debug.js\n// module id = 35\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 36\n// module chunks = 0","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/is-array/index.js\n// module id = 37\n// module chunks = 0","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 38\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ms/index.js\n// module id = 39\n// module chunks = 0","'use strict';\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nexports.padLeft = function (str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n};\n\nexports.padRight = function (str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return str + padding;\n};\n\nexports.stringLexCompare = function (a, b) {\n\n  var aLen = a.length;\n  var bLen = b.length;\n\n  var i;\n  for (i = 0; i < aLen; i++) {\n    if (i === bLen) {\n      // b is shorter substring of a\n      return 1;\n    }\n    var aChar = a.charAt(i);\n    var bChar = b.charAt(i);\n    if (aChar !== bChar) {\n      return aChar < bChar ? -1 : 1;\n    }\n  }\n\n  if (aLen < bLen) {\n    // a is shorter substring of b\n    return -1;\n  }\n\n  return 0;\n};\n\n/*\n * returns the decimal form for the given integer, i.e. writes\n * out all the digits (in base-10) instead of using scientific notation\n */\nexports.intToDecimalForm = function (int) {\n\n  var isNeg = int < 0;\n  var result = '';\n\n  do {\n    var remainder = isNeg ? -Math.ceil(int % 10) : Math.floor(int % 10);\n\n    result = remainder + result;\n    int = isNeg ? Math.ceil(int / 10) : Math.floor(int / 10);\n  } while (int);\n\n\n  if (isNeg && result !== '0') {\n    result = '-' + result;\n  }\n\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-collate/lib/utils.js\n// module id = 40\n// module chunks = 0","'use strict';\n\nvar upsert = require('./upsert');\nvar utils = require('./utils');\nvar Promise = utils.Promise;\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\nmodule.exports = function (opts) {\n  var sourceDB = opts.db;\n  var viewName = opts.viewName;\n  var mapFun = opts.map;\n  var reduceFun = opts.reduce;\n  var temporary = opts.temporary;\n  var pluginName = opts.pluginName;\n\n  // the \"undefined\" part is for backwards compatibility\n  var viewSignature = stringify(mapFun) + stringify(reduceFun) +\n    'undefined';\n\n  if (!temporary && sourceDB._cachedViews) {\n    var cachedView = sourceDB._cachedViews[viewSignature];\n    if (cachedView) {\n      return Promise.resolve(cachedView);\n    }\n  }\n\n  return sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : utils.MD5(viewSignature));\n\n    // save the view name in the source PouchDB so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + pluginName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db, \n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (!temporary) {\n            sourceDB._cachedViews = sourceDB._cachedViews || {};\n            sourceDB._cachedViews[viewSignature] = view;\n            view.db.on('destroyed', function () {\n              delete sourceDB._cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/abstract-mapreduce/create-view.js\n// module id = 41\n// module chunks = 0","'use strict';\n\nvar pouchCollate = require('pouchdb-collate');\nvar TaskQueue = require('./taskqueue');\nvar collate = pouchCollate.collate;\nvar toIndexableString = pouchCollate.toIndexableString;\nvar normalizeKey = pouchCollate.normalizeKey;\nvar createView = require('./create-view');\nvar log;\n/* istanbul ignore else */\nif ((typeof console !== 'undefined') && (typeof console.log === 'function')) {\n  log = Function.prototype.bind.call(console.log, console);\n} else {\n  log = function () {};\n}\nvar utils = require('./utils');\nvar Promise = utils.Promise;\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue();\nvar CHANGES_BATCH_SIZE = 50;\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\nutils.inherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\nutils.inherits(NotFoundError, Error);\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction sortByKeyThenValue(x, y) {\n  var keyCompare = collate(x.key, y.key);\n  return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n}\n\nfunction sliceResults(results, limit, skip) {\n  skip = skip || 0;\n  if (typeof limit === 'number') {\n    return results.slice(skip, limit + skip);\n  } else if (skip > 0) {\n    return results.slice(skip);\n  }\n  return results;\n}\n\nfunction rowToDocId(row) {\n  var val = row.value;\n  // Users can explicitly specify a joined doc _id, or it\n  // defaults to the doc _id that emitted the key/value.\n  var docId = (val && typeof val === 'object' && val._id) || row.id;\n  return docId;\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    console.error(\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    console.error(e);\n  }\n}\n\nfunction tryCode(db, fun, args) {\n  // emit an event if there was an error thrown by a map/reduce function.\n  // putting try/catches in a single function also avoids deoptimizations.\n  try {\n    return {\n      output : fun.apply(null, args)\n    };\n  } catch (e) {\n    emitError(db, e);\n    return {error: e};\n  }\n}\n\nfunction checkQueryParseError(options, fun) {\n  var startkeyName = options.descending ? 'endkey' : 'startkey';\n  var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n  if (typeof options[startkeyName] !== 'undefined' &&\n    typeof options[endkeyName] !== 'undefined' &&\n    collate(options[startkeyName], options[endkeyName]) > 0) {\n    throw new QueryParseError('No rows can match your key range, reverse your ' +\n    'start_key and end_key or set {descending : true}');\n  } else if (fun.reduce && options.reduce !== false) {\n    if (options.include_docs) {\n      throw new QueryParseError('{include_docs:true} is invalid for reduce');\n    } else if (options.keys && options.keys.length > 1 &&\n      !options.group && !options.group_level) {\n      throw new QueryParseError('Multi-key fetches for reduce views must use {group: true}');\n    }\n  }\n  if (options.group_level) {\n    if (typeof options.group_level !== 'number') {\n      throw new QueryParseError('Invalid value for integer: \"' + options.group_level + '\"');\n    }\n    if (options.group_level < 0) {\n      throw new QueryParseError('Invalid value for positive integer: ' +\n      '\"' + options.group_level + '\"');\n    }\n  }\n}\n\nfunction defaultsTo(value) {\n  return function (reason) {\n    /* istanbul ignore else */\n    if (reason.status === 404) {\n      return value;\n    } else {\n      throw reason;\n    }\n  };\n}\n\nfunction createIndexer(def) {\n\n  var pluginName = def.name;\n  var mapper = def.mapper;\n  var reducer = def.reducer;\n  var ddocValidator = def.ddocValidator;\n\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits[docId];\n    var indexableKeysToKeyValues = docData.indexableKeysToKeyValues;\n    var changes = docData.changes;\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKvDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeysMap = {};\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeysMap[doc._id] = true;\n        doc._deleted = !indexableKeysToKeyValues[doc._id];\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues[doc._id];\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n\n      var newKeys = Object.keys(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeysMap[key]) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues[key];\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = utils.uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKvDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n    .catch(defaultsTo({_id: seqDocId, seq: 0}))\n    .then(function (lastSeqDoc) {\n      var docIds = Object.keys(docIdsToChangesAndEmits);\n      return Promise.all(docIds.map(function (docId) {\n        return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n      })).then(function (listOfDocsToPersist) {\n        var docsToPersist = utils.flatten(listOfDocsToPersist);\n        lastSeqDoc.seq = seq;\n        docsToPersist.push(lastSeqDoc);\n        // write all docs in a single operation, update the seq once\n        return view.db.bulkDocs({docs : docsToPersist});\n      });\n    });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return utils.sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue();\n\n    return new Promise(function (resolve, reject) {\n\n      function complete() {\n        queue.finish().then(function () {\n          view.seq = currentSeq;\n          resolve();\n        });\n      }\n\n      function processNextBatch() {\n        view.sourceDB.changes({\n          conflicts: true,\n          include_docs: true,\n          style: 'all_docs',\n          since: currentSeq,\n          limit: CHANGES_BATCH_SIZE\n        }).on('complete', function (response) {\n          var results = response.results;\n          if (!results.length) {\n            return complete();\n          }\n          var docIdsToChangesAndEmits = {};\n          for (var i = 0, l = results.length; i < l; i++) {\n            var change = results[i];\n            if (change.doc._id[0] !== '_') {\n              mapResults = [];\n              doc = change.doc;\n\n              if (!doc._deleted) {\n                tryCode(view.sourceDB, mapFun, [doc]);\n              }\n              mapResults.sort(sortByKeyThenValue);\n\n              var indexableKeysToKeyValues = {};\n              var lastKey;\n              for (var j = 0, jl = mapResults.length; j < jl; j++) {\n                var obj = mapResults[j];\n                var complexKey = [obj.key, obj.id];\n                if (collate(obj.key, lastKey) === 0) {\n                  complexKey.push(j); // dup key+id, so make it unique\n                }\n                var indexableKey = toIndexableString(complexKey);\n                indexableKeysToKeyValues[indexableKey] = obj;\n                lastKey = obj.key;\n              }\n              docIdsToChangesAndEmits[change.doc._id] = {\n                indexableKeysToKeyValues: indexableKeysToKeyValues,\n                changes: change.changes\n              };\n            }\n            currentSeq = change.seq;\n          }\n          queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n          if (results.length < CHANGES_BATCH_SIZE) {\n            return complete();\n          }\n          return processNextBatch();\n        }).on('error', onError);\n        /* istanbul ignore next */\n        function onError(err) {\n          reject(err);\n        }\n      }\n\n      processNextBatch();\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var key = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(key) && typeof lvl === 'number') {\n        key = key.length > lvl ? key.slice(0, lvl) : key;\n      }\n\n      if (last && collate(last.key[0][0], key) === 0) {\n        last.key.push([key, e.id]);\n        last.value.push(e.value);\n        return;\n      }\n      groups.push({key: [\n        [key, e.id]\n      ], value: [e.value]});\n    });\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryCode(view.sourceDB, reduceFun, [e.key, e.value, false]);\n      // TODO: can't do instanceof BuiltInError because this class is buried\n      // in mapreduce.js\n      if (reduceTry.error && /BuiltInError/.test(reduceTry.error.constructor)) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      // CouchDB just sets the value to null if a non-built-in errors out\n      e.value = reduceTry.error ? null : reduceTry.output;\n      e.key = e.key[0][0];\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(groups, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return utils.sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n              result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = pouchCollate.parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      if (opts.include_docs) {\n        var docIds = utils.uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = {};\n          allDocsRes.rows.forEach(function (row) {\n            if (row.doc) {\n              docIdsToDocs['$' + row.id] = row.doc;\n            }\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs['$' + docId];\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    var flatten = function (array) {\n      return array.reduce(function (prev, cur) {\n        return prev.concat(cur);\n      });\n    };\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      if (typeof opts.startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([opts.startkey, {}]) :\n          toIndexableString([opts.startkey]);\n      }\n      if (typeof opts.endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(inclusiveEnd ? [opts.endkey, {}] : [opts.endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + pluginName).then(function (metaDoc) {\n      var docsToViews = {};\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        docsToViews[designDocName] = docsToViews[designDocName] || {};\n        docsToViews[designDocName][viewName] = true;\n      });\n      var opts = {\n        keys : Object.keys(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8);\n          Object.keys(docsToViews[row.key]).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views && row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] = viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(function (viewDBName) {\n          return !viewsToStatus[viewDBName];\n        });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return utils.sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      var createViewOpts = {\n        db : db,\n        viewName : 'temp_view/temp_view',\n        map : fun.map,\n        reduce : fun.reduce,\n        temporary : true,\n        pluginName: pluginName\n      };\n      tempViewQueue.add(function () {\n        return createView(createViewOpts).then(function (view) {\n          function cleanup() {\n            return view.db.destroy();\n          }\n          return utils.fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), cleanup);\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewOpts = {\n          db : db,\n          viewName : fullViewName,\n          map : fun.map,\n          reduce : fun.reduce,\n          pluginName: pluginName\n        };\n        return createView(createViewOpts).then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              process.nextTick(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  var query = function (fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = utils.extend(true, {}, opts);\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    utils.promisedCallback(promise, callback);\n    return promise;\n  };\n\n  var viewCleanup = utils.callbackify(function () {\n    var db = this;\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: query,\n    viewCleanup: viewCleanup\n  };\n}\n\nmodule.exports = createIndexer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/abstract-mapreduce/index.js\n// module id = 42\n// module chunks = 0","'use strict';\n/*\n * Simple task queue to sequentialize actions. Assumes callbacks will eventually fire (once).\n */\n\nvar Promise = require('./utils').Promise;\n\nfunction TaskQueue() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue.prototype.finish = function () {\n  return this.promise;\n};\n\nmodule.exports = TaskQueue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/abstract-mapreduce/taskqueue.js\n// module id = 43\n// module chunks = 0","'use strict';\n\nvar massageCreateIndexRequest = require('../../massageCreateIndexRequest');\n\nfunction createIndex(db, requestDef, callback) {\n  requestDef = massageCreateIndexRequest(requestDef);\n\n  db.request({\n    method: 'POST',\n    url: '_index',\n    body: requestDef\n  }, callback);\n}\n\nfunction find(db, requestDef, callback) {\n  db.request({\n    method: 'POST',\n    url: '_find',\n    body: requestDef\n  }, callback);\n}\n\nfunction getIndexes(db, callback) {\n  db.request({\n    method: 'GET',\n    url: '_index'\n  }, callback);\n}\n\nfunction deleteIndex(db, indexDef, callback) {\n\n\n  var ddoc = indexDef.ddoc;\n  var type = indexDef.type || 'json';\n  var name = indexDef.name;\n\n  if (!ddoc) {\n    return callback(new Error('you must provide an index\\'s ddoc'));\n  }\n\n  if (!name) {\n    return callback(new Error('you must provide an index\\'s name'));\n  }\n\n  var url = '_index/' + [ddoc, type, name].map(encodeURIComponent).join('/');\n\n  db.request({\n    method: 'DELETE',\n    url: url\n  }, callback);\n}\n\nexports.createIndex = createIndex;\nexports.find = find;\nexports.getIndexes = getIndexes;\nexports.deleteIndex = deleteIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/http/index.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nvar utils = require('../../../utils');\nvar log = utils.log;\n\nvar pouchUpsert = require('pouchdb-upsert');\nvar abstractMapper = require('../abstract-mapper');\nvar localUtils = require('../utils');\nvar validateIndex = localUtils.validateIndex;\nvar massageIndexDef = localUtils.massageIndexDef;\nvar massageCreateIndexRequest = require('../../../massageCreateIndexRequest');\n\nfunction upsert(db, docId, diffFun) {\n  return pouchUpsert.upsert.call(db, docId, diffFun);\n}\n\nfunction createIndex(db, requestDef) {\n  requestDef = massageCreateIndexRequest(requestDef);\n  var originalIndexDef = utils.clone(requestDef.index);\n  requestDef.index = massageIndexDef(requestDef.index);\n\n  validateIndex(requestDef.index);\n\n  var md5 = utils.MD5(JSON.stringify(requestDef));\n\n  var viewName = requestDef.name || ('idx-' + md5);\n\n  var ddocName = requestDef.ddoc || ('idx-' + md5);\n  var ddocId = '_design/' + ddocName;\n\n  var hasInvalidLanguage = false;\n  var viewExists = false;\n\n  function updateDdoc(doc) {\n    if (doc._rev && doc.language !== 'query') {\n      hasInvalidLanguage = true;\n    }\n    doc.language = 'query';\n    doc.views = doc.views || {};\n\n    viewExists = !!doc.views[viewName];\n\n    if (viewExists) {\n      return false;\n    }\n\n    doc.views[viewName] = {\n      map: {\n        fields: utils.mergeObjects(requestDef.index.fields)\n      },\n      reduce: '_count',\n      options: {\n        def: originalIndexDef\n      }\n    };\n\n    return doc;\n  }\n\n  log('creating index', ddocId);\n\n  return upsert(db, ddocId, updateDdoc).then(function () {\n    if (hasInvalidLanguage) {\n      throw new Error('invalid language for ddoc with id \"' +\n      ddocId +\n      '\" (should be \"query\")');\n    }\n  }).then(function () {\n    // kick off a build\n    // TODO: abstract-pouchdb-mapreduce should support auto-updating\n    // TODO: should also use update_after, but pouchdb/pouchdb#3415 blocks me\n    var signature = ddocName + '/' + viewName;\n    return abstractMapper.query.call(db, signature, {\n      limit: 0,\n      reduce: false\n    }).then(function () {\n      return {\n        id: ddocId,\n        name: viewName,\n        result: viewExists ? 'exists' : 'created'\n      };\n    });\n  });\n}\n\nmodule.exports = createIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/local/create-index/index.js\n// module id = 45\n// module chunks = 0","'use strict';\n\nvar abstractMapper = require('../abstract-mapper');\nvar upsert = require('../../../abstract-mapreduce/upsert');\n\nfunction deleteIndex(db, index) {\n\n  if (!index.ddoc) {\n    throw new Error('you must supply an index.ddoc when deleting');\n  }\n\n  if (!index.name) {\n    throw new Error('you must supply an index.name when deleting');\n  }\n\n  var docId = index.ddoc;\n  var viewName = index.name;\n\n  function deltaFun (doc) {\n    if (Object.keys(doc.views).length === 1 && doc.views[viewName]) {\n      // only one view in this ddoc, delete the whole ddoc\n      return {_id: docId, _deleted: true};\n    }\n    // more than one view here, just remove the view\n    delete doc.views[viewName];\n    return doc;\n  }\n\n  return upsert(db, docId, deltaFun).then(function () {\n    return abstractMapper.viewCleanup.apply(db);\n  }).then(function () {\n    return {ok: true};\n  });\n}\n\nmodule.exports = deleteIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/local/delete-index/index.js\n// module id = 46\n// module chunks = 0","'use strict';\n\n//\n// Do an in-memory filtering of rows that aren't covered by the index.\n// E.g. if the user is asking for foo=1 and bar=2, but the index\n// only covers \"foo\", then this in-memory filter would take care of\n// \"bar\".\n//\n\nvar isArray = require('is-array');\nvar collate = require('pouchdb-collate').collate;\nvar localUtils = require('../utils');\nvar isCombinationalField = localUtils.isCombinationalField;\nvar getKey = localUtils.getKey;\nvar getValue = localUtils.getValue;\nvar parseField = localUtils.parseField;\nvar utils = require('../../../utils');\nvar getFieldFromDoc = utils.getFieldFromDoc;\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return utils.compare(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields (rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter (doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector (matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector (field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField (docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue (docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues (docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize (docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof(docFieldValue) === 'boolean';\n    case 'number':\n      return typeof(docFieldValue) === 'number';\n    case 'string':\n      return typeof(docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\nmodule.exports = filterInMemoryFields;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/local/find/in-memory-filter.js\n// module id = 47\n// module chunks = 0","'use strict';\n\nvar utils = require('../../../utils');\nvar clone = utils.clone;\nvar getIndexes = require('../get-indexes');\nvar collate = require('pouchdb-collate').collate;\nvar abstractMapper = require('../abstract-mapper');\nvar planQuery = require('./query-planner');\nvar localUtils = require('../utils');\nvar filterInMemoryFields = require('./in-memory-filter');\nvar massageSelector = localUtils.massageSelector;\nvar massageSort = localUtils.massageSort;\nvar getValue = localUtils.getValue;\nvar validateFindRequest = localUtils.validateFindRequest;\nvar validateSort = localUtils.validateSort;\nvar reverseOptions = localUtils.reverseOptions;\nvar filterInclusiveStart = localUtils.filterInclusiveStart;\nvar Promise = utils.Promise;\n\nfunction indexToSignature(index) {\n  // remove '_design/'\n  return index.ddoc.substring(8) + '/' + index.name;\n}\n\nfunction doAllDocs(db, originalOpts) {\n  var opts = clone(originalOpts);\n\n  // CouchDB responds in weird ways when you provide a non-string to _id;\n  // we mimic the behavior for consistency. See issue66 tests for details.\n\n  if (opts.descending) {\n    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n      opts.endkey = '';\n    }\n    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n      opts.limit = 0;\n    }\n  } else {\n    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n      opts.startkey = '';\n    }\n    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n      opts.limit = 0;\n    }\n  }\n  if ('key' in opts && typeof opts.key !== 'string') {\n    opts.limit = 0;\n  }\n\n  return db.allDocs(opts);\n}\n\nfunction find(db, requestDef) {\n\n  if (requestDef.selector) {\n    requestDef.selector = massageSelector(requestDef.selector);\n  }\n  if (requestDef.sort) {\n    requestDef.sort = massageSort(requestDef.sort);\n  }\n\n  validateFindRequest(requestDef);\n\n  return getIndexes(db).then(function (getIndexesRes) {\n\n    var queryPlan = planQuery(requestDef, getIndexesRes.indexes);\n\n    var indexToUse = queryPlan.index;\n\n    validateSort(requestDef, indexToUse);\n\n    var opts = utils.extend(true, {\n      include_docs: true,\n      reduce: false\n    }, queryPlan.queryOpts);\n\n    if ('startkey' in opts && 'endkey' in opts &&\n        collate(opts.startkey, opts.endkey) > 0) {\n      // can't possibly return any results, startkey > endkey\n      return {docs: []};\n    }\n\n    var isDescending = requestDef.sort &&\n      typeof requestDef.sort[0] !== 'string' &&\n      getValue(requestDef.sort[0]) === 'desc';\n\n    if (isDescending) {\n      // either all descending or all ascending\n      opts.descending = true;\n      opts = reverseOptions(opts);\n    }\n\n    if (!queryPlan.inMemoryFields.length) {\n      // no in-memory filtering necessary, so we can let the\n      // database do the limit/skip for us\n      if ('limit' in requestDef) {\n        opts.limit = requestDef.limit;\n      }\n      if ('skip' in requestDef) {\n        opts.skip = requestDef.skip;\n      }\n    }\n\n    return Promise.resolve().then(function () {\n      if (indexToUse.name === '_all_docs') {\n        return doAllDocs(db, opts);\n      } else {\n        var signature = indexToSignature(indexToUse);\n        return abstractMapper.query.call(db, signature, opts);\n      }\n    }).then(function (res) {\n\n      if (opts.inclusive_start === false) {\n        // may have to manually filter the first one,\n        // since couchdb has no true inclusive_start option\n        res.rows = filterInclusiveStart(res.rows, opts.startkey, indexToUse);\n      }\n\n      if (queryPlan.inMemoryFields.length) {\n        // need to filter some stuff in-memory\n        res.rows = filterInMemoryFields(res.rows, requestDef, queryPlan.inMemoryFields);\n      }\n\n      var resp = {\n        docs: res.rows.map(function (row) {\n          var doc = row.doc;\n          if (requestDef.fields) {\n            return utils.pick(doc, requestDef.fields);\n          }\n          return doc;\n        })\n      };\n\n      if (indexToUse.defaultUsed) {\n        resp.warning = 'no matching index found, create an index to optimize query time';\n      }\n\n      return resp;\n    });\n  });\n}\n\nmodule.exports = find;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/local/find/index.js\n// module id = 48\n// module chunks = 0","'use strict';\n\nvar utils = require('../../../utils');\nvar log = utils.log;\nvar localUtils = require('../utils');\nvar getKey = localUtils.getKey;\nvar getUserFields = localUtils.getUserFields;\n\n// couchdb lowest collation value\nvar COLLATE_LO = null;\n\n// couchdb highest collation value (TODO: well not really, but close enough amirite)\nvar COLLATE_HI = {\"\\uffff\": {}};\n\n// couchdb second-lowest collation value\n\nfunction checkFieldInIndex(index, field) {\n  var indexFields = index.def.fields.map(getKey);\n  for (var i = 0, len = indexFields.length; i < len; i++) {\n    var indexField = indexFields[i];\n    if (field === indexField) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// so when you do e.g. $eq/$eq, we can do it entirely in the database.\n// but when you do e.g. $gt/$eq, the first part can be done\n// in the database, but the second part has to be done in-memory,\n// because $gt has forced us to lose precision.\n// so that's what this determines\nfunction userOperatorLosesPrecision(selector, field) {\n  var matcher = selector[field];\n  var userOperator = getKey(matcher);\n\n  return userOperator !== '$eq';\n}\n\n// sort the user fields by their position in the index,\n// if they're in the index\nfunction sortFieldsByIndex(userFields, index) {\n  var indexFields = index.def.fields.map(getKey);\n\n  return userFields.slice().sort(function (a, b) {\n    var aIdx = indexFields.indexOf(a);\n    var bIdx = indexFields.indexOf(b);\n    if (aIdx === -1) {\n      aIdx = Number.MAX_VALUE;\n    }\n    if (bIdx === -1) {\n      bIdx = Number.MAX_VALUE;\n    }\n    return utils.compare(aIdx, bIdx);\n  });\n}\n\n// first pass to try to find fields that will need to be sorted in-memory\nfunction getBasicInMemoryFields(index, selector, userFields) {\n\n  userFields = sortFieldsByIndex(userFields, index);\n\n  // check if any of the user selectors lose precision\n  var needToFilterInMemory = false;\n  for (var i = 0, len = userFields.length; i < len; i++) {\n    var field = userFields[i];\n    if (needToFilterInMemory || !checkFieldInIndex(index, field)) {\n      return userFields.slice(i);\n    }\n    if (i < len - 1 && userOperatorLosesPrecision(selector, field)) {\n      needToFilterInMemory = true;\n    }\n  }\n  return [];\n}\n\nfunction getInMemoryFieldsFromNe(selector) {\n  var fields = [];\n  Object.keys(selector).forEach(function (field) {\n    var matcher = selector[field];\n    Object.keys(matcher).forEach(function (operator) {\n      if (operator === '$ne') {\n        fields.push(field);\n      }\n    });\n  });\n  return fields;\n}\n\nfunction getInMemoryFields(coreInMemoryFields, index, selector, userFields) {\n  var result = utils.flatten(\n    // in-memory fields reported as necessary by the query planner\n    coreInMemoryFields,\n    // combine with another pass that checks for any we may have missed\n    getBasicInMemoryFields(index, selector, userFields),\n    // combine with another pass that checks for $ne's\n    getInMemoryFieldsFromNe(selector)\n  );\n\n  return sortFieldsByIndex(utils.uniq(result), index);\n}\n\n// check that at least one field in the user's query is represented\n// in the index. order matters in the case of sorts\nfunction checkIndexFieldsMatch(indexFields, sortOrder, fields) {\n  if (sortOrder) {\n    // array has to be a strict subarray of index array. furthermore,\n    // the sortOrder fields need to all be represented in the index\n    var sortMatches = utils.oneArrayIsStrictSubArrayOfOther(sortOrder, indexFields);\n    var selectorMatches = utils.oneArrayIsSubArrayOfOther(fields, indexFields);\n\n    return sortMatches && selectorMatches;\n  }\n\n  // all of the user's specified fields still need to be\n  // on the left side of the index array, although the order\n  // doesn't matter\n  return utils.oneSetIsSubArrayOfOther(fields, indexFields);\n}\n\nvar logicalMatchers = ['$eq', '$gt', '$gte', '$lt', '$lte'];\nfunction isNonLogicalMatcher (matcher) {\n  return logicalMatchers.indexOf(matcher) === -1;\n}\n\n// check all the index fields for usages of '$ne'\n// e.g. if the user queries {foo: {$ne: 'foo'}, bar: {$eq: 'bar'}},\n// then we can neither use an index on ['foo'] nor an index on\n// ['foo', 'bar'], but we can use an index on ['bar'] or ['bar', 'foo']\nfunction checkFieldsLogicallySound(indexFields, selector) {\n  var firstField = indexFields[0];\n  var matcher = selector[firstField];\n\n  var hasLogicalOperator = Object.keys(matcher).some(function (matcherKey) {\n    return !(isNonLogicalMatcher(matcherKey));\n  });\n\n  if (!hasLogicalOperator) {\n    return false;\n  }\n\n  var isInvalidNe = Object.keys(matcher).length === 1 &&\n    getKey(matcher) === '$ne';\n\n  return !isInvalidNe;\n}\n\nfunction checkIndexMatches(index, sortOrder, fields, selector) {\n\n  var indexFields = index.def.fields.map(getKey);\n\n  var fieldsMatch = checkIndexFieldsMatch(indexFields, sortOrder, fields);\n\n  if (!fieldsMatch) {\n    return false;\n  }\n\n  return checkFieldsLogicallySound(indexFields, selector);\n}\n\n//\n// the algorithm is very simple:\n// take all the fields the user supplies, and if those fields\n// are a strict subset of the fields in some index,\n// then use that index\n//\n//\nfunction findMatchingIndexes(selector, userFields, sortOrder, indexes) {\n\n  return indexes.reduce(function (res, index) {\n    var indexMatches = checkIndexMatches(index, sortOrder, userFields, selector);\n    if (indexMatches) {\n      res.push(index);\n    }\n    return res;\n  }, []);\n}\n\n// find the best index, i.e. the one that matches the most fields\n// in the user's query\nfunction findBestMatchingIndex(selector, userFields, sortOrder, indexes) {\n\n  var matchingIndexes = findMatchingIndexes(selector, userFields, sortOrder, indexes);\n\n  if (matchingIndexes.length === 0) {\n    //return `all_docs` as a default index;\n    //I'm assuming that _all_docs is always first\n    var defaultIndex = indexes[0];\n    defaultIndex.defaultUsed = true;\n    return defaultIndex;\n  }\n  if (matchingIndexes.length === 1) {\n    return matchingIndexes[0];\n  }\n\n  var userFieldsMap = utils.arrayToObject(userFields);\n\n  function scoreIndex(index) {\n    var indexFields = index.def.fields.map(getKey);\n    var score = 0;\n    for (var i = 0, len = indexFields.length; i < len; i++) {\n      var indexField = indexFields[i];\n      if (userFieldsMap[indexField]) {\n        score++;\n      }\n    }\n    return score;\n  }\n\n  return utils.max(matchingIndexes, scoreIndex);\n}\n\nfunction getSingleFieldQueryOptsFor(userOperator, userValue) {\n  switch (userOperator) {\n    case '$eq':\n      return {key: userValue};\n    case '$lte':\n      return {endkey: userValue};\n    case '$gte':\n      return {startkey: userValue};\n    case '$lt':\n      return {\n        endkey: userValue,\n        inclusive_end: false\n      };\n    case '$gt':\n      return {\n        startkey: userValue,\n        inclusive_start: false\n      };\n  }\n}\n\nfunction getSingleFieldCoreQueryPlan(selector, index) {\n  var field = getKey(index.def.fields[0]);\n  var matcher = selector[field];\n  var inMemoryFields = [];\n\n  var userOperators = Object.keys(matcher);\n\n  var combinedOpts;\n\n  userOperators.forEach(function (userOperator) {\n\n    if (isNonLogicalMatcher(userOperator)) {\n      inMemoryFields.push(field);\n      return;\n    }\n\n    var userValue = matcher[userOperator];\n\n    var newQueryOpts = getSingleFieldQueryOptsFor(userOperator, userValue);\n\n    if (combinedOpts) {\n      combinedOpts = utils.mergeObjects([combinedOpts, newQueryOpts]);\n    } else {\n      combinedOpts = newQueryOpts;\n    }\n  });\n\n  return {\n    queryOpts: combinedOpts,\n    inMemoryFields: inMemoryFields\n  };\n}\n\nfunction getMultiFieldCoreQueryPlan(userOperator, userValue) {\n  switch (userOperator) {\n    case '$eq':\n      return {\n        startkey: userValue,\n        endkey: userValue\n      };\n    case '$lte':\n      return {\n        endkey: userValue\n      };\n    case '$gte':\n      return {\n        startkey: userValue\n      };\n    case '$lt':\n      return {\n        endkey: userValue,\n        inclusive_end: false\n      };\n    case '$gt':\n      return {\n        startkey: userValue,\n        inclusive_start: false\n      };\n  }\n}\n\nfunction getMultiFieldQueryOpts(selector, index) {\n\n  var indexFields = index.def.fields.map(getKey);\n\n  var inMemoryFields = [];\n  var startkey = [];\n  var endkey = [];\n  var inclusiveStart;\n  var inclusiveEnd;\n\n\n  function finish(i) {\n\n    if (inclusiveStart !== false) {\n      startkey.push(COLLATE_LO);\n    }\n    if (inclusiveEnd !== false) {\n      endkey.push(COLLATE_HI);\n    }\n    // keep track of the fields where we lost specificity,\n    // and therefore need to filter in-memory\n    inMemoryFields = indexFields.slice(i);\n  }\n\n  for (var i = 0, len = indexFields.length; i < len; i++) {\n    var indexField = indexFields[i];\n\n    var matcher = selector[indexField];\n\n    if (!matcher) { // fewer fields in user query than in index\n      finish(i);\n      break;\n    } else if (i > 0) {\n      if ('$ne' in matcher) { // unusable $ne index\n        finish(i);\n        break;\n      }\n      var usingGtlt = (\n        '$gt' in matcher || '$gte' in matcher ||\n        '$lt' in matcher || '$lte' in matcher);\n      var previousKeys = Object.keys(selector[indexFields[i - 1]]);\n      var previousWasEq = utils.arrayEquals(previousKeys, ['$eq']);\n      var previousWasSame = utils.arrayEquals(previousKeys, Object.keys(matcher));\n      var gtltLostSpecificity = usingGtlt && !previousWasEq && !previousWasSame;\n      if (gtltLostSpecificity) {\n        finish(i);\n        break;\n      }\n    }\n\n    var userOperators = Object.keys(matcher);\n\n    var combinedOpts = null;\n\n    for (var j = 0; j < userOperators.length; j++) {\n      var userOperator = userOperators[j];\n      var userValue = matcher[userOperator];\n\n      var newOpts = getMultiFieldCoreQueryPlan(userOperator, userValue);\n\n      if (combinedOpts) {\n        combinedOpts = utils.mergeObjects([combinedOpts, newOpts]);\n      } else {\n        combinedOpts = newOpts;\n      }\n    }\n\n    startkey.push('startkey' in combinedOpts ? combinedOpts.startkey : COLLATE_LO);\n    endkey.push('endkey' in combinedOpts ? combinedOpts.endkey : COLLATE_HI);\n    if ('inclusive_start' in combinedOpts) {\n      inclusiveStart = combinedOpts.inclusive_start;\n    }\n    if ('inclusive_end' in combinedOpts) {\n      inclusiveEnd = combinedOpts.inclusive_end;\n    }\n  }\n\n  var res = {\n    startkey: startkey,\n    endkey: endkey\n  };\n\n  if (typeof inclusiveStart !== 'undefined') {\n    res.inclusive_start = inclusiveStart;\n  }\n  if (typeof inclusiveEnd !== 'undefined') {\n    res.inclusive_end = inclusiveEnd;\n  }\n\n  return {\n    queryOpts: res,\n    inMemoryFields: inMemoryFields\n  };\n}\n\nfunction getDefaultQueryPlan () {\n  return {\n    queryOpts: {startkey: null},\n    //getInMemoryFields will do the work here later\n    inMemoryFields: []\n  };\n}\n\nfunction getCoreQueryPlan(selector, index) {\n  if (index.defaultUsed) {\n    return getDefaultQueryPlan(selector, index);\n  }\n\n  if (index.def.fields.length === 1) {\n    // one field in index, so the value was indexed as a singleton\n    return getSingleFieldCoreQueryPlan(selector, index);\n  }\n  // else index has multiple fields, so the value was indexed as an array\n  return getMultiFieldQueryOpts(selector, index);\n}\n\nfunction planQuery(request, indexes) {\n\n  log('planning query', request);\n\n  var selector = request.selector;\n  var sort = request.sort;\n\n  var userFieldsRes = getUserFields(selector, sort);\n\n  var userFields = userFieldsRes.fields;\n  var sortOrder = userFieldsRes.sortOrder;\n  var index = findBestMatchingIndex(selector, userFields, sortOrder, indexes);\n\n  var coreQueryPlan = getCoreQueryPlan(selector, index);\n  var queryOpts = coreQueryPlan.queryOpts;\n  var coreInMemoryFields = coreQueryPlan.inMemoryFields;\n\n  var inMemoryFields = getInMemoryFields(coreInMemoryFields, index, selector, userFields);\n\n  var res = {\n    queryOpts: queryOpts,\n    index: index,\n    inMemoryFields: inMemoryFields\n  };\n  log('query plan', res);\n  return res;\n}\n\nmodule.exports = planQuery;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/local/find/query-planner.js\n// module id = 49\n// module chunks = 0","'use strict';\n\nvar utils = require('../../utils');\nvar callbackify = utils.callbackify;\n\nexports.createIndex = callbackify(require('./create-index'));\nexports.find = callbackify(require('./find'));\nexports.getIndexes = callbackify(require('./get-indexes'));\nexports.deleteIndex = callbackify(require('./delete-index'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/adapters/local/index.js\n// module id = 50\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\n\nvar httpIndexes = require('./adapters/http');\nvar localIndexes = require('./adapters/local');\n\nvar plugin = {};\nplugin.createIndex = utils.toPromise(function (requestDef, callback) {\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide an index to create'));\n  }\n\n  var adapter = this.type() === 'http' ? httpIndexes : localIndexes;\n\n  adapter.createIndex(this, requestDef, callback);\n});\n\nplugin.find = utils.toPromise(function (requestDef, callback) {\n\n  if (typeof callback === 'undefined') {\n    callback = requestDef;\n    requestDef = undefined;\n  }\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide search parameters to find()'));\n  }\n\n  var adapter = this.type() === 'http' ? httpIndexes : localIndexes;\n\n  adapter.find(this, requestDef, callback);\n});\n\nplugin.getIndexes = utils.toPromise(function (callback) {\n\n  var adapter = this.type() === 'http' ? httpIndexes : localIndexes;\n\n  adapter.getIndexes(this, callback);\n});\n\nplugin.deleteIndex = utils.toPromise(function (indexDef, callback) {\n\n  if (typeof indexDef !== 'object') {\n    return callback(new Error('you must provide an index to delete'));\n  }\n\n  var adapter = this.type() === 'http' ? httpIndexes : localIndexes;\n\n  adapter.deleteIndex(this, indexDef, callback);\n});\n\nmodule.exports = plugin;\n\n/* istanbul ignore next */\nif (typeof window !== 'undefined' && window.PouchDB) {\n  window.PouchDB.plugin(plugin);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/index.js\n// module id = 51\n// module chunks = 0","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/~/debug/src/browser.js\n// module id = 52\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/~/debug/src/debug.js\n// module id = 53\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/~/ms/index.js\n// module id = 54\n// module chunks = 0","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar lie = _interopDefault(require('lie'));\n\n/* istanbul ignore next */\nvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\nmodule.exports = PouchPromise;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-upsert/~/pouchdb-promise/lib/index.js\n// module id = 56\n// module chunks = 0","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar lie = _interopDefault(require('lie'));\nvar getArguments = _interopDefault(require('argsarray'));\nvar debug = _interopDefault(require('debug'));\nvar events = require('events');\nvar inherits = _interopDefault(require('inherits'));\nvar nextTick = _interopDefault(require('immediate'));\nvar scopedEval = _interopDefault(require('scope-eval'));\nvar Md5 = _interopDefault(require('spark-md5'));\nvar vuvuzela = _interopDefault(require('vuvuzela'));\n\n/* istanbul ignore next */\nvar PouchPromise$1 = typeof Promise === 'function' ? Promise : lie;\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new PouchPromise$1(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nvar log = debug('pouchdb:api');\n\nfunction adapterFun(name, callback) {\n  function logApiCall(self, name, args) {\n    /* istanbul ignore if */\n    if (log.enabled) {\n      var logArgs = [self.name, name];\n      for (var i = 0; i < args.length - 1; i++) {\n        logArgs.push(args[i]);\n      }\n      log.apply(null, logArgs);\n\n      // override the callback itself to log the response\n      var origCallback = args[args.length - 1];\n      args[args.length - 1] = function (err, res) {\n        var responseArgs = [self.name, name];\n        responseArgs = responseArgs.concat(\n          err ? ['error', err] : ['success', res]\n        );\n        log.apply(null, responseArgs);\n        origCallback(err, res);\n      };\n    }\n  }\n\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return PouchPromise$1.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return PouchPromise$1.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new PouchPromise$1(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n/* global Map,Set */\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\ninherits(Changes, events.EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  events.EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        nextTick(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  events.EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (console !== 'undefined' && method in console) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if(max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar assign$1 = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\nfunction f() {}\n\nvar hasName = f.name;\nvar res;\n\n// We dont run coverage in IE\n/* istanbul ignore else */\nif (hasName) {\n  res = function (fun) {\n    return fun.name;\n  };\n} else {\n  res = function (fun) {\n    return fun.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n  };\n}\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 events.EventEmitter.listenerCount(ee, type);\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* jshint maxlen: false */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new PouchPromise$1(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\n// BEGIN Math.uuid.js\n\n/*!\nMath.uuid.js (v1.4)\nhttp://www.broofa.com\nmailto:robert@broofa.com\n\nCopyright (c) 2010 Robert Kieffer\nDual licensed under the MIT and GPL licenses.\n*/\n\n/*\n * Generate a random uuid.\n *\n * USAGE: Math.uuid(length, radix)\n *   length - the desired number of characters\n *   radix  - the number of allowable values for each character.\n *\n * EXAMPLES:\n *   // No arguments  - returns RFC4122, version 4 ID\n *   >>> Math.uuid()\n *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n *\n *   // One argument - returns ID of the specified length\n *   >>> Math.uuid(15)     // 15 character ID (default base=62)\n *   \"VcydxgltxrVZSTV\"\n *\n *   // Two arguments - returns ID of the specified length, and radix. \n *   // (Radix must be <= 62)\n *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\n *   \"01001010\"\n *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\n *   \"47473046\"\n *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\n *   \"098F4D35\"\n */\nvar chars = (\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n  'abcdefghijklmnopqrstuvwxyz'\n).split('');\nfunction getValue(radix) {\n  return 0 | Math.random() * radix;\n}\nfunction uuid(len, radix) {\n  radix = radix || chars.length;\n  var out = '';\n  var i = -1;\n\n  if (len) {\n    // Compact form\n    while (++i < len) {\n      out += chars[getValue(radix)];\n    }\n    return out;\n  }\n    // rfc4122, version 4 form\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\n    // per rfc4122, sec. 4.1.5\n  while (++i < 36) {\n    switch (i) {\n      case 8:\n      case 13:\n      case 18:\n      case 23:\n        out += '-';\n        break;\n      case 19:\n        out += chars[(getValue(16) & 0x3) | 0x8];\n        break;\n      default:\n        out += chars[getValue(16)];\n    }\n  }\n\n  return out;\n}\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var maybeStem = {};\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var numStemmed = Math.max(0, stemmed.length - depth);\n    var stemmedNode = {\n      pos: path.pos + numStemmed,\n      ids: pathToTree(stemmed, numStemmed)\n    };\n\n    for (var s = 0; s < numStemmed; s++) {\n      var rev = (path.pos + s) + '-' + stemmed[s].id;\n      maybeStem[rev] = true;\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, stemmedNode, true).tree;\n    } else {\n      result = [stemmedNode];\n    }\n  }\n\n  traverseRevTree(result, function (isLeaf, pos, revHash) {\n    // some revisions may have been removed in a branch but not in another\n    delete maybeStem[pos + '-' + revHash];\n  });\n\n  return {\n    tree: result,\n    revs: Object.keys(maybeStem)\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\nfunction evalFilter(input) {\n  return scopedEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopedEval(code, {});\n}\n\ninherits(Changes$2, events.EventEmitter);\n\nfunction tryCatchInChangeListener(self, change) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$2(db, opts, callback) {\n  events.EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change);\n  };\n\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.doChanges(opts);\n      }\n    });\n  } else {\n    self.doChanges(opts);\n  }\n}\nChanges$2.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$2.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n\n    if (this.db.type() !== 'http' && !opts.doc_ids) {\n      return this.filterChanges(opts);\n    }\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\nChanges$2.prototype.filterChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    this.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      self.doChanges(opts);\n    });\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    if (!filterName) {\n      return self.doChanges(opts);\n    }\n    this.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      self.doChanges(opts);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      callback(err || results[0]);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev});\n    }\n    return rev;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysQuery(api, opts, callback) {\n  var keys =  ('limit' in opts) ?\n      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  if (opts.descending) {\n    keys.reverse();\n  }\n  if (!keys.length) {\n    return api._allDocs({limit: 0}, callback);\n  }\n  var finalResults = {\n    offset: opts.skip\n  };\n  return PouchPromise$1.all(keys.map(function (key) {\n    var subOpts = assign$1({key: key, deleted: 'ok'}, opts);\n    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n      delete subOpts[optKey];\n    });\n    return new PouchPromise$1(function (resolve, reject) {\n      api._allDocs(subOpts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        finalResults.total_rows = res.total_rows;\n        resolve(res.rows[0] || {key: key, error: 'not_found'});\n      });\n    });\n  })).then(function (results) {\n    finalResults.rows = results;\n    return finalResults;\n  });\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + 'is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, events.EventEmitter);\n\nfunction AbstractPouchDB() {\n  events.EventEmitter.call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  if (typeof this._put === 'function' && opts.new_edits !== false) {\n    this._put(doc, opts, cb);\n  } else {\n    this.bulkDocs({docs: [doc]}, opts, yankError(cb));\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev) {\n      addToMissing(id, rev);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev) {\n      if (height[rev] > maxHeight) {\n        candidates.push(rev);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n        revs.push(rev);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    PouchPromise$1.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev) {\n            return rev.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev) {\n          pos--;\n          return {\n            rev: pos + '-' + rev.id,\n            status: rev.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (this.type() !== 'http') {\n      return allDocsKeysQuery(this, opts, callback);\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes$2(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && self.type() !== 'http');\n    info.adapter = self.type();\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && adapter.type() !== 'http') {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (adapter.type() !== 'http') {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (self.type() === 'http') {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    PouchPromise$1.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue$1() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue$1.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue$1.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue$1.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue$1.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z\\-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB$5.adapters;\n  var preferredAdapters = PouchDB$5.preferredAdapters;\n  var prefix = PouchDB$5.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  var destructionListeners = self.constructor._destructionListeners;\n\n  function onDestroyed() {\n    self.removeListener('closed', onClosed);\n    self.constructor.emit('destroyed', self.name);\n  }\n\n  function onConstructorDestroyed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.removeListener('closed', onClosed);\n    self.emit('destroyed');\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    destructionListeners.delete(self.name);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n\n  // in setup.js, the constructor is primed to listen for destroy events\n  if (!destructionListeners.has(self.name)) {\n    destructionListeners.set(self.name, []);\n  }\n  destructionListeners.get(self.name).push(onConstructorDestroyed);\n}\n\ninherits(PouchDB$5, AbstractPouchDB);\nfunction PouchDB$5(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB$5)) {\n    return new PouchDB$5(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB$5.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  debug('pouchdb:adapter')('Picked adapter: ' + opts.adapter);\n\n  if (!PouchDB$5.adapters[opts.adapter] ||\n      !PouchDB$5.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue$1();\n\n  self.adapter = opts.adapter;\n\n  PouchDB$5.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB$5.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB$5.debug = debug;\n\nPouchDB$5.adapters = {};\nPouchDB$5.preferredAdapters = [];\n\nPouchDB$5.prefix = '_pouch_';\n\nvar eventEmitter = new events.EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(events.EventEmitter.prototype).forEach(function (key) {\n    if (typeof events.EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    destructListeners.get(name).forEach(function (callback) {\n      callback();\n    });\n    destructListeners.delete(name);\n  });\n}\n\nsetUpEventEmitter(PouchDB$5);\n\nPouchDB$5.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB$5.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB$5.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB$5.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB$5);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0){\n    throw new Error('Invalid plugin: got \\\"' + obj + '\\\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB$5.prototype[id] = obj[id];\n    });\n  }\n  return PouchDB$5;\n};\n\nPouchDB$5.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = assign$1({}, PouchAlt.__defaults, opts);\n    PouchDB$5.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB$5);\n\n  PouchAlt.preferredAdapters = PouchDB$5.preferredAdapters.slice();\n  Object.keys(PouchDB$5).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB$5[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = assign$1({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\n// managed automatically by set-version.js\nvar version = \"6.1.1\";\n\nPouchDB$5.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev) {\n  if (!/^\\d+\\-./.test(rev)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev.indexOf('-');\n  var left = rev.substring(0, idx);\n  var right = rev.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = uuid(32, 16).toLowerCase();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob$$1, start, end) {\n  if (blob$$1.webkitSlice) {\n    return blob$$1.webkitSlice(start, end);\n  }\n  return blob$$1.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob$$1, start, end, callback) {\n  if (start > 0 || end < blob$$1.size) {\n    // only slice blob if we really need to\n    blob$$1 = sliceBlob(blob$$1, start, end);\n  }\n  readAsArrayBuffer(blob$$1, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && (((previouslyDeleted && deleted) ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return PouchPromise$1.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return PouchPromise$1.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new PouchPromise$1(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = assign$1(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler$$1 = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler$$1.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor), or batchSize is -1 (i.e. batchSize unlimited,\n  //    not really clear the user wants a batched approach where the entire DB is read into memory,\n  //    perhaps they are filtering on a per-doc basis)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n  var keyRangeError = keyRange && keyRange.error;\n  if (keyRangeError && !(keyRangeError.name === \"DataError\" &&\n      keyRangeError.code === 0)) {\n    // DataError with error code 0 indicates start is less than end, so\n    // can just do an empty query. Else need to throw\n    return callback(createError(IDB_ERROR,\n      keyRangeError.name, keyRangeError.message));\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result);\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (opts.deleted === 'ok') {\n      results.push(row);\n      // deleted docs are okay with \"keys\" requests\n      if (deleted) {\n        row.value.deleted = true;\n        row.doc = null;\n      } else if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    } else if (!deleted && skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    callback(null, {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    });\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new PouchPromise$1(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n// before calling the next one. This works around IE/Edge race conditions in IDB.\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      nextTick(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler$$1.addListener(dbName, id, api, opts);\n    changesHandler$$1.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler$$1.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n  var returnDocs;\n  if ('return_docs' in opts) {\n    returnDocs = opts.return_docs;\n  } else if ('returnDocs' in opts) {\n    // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n    returnDocs = opts.returnDocs;\n  } else {\n    returnDocs = true;\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return opts.complete(filtered);\n      }\n\n      if (filtered) {\n        numResults++;\n        if (returnDocs) {\n          results.push(change);\n        }\n        // process the attachment immediately\n        // for the benefit of live listeners\n        if (opts.attachments && opts.include_docs) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              opts.onChange(change);\n            });\n          });\n        } else {\n          opts.onChange(change);\n        }\n      }\n    }\n\n    function onBatchDone() {\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        processMetadataAndWinningDoc(metadata, winningDoc);\n      }\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev;\n      if(!opts.rev) {\n        rev = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev = pos + '-' + revHash;\n        if (revs.indexOf(rev) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler$$1.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return nextTick(function () {\n      callback(null, api);\n    });\n  }\n\n  var req;\n  if (opts.storage) {\n    req = tryStorageOption(dbName, opts.storage);\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // some outdated implementations of IDB that appear on Samsung\n  // and HTC Android devices <4.4 are missing IDBKeyRange\n  return !isSafari && typeof indexedDB !== 'undefined' &&\n    typeof IDBKeyRange !== 'undefined';\n};\n\nfunction tryStorageOption(dbName, storage) {\n  try { // option only available in Firefox 26+\n    return indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: storage\n    });\n  } catch(err) {\n      return indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n}\n\nvar IDBPouch = function (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n};\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nvar DOC_STORE$1 = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE$1 = quote('by-sequence');\n// Where we store attachments\nvar ATTACH_STORE$1 = quote('attach-store');\nvar LOCAL_STORE$1 = quote('local-store');\nvar META_STORE$1 = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs$1(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new ExportedSet();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    guardedConsole('error', 'WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^\\(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(createError(WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = typeof navigator !== 'undefined' &&\n    /Android/.test(navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    websqlChanges.notify(api._name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function dataWritten(tx, seq) {\n      var id = docInfo.metadata.id;\n\n      var revsToCompact = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n      }\n      if (revsToCompact.length) {\n        compactRevs$1(revsToCompact, id, tx);\n      }\n\n      docInfo.metadata.seq = seq;\n      var rev = docInfo.metadata.rev;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE$1 +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE$1 +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = safeJsonStringify(docInfo.metadata);\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev$$1, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: rev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n                results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, websqlError(callback), complete);\n  });\n}\n\nvar cachedDatabases = new ExportedMap();\n\n// openDatabase passed in through opts (e.g. for node-websql)\nfunction openDatabaseWithOpts(opts) {\n  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n}\n\nfunction openDBSafely(opts) {\n  try {\n    return {\n      db: openDatabaseWithOpts(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction openDB$1(opts) {\n  var cachedResult = cachedDatabases.get(opts.name);\n  if (!cachedResult) {\n    cachedResult = openDBSafely(opts);\n    cachedDatabases.set(opts.name, cachedResult);\n  }\n  return cachedResult;\n}\n\nvar websqlChanges = new Changes();\n\nfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n      doc._attachments[att] = assign$1(\n        pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE$1 + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE$1 + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE$1 + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n  BY_SEQ_STORE$1 + '.json AS data, ' +\n  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n  DOC_STORE$1 + '.json AS metadata';\n\nfunction WebSqlPouch$1(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._name = opts.name;\n\n  // extend the options here, because sqlite plugin has a ton of options\n  // and they are constantly changing, so it's more prudent to allow anything\n  var websqlOpts = assign$1({}, opts, {\n    version: POUCH_VERSION,\n    description: opts.name,\n    size: size\n  });\n  var openDBResult = openDB$1(websqlOpts);\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE$1 + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n        BY_SEQ_STORE$1 + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n        DOC_STORE$1 + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n            [DOC_STORE$1, BY_SEQ_STORE$1],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE$1 + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE$1 + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = uuid();\n            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION$1;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n            ADAPTER_VERSION$1);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  setup();\n\n  function getMaxSeq(tx, callback) {\n    var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n    tx.executeSql(sql, [], function (tx, res) {\n      var updateSeq = res.rows.item(0).seq || 0;\n      callback(updateSeq);\n    });\n  }\n\n  function countDocs(tx, callback) {\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n      [DOC_STORE$1, BY_SEQ_STORE$1],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE$1 + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      callback(result.rows.item(0).num);\n    });\n  }\n\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    var seq;\n    var docCount;\n    db.readTransaction(function (tx) {\n      getMaxSeq(tx, function (theSeq) {\n        seq = theSeq;\n      });\n      countDocs(tx, function (theDocCount) {\n        docCount = theDocCount;\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: seq,\n        websql_encoding: encoding\n      });\n    });\n  };\n\n  api._bulkDocs = function (req, reqOpts, callback) {\n    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n  };\n\n  function latest$$1(tx, id, rev, callback, finish) {\n    var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n    var sqlArgs = [id];\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var err = createError(MISSING_DOC, 'missing');\n        return finish(err);\n      }\n      var item = results.rows.item(0);\n      var metadata = safeJsonParse(item.metadata);\n      callback(latest(rev, metadata));\n    });\n  }\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, assign$1({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish(err) {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n\n    if(!opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n      sqlArgs = [id];\n    } else if (opts.latest) {\n      latest$$1(tx, id, opts.rev, function (latestRev) {\n        opts.latest = false;\n        opts.rev = latestRev;\n        api._get(id, opts, callback);\n      }, finish);\n      return;\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    }\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var missingErr = createError(MISSING_DOC, 'missing');\n        return finish(missingErr);\n      }\n      var item = results.rows.item(0);\n      metadata = safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        var deletedErr = createError(MISSING_DOC, 'deleted');\n        return finish(deletedErr);\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n\n    var sqlArgs = [];\n    var criteria = [];\n\n    if (key !== false) {\n      criteria.push(DOC_STORE$1 + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE$1 + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (opts.deleted !== 'ok') {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n      // count the docs in parallel to other operations\n      countDocs(tx, function (docCount) {\n        totalRows = docCount;\n      });\n\n      if (limit === 0) {\n        return;\n      }\n\n      // do a single query to fetch the documents\n      var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        criteria,\n        DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n        );\n      sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        for (var i = 0, l = result.rows.length; i < l; i++) {\n          var item = result.rows.item(i);\n          var metadata = safeJsonParse(item.metadata);\n          var id = metadata.id;\n          var data = unstringifyDoc(item.data, id, item.rev);\n          var winningRev$$1 = data._rev;\n          var doc = {\n            id: id,\n            key: id,\n            value: {rev: winningRev$$1}\n          };\n          if (opts.include_docs) {\n            doc.doc = data;\n            doc.doc._rev = winningRev$$1;\n            if (opts.conflicts) {\n              var conflicts = collectConflicts(metadata);\n              if (conflicts.length) {\n                doc.doc._conflicts = conflicts;\n              }\n            }\n            fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n          }\n          if (item.deleted) {\n            if (opts.deleted === 'ok') {\n              doc.value.deleted = true;\n              doc.doc = null;\n            } else {\n              continue;\n            }\n          }\n          results.push(doc);\n        }\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      });\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + uuid();\n      websqlChanges.addListener(api._name, id, api, opts);\n      websqlChanges.notify(api._name);\n      return {\n        cancel: function () {\n          websqlChanges.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE$1 + '.json AS metadata, ' +\n        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\n      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\n      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBluffer(data, type);\n      } else {\n        res = thisBtoa(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(createError(MISSING_DOC));\n        } else {\n          var data = safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev = pos + '-' + revHash;\n          if (revs.indexOf(rev) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs$1(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(createError(MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(createError(REV_CONFLICT));\n        }\n      }, function () {\n        callback(createError(REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(createError(MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    websqlChanges.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nfunction canOpenTestDB() {\n  try {\n    openDatabase('_pouch_validate_websql', 1, '', 1);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n// https://github.com/pouchdb/pouchdb/issues/5079)\n// This has been fixed in latest WebKit, so we try to detect it here.\nfunction isValidWebSQL() {\n  // WKWebView UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n  // Chrome for iOS UA:\n  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n  //   Mobile/9B206 Safari/7534.48.3\n  // Firefox for iOS UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\n  // indexedDB is null on some UIWebViews and undefined in others\n  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n    // definitely not WKWebView, avoid creating an unnecessary database\n    return true;\n  }\n  // Cache the result in LocalStorage. Reason we do this is because if we\n  // call openDatabase() too many times, Safari craps out in SauceLabs and\n  // starts throwing DOM Exception 14s.\n  var hasLS = hasLocalStorage();\n  // Include user agent in the hash, so that if Safari is upgraded, we don't\n  // continually think it's broken.\n  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n  if (hasLS && localStorage[localStorageKey]) {\n    return localStorage[localStorageKey] === '1';\n  }\n  var openedTestDB = canOpenTestDB();\n  if (hasLS) {\n    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n  }\n  return openedTestDB;\n}\n\nfunction valid() {\n  if (typeof openDatabase !== 'function') {\n    return false;\n  }\n  return isValidWebSQL();\n}\n\nfunction openDB(name, version, description, size) {\n  // Traditional WebSQL API\n  return openDatabase(name, version, description, size);\n}\n\nfunction WebSQLPouch(opts, callback) {\n  var _opts = assign$1({\n    websql: openDB\n  }, opts);\n\n  WebSqlPouch$1.call(this, _opts, callback);\n}\n\nWebSQLPouch.valid = valid;\n\nWebSQLPouch.use_prefix = true;\n\nvar WebSqlPouch = function (PouchDB) {\n  PouchDB.adapter('websql', WebSQLPouch, true);\n};\n\n/* global fetch */\n/* global Headers */\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new PouchPromise$1(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  PouchPromise$1.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function (response) {\n    wrappedPromise.resolve(response);\n  }).catch(function (error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body &&\n      options.processData &&\n      typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function (key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function () {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function (fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function (result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      result.status = response.statusCode;\n      callback(result);\n    }\n  }).catch(function (error) {\n    if (!error) {\n      // this happens when the listener is canceled\n      error = new Error('canceled');\n    }\n    callback(error);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer;\n  var timedout = false;\n\n  var abortReq = function () {\n    xhr.abort();\n    cleanUp();\n  };\n\n  var timeoutReq = function () {\n    timedout = true;\n    xhr.abort();\n    cleanUp();\n  };\n\n  var ret = {abort: abortReq};\n\n  var cleanUp = function () {\n    clearTimeout(timer);\n    ret.abort = function () {};\n    if (xhr) {\n      xhr.onprogress = undefined;\n      if (xhr.upload) {\n        xhr.upload.onprogress = undefined;\n      }\n      xhr.onreadystatechange = undefined;\n      xhr = undefined;\n    }\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  try {\n    xhr.open(options.method, options.url);\n  } catch (exception) {\n    return callback(new Error(exception.name || 'Url is invalid'));\n  }\n\n  xhr.withCredentials = ('withCredentials' in options) ?\n    options.withCredentials : true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(timeoutReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      if(xhr.readyState !== 4) {\n        timer = setTimeout(timeoutReq, options.timeout);\n      }\n    };\n    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      if (timedout) {\n        err = new Error('ETIMEDOUT');\n        err.code = 'ETIMEDOUT';\n      } else if (typeof xhr.response === 'string') {\n        try {\n          err = JSON.parse(xhr.response);\n        } catch(e) {}\n      }\n      err.status = xhr.status;\n      callback(err);\n    }\n    cleanUp();\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return ret;\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nfunction ajax$1(options, callback) {\n  if (!false && (hasXhr || options.xhr)) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n}\n\n// the blob already has a type; do nothing\nvar res$2 = function () {};\n\nfunction defaultBody() {\n  return '';\n}\n\nfunction ajaxCore$1(options, callback) {\n\n  options = clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = assign$1(defaultOptions, options);\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && options.json && typeof obj === 'string') {\n      /* istanbul ignore next */\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      res$2(obj, resp);\n    }\n    cb(null, obj, resp);\n  }\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return ajax$1(options, function (err, response, body) {\n\n    if (err) {\n      return callback(generateErrorFromResponse(err));\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nfunction ajax(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  var ua = (navigator && navigator.userAgent) ?\n    navigator.userAgent.toLowerCase() : '';\n\n  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n  var isIE = ua.indexOf('msie') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n\n  // it appears the new version of safari also caches GETs,\n  // see https://github.com/pouchdb/pouchdb/issues/5010\n  var shouldCacheBust = (isSafari ||\n    ((isIE || isEdge) && opts.method === 'GET'));\n\n  var cache = 'cache' in opts ? opts.cache : true;\n\n  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\n  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajaxCore$1(opts, callback);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\nfunction pool(promiseFactories, limit) {\n  return new PouchPromise$1(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\n\nvar supportsBulkGetMap = {};\n\nvar log$1 = debug('pouchdb:http');\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var atts = row.doc && row.doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$2(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return PouchPromise$1.resolve();\n  }\n\n  return PouchPromise$1.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new PouchPromise$1(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    name = opts.prefix + encodeURIComponent(dbName);\n  }\n\n  // Prase the URI into all its little bits\n  var uri = parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var str = nAuth.username + ':' + nAuth.password;\n    var token = thisBtoa(unescape(encodeURIComponent(str)));\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  // Not strictly necessary, but we do this because numerous tests\n  // rely on swapping ajax in and out.\n  api._ajax = ajax;\n\n  function ajax$$1(userOpts, options, callback) {\n    var reqAjax = userOpts.ajax || {};\n    var reqOpts = assign$1(clone(ajaxOpts), reqAjax, options);\n    log$1(reqOpts.method + ' ' + reqOpts.url);\n    return api._ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new PouchPromise$1(function (resolve, reject) {\n      ajax$$1(userOpts, opts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return PouchPromise$1.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n      } else {\n        return PouchPromise$1.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return PouchPromise$1.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  nextTick(function () {\n    callback(null, api);\n  });\n\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ajax$$1({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid$$1 = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  api.request = adapterFun$$1('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax$$1({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax$$1(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      ajax$$1(opts, {\n        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, cb);\n    }\n\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'latest']);\n        subOpts.ajax = ajaxOpts;\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        /* istanbul ignore else */\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      /* istanbul ignore next */\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      ajax$$1({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + paramsToStr(params))\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetch(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob$$1) {\n          if (opts.binary) {\n            return blob$$1;\n          }\n          return new PouchPromise$1(function (resolve) {\n            blobToBase64(blob$$1, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetch(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return PouchPromise$1.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return PouchPromise$1.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(callback);\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax$$1(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun$$1('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax$$1(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun$$1('removeAttachment', function (docId, attachmentId, rev,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n\n    ajax$$1({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun$$1('putAttachment', function (docId, attachmentId, rev, blob$$1,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob$$1;\n      blob$$1 = rev;\n      rev = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev) {\n      url += '?rev=' + rev;\n    }\n\n    if (typeof blob$$1 === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob$$1);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob$$1 = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob$$1,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax$$1({}, opts, callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return PouchPromise$1.all(req.docs.map(preprocessAttachments$2));\n    }).then(function () {\n      // Update/create the documents\n      ajax$$1(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        timeout: opts.timeout,\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$2(doc);\n    }).then(function () {\n      // Update/create the document\n      ajax$$1(opts, {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)),\n        body: doc\n      }, function (err, result) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, result);\n      });\n    }).catch(callback);\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + paramStr),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n    opts.timeout = ('timeout' in opts) ? opts.timeout :\n      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n      30 * 1000;\n\n    // We give a 5 second buffer for CouchDB changes to respond with\n    // an ok timeout (if a timeout it set)\n    var params = opts.timeout ? {timeout: opts.timeout - (5 * 1000)} : {};\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    } else if (opts.continuous) {\n      // Default heartbeat to 10 seconds\n      params.heartbeat = 10000;\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n        timeout: opts.timeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        xhr = ajax$$1(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        nextTick(function () { fetch(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax$$1(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    ajax$$1(options, {\n      url: genDBUrl(host, ''),\n      method: 'DELETE'\n    }, function (err, resp) {\n      if (err && err.status && err.status !== 404) {\n        return callback(err);\n      }\n      callback(null, resp);\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nvar HttpPouch$1 = function (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n};\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\nfunction TaskQueue$2() {\n  this.promise = new PouchPromise$1(function (fulfill) {fulfill(); });\n}\nTaskQueue$2.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$2.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction createView(opts) {\n  var sourceDB = opts.db;\n  var viewName = opts.viewName;\n  var mapFun = opts.map;\n  var reduceFun = opts.reduce;\n  var temporary = opts.temporary;\n\n  // the \"undefined\" part is for backwards compatibility\n  var viewSignature = mapFun.toString() + (reduceFun && reduceFun.toString()) +\n    'undefined';\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/mrviews', diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log$2 = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopedEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log$2,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$2();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\nfunction tryMap(db, fun, doc) {\n  // emit an event if there was an error thrown by a map function.\n  // putting try/catches in a single function also avoids deoptimizations.\n  try {\n    fun(doc);\n  } catch (e) {\n    emitError(db, e);\n  }\n}\n\nfunction tryReduce(db, fun, keys, values, rereduce) {\n  // same as above, but returning the result or an error. there are two separate\n  // functions to avoid extra memory allocations since the tryCode() case is used\n  // for custom map functions (common) vs this function, which is only used for\n  // custom reduce functions (rare)\n  try {\n    return {output : fun(keys, values, rereduce)};\n  } catch (e) {\n    emitError(db, e);\n    return {error: e};\n  }\n}\n\nfunction sortByKeyThenValue(x, y) {\n  var keyCompare = collate(x.key, y.key);\n  return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n}\n\nfunction sliceResults(results, limit, skip) {\n  skip = skip || 0;\n  if (typeof limit === 'number') {\n    return results.slice(skip, limit + skip);\n  } else if (skip > 0) {\n    return results.slice(skip);\n  }\n  return results;\n}\n\nfunction rowToDocId(row) {\n  var val = row.value;\n  // Users can explicitly specify a joined doc _id, or it\n  // defaults to the doc _id that emitted the key/value.\n  var docId = (val && typeof val === 'object' && val._id) || row.id;\n  return docId;\n}\n\nfunction readAttachmentsAsBlobOrBuffer$1(res) {\n  res.rows.forEach(function (row) {\n    var atts = row.doc && row.doc._attachments;\n    if (!atts) {\n      return;\n    }\n    Object.keys(atts).forEach(function (filename) {\n      var att = atts[filename];\n      atts[filename].data = b64ToBluffer(att.data, att.content_type);\n    });\n  });\n}\n\nfunction postprocessAttachments(opts) {\n  return function (res) {\n    if (opts.include_docs && opts.attachments && opts.binary) {\n      readAttachmentsAsBlobOrBuffer$1(res);\n    }\n    return res;\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction addHttpParam(paramName, opts, params, asJson) {\n  // add an http param from opts to params, optionally json-encoded\n  var val = opts[paramName];\n  if (typeof val !== 'undefined') {\n    if (asJson) {\n      val = encodeURIComponent(JSON.stringify(val));\n    }\n    params.push(paramName + '=' + val);\n  }\n}\n\nfunction coerceInteger(integerCandidate) {\n  if (typeof integerCandidate !== 'undefined') {\n    var asNumber = Number(integerCandidate);\n    // prevents e.g. '1foo' or '1.1' being coerced to 1\n    if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n      return asNumber;\n    } else {\n      return integerCandidate;\n    }\n  }\n}\n\nfunction coerceOptions(opts) {\n  opts.group_level = coerceInteger(opts.group_level);\n  opts.limit = coerceInteger(opts.limit);\n  opts.skip = coerceInteger(opts.skip);\n  return opts;\n}\n\nfunction checkPositiveInteger(number) {\n  if (number) {\n    if (typeof number !== 'number') {\n      return  new QueryParseError('Invalid value for integer: \"' +\n      number + '\"');\n    }\n    if (number < 0) {\n      return new QueryParseError('Invalid value for positive integer: ' +\n        '\"' + number + '\"');\n    }\n  }\n}\n\nfunction checkQueryParseError(options, fun) {\n  var startkeyName = options.descending ? 'endkey' : 'startkey';\n  var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n  if (typeof options[startkeyName] !== 'undefined' &&\n    typeof options[endkeyName] !== 'undefined' &&\n    collate(options[startkeyName], options[endkeyName]) > 0) {\n    throw new QueryParseError('No rows can match your key range, ' +\n    'reverse your start_key and end_key or set {descending : true}');\n  } else if (fun.reduce && options.reduce !== false) {\n    if (options.include_docs) {\n      throw new QueryParseError('{include_docs:true} is invalid for reduce');\n    } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n      throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n      '{group: true}');\n    }\n  }\n  ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n    var error = checkPositiveInteger(options[optionName]);\n    if (error) {\n      throw error;\n    }\n  });\n}\n\nfunction httpQuery(db, fun, opts) {\n  // List of parameters to add to the PUT request\n  var params = [];\n  var body;\n  var method = 'GET';\n\n  // If opts.reduce exists and is defined, then add it to the list\n  // of parameters.\n  // If reduce=false then the results are that of only the map function\n  // not the final result of map and reduce.\n  addHttpParam('reduce', opts, params);\n  addHttpParam('include_docs', opts, params);\n  addHttpParam('attachments', opts, params);\n  addHttpParam('limit', opts, params);\n  addHttpParam('descending', opts, params);\n  addHttpParam('group', opts, params);\n  addHttpParam('group_level', opts, params);\n  addHttpParam('skip', opts, params);\n  addHttpParam('stale', opts, params);\n  addHttpParam('conflicts', opts, params);\n  addHttpParam('startkey', opts, params, true);\n  addHttpParam('start_key', opts, params, true);\n  addHttpParam('endkey', opts, params, true);\n  addHttpParam('end_key', opts, params, true);\n  addHttpParam('inclusive_end', opts, params);\n  addHttpParam('key', opts, params, true);\n\n  // Format the list of parameters into a valid URI query string\n  params = params.join('&');\n  params = params === '' ? '' : '?' + params;\n\n  // If keys are supplied, issue a POST to circumvent GET query string limits\n  // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n  if (typeof opts.keys !== 'undefined') {\n    var MAX_URL_LENGTH = 2000;\n    // according to http://stackoverflow.com/a/417184/680742,\n    // the de facto URL length limit is 2000 characters\n\n    var keysAsString =\n      'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n    if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n      // If the keys are short enough, do a GET. we do this to work around\n      // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n      params += (params[0] === '?' ? '&' : '?') + keysAsString;\n    } else {\n      method = 'POST';\n      if (typeof fun === 'string') {\n        body = {keys: opts.keys};\n      } else { // fun is {map : mapfun}, so append to this\n        fun.keys = opts.keys;\n      }\n    }\n  }\n\n  // We are referencing a query defined in the design doc\n  if (typeof fun === 'string') {\n    var parts = parseViewName(fun);\n    return db.request({\n      method: method,\n      url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // We are using a temporary view, terrible for performance, good for testing\n  body = body || {};\n  Object.keys(fun).forEach(function (key) {\n    if (Array.isArray(fun[key])) {\n      body[key] = fun[key];\n    } else {\n      body[key] = fun[key].toString();\n    }\n  });\n  return db.request({\n    method: 'POST',\n    url: '_temp_view' + params,\n    body: body\n  }).then(postprocessAttachments(opts));\n}\n\n// custom adapters can define their own api._query\n// and override the default behavior\n/* istanbul ignore next */\nfunction customQuery(db, fun, opts) {\n  return new PouchPromise$1(function (resolve, reject) {\n    db._query(fun, opts, function (err, res) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n}\n\n// custom adapters can define their own api._viewCleanup\n// and override the default behavior\n/* istanbul ignore next */\nfunction customViewCleanup(db) {\n  return new PouchPromise$1(function (resolve, reject) {\n    db._viewCleanup(function (err, res) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n}\n\nfunction defaultsTo(value) {\n  return function (reason) {\n    /* istanbul ignore else */\n    if (reason.status === 404) {\n      return value;\n    } else {\n      throw reason;\n    }\n  };\n}\n\n// returns a promise for a list of docs to update, based on the input docId.\n// the order doesn't matter, because post-3.2.0, bulkDocs\n// is an atomic operation in all three adapters.\nfunction getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n  var metaDocId = '_local/doc_' + docId;\n  var defaultMetaDoc = {_id: metaDocId, keys: []};\n  var docData = docIdsToChangesAndEmits.get(docId);\n  var indexableKeysToKeyValues = docData[0];\n  var changes = docData[1];\n\n  function getMetaDoc() {\n    if (isGenOne(changes)) {\n      // generation 1, so we can safely assume initial state\n      // for performance reasons (avoids unnecessary GETs)\n      return PouchPromise$1.resolve(defaultMetaDoc);\n    }\n    return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n  }\n\n  function getKeyValueDocs(metaDoc) {\n    if (!metaDoc.keys.length) {\n      // no keys, no need for a lookup\n      return PouchPromise$1.resolve({rows: []});\n    }\n    return view.db.allDocs({\n      keys: metaDoc.keys,\n      include_docs: true\n    });\n  }\n\n  function processKeyValueDocs(metaDoc, kvDocsRes) {\n    var kvDocs = [];\n    var oldKeys = new ExportedSet();\n\n    for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n      var row = kvDocsRes.rows[i];\n      var doc = row.doc;\n      if (!doc) { // deleted\n        continue;\n      }\n      kvDocs.push(doc);\n      oldKeys.add(doc._id);\n      doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n      if (!doc._deleted) {\n        var keyValue = indexableKeysToKeyValues.get(doc._id);\n        if ('value' in keyValue) {\n          doc.value = keyValue.value;\n        }\n      }\n    }\n    var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n    newKeys.forEach(function (key) {\n      if (!oldKeys.has(key)) {\n        // new doc\n        var kvDoc = {\n          _id: key\n        };\n        var keyValue = indexableKeysToKeyValues.get(key);\n        if ('value' in keyValue) {\n          kvDoc.value = keyValue.value;\n        }\n        kvDocs.push(kvDoc);\n      }\n    });\n    metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n    kvDocs.push(metaDoc);\n\n    return kvDocs;\n  }\n\n  return getMetaDoc().then(function (metaDoc) {\n    return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n      return processKeyValueDocs(metaDoc, kvDocsRes);\n    });\n  });\n}\n\n// updates all emitted key/value docs and metaDocs in the mrview database\n// for the given batch of documents from the source database\nfunction saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n  var seqDocId = '_local/lastSeq';\n  return view.db.get(seqDocId)\n  .catch(defaultsTo({_id: seqDocId, seq: 0}))\n  .then(function (lastSeqDoc) {\n    var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n    return PouchPromise$1.all(docIds.map(function (docId) {\n      return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n    })).then(function (listOfDocsToPersist) {\n      var docsToPersist = flatten(listOfDocsToPersist);\n      lastSeqDoc.seq = seq;\n      docsToPersist.push(lastSeqDoc);\n      // write all docs in a single operation, update the seq once\n      return view.db.bulkDocs({docs : docsToPersist});\n    });\n  });\n}\n\nfunction getQueue(view) {\n  var viewName = typeof view === 'string' ? view : view.name;\n  var queue = persistentQueues[viewName];\n  if (!queue) {\n    queue = persistentQueues[viewName] = new TaskQueue$2();\n  }\n  return queue;\n}\n\nfunction updateView(view) {\n  return sequentialize(getQueue(view), function () {\n    return updateViewInQueue(view);\n  })();\n}\n\nfunction updateViewInQueue(view) {\n  // bind the emit function once\n  var mapResults;\n  var doc;\n\n  function emit(key, value) {\n    var output = {id: doc._id, key: normalizeKey(key)};\n    // Don't explicitly store the value unless it's defined and non-null.\n    // This saves on storage space, because often people don't use it.\n    if (typeof value !== 'undefined' && value !== null) {\n      output.value = normalizeKey(value);\n    }\n    mapResults.push(output);\n  }\n\n  var mapFun;\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof view.mapFun === \"function\" && view.mapFun.length === 2) {\n    var origMap = view.mapFun;\n    mapFun = function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    mapFun = evalFunctionWithEval(view.mapFun.toString(), emit);\n  }\n\n  var currentSeq = view.seq || 0;\n\n  function processChange(docIdsToChangesAndEmits, seq) {\n    return function () {\n      return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n    };\n  }\n\n  var queue = new TaskQueue$2();\n\n  function processNextBatch() {\n    return view.sourceDB.changes({\n      conflicts: true,\n      include_docs: true,\n      style: 'all_docs',\n      since: currentSeq,\n      limit: CHANGES_BATCH_SIZE$1\n    }).then(processBatch);\n  }\n\n  function processBatch(response) {\n    var results = response.results;\n    if (!results.length) {\n      return;\n    }\n    var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n    queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n    if (results.length < CHANGES_BATCH_SIZE$1) {\n      return;\n    }\n    return processNextBatch();\n  }\n\n  function createDocIdsToChangesAndEmits(results) {\n    var docIdsToChangesAndEmits = new ExportedMap();\n    for (var i = 0, len = results.length; i < len; i++) {\n      var change = results[i];\n      if (change.doc._id[0] !== '_') {\n        mapResults = [];\n        doc = change.doc;\n\n        if (!doc._deleted) {\n          tryMap(view.sourceDB, mapFun, doc);\n        }\n        mapResults.sort(sortByKeyThenValue);\n\n        var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n        docIdsToChangesAndEmits.set(change.doc._id, [\n          indexableKeysToKeyValues,\n          change.changes\n        ]);\n      }\n      currentSeq = change.seq;\n    }\n    return docIdsToChangesAndEmits;\n  }\n\n  function createIndexableKeysToKeyValues(mapResults) {\n    var indexableKeysToKeyValues = new ExportedMap();\n    var lastKey;\n    for (var i = 0, len = mapResults.length; i < len; i++) {\n      var emittedKeyValue = mapResults[i];\n      var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n      if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n        complexKey.push(i); // dup key+id, so make it unique\n      }\n      indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n      lastKey = emittedKeyValue.key;\n    }\n    return indexableKeysToKeyValues;\n  }\n\n  return processNextBatch().then(function () {\n    return queue.finish();\n  }).then(function () {\n    view.seq = currentSeq;\n  });\n}\n\nfunction reduceView(view, results, options) {\n  if (options.group_level === 0) {\n    delete options.group_level;\n  }\n\n  var shouldGroup = options.group || options.group_level;\n\n  var reduceFun;\n  if (builtInReduce[view.reduceFun]) {\n    reduceFun = builtInReduce[view.reduceFun];\n  } else {\n    reduceFun = evalFunctionWithEval(view.reduceFun.toString());\n  }\n\n  var groups = [];\n  var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n    options.group_level;\n  results.forEach(function (e) {\n    var last = groups[groups.length - 1];\n    var groupKey = shouldGroup ? e.key : null;\n\n    // only set group_level for array keys\n    if (shouldGroup && Array.isArray(groupKey)) {\n      groupKey = groupKey.slice(0, lvl);\n    }\n\n    if (last && collate(last.groupKey, groupKey) === 0) {\n      last.keys.push([e.key, e.id]);\n      last.values.push(e.value);\n      return;\n    }\n    groups.push({\n      keys: [[e.key, e.id]],\n      values: [e.value],\n      groupKey: groupKey\n    });\n  });\n  results = [];\n  for (var i = 0, len = groups.length; i < len; i++) {\n    var e = groups[i];\n    var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n    if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n      // CouchDB returns an error if a built-in errors out\n      throw reduceTry.error;\n    }\n    results.push({\n      // CouchDB just sets the value to null if a non-built-in errors out\n      value: reduceTry.error ? null : reduceTry.output,\n      key: e.groupKey\n    });\n  }\n  // no total_rows/offset when reducing\n  return {rows: sliceResults(results, options.limit, options.skip)};\n}\n\nfunction queryView(view, opts) {\n  return sequentialize(getQueue(view), function () {\n    return queryViewInQueue(view, opts);\n  })();\n}\n\nfunction queryViewInQueue(view, opts) {\n  var totalRows;\n  var shouldReduce = view.reduceFun && opts.reduce !== false;\n  var skip = opts.skip || 0;\n  if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n    // equivalent query\n    opts.limit = 0;\n    delete opts.keys;\n  }\n\n  function fetchFromView(viewOpts) {\n    viewOpts.include_docs = true;\n    return view.db.allDocs(viewOpts).then(function (res) {\n      totalRows = res.total_rows;\n      return res.rows.map(function (result) {\n\n        // implicit migration - in older versions of PouchDB,\n        // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n        // this is tested in a migration test\n        /* istanbul ignore next */\n        if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n          var keys = Object.keys(result.doc.value).sort();\n          // this detection method is not perfect, but it's unlikely the user\n          // emitted a value which was an object with these 3 exact keys\n          var expectedKeys = ['id', 'key', 'value'];\n          if (!(keys < expectedKeys || keys > expectedKeys)) {\n            return result.doc.value;\n          }\n        }\n\n        var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n        return {\n          key: parsedKeyAndDocId[0],\n          id: parsedKeyAndDocId[1],\n          value: ('value' in result.doc ? result.doc.value : null)\n        };\n      });\n    });\n  }\n\n  function onMapResultsReady(rows) {\n    var finalResults;\n    if (shouldReduce) {\n      finalResults = reduceView(view, rows, opts);\n    } else {\n      finalResults = {\n        total_rows: totalRows,\n        offset: skip,\n        rows: rows\n      };\n    }\n    if (opts.include_docs) {\n      var docIds = uniq(rows.map(rowToDocId));\n\n      return view.sourceDB.allDocs({\n        keys: docIds,\n        include_docs: true,\n        conflicts: opts.conflicts,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }).then(function (allDocsRes) {\n        var docIdsToDocs = new ExportedMap();\n        allDocsRes.rows.forEach(function (row) {\n          docIdsToDocs.set(row.id, row.doc);\n        });\n        rows.forEach(function (row) {\n          var docId = rowToDocId(row);\n          var doc = docIdsToDocs.get(docId);\n          if (doc) {\n            row.doc = doc;\n          }\n        });\n        return finalResults;\n      });\n    } else {\n      return finalResults;\n    }\n  }\n\n  if (typeof opts.keys !== 'undefined') {\n    var keys = opts.keys;\n    var fetchPromises = keys.map(function (key) {\n      var viewOpts = {\n        startkey : toIndexableString([key]),\n        endkey   : toIndexableString([key, {}])\n      };\n      return fetchFromView(viewOpts);\n    });\n    return PouchPromise$1.all(fetchPromises).then(flatten).then(onMapResultsReady);\n  } else { // normal query, no 'keys'\n    var viewOpts = {\n      descending : opts.descending\n    };\n    if (opts.start_key) {\n        opts.startkey = opts.start_key;\n    }\n    if (opts.end_key) {\n        opts.endkey = opts.end_key;\n    }\n    if (typeof opts.startkey !== 'undefined') {\n      viewOpts.startkey = opts.descending ?\n        toIndexableString([opts.startkey, {}]) :\n        toIndexableString([opts.startkey]);\n    }\n    if (typeof opts.endkey !== 'undefined') {\n      var inclusiveEnd = opts.inclusive_end !== false;\n      if (opts.descending) {\n        inclusiveEnd = !inclusiveEnd;\n      }\n\n      viewOpts.endkey = toIndexableString(\n        inclusiveEnd ? [opts.endkey, {}] : [opts.endkey]);\n    }\n    if (typeof opts.key !== 'undefined') {\n      var keyStart = toIndexableString([opts.key]);\n      var keyEnd = toIndexableString([opts.key, {}]);\n      if (viewOpts.descending) {\n        viewOpts.endkey = keyStart;\n        viewOpts.startkey = keyEnd;\n      } else {\n        viewOpts.startkey = keyStart;\n        viewOpts.endkey = keyEnd;\n      }\n    }\n    if (!shouldReduce) {\n      if (typeof opts.limit === 'number') {\n        viewOpts.limit = opts.limit;\n      }\n      viewOpts.skip = skip;\n    }\n    return fetchFromView(viewOpts).then(onMapResultsReady);\n  }\n}\n\nfunction httpViewCleanup(db) {\n  return db.request({\n    method: 'POST',\n    url: '_view_cleanup'\n  });\n}\n\nfunction localViewCleanup(db) {\n  return db.get('_local/mrviews').then(function (metaDoc) {\n    var docsToViews = new ExportedMap();\n    Object.keys(metaDoc.views).forEach(function (fullViewName) {\n      var parts = parseViewName(fullViewName);\n      var designDocName = '_design/' + parts[0];\n      var viewName = parts[1];\n      var views = docsToViews.get(designDocName);\n      if (!views) {\n        views = new ExportedSet();\n        docsToViews.set(designDocName, views);\n      }\n      views.add(viewName);\n    });\n    var opts = {\n      keys : mapToKeysArray(docsToViews),\n      include_docs : true\n    };\n    return db.allDocs(opts).then(function (res) {\n      var viewsToStatus = {};\n      res.rows.forEach(function (row) {\n        var ddocName = row.key.substring(8); // cuts off '_design/'\n        docsToViews.get(row.key).forEach(function (viewName) {\n          var fullViewName = ddocName + '/' + viewName;\n          /* istanbul ignore if */\n          if (!metaDoc.views[fullViewName]) {\n            // new format, without slashes, to support PouchDB 2.2.0\n            // migration test in pouchdb's browser.migration.js verifies this\n            fullViewName = viewName;\n          }\n          var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n          // design doc deleted, or view function nonexistent\n          var statusIsGood = row.doc && row.doc.views &&\n            row.doc.views[viewName];\n          viewDBNames.forEach(function (viewDBName) {\n            viewsToStatus[viewDBName] =\n              viewsToStatus[viewDBName] || statusIsGood;\n          });\n        });\n      });\n      var dbsToDelete = Object.keys(viewsToStatus).filter(\n        function (viewDBName) { return !viewsToStatus[viewDBName]; });\n      var destroyPromises = dbsToDelete.map(function (viewDBName) {\n        return sequentialize(getQueue(viewDBName), function () {\n          return new db.constructor(viewDBName, db.__opts).destroy();\n        })();\n      });\n      return PouchPromise$1.all(destroyPromises).then(function () {\n        return {ok: true};\n      });\n    });\n  }, defaultsTo({ok: true}));\n}\n\nvar viewCleanup = callbackify(function () {\n  var db = this;\n  if (db.type() === 'http') {\n    return httpViewCleanup(db);\n  }\n  /* istanbul ignore next */\n  if (typeof db._viewCleanup === 'function') {\n    return customViewCleanup(db);\n  }\n  return localViewCleanup(db);\n});\n\nfunction queryPromised(db, fun, opts) {\n  if (db.type() === 'http') {\n    return httpQuery(db, fun, opts);\n  }\n\n  /* istanbul ignore next */\n  if (typeof db._query === 'function') {\n    return customQuery(db, fun, opts);\n  }\n\n  if (typeof fun !== 'string') {\n    // temp_view\n    checkQueryParseError(opts, fun);\n\n    var createViewOpts = {\n      db : db,\n      viewName : 'temp_view/temp_view',\n      map : fun.map,\n      reduce : fun.reduce,\n      temporary : true\n    };\n    tempViewQueue.add(function () {\n      return createView(createViewOpts).then(function (view) {\n        function cleanup() {\n          return view.db.destroy();\n        }\n        return fin(updateView(view).then(function () {\n          return queryView(view, opts);\n        }), cleanup);\n      });\n    });\n    return tempViewQueue.finish();\n  } else {\n    // persistent view\n    var fullViewName = fun;\n    var parts = parseViewName(fullViewName);\n    var designDocName = parts[0];\n    var viewName = parts[1];\n    return db.get('_design/' + designDocName).then(function (doc) {\n      var fun = doc.views && doc.views[viewName];\n\n      if (!fun || typeof fun.map !== 'string') {\n        throw new NotFoundError('ddoc ' + designDocName +\n        ' has no view named ' + viewName);\n      }\n      checkQueryParseError(opts, fun);\n\n      var createViewOpts = {\n        db : db,\n        viewName : fullViewName,\n        map : fun.map,\n        reduce : fun.reduce\n      };\n      return createView(createViewOpts).then(function (view) {\n        if (opts.stale === 'ok' || opts.stale === 'update_after') {\n          if (opts.stale === 'update_after') {\n            nextTick(function () {\n              updateView(view);\n            });\n          }\n          return queryView(view, opts);\n        } else { // stale not ok\n          return updateView(view).then(function () {\n            return queryView(view, opts);\n          });\n        }\n      });\n    });\n  }\n}\n\nvar query = function (fun, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts ? coerceOptions(opts) : {};\n\n  if (typeof fun === 'function') {\n    fun = {map : fun};\n  }\n\n  var db = this;\n  var promise = PouchPromise$1.resolve().then(function () {\n    return queryPromised(db, fun, opts);\n  });\n  promisedCallback(promise, callback);\n  return promise;\n};\n\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev) {\n  return /^1-/.test(rev);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return PouchPromise$1.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = src.type() === 'http' && target.type() !== 'http';\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return PouchPromise$1.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return PouchPromise$1.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return PouchPromise$1.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc).then(function (attachments) {\n            var filenames = Object.keys(remoteDoc._attachments);\n            attachments.forEach(function (attachment, i) {\n              var att = remoteDoc._attachments[filenames[i]];\n              delete att.stub;\n              delete att.length;\n              att.data = attachment;\n            });\n\n            return remoteDoc;\n          });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return PouchPromise$1.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.type() === 'http') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  return updateCheckpoint(this.target, this.id, checkpoint,\n    session, this.returnValue);\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  var self = this;\n  if (this.readOnlySource) {\n    return PouchPromise$1.resolve(true);\n  }\n  return updateCheckpoint(this.src, this.id, checkpoint,\n    session, this.returnValue)\n    .catch(function (err) {\n      if (isForbiddenError(err)) {\n        self.readOnlySource = true;\n        return true;\n      }\n      throw err;\n    });\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.readOnlySource) {\n      return PouchPromise$1.resolve(targetDoc.last_seq);\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.readOnlySource = true;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return PouchPromise$1.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds;\n    return new PouchPromise$1(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return PouchPromise$1.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n      checkpointer = new Checkpointer(src, target, repId, returnValue);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      fatalError.result = result;\n\n      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0 && changesOpts.live);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, events.EventEmitter);\nfunction Replication() {\n  events.EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, events.EventEmitter);\nfunction sync$1(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? assign$1({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? assign$1({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = PouchPromise$1.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync$1;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      return {\n        from: function (other, opts, callback) {\n          return self.constructor.replicate(other, self, opts, callback);\n        },\n        to: function (other, opts, callback) {\n          return self.constructor.replicate(self, other, opts, callback);\n        }\n      };\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB$5.plugin(IDBPouch)\n  .plugin(WebSqlPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\n// Pull from src because pouchdb-node/pouchdb-browser themselves\n// are aggressively optimized and jsnext:main would normally give us this\n// aggressive bundle.\n\nmodule.exports = PouchDB$5;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb/lib/index-browser.js\n// module id = 57\n// module chunks = 0","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb/~/spark-md5/spark-md5.js\n// module id = 58\n// module chunks = 0","// Generated by CoffeeScript 1.9.2\n(function() {\n  var hasProp = {}.hasOwnProperty,\n    slice = [].slice;\n\n  module.exports = function(source, scope) {\n    var key, keys, value, values;\n    keys = [];\n    values = [];\n    for (key in scope) {\n      if (!hasProp.call(scope, key)) continue;\n      value = scope[key];\n      if (key === 'this') {\n        continue;\n      }\n      keys.push(key);\n      values.push(value);\n    }\n    return Function.apply(null, slice.call(keys).concat([source])).apply(scope[\"this\"], values);\n  };\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scope-eval/scope_eval.js\n// module id = 59\n// module chunks = 0","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vuvuzela/index.js\n// module id = 60\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 61\n// module chunks = 0"],"sourceRoot":""}